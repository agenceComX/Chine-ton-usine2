{
  "forms": {
    "categoryicondivspanc": "\n                    }`}>\n                      {category.icon}\n                    </div>\n                    <span className=\"mt-2 text-sm font-semibold text-center transition-colors duration-300 font-reading text-readable dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 max-w-20 leading-tight\">\n                      {category.name}\n                    </span>\n                  </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section des cartes produits - D√©plac√©e en haut */}\n      <div className=\"bg-white dark:bg-gray-900 py-16\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Carte √âlectronique */}\n            <div className={`bg-gradient-to-br from-blue-200 via-blue-300 to-orange-300 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 hover:rotate-1 cursor-pointer group relative ${\n              visibleCards >= 1 ? ",
    "messagesquareclassna": "\n                >\n                  <MessageSquare className=",
    "classnameisactivepro": "\n                className={`${isActive('/products')\n                  ? 'text-orange-200 font-semibold'\n                  : 'text-white hover:text-orange-200'} \n                  transition-colors text-sm font-medium font-reading`}\n              >\n                {t('discover')}\n              </Link>\n              {/* Onglet Conteneurs visible uniquement pour les fournisseurs connect√©s */}\n              {user && user.role === 'supplier' && (\n                <Link\n                  to=",
    "constuserloadingusea": "\n}) => {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-700 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">V√©rification des permissions...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <Navigate to={redirectTo} replace />;\n  }\n\n  if (!allowedRoles.includes(user.role)) {\n    // Redirection intelligente bas√©e sur le r√¥le de l",
    "modifier": "\r\n                                                >\r\n                                                    Modifier\r\n                                                <",
    "variantspandivdivdiv": "\r\n                                                >\r\n                                                    {variant}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* D√©tails du produit */}\r\n                                <div>\r\n                                    <h3 className=",
    "spanclassnametextlgf": "\r\n                                                }`}\r\n                                        />\r\n                                    ))}\r\n                                    <span className=\"text-lg font-semibold text-gray-900 dark:text-white ml-2\">\r\n                                        {product.rating}\r\n                                    </span>\r\n                                </div>\r\n                                <span className=\"text-gray-500 dark:text-gray-400\">\r\n                                    ({product.reviews} avis)\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Prix */}\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <span className=\"text-4xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                {product.price}‚Ç¨\r\n                            </span>\r\n                            {product.originalPrice && (\r\n                                <span className=\"text-2xl text-gray-500 line-through\">\r\n                                    {product.originalPrice}‚Ç¨\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Description */}\r\n                        {product.description && (\r\n                            <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n                                {product.description}\r\n                            </p>\r\n                        )}\r\n\r\n                        {/* Caract√©ristiques */}\r\n                        {product.features && (\r\n                            <div>\r\n                                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\r\n                                    Caract√©ristiques principales\r\n                                </h3>\r\n                                <div className=\"flex flex-wrap gap-2\">\r\n                                    {product.features.map((feature) => (\r\n                                        <span\r\n                                            key={feature}\r\n                                            className=\"bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 px-3 py-1.5 rounded-lg text-sm font-medium\"\r\n                                        >\r\n                                            {feature}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Quantit√© et Actions */}\r\n                        <div className=\"space-y-4\">\r\n                            {/* S√©lecteur de quantit√© */}\r\n                            <div className=\"flex items-center space-x-4\">\r\n                                <span className=\"text-lg font-medium text-gray-900 dark:text-white\">Quantit√©:</span>\r\n                                <div className=\"flex items-center border border-gray-300 dark:border-gray-600 rounded-lg\">\r\n                                    <button\r\n                                        onClick={() => handleQuantityChange(-1)}\r\n                                        className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n                                    >\r\n                                        <Minus className=\"h-4 w-4\" />\r\n                                    </button>\r\n                                    <span className=\"px-4 py-2 text-lg font-semibold\">{quantity}</span>\r\n                                    <button\r\n                                        onClick={() => handleQuantityChange(1)}\r\n                                        className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n                                    >\r\n                                        <Plus className=\"h-4 w-4\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Boutons d",
    "valuecarddatacontact": "\r\n                                            value={cardData.contactPerson}\r\n                                            onChange={(e) => updateCardData({ contactPerson: e.target.value })}\r\n                                            className=",
    "imgsrcimgaltproductn": "\r\n                                            }`}\r\n                                    >\r\n                                        <img src={img} alt={`${product.name} ${index + 1}`} className=\"w-full h-full object-cover\" />\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Section D√©tails */}\r\n                    <div className=\"space-y-6\">\r\n                        {/* En-t√™te produit */}\r\n                        <div>\r\n                            {/* Badges */}\r\n                            <div className=\"flex space-x-2 mb-3\">\r\n                                {product.isNew && (\r\n                                    <span className=\"bg-green-100 text-green-800 text-sm px-3 py-1 rounded-full\">\r\n                                        ‚ú® Nouveau\r\n                                    </span>\r\n                                )}\r\n                                {product.isPopular && (\r\n                                    <span className=\"bg-orange-100 text-orange-800 text-sm px-3 py-1 rounded-full\">\r\n                                        üî• Populaire\r\n                                    </span>\r\n                                )}\r\n                                {product.discount && (\r\n                                    <span className=\"bg-red-100 text-red-800 text-sm px-3 py-1 rounded-full\">\r\n                                        -{product.discount}% OFF\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                                {product.name}\r\n                            </h1>\r\n                            <p className=\"text-xl text-gray-600 dark:text-gray-400 mb-1\">{product.brand}</p>\r\n                            <p className=\"text-blue-600 dark:text-blue-400 font-medium\">{product.category}</p>\r\n                        </div>\r\n\r\n                        {/* Rating */}\r\n                        {product.rating && (\r\n                            <div className=\"flex items-center space-x-3\">\r\n                                <div className=\"flex items-center space-x-1\">\r\n                                    {[...Array(5)].map((_, i) => (\r\n                                        <Star\r\n                                            key={i}\r\n                                            className={`h-5 w-5 ${i < Math.floor(product.rating!)\r\n                                                ? ",
    "eyesize18buttondivba": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=",
    "eyesize18buttondivba1": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=",
    "eyesize18buttondivba2": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=",
    "featurespandivdivqua": "\r\n                                        >\r\n                                            {feature}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Quantit√© et Actions */}\r\n                        <div className=",
    "imgsrcimageurlaltima": "\r\n                                        }`}\r\n                                >\r\n                                    <img\r\n                                        src={image.url}\r\n                                        alt={image.alt}\r\n                                        className=\"w-full h-20 object-cover\"\r\n                                    />\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Informations produit */}\r\n                    <div className=\"space-y-6\">\r\n                        {/* En-t√™te produit */}\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                                {product.name}\r\n                            </h1>\r\n\r\n                            <div className=\"flex items-center gap-4 mb-4\">\r\n                                <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                    {product.price.toFixed(2)}‚Ç¨<span className=\"text-lg text-gray-500 dark:text-gray-400\">/unit√©</span>\r\n                                </div>\r\n                                {hasDiscount && (\r\n                                    <div className=\"px-3 py-1 bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300 rounded-full text-sm font-semibold\">\r\n                                        -{product.discount!.percentage}% d√®s {product.discount!.minQty} pcs\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <p className=\"text-gray-600 dark:text-gray-400 text-lg leading-relaxed\">\r\n                                {product.description}\r\n                            </p>\r\n                        </div>\r\n\r\n                        {/* Fournisseur */}\r\n                        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                            <div className=\"flex items-center gap-4\">\r\n                                {product.supplier.avatar && (\r\n                                    <img\r\n                                        src={product.supplier.avatar}\r\n                                        alt={product.supplier.name}\r\n                                        className=\"w-12 h-12 rounded-full object-cover\"\r\n                                    />\r\n                                )}\r\n                                <div className=\"flex-1\">\r\n                                    <div className=\"flex items-center gap-2 mb-1\">\r\n                                        <h3 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                                            {product.supplier.name}\r\n                                        </h3>\r\n                                        {product.supplier.verified && (\r\n                                            <div className=\"flex items-center gap-1 px-2 py-1 bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 rounded-full text-xs\">\r\n                                                <Shield size={12} />\r\n                                                V√©rifi√©\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                                        <div className=\"flex items-center gap-1\">\r\n                                            <MapPin size={14} />\r\n                                            {product.supplier.location}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-1\">\r\n                                            <Star size={14} className=\"text-yellow-400 fill-current\" />\r\n                                            {product.supplier.rating}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-1\">\r\n                                            <Clock size={14} />\r\n                                            R√©pond en {product.supplier.responseTime}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Variantes */}\r\n                        {Object.entries(variantsByType).map(([type, variants]) => (\r\n                            <div key={type} className=\"space-y-3\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white capitalize\">\r\n                                    {type === ",
    "svgdivdivperformance": "\r\n                                    />\r\n                                </svg>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Performances r√©centes */}\r\n                <div className=",
    "onclicksetshowcontac": "\r\n                                    onClick={() => setShowContactModal(false)}\r\n                                    className=",
    "onclickclosequickvie": "\r\n                                    onClick={closeQuickView}\r\n                                >\r\n                                    Voir d√©tails\r\n                                </Link>\r\n                                <button\r\n                                    onClick={() => handleAddToQuote(selectedProduct)}\r\n                                    className=",
    "onclickclosequickvie1": "\r\n                                    onClick={closeQuickView}\r\n                                >\r\n                                    Voir d√©tails\r\n                                </Link>\r\n                                <button\r\n                                    onClick={() => handleAddToQuote(selectedProduct)}\r\n                                    className=",
    "styletransitiondelay": "\r\n                                    }`}\r\n                                style={{ transitionDelay: `${(index + 2) * 100}ms` }}\r\n                            >\r\n                                <div className={`inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 dark:bg-gray-700 mb-4 ${feature.color}`}>\r\n                                    <feature.icon className=\"w-8 h-8\" />\r\n                                </div>\r\n                                <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">{feature.title}</h3>\r\n                                <p className=\"text-gray-600 dark:text-gray-400\">{feature.description}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* CTA Section */}\r\n            <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\r\n                <div className=\"container mx-auto px-4 py-16 text-center\">\r\n                    <h2 className=\"text-3xl lg:text-4xl font-bold mb-4\">\r\n                        Pr√™t √† Commencer ?\r\n                    </h2>\r\n                    <p className=\"text-xl mb-8 opacity-90\">\r\n                        Rejoignez des milliers d",
    "styletransitiondelay1": "\r\n                                    }`}\r\n                                style={{ transitionDelay: `${index * 100}ms` }}\r\n                            >\r\n                                <div className=\"text-4xl mb-2\">{stat.icon}</div>\r\n                                <div className=\"text-3xl font-bold text-gray-900 dark:text-white mb-1\">{stat.value}</div>\r\n                                <div className=\"text-gray-600 dark:text-gray-400\">{stat.label}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Categories Section */}\r\n            <div className=\"container mx-auto px-4 py-16\">\r\n                <div className=\"text-center mb-12\">\r\n                    <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                        Cat√©gories Populaires\r\n                    </h2>\r\n                    <p className=\"text-xl text-gray-600 dark:text-gray-300\">\r\n                        D√©couvrez nos cat√©gories les plus demand√©es\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {categories.map((category, index) => (\r\n                        <Link\r\n                            key={category.id}\r\n                            to={`/category/${category.id}`}\r\n                            className={`group relative overflow-hidden rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105 ${visibleCards > index ? ",
    "messagecirclesize18c": "\r\n                                >\r\n                                    <MessageCircle size={18} />\r\n                                    Contacter\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={() => {\r\n                                        toggleFavorite(product.id!);\r\n                                        const isFav = isFavorite(product.id!);\r\n                                        showToast(\r\n                                            isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                            ",
    "messagecirclesize18c1": "\r\n                                >\r\n                                    <MessageCircle size={18} />\r\n                                    Contacter\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={() => {\r\n                                        toggleFavorite(product.id!);\r\n                                        const isFav = isFavorite(product.id!);\r\n                                        showToast(\r\n                                            isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                            ",
    "messagecirclesize18c2": "\r\n                                >\r\n                                    <MessageCircle size={18} />\r\n                                    Contacter\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={() => {\r\n                                        toggleFavorite(product.id!);\r\n                                        const isFav = isFavorite(product.id!);\r\n                                        showToast(\r\n                                            isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                            'success',\r\n                                            'heart'\r\n                                        );\r\n                                    }}\r\n                                    className={`py-3 rounded-xl font-semibold border transition-all duration-300 flex items-center justify-center gap-2 ${isFavorite(product.id!)\r\n                                        ? 'bg-red-50 dark:bg-red-900/30 text-red-600 dark:text-red-400 border-red-300 dark:border-red-600'\r\n                                        : 'bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600'\r\n                                        }`}\r\n                                >\r\n                                    <Heart size={18} fill={isFavorite(product.id!) ? 'currentColor' : 'none'} />\r\n                                    {isFavorite(product.id!) ? 'Ajout√©' : 'Favoris'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Description d√©taill√©e */}\r\n                <div className=",
    "ajouteraudevis": "\r\n                                >\r\n                                    Ajouter au devis\r\n                                <",
    "ajouteraudevis1": "\r\n                                >\r\n                                    Ajouter au devis\r\n                                <",
    "creermapremierecarte": "\r\n                                >\r\n                                    Cr√©er ma premi√®re carte\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        {viewMode === 'grid' ? (\r\n                            <div className=",
    "reinitialiserbuttond": "\r\n                                >\r\n                                    R√©initialiser\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=",
    "styletransitiondelay2": "\r\n                                }`}\r\n                            style={{ transitionDelay: `${index * 100}ms` }}\r\n                        >\r\n                            <div className={`absolute inset-0 bg-gradient-to-br ${category.color} opacity-90`}></div>\r\n                            <div className=\"relative p-8 text-white\">\r\n                                <div className=\"text-6xl mb-4\">{category.icon}</div>\r\n                                <h3 className=\"text-2xl font-bold mb-2\">{category.name}</h3>\r\n                                <p className=\"opacity-90\">D√©couvrir les produits</p>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Features Section */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-xl\">\r\n                <div className=\"container mx-auto px-4 py-16\">\r\n                    <div className=\"text-center mb-12\">\r\n                        <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                            Pourquoi Nous Choisir\r\n                        </h2>\r\n                        <p className=\"text-xl text-gray-600 dark:text-gray-300\">\r\n                            Les avantages qui font la diff√©rence\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n                        {features.map((feature, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`text-center transition-all duration-500 ${visibleCards > index + 2 ? ",
    "onclickupdateorderst": "\r\n                          onClick={() => updateOrderStatus(order.id, 'shipped')}\r\n                        >\r\n                          Exp√©dier\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal d√©tails commande */}\r\n      {selectedOrder && (\r\n        <div className=",
    "divdivclassnamemt2te": "\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"mt-2 text-center\">\r\n                        <div className=\"text-xs font-medium text-gray-900 dark:text-white\">\r\n                          {formatPrice(data.revenue)}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                          {data.month}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Orders Chart */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                √âvolution des Commandes\r\n              </h3>\r\n              <ShoppingBag className=\"h-5 w-5 text-gray-400\" />\r\n            </div>\r\n            {loading ? (\r\n              <div className=\"h-64 flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600\"></div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"h-64\">\r\n                <div className=\"flex items-end justify-between h-full space-x-2\">\r\n                  {chartData.map((data, index) => (\r\n                    <div key={index} className=\"flex-1 flex flex-col items-center\">\r\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-t relative\">\r\n                        <div\r\n                          className=\"bg-gradient-to-t from-blue-500 to-blue-400 rounded-t transition-all duration-500\"\r\n                          style={{\r\n                            height: `${(data.orders / maxOrders) * 200}px`,\r\n                            minHeight: ",
    "effacerlesfiltresbut": "\r\n                        >\r\n                            Effacer les filtres\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal aper√ßu rapide */}\r\n            {showQuickView && selectedProduct && (\r\n                <div\r\n                    className=",
    "effacerlesfiltresbut1": "\r\n                        >\r\n                            Effacer les filtres\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal aper√ßu rapide */}\r\n            {showQuickView && selectedProduct && (\r\n                <div\r\n                    className=",
    "reinitialiserbuttond1": "\r\n                        >\r\n                            R√©initialiser\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=",
    "onclickhandleremovef": "\r\n                        onClick={() => handleRemoveFile(url)}\r\n                      >\r\n                        Supprimer\r\n                      <",
    "blockpx4py2textsmtex": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600 focus:outline-none`}\r\n                      >\r\n                        {name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Notifications - s√©par√© compl√®tement *",
    "blockpx4py2textsmtex1": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600 focus:outline-none`}\r\n                      >\r\n                        {name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Notifications - s√©par√© compl√®tement *",
    "blockpx4py2textsmtex2": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600 focus:outline-none`}\r\n                      >\r\n                        {name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Notifications - s√©par√© compl√®tement */}\r\n              {user && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleNotificationClick}\r\n                  className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer relative p-2 rounded focus:outline-none focus:ring-2 focus:ring-orange-300\"\r\n                  title=\"Notifications\"\r\n                >\r\n                  <Bell className=\"h-5 w-5\" />\r\n                  {unreadCount > 0 && (\r\n                    <span className=\"bg-orange-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-bold animate-pulse absolute -top-1 -right-1\">\r\n                      {unreadCount > 99 ? ",
    "blockpx4py2textsmtex3": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\r\n                    >\r\n                      {name}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s *",
    "blockpx4py2textsmtex4": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\r\n                    >\r\n                      {name}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s *",
    "blockpx4py2textsmtex5": "\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\r\n                    >\r\n                      {name}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s */}\r\n            {user && (\r\n              <div\r\n                className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer relative p-2\"\r\n                onClick={handleNotificationToggle}\r\n                title=\"Notifications\"\r\n              >\r\n                <Bell className=\"h-5 w-5\" />\r\n                {unreadCount > 0 && (\r\n                  <span className=\"bg-orange-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-bold animate-pulse absolute -top-2 -right-2\">\r\n                    {unreadCount > 99 ? ",
    "tcontainersstatuscon": "\r\n                        }`}>\r\n                          {t(`containers.status.${container.status}`)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                        {new Date(container.estimatedDepartureDate).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <div className=\"flex space-x-2 justify-end\">\r\n                          <button\r\n                            onClick={() => handleEditContainer(container)}\r\n                            className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                          >\r\n                            <Edit className=\"w-4 h-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteContainer(container.id)}\r\n                            className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\"\r\n                          >\r\n                            <Trash2 className=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de cr√©ation/√©dition */}\r\n      {showCreateModal && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-8 rounded-lg shadow-xl w-full max-w-2xl mx-4\">\r\n            <h3 className=\"text-xl font-bold mb-6 text-gray-900 dark:text-white\">\r\n              {editingContainer ? ",
    "downloadsize14telech": "\r\n                      >\r\n                        <Download size={14} />\r\n                        T√©l√©charger\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=",
    "demanderlasuppressio": "\r\n                      >\r\n                        Demander la suppression\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Param√®tres de confidentialit√© */}\r\n                  <div className=",
    "voirlesdetailsbutton": "\r\n                      >\r\n                        Voir les d√©tails\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=",
    "gerermescartesbutton": "\r\n                    >\r\n                        G√©rer mes cartes ‚Üí\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {!isOwner && (\r\n                <div className=",
    "reessayerbuttondivdi": "\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=",
    "reessayerbuttondivdi1": "\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=",
    "reessayerbuttondivdi2": "\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=",
    "imageetbadgeverified": "\r\n                    >\r\n                        {/* Image et badge v√©rifi√© */}\r\n                        <div className=",
    "messagesquaresize14r": "\r\n                    >\r\n                      <MessageSquare size={14} />\r\n                      R√©pondre\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=",
    "xsize16desactiver2fa": "\r\n                    >\r\n                      <X size={16} />\r\n                      D√©sactiver 2FA\r\n                    </button>\r\n                    <button className=",
    "onclickeetargetecurr": "\r\n                    onClick={(e) => e.target === e.currentTarget && setShowContactForm(false)}\r\n                >\r\n                    <div className=",
    "divlabeldivdivclassn": "\r\n                    }`} />\r\n                </div>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Alertes de s√©curit√©</h4>\r\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">Notifications en temps r√©el</p>\r\n              </div>\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.securityAlertsEnabled}\r\n                  onChange={(e) => updateSetting(",
    "divlabeldivdivdivdiv": "\r\n                    }`} />\r\n                </div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sessions administrateur */}\r\n      <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-xl border border-purple-200 dark:border-purple-800 p-6\">\r\n        <div className=\"flex items-center gap-3 mb-6\">\r\n          <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\r\n            <Users className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-purple-900 dark:text-purple-200\">Sessions administrateur</h3>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              D√©lai d",
    "divspanclassnametext": "\r\n                    }}\r\n                  />\r\n                </div>\r\n                <span className=\"text-sm text-gray-600 dark:text-gray-400 w-12 text-right\">\r\n                  {distribution[rating - 1]}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-300\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher dans les avis...\"\r\n                  value={searchTerm}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={ratingFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setRatingFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"\">Toutes les notes</option>\r\n                <option value=\"5\">5 √©toiles</option>\r\n                <option value=\"4\">4 √©toiles</option>\r\n                <option value=\"3\">3 √©toiles</option>\r\n                <option value=\"2\">2 √©toiles</option>\r\n                <option value=\"1\">1 √©toile</option>\r\n              </select>\r\n            </div>            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={verifiedFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setVerifiedFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les avis</option>\r\n                <option value=\"verified\">V√©rifi√©s</option>\r\n                <option value=\"unverified\">Non v√©rifi√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Reviews List */}\r\n        <div className=\"space-y-6\">\r\n          {loading ? (\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            filteredReviews.map((review) => (\r\n              <div key={review.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                {/* Review Header */}\r\n                <div className=\"flex items-start justify-between mb-4\">\r\n                  <div className=\"flex items-start\">\r\n                    <div className=\"h-10 w-10 rounded-full bg-gradient-to-r from-blue-400 to-blue-600 flex items-center justify-center mr-3\">\r\n                      <span className=\"text-white font-medium text-sm\">\r\n                        {review.customerName.charAt(0).toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"flex items-center gap-2 mb-1\">\r\n                        <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {review.customerName}\r\n                        </h3>\r\n                        {review.isVerified && (\r\n                          <span className=\"bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100 text-xs px-2 py-1 rounded-full\">\r\n                            V√©rifi√©\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 mb-1\">\r\n                        <div className=\"flex\">{renderStars(review.rating, 14)}</div>\r\n                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {review.rating}/5\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400\">\r\n                        <Package size={12} />\r\n                        {review.productName}\r\n                        <span>‚Ä¢</span>\r\n                        <Calendar size={12} />\r\n                        {formatDate(review.createdAt)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Review Content */}\r\n                <div className=\"mb-4\">\r\n                  <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                    {review.title}\r\n                  </h4>\r\n                  <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n                    {review.comment}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Helpful Votes */}\r\n                <div className=\"flex items-center gap-4 mb-4\">\r\n                  <div className=\"flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400\">\r\n                    <ThumbsUp size={14} />\r\n                    <span>{review.helpfulVotes} sur {review.totalVotes} trouvent cet avis utile</span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Supplier Response */}\r\n                {review.hasResponse && review.response ? (\r\n                  <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 mb-4\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <User size={16} className=\"text-blue-600\" />\r\n                      <span className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\r\n                        R√©ponse du fournisseur\r\n                      </span>\r\n                      <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        {formatDate(review.response.createdAt)}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                      {review.response.content}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex justify-end\">\r\n                    <Button\r\n                      onClick={() => console.log(",
    "divcaseacocherpourac": "\r\n                  />\r\n                </div>\r\n\r\n                {/* Case √† cocher pour accepter la v√©rification */}\r\n                <div className=",
    "divvideodepresentati": "\r\n                  />\r\n                </div>\r\n\r\n                {/* Vid√©o de pr√©sentation */}\r\n                <div className=",
    "arialabelalleralapag": "\r\n                  }`}\r\n                  aria-label={`Aller √† la page ${index + 1}`}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Call to action */}\r\n        <div className=\"text-center mt-12 animate-fade-in-up\" style={{ animationDelay: ",
    "categorynamebuttondi": "\r\n                  }`}\r\n                >\r\n                  {category.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Section des cartes produits *",
    "categorynamebuttondi1": "\r\n                  }`}\r\n                >\r\n                  {category.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Section des cartes produits *",
    "divlabeldivdivclassn1": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">2FA obligatoire</h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Authentification √† deux facteurs</p>\r\n            </div>\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.twoFactorRequired}\r\n                onChange={(e) => updateSetting(",
    "divlabeldivsettingsi": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n\r\n          {settings.ipWhitelistEnabled && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Adresses IP autoris√©es (une par ligne)\r\n              </label>\r\n              <textarea\r\n                value={settings.allowedIPs.join(",
    "refreshcwclassnameh4": "\r\n                >\r\n                    <RefreshCw className={`h-4 w-4 ${isResetting ? 'animate-spin' : ''}`} />\r\n                    R√©initialisation Compl√®te\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleCreateEssentials}\r\n                    disabled={isResetting || isDeleting || isCreating}\r\n                    className=",
    "sparklesclassnameh5w": "\r\n                >\r\n                    <Sparkles className={`h-5 w-5 ${isRunning ? 'animate-spin' : ''}`} />\r\n                    Syst√®me Complet\r\n                    <span className=",
    "sedeconnecterbuttond": "\r\n                >\r\n                    Se d√©connecter\r\n                </Button>\r\n            </div>\r\n\r\n            {result && (\r\n                <div className=",
    "iscreatingcreationcr": "\r\n                >\r\n                    {isCreating ? 'Cr√©ation...' : 'Cr√©er Plusieurs Admins Test'}\r\n                </Button>\r\n            </div>\r\n\r\n            {/* R√©sultats */}\r\n            {results && (\r\n                <div className=",
    "loadingcreationcreer": "\r\n                >\r\n                    {loading ? 'Cr√©ation...' : 'Cr√©er Utilisateur (Test Direct)'}\r\n                </Button>\r\n            </div>\r\n\r\n            <p className=",
    "disabledloadingusers": "\r\n                disabled={loading}\r\n              >\r\n                <Users size={16} />\r\n                Cr√©er des utilisateurs de test\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "listclassnameh5w5but": "\r\n                }`}\r\n              >\r\n                <List className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Products */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-6\">\r\n          <p className=\"text-gray-600\">\r\n            {category.products.length} produits trouv√©s dans {category.name}\r\n          </p>\r\n        </div>\r\n\r\n        {viewMode === ",
    "optionvalueselection": "\r\n                }`}\r\n              >\r\n                <option value=\"\">S√©lectionner une cat√©gorie</option>\r\n                {categories.map(cat => (\r\n                  <option key={cat} value={cat}>{cat}</option>\r\n                ))}\r\n              </select>\r\n              {errors.category && (\r\n                <p className=\"text-red-500 text-sm mt-1\">{errors.category}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stock et commande minimum */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Stock disponible\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                value={formData.stock}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, stock: parseInt(e.target.value) || 0 }))}\r\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.stock ? ",
    "divclassnamerelative": "\r\n              />\r\n              <div className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${settings.captchaEnabled ? 'bg-orange-600' : 'bg-gray-200 dark:bg-gray-600'\r\n                }`}>\r\n                <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${settings.captchaEnabled ? 'translate-x-6' : 'translate-x-1'\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contr√¥le d'acc√®s et surveillance */}\r\n      <div className=",
    "divdivcategoriesdivl": "\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cat√©gories */}\r\n          <div>\r\n            <label className=",
    "marquerlubuttondivpc": "\r\n              >\r\n                Marquer lu\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <p className={`\r\n            text-sm mt-1 line-clamp-2\r\n            ${notification.isRead \r\n              ? 'text-gray-600 dark:text-gray-400' \r\n              : 'text-gray-700 dark:text-gray-300'\r\n            }\r\n          `}>\r\n            {notification.message}\r\n          </p>\r\n\r\n          {/* M√©tadonn√©es */}\r\n          <div className=",
    "votrenavigateurnesup": "\r\n              >\r\n                Votre navigateur ne supporte pas la lecture vid√©o.\r\n              </video>\r\n            ) : (\r\n              <div className=",
    "previsualisationdivc": "\r\n              >\r\n                {/* Pr√©visualisation */}\r\n                <div className=",
    "previsualisationouic": "\r\n              >\r\n                {/* Pr√©visualisation ou ic√¥ne */}\r\n                <div className=",
    "isuploadinguploadenc": "\r\n              >\r\n                {isUploading ? 'Upload en cours...' : 'T√©l√©charger'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=",
    "isuploadinguploadenc1": "\r\n              >\r\n                {isUploading ? 'Upload en cours...' : `T√©l√©charger (${images.filter(img => img.status === 'pending').length})`}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=",
    "onclickifconfirmsupp": "\r\n              onClick={() => {\r\n                if (confirm('Supprimer tous les fichiers de cette cat√©gorie ?')) {\r\n                  // Impl√©menter la suppression en masse si n√©cessaire\r\n                }\r\n              }}\r\n            >\r\n              <Trash2 className=",
    "styleleftusedpercent": "\r\n              style={{\r\n                left: `${usedPercentage}%`,\r\n                width: `${selectedPercentage}%`\r\n              }}\r\n            />\r\n            {/* Capacit√© disponible */}\r\n            <div\r\n              className=",
    "stylewidthavailablep": "\r\n              style={{ width: `${availablePercentage}%` }}\r\n            />\r\n          </div>\r\n\r\n          {/* L√©gende */}\r\n          <div className=",
    "stylewidthusedpercen": "\r\n              style={{ width: `${usedPercentage}%` }}\r\n            />\r\n            {/* Capacit√© s√©lectionn√©e */}\r\n            <div\r\n              className=",
    "divlabeldivdivconstr": "\r\n              }`} />\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderLocalizationSettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Langue par d√©faut\r\n        </label>\r\n        <select\r\n          value={settings.defaultLanguage}\r\n          onChange={(e) => updateSetting(",
    "divlabeldivdivconstr1": "\r\n              }`} />\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderNotificationSettings = () => (\r\n    <div className=",
    "divdivdivdivconstren": "\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderNotificationSettings = () => (\r\n    <div className=",
    "filterclassnamestyle": "\r\n            >\r\n              <Filter className={styles.icon} />\r\n            </button>\r\n          )}\r\n          \r\n          {/* Bouton de recherche *",
    "onclickdocumentgetel": "\r\n            }\r\n          `}\r\n          onClick={() => document.getElementById(`file-input-${activeTab}`)?.click()}\r\n        >\r\n          <div className=\"flex flex-col items-center\">\r\n            <Upload className=\"w-12 h-12 text-gray-400 mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              Ajouter des {activeTab}\r\n            </h3>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n              Glissez-d√©posez vos fichiers ici ou cliquez pour s√©lectionner\r\n            </p>\r\n            <p className=\"text-xs text-gray-400\">\r\n              {activeTab === ",
    "notificationmessagep": "\r\n            }\r\n          `}>\r\n            {notification.message}\r\n          </p>\r\n\r\n          {/* M√©tadonn√©es */}\r\n          <div className=\"flex items-center justify-between mt-2\">\r\n            <div className=\"flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400\">\r\n              <Clock className=\"h-3 w-3\" />\r\n              <span>{formatTimeAgo(notification.createdAt)}</span>\r\n              \r\n              {notification.metadata?.amount && (\r\n                <>\r\n                  <span>‚Ä¢</span>\r\n                  <span className=\"font-medium\">\r\n                    {notification.metadata.amount.toLocaleString(",
    "autresproduitssimila": "\r\n            }\r\n        },\r\n        // ... autres produits similaires\r\n    ];\r\n\r\n    return products.find(p => p.id === id) || null;\r\n};\r\n\r\nconst ProductDetailPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const navigate = useNavigate();\r\n    const [product, setProduct] = useState<SimpleProduct | null>(null);\r\n    const [selectedImage, setSelectedImage] = useState(0);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const foundProduct = getProductById(id);\r\n            setProduct(foundProduct);\r\n            setIsLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=",
    "autresproduitssimila1": "\r\n            }\r\n        },\r\n        // ... autres produits similaires\r\n    ];\r\n\r\n    return products.find(p => p.id === id) || null;\r\n};\r\n\r\nconst ProductDetailPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const navigate = useNavigate();\r\n    const [product, setProduct] = useState<SimpleProduct | null>(null);\r\n    const [selectedImage, setSelectedImage] = useState(0);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const foundProduct = getProductById(id);\r\n            setProduct(foundProduct);\r\n            setIsLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!product) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Produit non trouv√©</h1>\r\n                    <button\r\n                        onClick={() => navigate(",
    "pricingpostprice1500": "\r\n            },\r\n            pricing: {\r\n                postPrice: 1500,\r\n                storyPrice: 500,\r\n                reelPrice: 1200\r\n            },\r\n            engagement: 4.2,\r\n            verified: true,\r\n            stats: {\r\n                totalViews: 285600,\r\n                totalEngagement: 4.2,\r\n                totalClicks: 12480,\r\n                totalEarnings: 18750\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        const profileRef = await addDoc(collection(db, ",
    "consolelogprofilchar": "\r\n            };\r\n\r\n            console.log(`‚úÖ Profil charg√©: ${user.name} (${user.role})`);\r\n            return user;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "consolelogprofilchar1": "\r\n            };\r\n\r\n            console.log(`‚úÖ Profil charg√©: ${user.name} (${user.role})`);\r\n            return user;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "consolelogprofilchar2": "\r\n            };\r\n\r\n            console.log(`‚úÖ Profil charg√©: ${user.name} (${user.role})`);\r\n            return user;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "supprimerunutilisate": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Supprimer un utilisateur\r\n     *",
    "spanclassnameinlineb": "\r\n            }`}>\r\n            <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${settings.smsNotifications ? ",
    "divclassnamerelative1": "\r\n          />\r\n          <div className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${settings.smsNotifications ? ",
    "uploadclassnamemxaut": "\r\n          }\r\n        `}\r\n      >\r\n        <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\r\n        <p className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n          D√©posez vos fichiers ici\r\n        </p>\r\n        <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n          ou cliquez pour s√©lectionner des fichiers\r\n        </p>\r\n        <p className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n          Formats accept√©s: {acceptedTypes.join(",
    "divclassnameflexflex": "\r\n          }\r\n        `}\r\n      >\r\n        <div className=\"flex flex-col items-center\">\r\n          <Camera className=\"h-12 w-12 text-gray-400 mb-4\" />\r\n          <p className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n            D√©posez vos images ici\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n            ou cliquez pour s√©lectionner des images\r\n          </p>\r\n          <p className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n            Formats: JPG, JPEG, PNG, GIF | Taille max: {maxSizePerImage}MB par image | Max {maxImages} images\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        multiple\r\n        accept=\"image/*\"\r\n        onChange={handleInputChange}\r\n        className=\"hidden\"\r\n      />\r\n\r\n      {/* Grille des images */}\r\n      {images.length > 0 && (\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n              Images ({images.length}/{maxImages})\r\n            </h3>\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={clearCompleted}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                disabled={!images.some(img => img.status === ",
    "setproductslistprevn": "\r\n          }\r\n        };\r\n        \r\n        setProductsList(prev => [newProduct, ...prev]);\r\n        success(`Nouveau produit \"${productData.name}\" ajout√© avec succ√®s !`);\r\n      }\r\n      \r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      console.error(",
    "voirtouteslescategor": "\r\n        >\r\n          Voir toutes les cat√©gories &gt;\r\n        </button>\r\n      </div>\r\n      {/* Animation d‚Äôouverture des produits */}\r\n      <div className={`transition-all duration-500 ${showProducts ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'}`}>\r\n        <div className=",
    "hoverbggray50darkhov": "\r\n        }\r\n        hover:bg-gray-50 dark:hover:bg-gray-700\r\n        transition-all duration-200 cursor-pointer\r\n        border-b border-gray-200 dark:border-gray-600\r\n      `}\r\n      onClick={handleClick}\r\n    >\r\n      {/* Indicateur de notification non lue */}\r\n      {!notification.isRead && (\r\n        <div className=\"absolute top-2 right-2 w-3 h-3 bg-blue-500 rounded-full animate-pulse\"></div>\r\n      )}\r\n\r\n      <div className=\"flex items-start space-x-3\">\r\n        {/* Ic√¥ne */}\r\n        <div className=\"flex-shrink-0 mt-1\">\r\n          {getNotificationIcon(notification.type)}\r\n        </div>\r\n\r\n        {/* Contenu */}\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h4 className={`\r\n              text-sm font-semibold truncate\r\n              ${notification.isRead \r\n                ? ",
    "awaitpromiseallsettl": "\r\n        });\r\n      }\r\n    });\r\n\r\n    await Promise.allSettled(deletePromises);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Supprimer tous les fichiers m√©dia d",
    "awaitpromiseallsettl1": "\r\n        });\r\n      }\r\n    });\r\n\r\n    await Promise.allSettled(deletePromises);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Supprimer tous les fichiers m√©dia d",
    "awaitpromiseallsettl2": "\r\n        });\r\n      }\r\n    });\r\n\r\n    await Promise.allSettled(deletePromises);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Supprimer tous les fichiers m√©dia d",
    "onclickeestoppropaga": "\r\n        }`}\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\r\n            <Package className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\r\n          </div>\r\n          <div>\r\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n              R√©server de l",
    "donneespardefautexpo": "\r\n    }\r\n];\r\n\r\n// Donn√©es par d√©faut\r\nexport const defaultBusinessCardData: BusinessCardData = {\r\n    companyName: ",
    "donneespardefautexpo1": "\r\n    }\r\n];\r\n\r\n// Donn√©es par d√©faut\r\nexport const defaultBusinessCardData: BusinessCardData = {\r\n    companyName: ",
    "formatdatereturnadmi": "\r\n    }).format(date);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Gestion des Documents\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              G√©rez tous les documents de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button onClick={() => console.log(",
    "contactphone": "\r\n    },\r\n    contact: {\r\n        phone: ",
    "profilecontactname": "\r\n  },\r\n  profile: {\r\n    contactName: ",
    "onclicksetshowcontac1": " \n                  onClick={() => setShowContactForm(true)} \n                  className=",
    "spanvariantnamespanv": " && (\r\n                                                <span>{variant.name}</span>\r\n                                            )}\r\n                                            {variant.price && (\r\n                                                <span className=\"ml-1 text-xs text-gray-500\">\r\n                                                    +{variant.price.toFixed(2)}‚Ç¨\r\n                                                </span>\r\n                                            )}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                        {/* S√©lecteur de quantit√© */}\r\n                        <div className=\"space-y-3\">\r\n                            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                                Quantit√© (MOQ: {product.moq})\r\n                            </h3>\r\n                            <div className=\"flex items-center gap-4\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <button\r\n                                        onClick={() => updateQuantity(quantity - 10)}\r\n                                        className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                    >\r\n                                        <Minus size={16} />\r\n                                    </button>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={quantity}\r\n                                        onChange={(e) => updateQuantity(Number(e.target.value))}\r\n                                        min={product.moq}\r\n                                        className=\"w-24 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-medium\"\r\n                                    />\r\n                                    <button\r\n                                        onClick={() => updateQuantity(quantity + 10)}\r\n                                        className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                    >\r\n                                        <Plus size={16} />\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                                    Stock: {product.stock.toLocaleString()} disponibles\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Prix total */}\r\n                        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6\">\r\n                            <div className=\"flex justify-between items-center mb-2\">\r\n                                <span className=\"text-gray-600 dark:text-gray-400\">Prix total</span>\r\n                                <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                    {totalPrice.toFixed(2)}‚Ç¨\r\n                                </div>\r\n                            </div>\r\n                            {hasDiscount && (\r\n                                <div className=\"text-sm text-green-600 dark:text-green-400\">\r\n                                    R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                </div>\r\n                            )}\r\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                                {(totalPrice / quantity).toFixed(2)}‚Ç¨ par unit√©\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* D√©lai de livraison */}\r\n                        <div className=\"flex items-center gap-2 text-gray-600 dark:text-gray-400\">\r\n                            <Truck size={20} />\r\n                            <span>\r\n                                Livraison estim√©e: {product.deliveryTime.min}-{product.deliveryTime.max} {product.deliveryTime.unit === ",
    "divclassnamebgwhited": " && (\r\n                            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\r\n                                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6\">\r\n                                    Avis clients\r\n                                </h2>\r\n                                <div className=\"space-y-6\">\r\n                                    {/* Sample review */}\r\n                                    <div className=\"border-b border-gray-200 dark:border-gray-700 pb-6\">\r\n                                        <div className=\"flex items-start space-x-4\">\r\n                                            <div className=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-semibold\">\r\n                                                JD\r\n                                            </div>\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center space-x-2 mb-2\">\r\n                                                    <div className=\"font-semibold text-gray-900 dark:text-white\">\r\n                                                        Jean Dupont\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center\">\r\n                                                        {[...Array(5)].map((_, i) => (\r\n                                                            <Star key={i} className=\"h-4 w-4 fill-current text-yellow-400\" />\r\n                                                        ))}\r\n                                                    </div>\r\n                                                    <div className=\"text-sm text-gray-500\">\r\n                                                        il y a 2 semaines\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                                                    Excellent fournisseur ! Qualit√© des produits irr√©prochable et livraison tr√®s rapide. Je recommande vivement.\r\n                                                </p>\r\n                                                <div className=\"flex items-center space-x-4 mt-3\">\r\n                                                    <button className=\"flex items-center space-x-1 text-sm text-gray-500 hover:text-blue-600\">\r\n                                                        <ThumbsUp className=\"h-4 w-4\" />\r\n                                                        <span>Utile (12)</span>\r\n                                                    </button>\r\n                                                    <button className=\"text-sm text-gray-500 hover:text-blue-600\">\r\n                                                        R√©pondre\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Sidebar */}\r\n                    <div className=\"lg:col-span-1\">\r\n                        <div className=\"space-y-6\">\r\n                            {/* Carte de visite du fournisseur */}\r\n                            <SupplierBusinessCard\r\n                                supplierData={{\r\n                                    name: supplier.name,\r\n                                    logo: supplier.logo,\r\n                                    contact: supplier.contact,\r\n                                    location: supplier.location\r\n                                }}\r\n                                isOwner={isOwner}\r\n                                onManageCards={() => setActiveTab(",
    "divclassnamespacey6d": " && (\r\n                            <div className=\"space-y-6\">\r\n                                {/* Description */}\r\n                                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\r\n                                    <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n                                        √Ä propos de l",
    "divclassnamemt4p4bgb": " && (\r\n                <div className=\"mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                    <h3 className=\"text-sm font-medium text-blue-900 mb-2\">\r\n                        üìä M√©triques de Performance\r\n                    </h3>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                        <div>\r\n                            <span className=\"text-blue-700\">Items rendus:</span>\r\n                            <span className=\"ml-1 font-medium\">{Math.min(filteredCompanies.length, 10)}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-blue-700\">Total items:</span>\r\n                            <span className=\"ml-1 font-medium\">{filteredCompanies.length}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-blue-700\">Cache:</span>\r\n                            <span className=\"ml-1 font-medium\">{isStale ? ",
    "divclassnameauthinfl": " && (\r\n              <div className=\"auth-influencer-fields\">                {/* S√©lecteur de r√©seaux sociaux */}\r\n                <div className=\"auth-form-group\">\r\n                  <SocialNetworkSelector\r\n                    selectedNetworks={selectedNetworks}\r\n                    onChange={handleNetworkSelection}\r\n                    disabled={isLoading}\r\n                  />\r\n                </div>\r\n\r\n                {/* Nombre d",
    "divclassnameanimatef": " && (\r\n            <div className=\"animate-fade-in\">\r\n              {/* Informations personnelles avec √©dition inline */}\r\n              <Section icon={<User className=\"w-5 h-5\" />} title=\"Informations personnelles\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n                  {[\r\n                    { label: ",
    "divclassnameanimatef1": " && (\r\n            <div className=\"animate-fade-in\">\r\n              {/* Pr√©f√©rences linguistiques et r√©gionales */}\r\n              <Section icon={<Globe className=\"w-5 h-5\" />} title=\"Pr√©f√©rences linguistiques et r√©gionales\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n                  <div className=\"group\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Globe size={16} className=\"text-blue-500\" />\r\n                        Langue pr√©f√©r√©e\r\n                      </div>\r\n                    </label>\r\n                    <select className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200 hover-glow\">\r\n                      <option value=\"fr\">Fran√ßais</option>\r\n                      <option value=\"en\">English</option>\r\n                      <option value=\"zh\">‰∏≠Êñá</option>\r\n                      <option value=\"es\">Espa√±ol</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"group\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Package size={16} className=\"text-green-500\" />\r\n                        Devise pr√©f√©r√©e\r\n                      </div>\r\n                    </label>\r\n                    <select className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-all duration-200 hover-glow\">\r\n                      <option value=\"EUR\">Euro (‚Ç¨)</option>\r\n                      <option value=\"USD\">Dollar US ($)</option>\r\n                      <option value=\"CNY\">Yuan chinois (¬•)</option>\r\n                      <option value=\"GBP\">Livre sterling (¬£)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Notifications am√©lior√©es */}\r\n              <Section icon={<Bell className=\"w-5 h-5\" />} title=\"Pr√©f√©rences de notification\">\r\n                <div className=\"space-y-4\">\r\n                  {[\r\n                    {\r\n                      id: ",
    "bellclassnamew5h5tex": " && <Bell className=\"w-5 h-5 text-blue-500\" />}\r\n            </div>\r\n            <div className=\"font-medium text-sm\">{notification.message}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header avec avatar am√©lior√© */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 mb-8 overflow-hidden\">\r\n          <div className=\"bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 h-32 relative\">\r\n            <div className=\"absolute inset-0 bg-black bg-opacity-20\"></div>\r\n          </div>\r\n\r\n          <div className=\"relative px-6 pb-6\">\r\n            <div className=\"flex flex-col sm:flex-row items-center sm:items-end -mt-16 sm:-mt-12\">\r\n              {/* Avatar avec bouton de changement */}\r\n              <div className=\"relative group\">\r\n                <div className=\"w-24 h-24 sm:w-28 sm:h-28 rounded-full border-4 border-white dark:border-gray-800 shadow-xl overflow-hidden bg-gray-200 dark:bg-gray-700\">\r\n                  <img\r\n                    src={avatar}\r\n                    alt=\"avatar\"\r\n                    className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\r\n                  />\r\n                  {uploadStatus === ",
    "filetextclassnamew12": " && <FileText className=\"w-12 h-12\" />}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Informations du fichier */}\r\n                <div className=\"space-y-2\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-white text-sm truncate\">\r\n                    {file.name}\r\n                  </h4>\r\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                    <div>Taille: {formatFileSize(file.size)}</div>\r\n                    <div>Ajout√©: {file.uploadedAt.toLocaleDateString()}</div>\r\n                    {file.metadata?.width && file.metadata?.height && (\r\n                      <div>Dimensions: {file.metadata.width}x{file.metadata.height}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=\"flex gap-2 mt-3\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setPreviewUrl(file.url)}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    <Eye className=\"w-4 h-4 mr-1\" />\r\n                    Voir\r\n                  </Button>\r\n                  \r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => window.open(file.url, ",
    "productdescriptionfr": " && product.description.french) {\n      return product.description.french;\n    } else if (product.description.english) {\n      return product.description.english;\n    }\n    return product.description.chinese;\n  };\n  \n  const priceCNY = product.price.cny;\n  const priceConverted = convertCurrency(priceCNY, currency);\n  \n  return (\n    <div className=",
    "progress100divclassn": " && progress < 100 && (\r\n                <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-600 space-y-3\">\r\n                  {/* Nouveau bouton de r√©servation interactif */}\r\n                  <button\r\n                    onClick={() => handleReserveSpace(container)}\r\n                    className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-4 py-3 rounded-lg font-medium transition-all duration-200 flex items-center justify-center space-x-2 shadow-lg hover:shadow-xl transform hover:scale-105\"\r\n                  >\r\n                    <Package className=\"w-5 h-5\" />\r\n                    <span>R√©server de l",
    "usersupplieridsuppli": " && user?.supplierId === supplierId;\r\n    };\r\n\r\n    const canEditSupplierProfile = (supplierId: string): boolean => {\r\n        return isSupplierOwner(supplierId) || user?.type === ",
    "ajouterunutilisateur": " />\n            Ajouter un utilisateur\n          <",
    "entetedivclassname": " />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=",
    "entetedivclassname1": " />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=",
    "entetedivclassname2": " />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=",
    "entetedivclassname3": " />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=",
    "badgecesicertifiepro": " />\r\n        \r\n        {/* Badge CE si certifi√© */}\r\n        {product.certifiedCE && (\r\n          <div className=",
    "spanmodifier": " />\r\n                                                            <span>Modifier<",
    "buttondivtdtrtbodyta": " />\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* √âtat des tables */}\r\n                <div className=",
    "spantelechargeruneim": " />\r\n                                                <span>T√©l√©charger une image</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=",
    "spantelechargeruneim1": " />\r\n                                                <span>T√©l√©charger une image</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Footer */}\r\n                    <div className=",
    "creationuserplusclas": " />\r\n                                                Cr√©ation...\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <UserPlus className=",
    "spansauvegarderspanb": " />\r\n                                            <span>Sauvegarder</span>\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Panel de droite - Pr√©visualisation */}\r\n                <div className=",
    "ajouteraudevis2": " />\r\n                                            Ajouter au devis\r\n                                        <",
    "contacterlefournisse": " />\r\n                                            Contacter le fournisseur\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal d'aper√ßu rapide */}\r\n            {showQuickView && selectedProduct && (\r\n                <div\r\n                    className=",
    "creationencoursdownl": " />\r\n                                        Cr√©ation en cours...\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Download className=",
    "creerunesauvegardebu": " />\r\n                                        Cr√©er une sauvegarde\r\n                                    </>\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=",
    "buttondivdivsectiond": " />\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Section D√©tails */}\r\n                    <div className=",
    "spanmodeapercuspanbu": " />\r\n                                    <span>Mode aper√ßu</span>\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleDownload}\r\n                                    className=",
    "spantelechargerspanb": " />\r\n                                    <span>T√©l√©charger</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=",
    "creationencoursuserp": " />\r\n                                    Cr√©ation en cours...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <UserPlus className=",
    "creercomptesessentie": " />\r\n                                    Cr√©er Comptes Essentiels\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Purge des utilisateurs */}\r\n                    <div className=",
    "purgertouslesutilisa": " />\r\n                                    Purger Tous les Utilisateurs\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Cr√©ation d'utilisateur individuel */}\r\n                <div className=",
    "spanediteurdecartede": " />\r\n                                <span>√âditeur de Carte de Visite</span>\r\n                            </h2>\r\n                            <div className=",
    "creerunutilisateurh3": " />\r\n                                Cr√©er un Utilisateur\r\n                            </h3>\r\n                            <button\r\n                                onClick={() => setShowCreateForm(!showCreateForm)}\r\n                                className=",
    "telechargerlesidenti": " />\r\n                                T√©l√©charger les identifiants\r\n                            </button>\r\n                            <button\r\n                                onClick={loadSummary}\r\n                                disabled={loading}\r\n                                className=",
    "spanaumoins8caracter": " />\r\n                            <span>Au moins 8 caract√®res</span>\r\n                          </div>\r\n                          <div className=",
    "purgecompleteh3pclas": " />\r\n                            Purge Compl√®te\r\n                        </h3>\r\n                        <p className=",
    "buttondivtdtrtbodyta1": " />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de cr√©ation/√©dition */}\r\n      {showCreateModal && (\r\n        <div className=",
    "buttondivdivdivdivse": " />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Gestion des donn√©es personnelles */}\r\n              <Section icon={<User className=",
    "buttondivdivmodalfor": " />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal formulaire de contact */}\r\n            {showContactForm && (\r\n                <div\r\n                    className=",
    "spansynchronisationf": " />\r\n                        <span>Synchronisation Firebase</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats */}\r\n            {results && (\r\n                <div className=",
    "deviseprefereedivlab": " />\r\n                        Devise pr√©f√©r√©e\r\n                      </div>\r\n                    </label>\r\n                    <select className=",
    "environnementdeprodu": " />\r\n                        Environnement de production s√©curis√©\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Formulaire */}\r\n                <div className=",
    "langueprefereedivlab": " />\r\n                        Langue pr√©f√©r√©e\r\n                      </div>\r\n                    </label>\r\n                    <select className=",
    "modifier1": " />\r\n                        Modifier\r\n                      <",
    "securisespandivdivdi": " />\r\n                        S√©curis√©\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=",
    "usercountryfrancespa": " />\r\n                        {user.country || 'France'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Bouton d'√©dition */}\r\n                  <div className=",
    "userlanguagefrancais": " />\r\n                        {user.language || 'Fran√ßais'}\r\n                      </span>\r\n                      <span className=",
    "alertesdesecuriteh4d": " />\r\n                      Alertes de s√©curit√©\r\n                    </h4>\r\n                    <div className=",
    "modifierbuttondivsec": " />\r\n                      Modifier\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Statistiques du profil *",
    "buttonspandivdivspec": " />\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Sp√©cifications techniques */}\r\n          <div>\r\n            <h3 className=",
    "spanreserverdelespac": " />\r\n                    <span>R√©server de l'espace</span>\r\n                  </button>\r\n                  \r\n                  {/* Bouton de pr√©commande existant (optionnel) */}\r\n                  <button\r\n                    onClick={() => handlePreorder(container)}\r\n                    className=",
    "creercomptesessentie1": " />\r\n                    Cr√©er Comptes Essentiels\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={deleteAllUsers}\r\n                    disabled={isResetting || isDeleting || isCreating}\r\n                    className=",
    "lesystemecompletconf": " />\r\n                    Le syst√®me complet configure automatiquement :\r\n                </h3>\r\n                <div className=",
    "supprimertous": " />\r\n                    Supprimer Tous\r\n                <",
    "buttondivdivdivdivmo": " />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de pr√©visualisation */}\r\n      {previewUrl && (\r\n        <div className=",
    "spanvoirdetailsspand": " />\r\n                <span>Voir d√©tails</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Badge de priorit√© */}\r\n          {notification.priority === 'urgent' && (\r\n            <div className=",
    "ajouterunproduit": " />\r\n              Ajouter un produit\r\n            <",
    "enregistrerlesmodifi": " />\r\n              Enregistrer les modifications\r\n            <",
    "toutsupprimer": " />\r\n              Tout supprimer\r\n            <",
    "uploaddefichiersh2fi": " />\r\n              Upload de fichiers\r\n            </h2>\r\n            <FileUpload\r\n              onUpload={handleFileUpload}\r\n              maxFiles={5}\r\n              maxSizePerFile={10}\r\n              acceptedTypes={['.pdf', '.doc', '.docx', '.txt', '.jpg', '.png', '.xlsx']}\r\n            />\r\n          </div>\r\n\r\n          {/* Liste des fichiers upload√©s */}\r\n          {uploadedFiles.length > 0 && (\r\n            <div className=",
    "defaultreturnnullcon": " />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return 'Approuv√©';\r\n      case 'pending':\r\n        return 'En attente';\r\n      case 'rejected':\r\n        return 'Rejet√©';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const getTypeText = (type: string) => {\r\n    switch (type) {\r\n      case 'contract':\r\n        return 'Contrat';\r\n      case 'invoice':\r\n        return 'Facture';\r\n      case 'certificate':\r\n        return 'Certificat';\r\n      case 'manual':\r\n        return 'Manuel';\r\n      case 'other':\r\n        return 'Autre';\r\n      default:\r\n        return type;\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const handleUploadDocuments = async (files: File[], metadata: any) => {\r\n    try {\r\n      // Simulation de l'upload - dans un vrai projet, vous feriez un appel API\r\n      console.log('Uploading files:', files);\r\n      console.log('Metadata:', metadata);\r\n\r\n      // Simuler un d√©lai d'upload\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => ({\r\n        id: `new-${Date.now()}-${index}`,\r\n        name: file.name,\r\n        type: metadata.type,\r\n        size: formatFileSize(file.size),\r\n        uploadDate: new Date().toISOString().split('T')[0],\r\n        status: 'pending' as const,\r\n        downloadCount: 0,\r\n        category: metadata.category\r\n      }));\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      alert(`${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'upload:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleDownloadDocument = (document: Document) => {\r\n    // Simulation du t√©l√©chargement\r\n    console.log('Downloading document:', document.name);\r\n    \r\n    // Cr√©er un lien de t√©l√©chargement fictif\r\n    const link = window.document.createElement('a');\r\n    link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n    link.download = document.name;\r\n    window.document.body.appendChild(link);\r\n    link.click();\r\n    window.document.body.removeChild(link);\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = (documentId: string) => {\r\n    if (confirm(t('supplier.documents.confirm.delete'))) {\r\n      setDocuments(prev => prev.filter(doc => doc.id !== documentId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=",
    "defaultreturnnullcon1": " />;\r\n      default: return null;\r\n    }\r\n  };\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'pending': return t('supplier.orders.pending');\r\n      case 'confirmed': return t('supplier.orders.confirmed');\r\n      case 'shipped': return t('supplier.orders.shipped');\r\n      case 'delivered': return t('supplier.orders.delivered');\r\n      case 'cancelled': return 'Annul√©e';\r\n      default: return status;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\r\n      case 'confirmed': return 'bg-blue-100 text-blue-800';\r\n      case 'shipped': return 'bg-orange-100 text-orange-800';\r\n      case 'delivered': return 'bg-green-100 text-green-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const updateOrderStatus = (orderId: string, newStatus: Order['status']) => {\r\n    setOrders(prev => prev.map(order => \r\n      order.id === orderId ? { ...order, status: newStatus } : order\r\n    ));\r\n  };\r\n\r\n  // Statistiques\r\n  const stats = {\r\n    total: orders.length,\r\n    pending: orders.filter(o => o.status === 'pending').length,\r\n    confirmed: orders.filter(o => o.status === 'confirmed').length,\r\n    shipped: orders.filter(o => o.status === 'shipped').length,\r\n    revenue: orders.reduce((sum, order) => sum + order.total, 0)\r\n  };\r\n  return (\r\n    <div className=",
    "constcreatepreviewfi": " />;\r\n    }\r\n  };\r\n\r\n  const createPreview = (file: File): Promise<string | undefined> => {\r\n    return new Promise((resolve) => {\r\n      if (file.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => resolve(e.target?.result as string);\r\n        reader.onerror = () => resolve(undefined);\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        resolve(undefined);\r\n      }\r\n    });\r\n  };\r\n\r\n  const validateFile = (file: File): string | null => {\r\n    // V√©rifier la taille\r\n    if (file.size > maxSizePerFile * 1024 * 1024) {\r\n      return `Le fichier ${file.name} d√©passe la taille maximale de ${maxSizePerFile}MB`;\r\n    }\r\n\r\n    // V√©rifier le type\r\n    const extension = '.' + file.name.split('.').pop()?.toLowerCase();\r\n    if (!acceptedTypes.includes(extension)) {\r\n      return `Le type de fichier ${extension} n'est pas autoris√©`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleFileSelect = async (files: FileList) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    // V√©rifier le nombre maximum de fichiers\r\n    if (uploadFiles.length + fileArray.length > maxFiles) {\r\n      alert(`Vous ne pouvez t√©l√©charger que ${maxFiles} fichiers au maximum`);\r\n      return;\r\n    }\r\n\r\n    // Valider chaque fichier\r\n    const validationErrors: string[] = [];\r\n    const validFiles: File[] = [];\r\n\r\n    for (const file of fileArray) {\r\n      const error = validateFile(file);\r\n      if (error) {\r\n        validationErrors.push(error);\r\n      } else {\r\n        validFiles.push(file);\r\n      }\r\n    }\r\n\r\n    if (validationErrors.length > 0) {\r\n      alert(validationErrors.join('\\n'));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadFile\r\n    const newUploadFiles: UploadFile[] = [];\r\n    for (const file of validFiles) {\r\n      const preview = await createPreview(file);\r\n      newUploadFiles.push({\r\n        file,\r\n        id: generateId(),\r\n        progress: 0,\r\n        status: 'pending',\r\n        preview\r\n      });\r\n    }\r\n\r\n    setUploadFiles(prev => [...prev, ...newUploadFiles]);\r\n    onFileSelect?.(validFiles);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n    handleFileSelect(e.dataTransfer.files);\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      handleFileSelect(e.target.files);\r\n    }\r\n  };\r\n\r\n  const removeFile = (id: string) => {\r\n    setUploadFiles(prev => prev.filter(f => f.id !== id));\r\n  };\r\n\r\n  const simulateUpload = async (uploadFile: UploadFile): Promise<void> => {\r\n    return new Promise((resolve) => {\r\n      setUploadFiles(prev => prev.map(f => \r\n        f.id === uploadFile.id ? { ...f, status: 'uploading' } : f\r\n      ));\r\n\r\n      // Simuler le progr√®s d'upload\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += Math.random() * 20;\r\n        if (progress >= 100) {\r\n          progress = 100;\r\n          clearInterval(interval);\r\n          \r\n          setUploadFiles(prev => prev.map(f => \r\n            f.id === uploadFile.id ? { ...f, progress: 100, status: 'success' } : f\r\n          ));\r\n          \r\n          resolve();\r\n        } else {\r\n          setUploadFiles(prev => prev.map(f => \r\n            f.id === uploadFile.id ? { ...f, progress } : f\r\n          ));\r\n        }\r\n      }, 200);\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (uploadFiles.length === 0) return;\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      const filesToUpload = uploadFiles.filter(f => f.status === 'pending');\r\n      \r\n      if (onUpload) {\r\n        await onUpload(filesToUpload.map(f => f.file));\r\n      } else {\r\n        // Simulation d'upload si pas de handler fourni\r\n        for (const uploadFile of filesToUpload) {\r\n          await simulateUpload(uploadFile);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'upload:', error);\r\n      // Marquer les fichiers en erreur\r\n      setUploadFiles(prev => prev.map(f => \r\n        f.status === 'uploading' ? { ...f, status: 'error' } : f\r\n      ));\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setUploadFiles(prev => prev.filter(f => f.status !== 'success'));\r\n  };\r\n\r\n  const getStatusIcon = (status: UploadFile['status']) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle className=",
    "donneesfictivespouri": " />;\r\n  };\r\n\r\n  // Donn√©es fictives pour illustration\r\n  const fakeOrders = [\r\n    { id: 'cmd-001', status: 'Livr√©', total: 1200, date: '2024-06-01' },\r\n    { id: 'cmd-002', status: 'En cours', total: 850, date: '2024-06-10' },\r\n  ];\r\n  const fakeMessages = [\r\n    { id: 'msg-001', from: 'Fournisseur A', content: 'Votre commande a √©t√© exp√©di√©e.', date: '2024-06-02' },\r\n    { id: 'msg-002', from: 'Sourcer B', content: 'Avez-vous re√ßu le devis ?', date: '2024-06-11' },\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=",
    "buttondivdivdivdivdi": " />}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showContactForm && (\n        <div className=",
    "selectvaluerolefilte": " />}\n            />\n            <Select\n              value={roleFilter}\n              onChange={(e) => setRoleFilter(e.target.value)}\n              options={[\n                { value: '', label: 'Tous les r√¥les' },\n              { value: 'customer', label: 'Client' },\n              { value: 'supplier', label: 'Fournisseur' },\n                { value: 'admin', label: 'Administrateur' },\n            ]}\n            className=",
    "buttondivdivmessages": " />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Messages d'erreur et de succ√®s */}\r\n                        {error && (\r\n                            <div className=",
    "totalgettotalpriceto": " : `Total: ${getTotalPrice().toFixed(2)}‚Ç¨`}\r\n                </div>\r\n                {quoteItems.length > 0 && (\r\n                    <div className=\"mt-2 space-y-1\">\r\n                        {quoteItems.map((item) => (\r\n                            <div key={item.productId} className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                {item.product.name} - {item.quantity} unit√©s\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* LocalStorage info */}\r\n            <div className=\"text-xs text-gray-400 dark:text-gray-500\">\r\n                <div>Favoris: {localStorage.getItem(",
    "unreadcountspanbutto": " : unreadCount}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              )}\r\n\r\n              {/* Theme toggle */}\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleTheme}\r\n                className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer p-2 rounded focus:outline-none focus:ring-2 focus:ring-orange-300\"\r\n                title=\"Changer le th√®me\"\r\n              >\r\n                {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\r\n              </button>\r\n\r\n              {/* User */}\r\n              {user && (\r\n                <Link\r\n                  to={user.role === ",
    "unreadcountspandivth": " : unreadCount}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Theme toggle */}\r\n            <button\r\n              onClick={toggleTheme}\r\n              className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer p-2\"\r\n              title=\"Changer le th√®me\"\r\n            >\r\n              {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\r\n            </button>\r\n\r\n            {/* User profile link */}\r\n            {user ? (\r\n              <Link\r\n                to={user.role === ",
    "icivousappelleriezvo": " ?`)) {\n      // Ici, vous appelleriez votre API pour supprimer le produit\n      ",
    "icivousappelleriezvo1": " ?`)) {\n      // Ici, vous appelleriez votre API pour supprimer le produit\n      // Pour la d√©mo, on simule une suppression r√©ussie\n      success(`Le produit ",
    "icivousappelleriezvo2": " ?`)) {\n      // Ici, vous appelleriez votre API pour supprimer le produit\n      // Pour la d√©mo, on simule une suppression r√©ussie\n      success(`Le produit ",
    "dynamicamoled2xproce": " Dynamic AMOLED 2X',\r\n                'Processeur': 'Exynos 2400',\r\n                'M√©moire': '8GB RAM',\r\n                'Stockage': '128GB',\r\n                'Cam√©ra': '50MP + 12MP + 10MP',\r\n                'Batterie': '4000mAh',\r\n                'OS': 'Android 14'\r\n            }\r\n        },\r\n        {\r\n            id: '2',\r\n            name: 'Casque Sony WH-1000XM4',\r\n            price: 279,\r\n            originalPrice: 349,\r\n            discount: 20,\r\n            brand: 'Sony',\r\n            category: '√âlectronique',\r\n            image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800&h=800&fit=crop',\r\n            isPopular: true,\r\n            features: ['Bluetooth', 'Noise Cancelling', '30h autonomie', 'Charge rapide'],\r\n            description: 'Le casque sans fil Sony WH-1000XM4 avec r√©duction de bruit leader de l\\'industrie vous offre une exp√©rience audio exceptionnelle. Profitez d\\'une qualit√© sonore premium et d\\'un confort optimal pour de longues sessions d\\'√©coute.',\r\n            rating: 4.9,\r\n            reviews: 892,\r\n            images: [\r\n                'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800&h=800&fit=crop',\r\n                'https://images.unsplash.com/photo-1484704849700-f032a568e944?w=800&h=800&fit=crop',\r\n                'https://images.unsplash.com/photo-1546435770-a3e426bf472b?w=800&h=800&fit=crop'\r\n            ],\r\n            specifications: {\r\n                'Type': 'Casque circum-auriculaire',\r\n                'Connectivit√©': 'Bluetooth 5.0, Jack 3.5mm',\r\n                'Autonomie': '30 heures',\r\n                'R√©duction de bruit': 'Oui (ANC)',\r\n                'Poids': '254g',\r\n                'Charge': 'USB-C',\r\n                'Assistant vocal': 'Google Assistant, Alexa'\r\n            }\r\n        },\r\n        // ... autres produits similaires\r\n    ];\r\n\r\n    return products.find(p => p.id === id) || null;\r\n};\r\n\r\nconst ProductDetailPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const navigate = useNavigate();\r\n    const [product, setProduct] = useState<SimpleProduct | null>(null);\r\n    const [selectedImage, setSelectedImage] = useState(0);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const foundProduct = getProductById(id);\r\n            setProduct(foundProduct);\r\n            setIsLoading(false);\r\n        }\r\n    }, [id]);\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=",
    "aetesupprimeavecsucc": " a √©t√© supprim√© avec succ√®s.`);\n    }\n  };\n\n  return (\n    <div className=",
    "aetesupprimeavecsucc1": " a √©t√© supprim√© avec succ√®s.`);\n    }\n  };\n\n  return (\n    <div className=",
    "ajouteavecsuccessets": " ajout√© avec succ√®s !`);\r\n      }\r\n      \r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      console.error(",
    "ajouteavecsuccessets1": " ajout√© avec succ√®s !`);\r\n      }\r\n      \r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      console.error('Erreur lors de la sauvegarde:', err);\r\n      error('Erreur lors de la sauvegarde du produit');\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = (productId: string) => {\r\n    if (confirm('√ätes-vous s√ªr de vouloir supprimer ce produit ?')) {\r\n      setProductsList(prev => prev.filter(p => p.id !== productId));\r\n      success('Produit supprim√© avec succ√®s !');\r\n    }\r\n  };\r\n\r\n  const handleResetToDefault = () => {\r\n    if (confirm('√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.')) {\r\n      setProductsList(products);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      // R√©initialiser aussi le service global\r\n      productsService.resetToDefault();\r\n      success('Donn√©es restaur√©es aux valeurs par d√©faut !');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=",
    "disabledloadingajout": " disabled={loading}>\n                  Ajouter\n                <",
    "disabledloadingajout1": " disabled={loading}>\n                  Ajouter\n                <",
    "disabledloadingmettr": " disabled={loading}>\n                  Mettre √† jour\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete User Confirmation Modal */}\n      {showDeleteConfirm && selectedUser && (\n        <div className=",
    "disabledloadingmettr1": " disabled={loading}>\n                  Mettre √† jour\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete User Confirmation Modal */}\n      {showDeleteConfirm && selectedUser && (\n        <div className=",
    "modifieavecsuccesels": " modifi√© avec succ√®s !`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...products[0].description,\r\n            french: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : ['/api/placeholder/100/100'], // Image par d√©faut si pas d'images upload√©es\r\n          moq: productData.minOrder || 1,\r\n          price: {\r\n            cny: productData.price || 0,\r\n            unitCny: productData.price || 0\r\n          },\r\n          specifications: {\r\n            ...products[0].specifications,\r\n            brand: productData.brand || 'Marque inconnue',\r\n            origin: productData.origin || 'Origine inconnue',\r\n            material: productData.material || 'Mat√©riau non sp√©cifi√©',\r\n            modelNumber: productData.modelNumber || productData.sku || ''\r\n          }\r\n        };\r\n        \r\n        setProductsList(prev => [newProduct, ...prev]);\r\n        success(`Nouveau produit ",
    "onclickhandledeleteu": " onClick={handleDeleteUser} disabled={loading}>\n                Supprimer\n              <",
    "onclickhandledeleteu1": " onClick={handleDeleteUser} disabled={loading}>\n                Supprimer\n              <",
    "size20constgetstatus": " size={20} />;\r\n        }\r\n    };\r\n\r\n    const getStatusText = (status: string) => {\r\n        switch (status) {\r\n            case 'accepted': return 'Accept√©';\r\n            case 'pending': return 'En attente';\r\n            case 'completed': return 'Termin√©';\r\n            case 'rejected': return 'Refus√©';\r\n            default: return status;\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'accepted': return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400';\r\n            case 'pending': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400';\r\n            case 'completed': return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400';\r\n            case 'rejected': return 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400';\r\n            default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-400';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=",
    "styleanimationdelay3": " style={{ animationDelay: '3s' }}></div>\n\n          {/* Effet de soleil anim√© */}\n          <div\n            className=",
    "styleanimationdelayi": " style={{ animationDelay: `${index * 100}ms` }}>\r\n                          <ProductCard product={product} />\r\n                        </div>\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Messages r√©cents am√©lior√©s */}\r\n              <Section icon={<Mail className=",
    "conststatstotalviews": " }\r\n    ];\r\n\r\n    const stats = {\r\n        totalViews: 285600,\r\n        totalEngagement: 4.2,\r\n        totalClicks: 12480,\r\n        totalEarnings: 18750,\r\n        growthRate: 15.3,\r\n        activeCollaborations: 8\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    Statistiques\r\n                </h2>\r\n                <div className=\"flex items-center gap-2 text-green-600 dark:text-green-400\">\r\n                    <TrendingUp size={20} />\r\n                    <span className=\"font-medium\">+{stats.growthRate}% ce mois</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* KPIs principaux */}\r\n            <div className=\"grid grid-cols-2 lg:grid-cols-6 gap-4\">\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <Eye className=\"text-blue-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Vues totales</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        {stats.totalViews.toLocaleString()}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-600 dark:text-green-400 mt-1\">\r\n                        +12% vs mois dernier\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <TrendingUp className=\"text-green-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Engagement</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        {stats.totalEngagement}%\r\n                    </div>\r\n                    <div className=\"text-sm text-green-600 dark:text-green-400 mt-1\">\r\n                        +0.8% vs mois dernier\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <MousePointer className=\"text-purple-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Clics</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        {stats.totalClicks.toLocaleString()}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-600 dark:text-green-400 mt-1\">\r\n                        +25% vs mois dernier\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <DollarSign className=\"text-orange-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Gains</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        {stats.totalEarnings.toLocaleString()}‚Ç¨\r\n                    </div>\r\n                    <div className=\"text-sm text-green-600 dark:text-green-400 mt-1\">\r\n                        +18% vs mois dernier\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <Users className=\"text-pink-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Collaborations</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        {stats.activeCollaborations}\r\n                    </div>\r\n                    <div className=\"text-sm text-blue-600 dark:text-blue-400 mt-1\">\r\n                        Actives\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-3 mb-2\">\r\n                        <Calendar className=\"text-indigo-500\" size={24} />\r\n                        <span className=\"text-sm text-gray-600 dark:text-gray-400\">Croissance</span>\r\n                    </div>\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        +{stats.growthRate}%\r\n                    </div>\r\n                    <div className=\"text-sm text-green-600 dark:text-green-400 mt-1\">\r\n                        Ce mois\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Graphiques simplifi√©s */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* √âvolution des vues */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                        √âvolution des vues (7 derniers mois)\r\n                    </h3>\r\n                    <div className=\"space-y-3\">\r\n                        {viewsData.map((data, index) => (\r\n                            <div key={data.month} className=\"flex items-center gap-4\">\r\n                                <div className=\"w-8 text-sm text-gray-600 dark:text-gray-400\">\r\n                                    {data.month}\r\n                                </div>\r\n                                <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-6 relative\">\r\n                                    <div\r\n                                        className=\"bg-blue-500 h-6 rounded-full flex items-center justify-end pr-2\"\r\n                                        style={{ width: `${(data.views / 35000) * 100}%` }}\r\n                                    >\r\n                                        <span className=\"text-white text-xs font-medium\">\r\n                                            {data.views.toLocaleString()}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Taux d",
    "returndivclassnamefi": " }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl w-full max-w-7xl h-full max-h-[90vh] overflow-hidden flex\">\r\n                {/* Panel de gauche - √âditeur */}\r\n                <div className=\"w-1/2 flex flex-col\">\r\n                    {/* Header */}\r\n                    <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center space-x-2\">\r\n                                <Sparkles className=\"h-6 w-6 text-blue-500\" />\r\n                                <span>√âditeur de Carte de Visite</span>\r\n                            </h2>\r\n                            <div className=\"flex items-center space-x-3\">\r\n                                <button\r\n                                    onClick={handleReset}\r\n                                    className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                                    title=\"R√©initialiser\"\r\n                                >\r\n                                    <RefreshCw className=\"h-5 w-5\" />\r\n                                </button>\r\n                                <button\r\n                                    onClick={handleDownload}\r\n                                    className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                                    title=\"T√©l√©charger\"\r\n                                >\r\n                                    <Download className=\"h-5 w-5\" />\r\n                                </button>\r\n                                <button\r\n                                    onClick={onClose}\r\n                                    className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\r\n                                >\r\n                                    <X className=\"h-5 w-5\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Tabs */}\r\n                        <div className=\"flex space-x-1 mt-4 bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n                            {[\r\n                                { id: ",
    "ifisopenreturnnullre": " }));\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md\">\r\n                {/* Header */}\r\n                <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                        Cr√©er un nouvel utilisateur\r\n                    </h2>\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n                    >\r\n                        <X size={20} />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Form */}\r\n                <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n                    {/* Name */}\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                            Nom complet\r\n                        </label>\r\n                        <div className=\"relative\">\r\n                            <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                            <Input\r\n                                type=\"text\"\r\n                                value={formData.name}\r\n                                onChange={(e) => handleInputChange(",
    "divclassnameflexjust": " },\n                ]}\n              />\n              <div className=\"flex justify-end space-x-2\">\n                <Button type=\"button\" variant=\"secondary\" onClick={() => {\n                  setShowEditUserModal(false);\n                  resetForm();\n                }}>\n                  Annuler\n                </Button>\n                <Button type=\"submit\" variant=\"primary\" disabled={loading}>\n                  Mettre √† jour\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete User Confirmation Modal */}\n      {showDeleteConfirm && selectedUser && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Confirmer la suppression</h2>\n            <p className=\"text-gray-700 mb-4\">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "divclassnameflexjust1": " },\n                ]}\n              />\n              <div className=\"flex justify-end space-x-2\">\n                <Button type=\"button\" variant=\"secondary\" onClick={() => {\n                  setShowEditUserModal(false);\n                  resetForm();\n                }}>\n                  Annuler\n                </Button>\n                <Button type=\"submit\" variant=\"primary\" disabled={loading}>\n                  Mettre √† jour\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Delete User Confirmation Modal */}\n      {showDeleteConfirm && selectedUser && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Confirmer la suppression</h2>\n            <p className=\"text-gray-700 mb-4\">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "onprogresssupprimeru": " },\r\n      onProgress\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Supprimer un fichier upload√©\r\n   *",
    "onprogresssupprimeru1": " },\r\n      onProgress\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Supprimer un fichier upload√©\r\n   *",
    "onprogresssupprimeru2": " },\r\n      onProgress\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Supprimer un fichier upload√©\r\n   */\r\n  async deleteFile(url: string): Promise<boolean> {\r\n    if (this.mockMode) {\r\n      // Simulation de suppression\r\n      console.log(",
    "imgsrccaticonaltcatl": " }}\r\n          >\r\n            <img src={cat.icon} alt={cat.label} className=\"w-10 h-10 mb-2\" />\r\n            <span className=\"font-semibold mb-1 text-center\">{cat.label}</span>\r\n            <span className=\"absolute top-2 right-4 bg-green-300 text-[#181f2c] rounded-full text-xs font-bold px-3 py-1 shadow\">{getProductCount(cat.key)}+</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"text-center mt-2\">\r\n        <button\r\n          onClick={handleAllCategories}\r\n          className=\"text-blue-300 font-semibold underline hover:text-blue-400 transition\"\r\n        >\r\n          Voir toutes les cat√©gories &gt;\r\n        </button>\r\n      </div>\r\n      {/* Animation d‚Äôouverture des produits */}\r\n      <div className={`transition-all duration-500 ${showProducts ? ",
    "divclassnamep8h72fle": " }}>\n              <div className=\"p-8 h-72 flex flex-col justify-between relative overflow-hidden\">\n                {/* Effet de brillance anim√© */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent opacity-0 group-hover:opacity-20 transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-all duration-1000\"></div>\n\n                <div>\n                  <div className=\"text-sm font-semibold text-gray-800 mb-2 uppercase tracking-widest opacity-80 transform transition-all duration-300 group-hover:scale-110 font-display\">\n                    {t(",
    "divclassnamep8h72fle1": " }}>\n              <div className=\"p-8 h-72 flex flex-col justify-between relative overflow-hidden\">\n                {/* Effet de brillance anim√© */}\n                <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white to-transparent opacity-0 group-hover:opacity-20 transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-all duration-1000\"></div>\n                \n                <div>\n                  <div className=\"text-sm font-semibold text-gray-800 mb-2 uppercase tracking-widest opacity-80 transform transition-all duration-300 group-hover:scale-110 font-display\">\n                    {t(",
    "constquerysnapshotaw": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const firestoreUsers: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                firestoreUsers.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            // 2. Ajouter l",
    "reducesumordersumord": ")\r\n      .reduce((sum, order) => sum + order.totalAmount, 0);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Gestion des Commandes\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              Suivez et g√©rez toutes les commandes de la plateforme\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <ShoppingBag className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{orders.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"h-8 w-8 text-yellow-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">En attente</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {orders.filter(o => o.status === ",
    "elseresetpournouveau": ")\r\n      });\r\n    } else {\r\n      // Reset pour nouveau produit\r\n      setFormData({\r\n        name: ",
    "returnfieldvaluetolo": ") {\r\n            return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\r\n          }\r\n          return false;\r\n        });\r\n      });\r\n\r\n      return filteredDocuments;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la recherche dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  ",
    "returnfieldvaluetolo1": ") {\r\n            return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\r\n          }\r\n          return false;\r\n        });\r\n      });\r\n\r\n      return filteredDocuments;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la recherche dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compte le nombre de documents\r\n   */\r\n  async count(filters?: QueryFilter[]): Promise<number> {\r\n    try {\r\n      const options: QueryOptions = filters ? { filters } : {};\r\n      const documents = await this.list(options);\r\n      return documents.length;\r\n    } catch (error) {\r\n      console.error(`Erreur lors du comptage dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un document existe\r\n   */\r\n  async exists(id: string): Promise<boolean> {\r\n    try {\r\n      const doc = await this.read(id);\r\n      return doc !== null;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la v√©rification d",
    "returnfieldvaluetolo2": ") {\r\n            return fieldValue.toLowerCase().includes(searchTerm.toLowerCase());\r\n          }\r\n          return false;\r\n        });\r\n      });\r\n\r\n      return filteredDocuments;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la recherche dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compte le nombre de documents\r\n   */\r\n  async count(filters?: QueryFilter[]): Promise<number> {\r\n    try {\r\n      const options: QueryOptions = filters ? { filters } : {};\r\n      const documents = await this.list(options);\r\n      return documents.length;\r\n    } catch (error) {\r\n      console.error(`Erreur lors du comptage dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un document existe\r\n   */\r\n  async exists(id: string): Promise<boolean> {\r\n    try {\r\n      const doc = await this.read(id);\r\n      return doc !== null;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la v√©rification d",
    "returndivclassnamemi": ") {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n                <div className=\"text-center p-8\">\r\n                    <Shield className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Acc√®s refus√©</h2>\r\n                    <p className=\"text-gray-600\">Seuls les administrateurs peuvent acc√©der √† cette page.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadSummary();\r\n    }, []);\r\n\r\n    const loadSummary = async () => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            if ((window as any).productionUserService) {\r\n                const summaryData = await (window as any).productionUserService.getUsersSummary();\r\n                setSummary(summaryData);\r\n            } else {\r\n                setMessage({\r\n                    type: ",
    "ajouterunefonctiongl": ") {\r\n    // Ajouter une fonction globale pour ex√©cuter depuis la console\r\n    (window as any).createTestInfluencer = createTestInfluencer;\r\n    console.log(",
    "ajouterunefonctiongl1": ") {\r\n    // Ajouter une fonction globale pour ex√©cuter depuis la console\r\n    (window as any).createTestInfluencer = createTestInfluencer;\r\n    console.log(",
    "ajouterunefonctiongl2": ") {\r\n    // Ajouter une fonction globale pour ex√©cuter depuis la console\r\n    (window as any).createTestInfluencer = createTestInfluencer;\r\n    console.log(",
    "previewurlmatchjpgjp": ") || previewUrl.match(/\\.(jpg|jpeg|png|gif|webp)$/i) ? (\r\n              <img\r\n                src={previewUrl}\r\n                alt=\"Pr√©visualisation\"\r\n                className=\"max-w-full max-h-full object-contain\"\r\n              />\r\n            ) : previewUrl.includes(",
    "previewurlmatchmp4mo": ") || previewUrl.match(/\\.(mp4|mov|avi|webm)$/i) ? (\r\n              <video\r\n                src={previewUrl}\r\n                controls\r\n                className=\"max-w-full max-h-full\"\r\n              >\r\n                Votre navigateur ne supporte pas la lecture vid√©o.\r\n              </video>\r\n            ) : (\r\n              <div className=\"bg-white p-8 rounded-lg\">\r\n                <p className=\"text-gray-600\">Pr√©visualisation non disponible pour ce type de fichier.</p>\r\n                <Button\r\n                  onClick={() => window.open(previewUrl, ",
    "influenceuraffichema": ") } // Influenceur affich√© mais pas sourceur\n              ]}\n              disabled={isLoading}\n            />\n\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-md p-4\">\n              <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-300 mb-2\">\n                {role === ",
    "constreadernewfilere": ")) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => resolve(e.target?.result as string);\r\n        reader.onerror = () => resolve(undefined);\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        resolve(undefined);\r\n      }\r\n    });\r\n  };\r\n\r\n  const validateFile = (file: File): string | null => {\r\n    // V√©rifier la taille\r\n    if (file.size > maxSizePerFile * 1024 * 1024) {\r\n      return `Le fichier ${file.name} d√©passe la taille maximale de ${maxSizePerFile}MB`;\r\n    }\r\n\r\n    // V√©rifier le type\r\n    const extension = ",
    "constreadernewfilere1": ")) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => resolve(e.target?.result as string);\r\n        reader.onerror = () => resolve(undefined);\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        resolve(undefined);\r\n      }\r\n    });\r\n  };\r\n\r\n  const validateFile = (file: File): string | null => {\r\n    // V√©rifier la taille\r\n    if (file.size > maxSizePerFile * 1024 * 1024) {\r\n      return `Le fichier ${file.name} d√©passe la taille maximale de ${maxSizePerFile}MB`;\r\n    }\r\n\r\n    // V√©rifier le type\r\n    const extension = ",
    "returnfilenametolowe": ")) {\r\n        return file.name.toLowerCase().endsWith(type.toLowerCase());\r\n      }\r\n      return file.type.includes(type);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtenir une URL de pr√©visualisation pour un fichier\r\n   *",
    "returnfilenametolowe1": ")) {\r\n        return file.name.toLowerCase().endsWith(type.toLowerCase());\r\n      }\r\n      return file.type.includes(type);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtenir une URL de pr√©visualisation pour un fichier\r\n   */\r\n  getPreviewUrl(file: File): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!file.type.startsWith(",
    "trysupprimerduserveu": "))) {\r\n      try {\r\n        // Supprimer du serveur si c",
    "composantdeloadingco": "));\r\n\r\n// Composant de loading\r\nconst LoadingCard = memo(() => (\r\n    <div className=\"bg-white rounded-lg shadow-md border border-gray-100 animate-pulse\">\r\n        <div className=\"p-6\">\r\n            <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-4\"></div>\r\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\nconst LoadingWidget = memo(() => (\r\n    <div className=\"bg-white rounded-lg shadow-md border border-gray-100 animate-pulse\">\r\n        <div className=\"p-6\">\r\n            <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-6\"></div>\r\n            <div className=\"space-y-3\">\r\n                <div className=\"h-4 bg-gray-200 rounded\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-4/6\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\ninterface Company {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Quote {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Appointment {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Product {\r\n    id: string;\r\n}\r\n\r\nconst OptimizedDashboard: React.FC = memo(() => {\r\n    const { t } = useLanguage();\r\n\r\n    // Requ√™tes optimis√©es avec mise en cache\r\n    const { data: companies } = useOptimizedQuery<Company>(",
    "appliquerlalimiteifo": "));\r\n      }\r\n\r\n      // Appliquer la limite\r\n      if (options.limitCount) {\r\n        queryRef = query(queryRef, limit(options.limitCount));\r\n      }\r\n\r\n      // Appliquer la pagination\r\n      if (options.startAfterDoc) {\r\n        queryRef = query(queryRef, startAfter(options.startAfterDoc));\r\n      }\r\n\r\n      const querySnapshot = await getDocs(queryRef);\r\n      const documents: T[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        documents.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        } as T);\r\n      });\r\n\r\n      return documents;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la liste dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Liste avec pagination\r\n   */\r\n  async listPaginated(options: QueryOptions = {}): Promise<PaginatedResult<T>> {\r\n    try {\r\n      const documents = await this.list(options);\r\n      const hasMore = options.limitCount ? documents.length === options.limitCount : false;\r\n      \r\n      // Obtenir le dernier document pour la pagination\r\n      let lastDoc: QueryDocumentSnapshot | undefined;\r\n      if (documents.length > 0 && hasMore) {\r\n        // R√©cup√©rer le dernier document de la requ√™te pour la pagination\r\n        const lastDocData = documents[documents.length - 1];\r\n        if (lastDocData.id) {\r\n          const docRef = doc(db, this.collectionName, lastDocData.id);\r\n          const docSnap = await getDoc(docRef);\r\n          if (docSnap.exists()) {\r\n            lastDoc = docSnap as QueryDocumentSnapshot;\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        data: documents,\r\n        lastDoc,\r\n        hasMore\r\n      };\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la pagination dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recherche dans les documents\r\n   */\r\n  async search(searchTerm: string, searchFields: string[]): Promise<T[]> {\r\n    try {\r\n      // Firebase ne supporte pas la recherche full-text native\r\n      ",
    "appliquerlalimiteifo1": "));\r\n      }\r\n\r\n      // Appliquer la limite\r\n      if (options.limitCount) {\r\n        queryRef = query(queryRef, limit(options.limitCount));\r\n      }\r\n\r\n      // Appliquer la pagination\r\n      if (options.startAfterDoc) {\r\n        queryRef = query(queryRef, startAfter(options.startAfterDoc));\r\n      }\r\n\r\n      const querySnapshot = await getDocs(queryRef);\r\n      const documents: T[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        documents.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        } as T);\r\n      });\r\n\r\n      return documents;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la liste dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Liste avec pagination\r\n   */\r\n  async listPaginated(options: QueryOptions = {}): Promise<PaginatedResult<T>> {\r\n    try {\r\n      const documents = await this.list(options);\r\n      const hasMore = options.limitCount ? documents.length === options.limitCount : false;\r\n      \r\n      // Obtenir le dernier document pour la pagination\r\n      let lastDoc: QueryDocumentSnapshot | undefined;\r\n      if (documents.length > 0 && hasMore) {\r\n        // R√©cup√©rer le dernier document de la requ√™te pour la pagination\r\n        const lastDocData = documents[documents.length - 1];\r\n        if (lastDocData.id) {\r\n          const docRef = doc(db, this.collectionName, lastDocData.id);\r\n          const docSnap = await getDoc(docRef);\r\n          if (docSnap.exists()) {\r\n            lastDoc = docSnap as QueryDocumentSnapshot;\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        data: documents,\r\n        lastDoc,\r\n        hasMore\r\n      };\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la pagination dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recherche dans les documents\r\n   */\r\n  async search(searchTerm: string, searchFields: string[]): Promise<T[]> {\r\n    try {\r\n      // Firebase ne supporte pas la recherche full-text native\r\n      // On r√©cup√®re tous les documents et on filtre c√¥t√© client\r\n      const allDocuments = await this.list();\r\n      \r\n      const filteredDocuments = allDocuments.filter(doc => {\r\n        return searchFields.some(field => {\r\n          const fieldValue = this.getNestedValue(doc, field);\r\n          if (typeof fieldValue === ",
    "appliquerlalimiteifo2": "));\r\n      }\r\n\r\n      // Appliquer la limite\r\n      if (options.limitCount) {\r\n        queryRef = query(queryRef, limit(options.limitCount));\r\n      }\r\n\r\n      // Appliquer la pagination\r\n      if (options.startAfterDoc) {\r\n        queryRef = query(queryRef, startAfter(options.startAfterDoc));\r\n      }\r\n\r\n      const querySnapshot = await getDocs(queryRef);\r\n      const documents: T[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        documents.push({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        } as T);\r\n      });\r\n\r\n      return documents;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la liste dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Liste avec pagination\r\n   */\r\n  async listPaginated(options: QueryOptions = {}): Promise<PaginatedResult<T>> {\r\n    try {\r\n      const documents = await this.list(options);\r\n      const hasMore = options.limitCount ? documents.length === options.limitCount : false;\r\n      \r\n      // Obtenir le dernier document pour la pagination\r\n      let lastDoc: QueryDocumentSnapshot | undefined;\r\n      if (documents.length > 0 && hasMore) {\r\n        // R√©cup√©rer le dernier document de la requ√™te pour la pagination\r\n        const lastDocData = documents[documents.length - 1];\r\n        if (lastDocData.id) {\r\n          const docRef = doc(db, this.collectionName, lastDocData.id);\r\n          const docSnap = await getDoc(docRef);\r\n          if (docSnap.exists()) {\r\n            lastDoc = docSnap as QueryDocumentSnapshot;\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        data: documents,\r\n        lastDoc,\r\n        hasMore\r\n      };\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la pagination dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recherche dans les documents\r\n   */\r\n  async search(searchTerm: string, searchFields: string[]): Promise<T[]> {\r\n    try {\r\n      // Firebase ne supporte pas la recherche full-text native\r\n      // On r√©cup√®re tous les documents et on filtre c√¥t√© client\r\n      const allDocuments = await this.list();\r\n      \r\n      const filteredDocuments = allDocuments.filter(doc => {\r\n        return searchFields.some(field => {\r\n          const fieldValue = this.getNestedValue(doc, field);\r\n          if (typeof fieldValue === ",
    "lengthconstinactivet": ").length;\r\n        const inactive = total - active;\r\n\r\n        return { total, active, inactive };\r\n    }, [filteredCompanies]);\r\n\r\n    // Rendu des items pour la liste virtualis√©e\r\n    const renderCompanyItem = ({ index, data }: { index: number; data: Company[] }) => (\r\n        <CompanyItem company={data[index]} />\r\n    );\r\n\r\n    // Composant de filtres\r\n    const FilterComponent = memo(() => (\r\n        <div className=\"space-y-4\">\r\n            <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Statut\r\n                </label>\r\n                <select\r\n                    value={statusFilter}\r\n                    onChange={(e) => setStatusFilter(e.target.value as any)}\r\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                >\r\n                    <option value=\"all\">Tous</option>\r\n                    <option value=\"active\">Actifs</option>\r\n                    <option value=\"inactive\">Inactifs</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    if (loading && !allCompanies) {\r\n        return (\r\n            <div className=\"p-6\">\r\n                <div className=\"animate-pulse space-y-4\">\r\n                    <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\r\n                    <div className=\"space-y-3\">\r\n                        {[...Array(10)].map((_, i) => (\r\n                            <div key={i} className=\"h-20 bg-gray-200 rounded\"></div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-6 max-w-7xl mx-auto\">\r\n            {/* En-t√™te avec statistiques */}\r\n            <div className=\"mb-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                        <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                            Entreprises\r\n                            {isStale && (\r\n                                <span className=\"ml-2 text-sm text-amber-600\">\r\n                                    (Donn√©es en cache)\r\n                                </span>\r\n                            )}\r\n                        </h1>\r\n                        <p className=\"text-gray-600 mt-1\">\r\n                            {stats.total} entreprises ‚Ä¢ {stats.active} actives ‚Ä¢ {stats.inactive} inactives\r\n                        </p>\r\n                    </div>\r\n\r\n                    <button\r\n                        onClick={() => setShowFilters(!showFilters)}\r\n                        className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                        <Filter size={16} className=\"mr-2\" />\r\n                        Filtres\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Panneau de filtres */}\r\n                {showFilters && (\r\n                    <div className=\"mt-4 p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n                        <FilterComponent />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Liste virtualis√©e avec recherche int√©gr√©e */}\r\n            <div className=\"bg-white rounded-lg shadow\">\r\n                <VirtualizedList\r\n                    items={filteredCompanies}\r\n                    height={600} // Hauteur fixe pour la virtualisation\r\n                    itemHeight={88} // Hauteur de chaque item\r\n                    renderItem={renderCompanyItem}\r\n                    searchFields={[",
    "lengthpdivdivdivdivc": ").length}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"p-2 bg-gray-100 rounded-lg\">\r\n                                <Bell className=\"h-6 w-6 text-gray-600\" />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Non lues</p>\r\n                                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{unreadCount}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Filtres et recherche */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                    <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                        <div className=\"flex-1\">\r\n                            <div className=\"relative\">\r\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Rechercher dans les alertes...\"\r\n                                    value={searchTerm}\r\n                                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-2\">\r\n                            <select\r\n                                value={filterType}\r\n                                onChange={(e) => setFilterType(e.target.value)}\r\n                                className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                            >\r\n                                <option value=\"all\">Tous les types</option>\r\n                                <option value=\"error\">Erreurs</option>\r\n                                <option value=\"warning\">Avertissements</option>\r\n                                <option value=\"info\">Informations</option>\r\n                                <option value=\"success\">Succ√®s</option>\r\n                            </select>\r\n\r\n                            <select\r\n                                value={filterPriority}\r\n                                onChange={(e) => setFilterPriority(e.target.value)}\r\n                                className=\"px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                            >\r\n                                <option value=\"all\">Toutes priorit√©s</option>\r\n                                <option value=\"critical\">Critique</option>\r\n                                <option value=\"high\">√âlev√©e</option>\r\n                                <option value=\"medium\">Moyenne</option>\r\n                                <option value=\"low\">Faible</option>\r\n                            </select>\r\n\r\n                            <label className=\"flex items-center gap-2 px-3 py-2 text-sm\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={showUnreadOnly}\r\n                                    onChange={(e) => setShowUnreadOnly(e.target.checked)}\r\n                                    className=\"rounded border-gray-300 text-red-600 focus:ring-red-500\"\r\n                                />\r\n                                <span className=\"text-gray-700 dark:text-gray-300\">Non lues seulement</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Liste des alertes */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n                    {loading ? (\r\n                        <div className=\"p-8 text-center\">\r\n                            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto\"></div>\r\n                            <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement des alertes...</p>\r\n                        </div>\r\n                    ) : filteredAlerts.length === 0 ? (\r\n                        <div className=\"p-8 text-center\">\r\n                            <Bell className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n                            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Aucune alerte</h3>\r\n                            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n                                {alerts.length === 0 ? ",
    "lengthpdivdivdivdivc1": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <Download className=\"h-8 w-8 text-purple-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">T√©l√©chargements</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.reduce((total, doc) => total + doc.downloadCount, 0)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtres et recherche */}        <div className=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow-sm\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-300 h-4 w-4\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher un document...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-500 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>            </div>\r\n            \r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterType}\r\n                onChange={(e) => setFilterType(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                  <option value=\"all\">Tous les types</option>\r\n                  <option value=\"contract\">Contrats</option>\r\n                  <option value=\"invoice\">Factures</option>\r\n                  <option value=\"certificate\">Certificats</option>\r\n                  <option value=\"manual\">Manuels</option>\r\n                  <option value=\"other\">Autres</option>                <option value=\"all\">Tous les types</option>\r\n                <option value=\"contract\">Contrats</option>\r\n                <option value=\"invoice\">Factures</option>\r\n                <option value=\"certificate\">Certificats</option>\r\n                <option value=\"manual\">Manuels</option>\r\n                <option value=\"other\">Autres</option>\r\n              </select>\r\n            </div>\r\n              \r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterStatus}\r\n                onChange={(e) => setFilterStatus(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"all\">Tous les statuts</option>\r\n                <option value=\"approved\">Approuv√©s</option>\r\n                <option value=\"pending\">En attente</option>\r\n                <option value=\"rejected\">Rejet√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Liste des documents */}\r\n        <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Document\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Type\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Taille\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Statut\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    T√©l√©chargements\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {filteredDocuments.map((document) => (\r\n                  <tr key={document.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <FolderOpen className=\"h-5 w-5 text-blue-500 mr-3\" />\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {document.name}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {document.category}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900 dark:text-white\">\r\n                        {getTypeText(document.type)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                      {document.size}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n                        <Calendar className=\"h-4 w-4 mr-1\" />\r\n                        {new Date(document.uploadDate).toLocaleDateString(",
    "lengthpdivdivdivdivc2": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <Download className=\"h-8 w-8 text-purple-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">T√©l√©chargements</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.reduce((total, doc) => total + doc.downloadCount, 0)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>        {/* Filtres et recherche */}\r\n        <div className=\"bg-white dark:bg-gray-700 p-6 rounded-lg shadow-sm\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-300 h-4 w-4\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher un document...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-500 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterType}\r\n                onChange={(e) => setFilterType(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"all\">Tous les types</option>\r\n                <option value=\"contract\">Contrats</option>\r\n                <option value=\"invoice\">Factures</option>\r\n                <option value=\"certificate\">Certificats</option>\r\n                <option value=\"manual\">Manuels</option>\r\n                <option value=\"other\">Autres</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterStatus}\r\n                onChange={(e) => setFilterStatus(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                <option value=\"all\">Tous les statuts</option>\r\n                <option value=\"approved\">Approuv√©s</option>\r\n                <option value=\"pending\">En attente</option>\r\n                <option value=\"rejected\">Rejet√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Liste des documents */}\r\n        <div className=\"bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-900\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Document\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Type\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Taille\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Statut\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    T√©l√©chargements\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {filteredDocuments.map((document) => (\r\n                  <tr key={document.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        <FolderOpen className=\"h-5 w-5 text-blue-500 mr-3\" />\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {document.name}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {document.category}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className=\"text-sm text-gray-900 dark:text-white\">\r\n                        {getTypeText(document.type)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                      {document.size}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n                        <Calendar className=\"h-4 w-4 mr-1\" />\r\n                        {new Date(document.uploadDate).toLocaleDateString(",
    "lengthpdivdivdivdivc3": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <MapPin className=\"w-8 h-8 text-orange-500\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Capacit√© totale</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {containers.reduce((sum, c) => sum + c.totalCapacity, 0)} CBM\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Liste des conteneurs */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm overflow-hidden\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n            <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n              Liste des conteneurs\r\n            </h2>\r\n          </div>\r\n          \r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Nom\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Itin√©raire\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Capacit√©\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Statut\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    D√©part estim√©\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {containers.map((container) => {\r\n                  const progress = (container.usedCapacity / container.totalCapacity) * 100;\r\n                  const progressColor = getProgressColor(container);\r\n                  \r\n                  return (\r\n                    <tr key={container.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <Package className=\"w-5 h-5 text-gray-400 mr-3\" />\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                              {container.name}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                              ID: {container.id}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-white\">\r\n                          {container.departureLocation}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          ‚Üí {container.arrivalLocation}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-white\">\r\n                          {container.usedCapacity} / {container.totalCapacity} CBM\r\n                        </div>\r\n                        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1\">\r\n                          <div\r\n                            className={`${progressColor} h-2 rounded-full transition-all duration-300`}\r\n                            style={{ width: `${progress}%` }}\r\n                          ></div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                          container.status === ",
    "lengthpdivdivdivdivc4": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"w-8 h-8 text-gray-500\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Ferm√©s</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {containers.filter(c => c.status === ",
    "lengthpdivdivdivdivc5": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Approuv√©s</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {items.filter(i => i.status === ",
    "lengthpdivdivdivdivc6": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Livr√©es</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {orders.filter(o => o.status === ",
    "lengthpdivdivdivdivc7": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Livr√©es</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {shipments.filter(s => s.status === ",
    "lengthpdivdivdivdivc8": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Shield className=\"h-8 w-8 text-purple-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Priorit√© √©lev√©e</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {items.filter(i => i.priority === ",
    "lengthpdivdivdivdivc9": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Truck className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Exp√©di√©es</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {shipments.filter(s => s.status === ",
    "lengthpdivdivdivdivc10": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Truck className=\"h-8 w-8 text-orange-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Exp√©di√©es</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {orders.filter(o => o.status === ",
    "lengthpdivdivdivdivc11": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <XCircle className=\"h-8 w-8 text-red-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Rejet√©s</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {items.filter(i => i.status === ",
    "lengthpdivdivdivdivf": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterType}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setFilterType(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les types</option>\r\n                <option value=\"user\">Utilisateur</option>\r\n                <option value=\"product\">Produit</option>\r\n                <option value=\"review\">Avis</option>\r\n                <option value=\"message\">Message</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={filterStatus}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setFilterStatus(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les statuts</option>\r\n                <option value=\"pending\">En attente</option>\r\n                <option value=\"approved\">Approuv√©</option>\r\n                <option value=\"rejected\">Rejet√©</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Moderation Items */}\r\n        <div className=\"space-y-4\">\r\n          {loading ? (\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            filteredItems.map((item) => (\r\n              <div key={item.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    {/* Header */}\r\n                    <div className=\"flex items-center gap-3 mb-3\">\r\n                      <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getTypeColor(item.type)}`}>\r\n                        {getTypeIcon(item.type)}\r\n                        {item.type}\r\n                      </span>\r\n                      <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getPriorityColor(item.priority)}`}>\r\n                        {item.priority}\r\n                      </span>\r\n                      <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>\r\n                        {getStatusIcon(item.status)}\r\n                        {item.status}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {/* Content */}\r\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                      {item.title}\r\n                    </h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mb-3\">\r\n                      {item.description}\r\n                    </p>\r\n                    {item.content && (\r\n                      <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 mb-3\">\r\n                        <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                          {item.content}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Footer */}\r\n                    <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\r\n                      <span>Signal√© par: {item.reportedBy}</span>\r\n                      <span>{formatDate(item.reportedAt)}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Actions */}\r\n                  {item.status === ",
    "lengthpdivdivdivdivf1": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>        {/* Filters */}\r\n        <div className=\"bg-white dark:bg-gray-700 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 dark:text-gray-300\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par num√©ro de suivi, commande ou client...\"\r\n                  value={searchTerm}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-500 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={statusFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setStatusFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les statuts</option>\r\n                <option value=\"preparing\">Pr√©paration</option>\r\n                <option value=\"shipped\">Exp√©di√©e</option>\r\n                <option value=\"in_transit\">En transit</option>\r\n                <option value=\"delivered\">Livr√©e</option>\r\n                <option value=\"exception\">Exception</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Shipments Table */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {loading ? (\r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Exp√©dition\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Client\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Transporteur\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Statut\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Dates\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Valeur\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredShipments.map((shipment) => (\r\n                    <tr key={shipment.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {shipment.trackingNumber}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            Commande: {shipment.orderId}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {shipment.customerName}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 flex items-center gap-1\">\r\n                            <MapPin size={12} />\r\n                            {shipment.customerAddress.split(",
    "reducecurrentkeycurr": ").reduce((current, key) => current?.[key], obj);\r\n  }\r\n}\r\n\r\n// Services sp√©cialis√©s pour chaque collection\r\n\r\nexport interface FirestoreProduct {\r\n  id?: string;\r\n  name: Record<string, string>;\r\n  description: Record<string, string>;\r\n  price: { cny: number; unitCny: number };\r\n  images: string[];\r\n  category: string;\r\n  supplierId: string;\r\n  moq: number;\r\n  certifiedCE: boolean;\r\n  origin?: string;\r\n  material?: string;\r\n  brand?: string;\r\n  modelNumber?: string;\r\n  application?: string;\r\n  style?: string;\r\n  specifications?: Record<string, any>;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface FirestoreOrder {\r\n  id?: string;\r\n  userId: string;\r\n  supplierId: string;\r\n  products: Array<{\r\n    productId: string;\r\n    quantity: number;\r\n    price: number;\r\n  }>;\r\n  status: ",
    "reducecurrentkeycurr1": ").reduce((current, key) => current?.[key], obj);\r\n  }\r\n}\r\n\r\n// Services sp√©cialis√©s pour chaque collection\r\n\r\nexport interface FirestoreProduct {\r\n  id?: string;\r\n  name: Record<string, string>;\r\n  description: Record<string, string>;\r\n  price: { cny: number; unitCny: number };\r\n  images: string[];\r\n  category: string;\r\n  supplierId: string;\r\n  moq: number;\r\n  certifiedCE: boolean;\r\n  origin?: string;\r\n  material?: string;\r\n  brand?: string;\r\n  modelNumber?: string;\r\n  application?: string;\r\n  style?: string;\r\n  specifications?: Record<string, any>;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n}\r\n\r\nexport interface FirestoreOrder {\r\n  id?: string;\r\n  userId: string;\r\n  supplierId: string;\r\n  products: Array<{\r\n    productId: string;\r\n    quantity: number;\r\n    price: number;\r\n  }>;\r\n  status: ",
    "setmessagesenttruese": ");\n    setMessageSent(true);\n    \n    setTimeout(() => {\n      setMessageSent(false);\n      setShowContactForm(false);\n    }, 3000);\n  };\n\n  const handleSubmitSampleRequest = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!user || !message.trim()) return;\n    \n    const newMessage = {\n      id: `msg_${Date.now()}`,\n      supplierId: product.id,\n      supplierName: product.supplier.name,\n      content: `[${t(",
    "constsuccessusetoast": ");\n  const { success } = useToastContext();\n  const { t } = useLanguage();\n\n  const handleDeleteProduct = (productName: string) => {\n    if (window.confirm(`√ätes-vous s√ªr de vouloir supprimer le produit ",
    "constsuccessusetoast1": ");\n  const { success } = useToastContext();\n  const { t } = useLanguage();\n\n  const handleDeleteProduct = (productName: string) => {\n    if (window.confirm(`√ätes-vous s√ªr de vouloir supprimer le produit ",
    "constsuccessusetoast2": ");\n  const { success } = useToastContext();\n  const { t } = useLanguage();\n\n  const handleDeleteProduct = (productName: string) => {\n    if (window.confirm(`√ätes-vous s√ªr de vouloir supprimer le produit \"${productName}\" ?`)) {\n      // Ici, vous appelleriez votre API pour supprimer le produit\n      // Pour la d√©mo, on simule une suppression r√©ussie\n      success(`Le produit \"${productName}\" a √©t√© supprim√© avec succ√®s.`);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">{t(",
    "consterrorsstringlet": ");\r\n\r\n        const errors: string[] = [];\r\n        let deletedCount = 0;\r\n\r\n        try {\r\n            // 1. R√©cup√©rer tous les utilisateurs de Firestore\r\n            const usersRef = collection(db, ",
    "consterrorsstringlet1": ");\r\n\r\n        const errors: string[] = [];\r\n        let deletedCount = 0;\r\n\r\n        try {\r\n            // 1. R√©cup√©rer tous les utilisateurs de Firestore\r\n            const usersRef = collection(db, ",
    "redirigersidejaconne": ");\r\n\r\n    // Rediriger si d√©j√† connect√©\r\n    if (user && !loading) {\r\n        const redirectTo = getRedirectPath(user.role);\r\n        return <Navigate to={redirectTo} replace />;\r\n    }\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n\r\n        // Nettoyer les messages d",
    "redirigersidejaconne1": ");\r\n\r\n    // Rediriger si d√©j√† connect√©\r\n    if (user && !loading) {\r\n        const redirectTo = getRedirectPath(user.role);\r\n        return <Navigate to={redirectTo} replace />;\r\n    }\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n\r\n        // Nettoyer les messages d",
    "tryconstproductsawai": ");\r\n\r\n    try {\r\n        const products = await ProductService.getAllProducts();\r\n        console.log(`üìä ${products.length} produits r√©cup√©r√©s depuis Firebase`);\r\n\r\n        products.forEach((product, index) => {\r\n            console.log(`${index + 1}. ${product.name} - ${product.price}‚Ç¨ (MOQ: ${product.moq})`);\r\n        });\r\n\r\n        console.log(",
    "tryconstproductsawai1": ");\r\n\r\n    try {\r\n        const products = await ProductService.getAllProducts();\r\n        console.log(`üìä ${products.length} produits r√©cup√©r√©s depuis Firebase`);\r\n\r\n        products.forEach((product, index) => {\r\n            console.log(`${index + 1}. ${product.name} - ${product.price}‚Ç¨ (MOQ: ${product.moq})`);\r\n        });\r\n\r\n        console.log(",
    "tryconstproductsawai2": ");\r\n\r\n    try {\r\n        const products = await ProductService.getAllProducts();\r\n        console.log(`üìä ${products.length} produits r√©cup√©r√©s depuis Firebase`);\r\n\r\n        products.forEach((product, index) => {\r\n            console.log(`${index + 1}. ${product.name} - ${product.price}‚Ç¨ (MOQ: ${product.moq})`);\r\n        });\r\n\r\n        console.log(",
    "tryforleti0imockprod": ");\r\n\r\n    try {\r\n        for (let i = 0; i < mockProductsData.length; i++) {\r\n            const product = mockProductsData[i];\r\n            console.log(`üì¶ Migration du produit ${i + 1}/${mockProductsData.length}: ${product.name}`);\r\n\r\n            const productId = await ProductService.addProduct(product);\r\n            console.log(`‚úÖ Produit migr√© avec l",
    "tryforleti0imockprod1": ");\r\n\r\n    try {\r\n        for (let i = 0; i < mockProductsData.length; i++) {\r\n            const product = mockProductsData[i];\r\n            console.log(`üì¶ Migration du produit ${i + 1}/${mockProductsData.length}: ${product.name}`);\r\n\r\n            const productId = await ProductService.addProduct(product);\r\n            console.log(`‚úÖ Produit migr√© avec l",
    "constcategorycategor": ");\r\n\r\n  const category = categoryId ? categoryData[categoryId] : null;\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Cat√©gorie non trouv√©e</h1>\r\n          <p className=\"text-gray-600 mb-8\">La cat√©gorie que vous recherchez n",
    "consthandlechangeere": ");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    // Ici, vous pouvez ajouter la logique de recherche\r\n    console.log(`Recherche : ${query}`);\r\n  };\r\n\r\n  return (\r\n    <div className=",
    "1supprimertouslespro": ");\r\n    \r\n    // 1. Supprimer tous les produits existants\r\n    const existingProducts = await productService.getAllProducts();\r\n    console.log(`üóëÔ∏è Suppression de ${existingProducts.length} produits existants...`);\r\n    \r\n    for (const product of existingProducts) {\r\n      if (product.id) {\r\n        await productService.deleteProduct(product.id);\r\n      }\r\n    }\r\n    \r\n    // 2. R√©initialiser avec les donn√©es de d√©monstration\r\n    console.log(",
    "constproductsawaitpr": ");\r\n    \r\n    const products = await productService.getAllProducts();\r\n    let cleanedCount = 0;\r\n    \r\n    for (const product of products) {\r\n      // V√©rifier les champs obligatoires\r\n      if (!product.name || !product.price || !product.brand || !product.category) {\r\n        console.log(`üóëÔ∏è Suppression du produit corrompu: ${product.id}`);\r\n        if (product.id) {\r\n          await productService.deleteProduct(product.id);\r\n          cleanedCount++;\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log(`‚úÖ ${cleanedCount} produits corrompus supprim√©s`);\r\n    return { success: true, cleanedCount };\r\n    \r\n  } catch (error) {\r\n    console.error(",
    "constnewaccountsawai": ");\r\n            const newAccounts = await createNewUsers();\r\n\r\n            // R√©sum√© final\r\n            setResults(prev => prev + `\\nüìä === R√âSUM√â FINAL ===\\n`);\r\n            setResults(prev => prev + `üóëÔ∏è Utilisateurs supprim√©s: ${deleteResult.deletedCount}\\n`);\r\n            setResults(prev => prev + `‚úÖ Utilisateurs cr√©√©s: ${newAccounts.length}\\n`);\r\n            setResults(prev => prev + `\\nüéâ R√©initialisation termin√©e avec succ√®s !\\n`);\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsResetting(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateEssentials = async () => {\r\n        setIsCreating(true);\r\n        setResults(",
    "constnewaccountsawai1": ");\r\n            const newAccounts = await createNewUsers();\r\n\r\n            // R√©sum√© final\r\n            setResults(prev => prev + `\\nüìä === R√âSUM√â FINAL ===\\n`);\r\n            setResults(prev => prev + `üóëÔ∏è Utilisateurs supprim√©s: ${deleteResult.deletedCount}\\n`);\r\n            setResults(prev => prev + `‚úÖ Utilisateurs cr√©√©s: ${newAccounts.length}\\n`);\r\n            setResults(prev => prev + `\\nüéâ R√©initialisation termin√©e avec succ√®s !\\n`);\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsResetting(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateEssentials = async () => {\r\n        setIsCreating(true);\r\n        setResults(",
    "constnewaccountsawai2": ");\r\n            const newAccounts = await createNewUsers();\r\n\r\n            // R√©sum√© final\r\n            setResults(prev => prev + `\\nüìä === R√âSUM√â FINAL ===\\n`);\r\n            setResults(prev => prev + `üóëÔ∏è Utilisateurs supprim√©s: ${deleteResult.deletedCount}\\n`);\r\n            setResults(prev => prev + `‚úÖ Utilisateurs cr√©√©s: ${newAccounts.length}\\n`);\r\n            setResults(prev => prev + `\\nüéâ R√©initialisation termin√©e avec succ√®s !\\n`);\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsResetting(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateEssentials = async () => {\r\n        setIsCreating(true);\r\n        setResults(",
    "constsnapshotawaitge": ");\r\n            const snapshot = await getDocs(usersRef);\r\n\r\n            console.log(`üìä ${snapshot.size} utilisateurs trouv√©s dans Firestore`);\r\n\r\n            // 2. Supprimer tous les documents Firestore\r\n            const deletePromises = snapshot.docs.map(async (userDoc) => {\r\n                try {\r\n                    await deleteDoc(userDoc.ref);\r\n                    deletedCount++;\r\n                    console.log(`‚úÖ Utilisateur Firestore supprim√©: ${userDoc.id}`);\r\n                } catch (error: any) {\r\n                    const errorMsg = `Erreur suppression Firestore ${userDoc.id}: ${error.message}`;\r\n                    errors.push(errorMsg);\r\n                    console.error(",
    "constsnapshotawaitge1": ");\r\n            const snapshot = await getDocs(usersRef);\r\n\r\n            console.log(`üìä ${snapshot.size} utilisateurs trouv√©s dans Firestore`);\r\n\r\n            // 2. Supprimer tous les documents Firestore\r\n            const deletePromises = snapshot.docs.map(async (userDoc) => {\r\n                try {\r\n                    await deleteDoc(userDoc.ref);\r\n                    deletedCount++;\r\n                    console.log(`‚úÖ Utilisateur Firestore supprim√©: ${userDoc.id}`);\r\n                } catch (error: any) {\r\n                    const errorMsg = `Erreur suppression Firestore ${userDoc.id}: ${error.message}`;\r\n                    errors.push(errorMsg);\r\n                    console.error(",
    "constsnapshotawaitge2": ");\r\n            const snapshot = await getDocs(usersRef);\r\n\r\n            console.log(`üìä ${snapshot.size} utilisateurs trouv√©s dans Firestore`);\r\n\r\n            // 2. Supprimer tous les documents Firestore\r\n            const deletePromises = snapshot.docs.map(async (userDoc) => {\r\n                try {\r\n                    await deleteDoc(userDoc.ref);\r\n                    deletedCount++;\r\n                    console.log(`‚úÖ Utilisateur Firestore supprim√©: ${userDoc.id}`);\r\n                } catch (error: any) {\r\n                    const errorMsg = `Erreur suppression Firestore ${userDoc.id}: ${error.message}`;\r\n                    errors.push(errorMsg);\r\n                    console.error(",
    "throwerrmettreajouru": ");\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    // Mettre √† jour une carte\r\n    const updateCard = async (cardId: string, updates: Partial<SavedBusinessCard>) => {\r\n        try {\r\n            const updatedCard = await businessCardService.updateCard(cardId, updates);\r\n            if (updatedCard) {\r\n                setCards(prev => prev.map(card =>\r\n                    card.id === cardId ? updatedCard : card\r\n                ));\r\n            }\r\n            return updatedCard;\r\n        } catch (err) {\r\n            setError(",
    "throwerrmettreajouru1": ");\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    // Mettre √† jour une carte\r\n    const updateCard = async (cardId: string, updates: Partial<SavedBusinessCard>) => {\r\n        try {\r\n            const updatedCard = await businessCardService.updateCard(cardId, updates);\r\n            if (updatedCard) {\r\n                setCards(prev => prev.map(card =>\r\n                    card.id === cardId ? updatedCard : card\r\n                ));\r\n            }\r\n            return updatedCard;\r\n        } catch (err) {\r\n            setError(",
    "throwerrsupprimerune": ");\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    // Supprimer une carte\r\n    const deleteCard = async (cardId: string) => {\r\n        try {\r\n            const success = await businessCardService.deleteCard(cardId);\r\n            if (success) {\r\n                setCards(prev => prev.filter(card => card.id !== cardId));\r\n            }\r\n            return success;\r\n        } catch (err) {\r\n            setError(",
    "ahrefurladownloadchi": ");\r\n        a.href = url;\r\n        a.download = `chine-ton-usine-credentials-${Date.now()}.txt`;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=",
    "ahrefurladownloadchi1": ");\r\n        a.href = url;\r\n        a.download = `chine-ton-usine-credentials-${Date.now()}.txt`;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n                <div className=\"text-center\">\r\n                    <RefreshCw className=\"h-8 w-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-600\">Chargement des donn√©es...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 py-8\">\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                {/* En-t√™te */}\r\n                <div className=\"mb-8\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\r\n                                <Shield className=\"h-8 w-8 text-blue-600 mr-3\" />\r\n                                Gestion des Utilisateurs - Production\r\n                            </h1>\r\n                            <p className=\"mt-2 text-gray-600\">\r\n                                Interface s√©curis√©e pour la gestion des comptes utilisateurs\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flex space-x-3\">\r\n                            <button\r\n                                onClick={downloadCredentials}\r\n                                className=\"flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n                            >\r\n                                <Download className=\"h-4 w-4 mr-2\" />\r\n                                T√©l√©charger les identifiants\r\n                            </button>\r\n                            <button\r\n                                onClick={loadSummary}\r\n                                disabled={loading}\r\n                                className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\r\n                            >\r\n                                <RefreshCw className={`h-4 w-4 mr-2 ${loading ? ",
    "constproductbyidawai": ");\r\n        const productById = await productService.getProductById(firstProduct.id);\r\n        console.log(`‚úÖ Produit r√©cup√©r√©:`, productById?.name);\r\n      }\r\n    }\r\n    \r\n    console.log(",
    "constproductbyidawai1": ");\r\n        const productById = await productService.getProductById(firstProduct.id);\r\n        console.log(`‚úÖ Produit r√©cup√©r√©:`, productById?.name);\r\n      }\r\n    }\r\n    \r\n    console.log(",
    "setcreatedaccountstr": ");\r\n        setCreatedAccounts([]);\r\n\r\n        try {\r\n            // √âtape 1: Supprimer tous les utilisateurs\r\n            setResults(prev => prev + ",
    "setiscreatingfalsere": ");\r\n        setIsCreating(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n                <RefreshCw className=\"h-6 w-6 text-blue-500\" />\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">R√©initialisation des Utilisateurs</h2>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                <Button\r\n                    onClick={handleFullReset}\r\n                    disabled={isResetting || isDeleting || isCreating}\r\n                    className=\"flex items-center gap-2 bg-red-500 hover:bg-red-600 text-white\"\r\n                >\r\n                    <RefreshCw className={`h-4 w-4 ${isResetting ? ",
    "rechercherdesproduit": ");\r\n        }\r\n    }\r\n\r\n    // Rechercher des produits\r\n    static async searchProducts(searchTerm: string): Promise<ProductListItem[]> {\r\n        try {\r\n            // Recherche simple par nom (Firebase ne supporte pas la recherche full-text native)\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION),\r\n                where(",
    "supprimerdefinitivem": ");\r\n        }\r\n    }\r\n\r\n    // Supprimer d√©finitivement un produit\r\n    static async permanentDeleteProduct(productId: string): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, PRODUCTS_COLLECTION, productId);\r\n            await deleteDoc(docRef);\r\n        } catch (error) {\r\n            console.error(",
    "supprimerdefinitivem1": ");\r\n        }\r\n    }\r\n\r\n    // Supprimer d√©finitivement un produit\r\n    static async permanentDeleteProduct(productId: string): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, PRODUCTS_COLLECTION, productId);\r\n            await deleteDoc(docRef);\r\n        } catch (error) {\r\n            console.error(",
    "supprimerunproduitso": ");\r\n        }\r\n    }\r\n\r\n    // Supprimer un produit (soft delete)\r\n    static async deleteProduct(productId: string): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, PRODUCTS_COLLECTION, productId);\r\n            await updateDoc(docRef, {\r\n                active: false,\r\n                updatedAt: new Date(),\r\n            });\r\n        } catch (error) {\r\n            console.error(",
    "linkhrefdataapplicat": ");\r\n      link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n      link.download = document.name;\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    }\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = async (document: Document) => {\r\n    if (confirm(t(",
    "linkhrefdataapplicat1": ");\r\n      link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n      link.download = document.name;\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    }\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = async (document: Document) => {\r\n    if (confirm(t(",
    "readerreadasdataurlf": ");\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleImageSelect = async (files: FileList) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    // V√©rifier le nombre maximum d",
    "readerreadasdataurlf1": ");\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleImageSelect = async (files: FileList) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    // V√©rifier le nombre maximum d",
    "returnthissaveproduc": ");\r\n      return [];\r\n    }\r\n\r\n    this.saveProducts(initialProducts);\r\n    return initialProducts;\r\n  }\r\n  /**\r\n   * Sauvegarder la liste compl√®te des produits\r\n   *",
    "returnthissaveproduc1": ");\r\n      return [];\r\n    }\r\n\r\n    this.saveProducts(initialProducts);\r\n    return initialProducts;\r\n  }\r\n  /**\r\n   * Sauvegarder la liste compl√®te des produits\r\n   *",
    "returnthissaveproduc2": ");\r\n      return [];\r\n    }\r\n\r\n    this.saveProducts(initialProducts);\r\n    return initialProducts;\r\n  }\r\n  /**\r\n   * Sauvegarder la liste compl√®te des produits\r\n   */\r\n  saveProducts(products: Product[]): void {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(products));\r\n      // Notifier tous les composants d",
    "constisloadedsetislo": ");\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    // Simuler le chargement des cartes sauvegard√©es\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setTimeout(() => setIsLoaded(true), 300);\r\n        }\r\n    }, [loading]);\r\n\r\n    // Filtrer les cartes par recherche\r\n    const filteredCards = cards.filter(card =>\r\n        card.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.companyName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.contactPerson.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // Cr√©er une nouvelle carte\r\n    const handleCreateNew = () => {\r\n        setEditingCard(null);\r\n        setIsEditorOpen(true);\r\n    };\r\n\r\n    ",
    "constisloadedsetislo1": ");\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    // Simuler le chargement des cartes sauvegard√©es\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setTimeout(() => setIsLoaded(true), 300);\r\n        }\r\n    }, [loading]);\r\n\r\n    // Filtrer les cartes par recherche\r\n    const filteredCards = cards.filter(card =>\r\n        card.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.companyName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.contactPerson.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // Cr√©er une nouvelle carte\r\n    const handleCreateNew = () => {\r\n        setEditingCard(null);\r\n        setIsEditorOpen(true);\r\n    };\r\n\r\n    // √âditer une carte existante\r\n    const handleEdit = (card: SavedBusinessCard) => {\r\n        setEditingCard(card);\r\n        setIsEditorOpen(true);\r\n    };\r\n\r\n    // Sauvegarder une carte\r\n    const handleSave = async (data: BusinessCardData) => {\r\n        try {\r\n            if (editingCard) {\r\n                // Mise √† jour d",
    "constisloadedsetislo2": ");\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    // Simuler le chargement des cartes sauvegard√©es\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setTimeout(() => setIsLoaded(true), 300);\r\n        }\r\n    }, [loading]);\r\n\r\n    // Filtrer les cartes par recherche\r\n    const filteredCards = cards.filter(card =>\r\n        card.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.companyName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        card.data.contactPerson.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    // Cr√©er une nouvelle carte\r\n    const handleCreateNew = () => {\r\n        setEditingCard(null);\r\n        setIsEditorOpen(true);\r\n    };\r\n\r\n    // √âditer une carte existante\r\n    const handleEdit = (card: SavedBusinessCard) => {\r\n        setEditingCard(card);\r\n        setIsEditorOpen(true);\r\n    };\r\n\r\n    // Sauvegarder une carte\r\n    const handleSave = async (data: BusinessCardData) => {\r\n        try {\r\n            if (editingCard) {\r\n                // Mise √† jour d",
    "constpreviewmodesetp": ");\r\n    const [previewMode, setPreviewMode] = useState(false);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // Mettre √† jour les donn√©es de la carte\r\n    const updateCardData = (updates: Partial<BusinessCardData>) => {\r\n        setCardData(prev => ({ ...prev, ...updates }));\r\n    };\r\n\r\n    // Sauvegarder la carte\r\n    const handleSave = async () => {\r\n        setIsSaving(true);\r\n        try {\r\n            if (onSave) {\r\n                await onSave(cardData);\r\n            }\r\n            // Simuler une sauvegarde\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // T√©l√©charger comme image (simul√©)\r\n    const handleDownload = () => {\r\n        ",
    "constpreviewmodesetp1": ");\r\n    const [previewMode, setPreviewMode] = useState(false);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    // Mettre √† jour les donn√©es de la carte\r\n    const updateCardData = (updates: Partial<BusinessCardData>) => {\r\n        setCardData(prev => ({ ...prev, ...updates }));\r\n    };\r\n\r\n    // Sauvegarder la carte\r\n    const handleSave = async () => {\r\n        setIsSaving(true);\r\n        try {\r\n            if (onSave) {\r\n                await onSave(cardData);\r\n            }\r\n            // Simuler une sauvegarde\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // T√©l√©charger comme image (simul√©)\r\n    const handleDownload = () => {\r\n        // En production, ici on convertirait le composant en image\r\n        alert(",
    "constshowfilterssets": ");\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n    // Filtrage des items bas√© sur la recherche\r\n    const filteredItems = useMemo(() => {\r\n        if (!debouncedSearchTerm || searchFields.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item =>\r\n            searchFields.some(field => {\r\n                const fieldValue = item[field];\r\n                return fieldValue &&\r\n                    String(fieldValue).toLowerCase().includes(debouncedSearchTerm.toLowerCase());\r\n            })\r\n        );\r\n    }, [items, debouncedSearchTerm, searchFields]);\r\n\r\n    ",
    "linkhrefdataapplicat2": ");\r\n    link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n    link.download = document.name;\r\n    window.document.body.appendChild(link);\r\n    link.click();\r\n    window.document.body.removeChild(link);\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = (documentId: string) => {\r\n    if (confirm(t(",
    "linkhrefdataapplicat3": ");\r\n    link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n    link.download = document.name;\r\n    window.document.body.appendChild(link);\r\n    link.click();\r\n    window.document.body.removeChild(link);\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = (documentId: string) => {\r\n    if (confirm(t(",
    "thissaveproductsinit": ");\r\n    this.saveProducts(initialProducts);\r\n  }\r\n  deleteProduct(productId: string): void {\r\n    const currentProducts = this.getAllProducts();\r\n    const updatedProducts = currentProducts.filter(p => p.id !== productId);\r\n    this.saveProducts(updatedProducts);\r\n  }\r\n\r\n  /**\r\n   * Obtenir les produits d",
    "consthandlesaveprofi": ");\r\n    }\r\n  };\r\n\r\n  const handleSaveProfile = async () => {\r\n    try {\r\n      await updateUser(editedUser);\r\n      setIsEditing(false);\r\n      showNotification(",
    "reinitialiserconstha": ");\r\n    };\r\n\r\n    // R√©initialiser\r\n    const handleReset = () => {\r\n        setCardData(defaultBusinessCardData);\r\n    };\r\n\r\n    const colorPresets = [\r\n        { name: ",
    "verifiersileproduite": ");\r\n    };\r\n\r\n    // V√©rifier si le produit est d√©j√† dans le devis\r\n    const isProductInQuote = getItemQuantity(product.id!) > 0;\r\n\r\n    return (\r\n        <div className=",
    "returnuserisloadingi": ");\r\n    };\r\n\r\n    return {\r\n        user,\r\n        isLoading,\r\n        isAuthenticated: !!user,\r\n        hasPermission,\r\n        isSupplierOwner,\r\n        canEditSupplierProfile,\r\n        canManageBusinessCards\r\n    };\r\n};\r\n\r\n// Hook pour les donn√©es du fournisseur actuel\r\nexport const useSupplierData = (supplierId: string) => {\r\n    const { user, canEditSupplierProfile, canManageBusinessCards } = useAuth();\r\n\r\n    const isOwner = user?.type === ",
    "returnuserisloadingi1": ");\r\n    };\r\n\r\n    return {\r\n        user,\r\n        isLoading,\r\n        isAuthenticated: !!user,\r\n        hasPermission,\r\n        isSupplierOwner,\r\n        canEditSupplierProfile,\r\n        canManageBusinessCards\r\n    };\r\n};\r\n\r\n// Hook pour les donn√©es du fournisseur actuel\r\nexport const useSupplierData = (supplierId: string) => {\r\n    const { user, canEditSupplierProfile, canManageBusinessCards } = useAuth();\r\n\r\n    const isOwner = user?.type === ",
    "returnuserisloadingi2": ");\r\n    };\r\n\r\n    return {\r\n        user,\r\n        isLoading,\r\n        isAuthenticated: !!user,\r\n        hasPermission,\r\n        isSupplierOwner,\r\n        canEditSupplierProfile,\r\n        canManageBusinessCards\r\n    };\r\n};\r\n\r\n// Hook pour les donn√©es du fournisseur actuel\r\nexport const useSupplierData = (supplierId: string) => {\r\n    const { user, canEditSupplierProfile, canManageBusinessCards } = useAuth();\r\n\r\n    const isOwner = user?.type === ",
    "donneesdescategories": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "donneesdescategories1": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "donneesdescategories2": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "donneesdescategories3": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "donneesdescategories4": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "donneesdescategories5": ");\r\n  // Donn√©es des cat√©gories de produits\r\n  const brandCategories = [\r\n    { name: ",
    "constshowaddmodalset": ");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const { success, error } = useToastContext();\r\n\r\n  // Sauvegarder automatiquement dans localStorage ET synchroniser avec le service global\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(productsList));\r\n      // Synchroniser avec le service global pour que les produits apparaissent dans la recherche\r\n      productsService.syncSupplierProducts(productsList);\r\n    } catch (error) {\r\n      console.error(",
    "constshowaddmodalset1": ");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const { success, error } = useToastContext();\r\n\r\n  // Sauvegarder automatiquement dans localStorage ET synchroniser avec le service global\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(productsList));\r\n      // Synchroniser avec le service global pour que les produits apparaissent dans la recherche\r\n      productsService.syncSupplierProducts(productsList);\r\n    } catch (error) {\r\n      console.error(",
    "constshowaddmodalset2": ");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\r\n  const { success, error } = useToastContext();\r\n  const { t } = useLanguage();\r\n\r\n  // Sauvegarder automatiquement dans localStorage ET synchroniser avec le service global\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(productsList));\r\n      // Synchroniser avec le service global pour que les produits apparaissent dans la recherche\r\n      productsService.syncSupplierProducts(productsList);\r\n    } catch (error) {\r\n      console.error(",
    "constmessagesendrefu": ");\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const { t } = useLanguage();\r\n  const { addNotification } = useNotification();\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: ",
    "returnsectionclassna": ");\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-[#181f2c] text-white py-10 rounded-xl\">\r\n      <div className=\"text-center mb-4\">\r\n        <h2 className=\"text-2xl font-bold mb-1\">Explorez nos cat√©gories</h2>\r\n        <div className=\"text-gray-400 mb-6\">Des millions d",
    "etatsspecifiquesauxf": ");  // √âtats sp√©cifiques aux fournisseurs\r\n  const [companyName, setCompanyName] = useState(",
    "etatsspecifiquesauxf1": ");  // √âtats sp√©cifiques aux fournisseurs\r\n  const [companyName, setCompanyName] = useState(",
    "etatsspecifiquesauxf2": ");  // √âtats sp√©cifiques aux fournisseurs\r\n  const [companyName, setCompanyName] = useState(",
    "0divdivtdtdclassname": ")[0]}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-900 dark:text-white font-medium\">\r\n                            {shipment.carrier}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {shipment.service}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(shipment.status)}`}>\r\n                          {getStatusIcon(shipment.status)}\r\n                          {getStatusText(shipment.status)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                        <div className=\"space-y-1\">\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <Calendar size={12} />\r\n                            Cr√©√©e: {formatDate(shipment.createdAt)}\r\n                          </div>\r\n                          {shipment.shippedAt && (\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <Truck size={12} />\r\n                              Exp√©di√©e: {formatDate(shipment.shippedAt)}\r\n                            </div>\r\n                          )}\r\n                          {shipment.estimatedDelivery && (\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <Clock size={12} />\r\n                              Livraison pr√©vue: {formatDate(shipment.estimatedDelivery)}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {formatPrice(shipment.value)}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {shipment.weight} kg\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Button\r\n                          onClick={() => console.log(",
    "spandivclassnamew10h": ")}\n                  </span>\n                  <div className=\"w-10 h-10 bg-black bg-opacity-10 rounded-full flex items-center justify-center group-hover:bg-opacity-30 transition-all duration-300 transform group-hover:scale-125 group-hover:rotate-12 active:scale-90\">\n                    <ShoppingBag className=\"w-5 h-5 text-gray-700 transition-transform duration-300 group-hover:scale-110\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Section \"√áa va vous plaire\" */}\n          <div className={`mt-20 text-center transform transition-all duration-1000 delay-1500 ${\n            isLoaded ? ",
    "spandivclassnamew10h1": ")}\n                  </span>\n                  <div className=\"w-10 h-10 bg-black bg-opacity-10 rounded-full flex items-center justify-center group-hover:bg-opacity-30 transition-all duration-300 transform group-hover:scale-125 group-hover:rotate-12 active:scale-90\">\n                    <ShoppingBag className=\"w-5 h-5 text-gray-700 transition-transform duration-300 group-hover:scale-110\" />\n                  </div>\n                </div>\n              </div>            </div>          </div>\n\n          {/* Section \"√áa va vous plaire\" */}\n          <div className={`mt-20 text-center transform transition-all duration-1000 delay-1500 ${isLoaded ? ",
    "buttondivmessagesent": ")}\n                </Button>\n              </div>\n              {messageSent && <p className=",
    "buttondivmessagesent1": ")}\n                </Button>\n              </div>\n              {messageSent && <p className=",
    "buttonlinkdivdivdivd": ")}\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section avantages rapides */}\n      <div className=\"bg-gradient-to-r from-blue-600 via-blue-500 to-orange-500 dark:from-blue-700 dark:via-blue-600 dark:to-orange-600 py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-3 gap-8 text-center\">\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <ShoppingBag className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Livraison Rapide</h3>\n              <p className=\"text-white/90 font-reading\">Exp√©dition sous 24-48h partout en France</p>\n            </div>\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <Wallet className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Paiement S√©curis√©</h3>\n              <p className=\"text-white/90 font-reading\">Transactions prot√©g√©es et garanties</p>\n            </div>\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <Users className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Support 24/7</h3>\n              <p className=\"text-white/90 font-reading\">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e \"Comment √ßa marche ?\" + Recommandations */}\n      <div className=\"bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-800 dark:to-gray-900 pt-16 md:pt-24 pb-16 md:pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 animate-fade-in-up font-display\">\n              {t(",
    "pdivdivgerezfacileme": ")}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement */}\n            <div className=\"flex items-start space-x-4 group animate-slide-in-right\" style={{ animationDelay: ",
    "pdivdivgerezfacileme1": ")}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement */}\n            <div className=\"flex items-start space-x-4 group animate-slide-in-right\" style={{ animationDelay: ",
    "pdivdivdivdivdivsect": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e */}\n      <div className=\"bg-gradient-to-br from-blue-50 to-orange-50 dark:from-gray-800 dark:to-gray-900 py-16 md:py-24 relative overflow-hidden\">\n        {/* √âl√©ments d√©coratifs de fond */}\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"absolute top-20 left-10 w-20 h-20 bg-blue-400 rounded-full blur-xl\"></div>\n          <div className=\"absolute bottom-20 right-10 w-32 h-32 bg-orange-400 rounded-full blur-xl\"></div>\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 bg-gradient-to-r from-blue-400 to-orange-400 rounded-full blur-2xl\"></div>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10\">\n          <div className=\"mb-8\">\n            <div className=\"inline-flex items-center bg-gradient-to-r from-blue-100 to-orange-100 dark:from-blue-900 dark:to-orange-900 px-4 py-2 rounded-full mb-4\">\n              <Users className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-2\" />\n              <span className=\"text-sm font-semibold text-blue-600 dark:text-blue-400 uppercase tracking-wider\">\n                R√©seau global\n              </span>\n            </div>\n          </div>\n\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4 font-display\">\n            {t(",
    "pdivdivdivdivdivsect1": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e */}\n      <div className=\"bg-gradient-to-br from-blue-50 to-orange-50 dark:from-gray-800 dark:to-gray-900 py-16 md:py-24 relative overflow-hidden\">\n        {/* √âl√©ments d√©coratifs de fond */}\n        <div className=\"absolute inset-0 opacity-10\">\n          <div className=\"absolute top-20 left-10 w-20 h-20 bg-blue-400 rounded-full blur-xl\"></div>\n          <div className=\"absolute bottom-20 right-10 w-32 h-32 bg-orange-400 rounded-full blur-xl\"></div>\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 bg-gradient-to-r from-blue-400 to-orange-400 rounded-full blur-2xl\"></div>\n        </div>\n        \n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10\">\n          <div className=\"mb-8\">\n            <div className=\"inline-flex items-center bg-gradient-to-r from-blue-100 to-orange-100 dark:from-blue-900 dark:to-orange-900 px-4 py-2 rounded-full mb-4\">\n              <Users className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mr-2\" />\n              <span className=\"text-sm font-semibold text-blue-600 dark:text-blue-400 uppercase tracking-wider\">\n                R√©seau global\n              </span>\n            </div>\n          </div>\n          \n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4 font-display\">\n            {t(",
    "buttonlinkdivclassna": ")}\n              </Button>\n            </Link>\n            <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\n              <div className=\"flex -space-x-2 mr-3\">\n                <div className=\"w-8 h-8 bg-blue-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-orange-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-green-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-purple-400 rounded-full border-2 border-white flex items-center justify-center text-xs font-bold text-white\">\n                  +\n                </div>\n              </div>\n              <span className=\"font-reading\">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© */}\n      <div className=\"bg-white dark:bg-gray-900 py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-6 font-display\">\n              {t(",
    "buttonlinkdivclassna1": ")}\n              </Button>\n            </Link>\n            <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\n              <div className=\"flex -space-x-2 mr-3\">\n                <div className=\"w-8 h-8 bg-blue-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-orange-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-green-400 rounded-full border-2 border-white\"></div>\n                <div className=\"w-8 h-8 bg-purple-400 rounded-full border-2 border-white flex items-center justify-center text-xs font-bold text-white\">\n                  +\n                </div>\n              </div>\n              <span className=\"font-reading\">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© */}\n      <div className=\"bg-white dark:bg-gray-900 py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-6 font-display\">\n              {t(",
    "buttonlinkdivsection": ")}\n              </Button>\n            </Link>\n          </div>\n\n          {/* Section Recommandations int√©gr√©e */}\n          <ProductRecommendations />\n        </div>\n      </div>\n\n      {/* Optimisez vos commandes */}\n      <div className=\"bg-white dark:bg-gray-900 pt-0 pb-16 md:pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-6 font-display\">\n              {t(",
    "buttonlinkdivdivdivd1": ")}\n              </button>\n            </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section avantages rapides */}\n      <div className=\"bg-gradient-to-r from-blue-600 via-blue-500 to-orange-500 dark:from-blue-700 dark:via-blue-600 dark:to-orange-600 py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-3 gap-8 text-center\">\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <ShoppingBag className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Livraison Rapide</h3>\n              <p className=\"text-white/90 font-reading\">Exp√©dition sous 24-48h partout en France</p>\n            </div>\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <Wallet className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Paiement S√©curis√©</h3>\n              <p className=\"text-white/90 font-reading\">Transactions prot√©g√©es et garanties</p>\n            </div>\n            <div className=\"group\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                <Users className=\"w-8 h-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-white mb-2 font-display\">Support 24/7</h3>\n              <p className=\"text-white/90 font-reading\">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e \"Comment √ßa marche ?\" + Recommandations */}\n      <div className=\"bg-gradient-to-br from-gray-50 to-blue-50 dark:from-gray-800 dark:to-gray-900 pt-16 md:pt-24 pb-16 md:pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6 animate-fade-in-up font-display\">\n              {t(",
    "pdivetape2divclassna": ")}\n              </p>\n            </div>\n\n            {/* √âtape 2 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "pdivetape2divclassna1": ")}\n              </p>\n            </div>\n\n            {/* √âtape 2 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "pdivetape3divclassna": ")}\n              </p>\n            </div>\n\n            {/* √âtape 3 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "pdivetape3divclassna1": ")}\n              </p>\n            </div>\n\n            {/* √âtape 3 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "pdiv3etapesprincipal": ")}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales */}\n          <div className=\"grid md:grid-cols-3 gap-8 md:gap-12 mb-16\">\n            {/* √âtape 1 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "pdiv3etapesprincipal1": ")}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales */}\n          <div className=\"grid md:grid-cols-3 gap-8 md:gap-12 mb-16\">\n            {/* √âtape 1 */}\n            <div className=\"text-center group animate-fade-in-scale\" style={{ animationDelay: ",
    "classnamepx4py2bgblu": ")}\r\n                                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\r\n                            >\r\n                                <Copy size={16} />\r\n                                Copier\r\n                            </button>\r\n                            <button className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center gap-2\">\r\n                                <Share2 size={16} />\r\n                                Partager\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Liste des filleuls r√©cents */}\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                    Filleuls r√©cents\r\n                </h3>\r\n\r\n                <div className=\"space-y-3\">\r\n                    {recentReferrals.map((referral) => (\r\n                        <div\r\n                            key={referral.id}\r\n                            className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n                        >\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <div className=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center\">\r\n                                    <span className=\"text-white font-medium\">\r\n                                        {referral.name.split(",
    "onclickhandledeleted": ")}\r\n                          onClick={() => handleDeleteDocument(document)}\r\n                          className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredDocuments.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <FileText className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Aucun document trouv√©</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal d",
    "onclickhandledeleted1": ")}\r\n                          onClick={() => handleDeleteDocument(document.id)}\r\n                          className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredDocuments.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <FileText className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">Aucun document trouv√©</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Modal d",
    "expedierbuttondivtdt": ")}\r\n                        >\r\n                          Exp√©dier\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal d√©tails commande */}\r\n      {selectedOrder && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-2xl max-h-96 overflow-y-auto\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">\r\n              D√©tails de la commande {selectedOrder.id}\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">Client</h4>\r\n                <p className=\"text-gray-600\">{selectedOrder.customerName}</p>\r\n                <p className=\"text-gray-600\">{selectedOrder.shippingAddress}</p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">{t(",
    "classnamewfullpx3py2": ")}\r\n                        className=\"w-full px-3 py-2 bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800 text-red-700 dark:text-red-300 rounded-lg text-sm transition-colors\"\r\n                      >\r\n                        Demander la suppression\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Param√®tres de confidentialit√© */}\r\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-xl p-6\">\r\n                    <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2\">\r\n                      <Settings size={18} />\r\n                      Param√®tres de confidentialit√©\r\n                    </h4>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">Profil public</p>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">Votre profil est visible par les autres utilisateurs</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification(",
    "divtdtdclassnamepx6p": ")}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        {getStatusIcon(document.status)}\r\n                        <span className=\"ml-2 text-sm text-gray-900 dark:text-white\">\r\n                          {getStatusText(document.status)}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                      {document.downloadCount}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      <div className=\"flex items-center justify-end space-x-2\">\r\n                        <button \r\n                          title=\"Pr√©visualiser\"\r\n                          className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                        >\r\n                          <Eye className=\"h-4 w-4\" />\r\n                        </button>                        <button \r\n                          title={t(",
    "divtdtdclassnamepx6p1": ")}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center\">\r\n                        {getStatusIcon(document.status)}\r\n                        <span className=\"ml-2 text-sm text-gray-900 dark:text-white\">\r\n                          {getStatusText(document.status)}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                      {document.downloadCount}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      <div className=\"flex items-center justify-end space-x-2\">\r\n                        <button \r\n                          title=\"Pr√©visualiser\"\r\n                          className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                        >\r\n                          <Eye className=\"h-4 w-4\" />\r\n                        </button>                        <button \r\n                          title={t(",
    "valuecertificationso": ")}\r\n                      value={certifications}\r\n                      onChange={(e) => setCertifications(e.target.value)}\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* M√©thodes de contr√¥le qualit√© */}\r\n                <div className=\"auth-form-group\">\r\n                  <div className=\"auth-input-wrapper\">\r\n                    <textarea\r\n                      className=\"auth-input auth-textarea\"\r\n                      placeholder={t(",
    "valuecompanymessageo": ")}\r\n                      value={companyMessage}\r\n                      onChange={(e) => setCompanyMessage(e.target.value)}\r\n                      disabled={isLoading}\r\n                      rows={4}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* D√©p√¥t de documents */}\r\n                <div className=\"auth-form-group\">\r\n                  <FileUploadButton \r\n                    id=\"supplierDocuments\"\r\n                    label={t(",
    "valuecompanynameonch": ")}\r\n                      value={companyName}\r\n                      onChange={(e) => setCompanyName(e.target.value)}\r\n                      required\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M10.07 2.82L8.12 6.39l3.95 2.28.77-1.33zM12 8.44l.82.47L11.25 8l.75-1.3zM10 12c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM2 12l3.95-2.28L8.12 6.39L10.07 2.82L12 1l1.93 1.82 1.95 3.57 2.17 3.72L22 12v10H2V12z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Num√©ro d",
    "valuefollowercounton": ")}\r\n                      value={followerCount}\r\n                      onChange={(e) => setFollowerCount(e.target.value)}\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M16 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm4 18v-6h2.5l-2.54-7.63A1.5 1.5 0 0018.5 7H17c-.8 0-1.5.7-1.5 1.5V10H7V8.5C7 7.7 6.3 7 5.5 7H4c-.8 0-1.5.7-1.5 1.5V22h3v-3h12v3h3z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie d",
    "valuemonthlyproducti": ")}\r\n                      value={monthlyProductionCapacity}\r\n                      onChange={(e) => setMonthlyProductionCapacity(e.target.value)}\r\n                      required\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Pays et r√©gion de production */}\r\n                <div className=\"auth-form-group\">\r\n                  <div className=\"auth-input-wrapper\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"auth-input\"\r\n                      placeholder={t(",
    "valuepresentationvid": ")}\r\n                      value={presentationVideo}\r\n                      onChange={(e) => setPresentationVideo(e.target.value)}\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Message de pr√©sentation */}\r\n                <div className=\"auth-form-group\">\r\n                  <div className=\"auth-input-wrapper\">\r\n                    <textarea\r\n                      className=\"auth-input auth-textarea\"\r\n                      placeholder={t(",
    "valuequalitycontrolm": ")}\r\n                      value={qualityControlMethods}\r\n                      onChange={(e) => setQualityControlMethods(e.target.value)}\r\n                      disabled={isLoading}\r\n                      rows={3}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M9 11H7v9h2v-9zm4-4h-2v13h2V7zm4-3h-2v16h2V4z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* D√©p√¥t de documents */}\r\n                <div className=\"auth-form-group\">\r\n                  <FileUploadButton \r\n                    id=\"supplierDocuments\"\r\n                    label={t(",
    "valuewebsiteonchange": ")}\r\n                      value={website}\r\n                      onChange={(e) => setWebsite(e.target.value)}\r\n                      disabled={isLoading}\r\n                    />\r\n                    <div className=\"auth-input-icon\">\r\n                      <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie de produits */}\r\n                <div className=\"auth-form-group\">\r\n                  <select\r\n                    className=\"auth-input\"\r\n                    value={productCategory}\r\n                    onChange={(e) => setProductCategory(e.target.value)}\r\n                    required\r\n                    disabled={isLoading}\r\n                  >\r\n                    <option value=\"\">{t(",
    "acceptapplicationpdf": ")}\r\n                    accept=\"application/pdf,image/*,.doc,.docx,.xls,.xlsx\"\r\n                    onChange={(file) => setSupplierDocuments(file)}\r\n                    disabled={isLoading}\r\n                    className=\"auth-file-upload\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Case √† cocher pour accepter la v√©rification */}\r\n                <div className=\"auth-form-group\">\r\n                  <label className=\"auth-checkbox-label\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"auth-checkbox\"\r\n                      checked={agreeToVerification}\r\n                      onChange={(e) => setAgreeToVerification(e.target.checked)}\r\n                      required\r\n                      disabled={isLoading}\r\n                    />\r\n                    <span className=\"auth-checkbox-text\">{t(",
    "acceptapplicationpdf1": ")}\r\n                    accept=\"application/pdf,image/*,.doc,.docx,.xls,.xlsx\"\r\n                    onChange={(file) => setSupplierDocuments(file)}\r\n                    disabled={isLoading}\r\n                    className=\"auth-file-upload\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Vid√©o de pr√©sentation */}\r\n                <div className=\"auth-form-group\">\r\n                  <div className=\"auth-input-wrapper\">\r\n                    <input\r\n                      type=\"url\"\r\n                      className=\"auth-input\"\r\n                      placeholder={t(",
    "downloadclassnamew4h": ")}\r\n                  >\r\n                    <Download className=\"w-4 h-4\" />\r\n                  </Button>\r\n                  \r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleRemoveFile(file.path)}\r\n                    className=\"text-red-600 hover:text-red-700\"\r\n                  >\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de pr√©visualisation */}\r\n      {previewUrl && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"relative max-w-4xl max-h-full\">\r\n            <button\r\n              onClick={() => setPreviewUrl(null)}\r\n              className=\"absolute top-4 right-4 text-white hover:text-gray-300 z-10\"\r\n            >\r\n              <X className=\"w-6 h-6\" />\r\n            </button>\r\n            \r\n            {previewUrl.includes(",
    "errorspricepclassnam": ")}\r\n                />\r\n                {errors.price && (\r\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.price}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Cat√©gorie *\r\n              </label>\r\n              <select\r\n                value={formData.category}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}\r\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.category ? ",
    "onkeydownhandletagke": ")}\r\n                onKeyDown={handleTagKeyDown}\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n              <Button type=\"button\" onClick={handleAddTag} variant=\"outline\">\r\n                <Tag className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n            {formData.tags.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {formData.tags.map((tag, index) => (\r\n                  <span\r\n                    key={index}\r\n                    className=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full\"\r\n                  >\r\n                    {tag}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveTag(tag)}\r\n                      className=\"text-blue-600 hover:text-blue-800\"\r\n                    >\r\n                      <X className=\"w-3 h-3\" />\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Sp√©cifications techniques */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 mb-4\">Sp√©cifications techniques</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Marque *\r\n                </label>\r\n                <Input\r\n                  value={formData.brand}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, brand: e.target.value }))}\r\n                  placeholder=\"Ex: Apple, Samsung...\"\r\n                  error={errors.brand}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Origine *\r\n                </label>\r\n                <Input\r\n                  value={formData.origin}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, origin: e.target.value }))}\r\n                  placeholder=\"Ex: Chine, France...\"\r\n                  error={errors.origin}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Mat√©riau\r\n                </label>\r\n                <Input\r\n                  value={formData.material}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, material: e.target.value }))}\r\n                  placeholder=\"Ex: Plastique, M√©tal...\"\r\n                  error={errors.material}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Num√©ro de mod√®le\r\n                </label>\r\n                <Input\r\n                  value={formData.modelNumber}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, modelNumber: e.target.value }))}\r\n                  placeholder=\"Ex: IP15P-128\"\r\n                  error={errors.modelNumber}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Upload d",
    "errorsdescriptionpcl": ")}\r\n            />\r\n            {errors.description && (\r\n              <p className=\"text-red-500 text-sm mt-1\">{errors.description}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Prix et cat√©gorie */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                {t(",
    "buttonbuttononclickh": ")}\r\n            </Button>\r\n            <Button\r\n              onClick={handleUpload}\r\n              disabled={selectedFiles.length === 0 || !metadata.category || isUploading}\r\n            >\r\n              {isUploading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\r\n                  Upload en cours...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Upload className=\"h-4 w-4 mr-2\" />\r\n                  T√©l√©charger ({selectedFiles.length} fichier{selectedFiles.length > 1 ? ",
    "h1pclassnametextgray": ")}\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              G√©rez les conteneurs et leurs capacit√©s\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={handleCreateContainer}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors\"\r\n          >\r\n            <Plus className=\"w-4 h-4\" />\r\n            <span>Nouveau conteneur</span>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Statistiques rapides */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"w-8 h-8 text-blue-500\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {containers.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <Ship className=\"w-8 h-8 text-green-500\" />\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Actifs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {containers.filter(c => c.status === ",
    "h3buttononclickonclo": ")}\r\n            </h3>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors\"\r\n            >\r\n              <X className=\"h-6 w-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Content */}\r\n          <div className=\"px-6 py-4 space-y-6\">\r\n            {/* M√©tadonn√©es */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Cat√©gorie *\r\n                </label>\r\n                <select\r\n                  value={metadata.category}\r\n                  onChange={(e) => setMetadata(prev => ({ ...prev, category: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  required\r\n                >\r\n                  <option value=\"\">S√©lectionner une cat√©gorie</option>\r\n                  {categories.map(category => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Type de document *\r\n                </label>\r\n                <select\r\n                  value={metadata.type}\r\n                  onChange={(e) => setMetadata(prev => ({ ...prev, type: e.target.value as DocumentMetadata[",
    "pdivdivpclassnametex": ")}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Capacit√© disponible</p>\r\n            <p className=\"font-medium text-green-600 dark:text-green-400\">{availableCapacity} CBM</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slider de s√©lection */}\r\n        <div className=\"space-y-4\">            <div className=\"flex justify-between items-center\">\r\n          <label className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            Quantit√© √† r√©server\r\n          </label>\r\n          <div className={`text-2xl font-bold text-blue-600 dark:text-blue-400 quantity-display ${quantityAnimating ? ",
    "buttondivstatistique": ")}\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Statistiques */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <FileText className=\"h-8 w-8 text-blue-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total Documents</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{documents.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <Check className=\"h-8 w-8 text-green-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Approuv√©s</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.filter(d => d.status === ",
    "buttondivstatistique1": ")}\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Statistiques */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <FileText className=\"h-8 w-8 text-blue-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total Documents</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{documents.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex-shrink-0\">\r\n                <Check className=\"h-8 w-8 text-green-600\" />\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Approuv√©s</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.filter(d => d.status === ",
    "onchangehandleinputc": ")}\r\n        onChange={handleInputChange}\r\n        className=\"hidden\"\r\n      />\r\n\r\n      {/* Liste des fichiers */}\r\n      {uploadFiles.length > 0 && (\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n              Fichiers s√©lectionn√©s ({uploadFiles.length})\r\n            </h3>\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={clearCompleted}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                disabled={!uploadFiles.some(f => f.status === ",
    "productdatanameelsec": ")} \"${productData.name}\"`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...(products[0].description as any),\r\n            fr: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : [",
    "productdatanameelsec1": ")} \"${productData.name}\"`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...(products[0].description as { fr?: string }),\r\n            fr: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : [",
    "classnameflexitemsce": ")} className=\"flex items-center gap-2\">\r\n            <Upload size={16} />\r\n            T√©l√©charger un document\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <FileText className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{documents.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Eye className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Publics</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.filter(d => d.isPublic).length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Download className=\"h-8 w-8 text-purple-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">T√©l√©chargements</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {documents.reduce((sum, doc) => sum + doc.downloads, 0)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <File className=\"h-8 w-8 text-orange-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Taille totale</p>\r\n                <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                  {formatFileSize(documents.reduce((sum, doc) => sum + doc.size, 0))}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par nom, description ou tags...\"\r\n                  value={searchTerm}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={typeFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setTypeFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les types</option>\r\n                <option value=\"contract\">Contrat</option>\r\n                <option value=\"invoice\">Facture</option>\r\n                <option value=\"certificate\">Certificat</option>\r\n                <option value=\"report\">Rapport</option>\r\n                <option value=\"other\">Autre</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Documents List */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {loading ? (\r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n              {filteredDocuments.map((doc) => (\r\n                <div key={doc.id} className=\"p-6 hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex items-start\">\r\n                      <div className=\"h-12 w-12 rounded-lg bg-gradient-to-r from-red-400 to-red-600 flex items-center justify-center mr-4\">\r\n                        <FileText className=\"h-6 w-6 text-white\" />\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-2 mb-2\">\r\n                          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                            {doc.name}\r\n                          </h3>\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getTypeColor(doc.type)}`}>\r\n                            {getTypeText(doc.type)}\r\n                          </span>\r\n                          {doc.isPublic && (\r\n                            <span className=\"inline-flex px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-800 dark:text-blue-100 rounded-full\">\r\n                              Public\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {doc.description && (\r\n                          <p className=\"text-gray-600 dark:text-gray-400 mb-2\">\r\n                            {doc.description}\r\n                          </p>\r\n                        )}\r\n                        \r\n                        {doc.tags.length > 0 && (\r\n                          <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                            {doc.tags.map((tag, index) => (\r\n                              <span\r\n                                key={index}\r\n                                className=\"inline-flex px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 dark:bg-gray-600 dark:text-gray-300 rounded\"\r\n                              >\r\n                                {tag}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        \r\n                        <div className=\"flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                          <span className=\"flex items-center gap-1\">\r\n                            <File size={12} />\r\n                            {formatFileSize(doc.size)}\r\n                          </span>\r\n                          <span className=\"flex items-center gap-1\">\r\n                            <Download size={12} />\r\n                            {doc.downloads} t√©l√©chargements\r\n                          </span>\r\n                          <span className=\"flex items-center gap-1\">\r\n                            <Calendar size={12} />\r\n                            {formatDate(doc.uploadedAt)}\r\n                          </span>\r\n                          <span>par {doc.uploadedBy}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center gap-2 ml-4\">\r\n                      <Button\r\n                        onClick={() => console.log(",
    "variantghostentetedi": ")} variant=\"ghost\" />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">{t(",
    "utiliselememetitrequ": ")} {/* Utilise le m√™me titre que sourceur */}\n              </h4>\n              <p className=\"text-sm text-blue-700 dark:text-blue-400\">\n                {role === ",
    "optionselectdivcapac": ")}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Capacit√© de production mensuelle */}\r\n                <div className=\"auth-form-group\">\r\n                  <div className=\"auth-input-wrapper\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"auth-input\"\r\n                      placeholder={t(",
    "ppclassnametext2xlfo": ")}</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{productsList.length}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <Eye className=\"w-8 h-8 text-green-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Vues ce mois</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">12,453</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <Star className=\"w-8 h-8 text-yellow-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Note moyenne</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">4.2/5</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <Filter className=\"w-8 h-8 text-purple-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">En stock</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{Math.floor(productsList.length * 0.8)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des produits */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border\">\r\n        <div className=\"p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">\r\n            Produits ({filteredProducts.length})\r\n          </h2>\r\n        </div>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Produit\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Cat√©gorie\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Prix\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Stock\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredProducts.map((product) => (\r\n                <tr key={product.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <img\r\n                        className=\"h-10 w-10 rounded-lg object-cover\"\r\n                        src={product.images?.[0] || ",
    "pdivclassnameflexfle": ")}</p>\r\n            <div className=\"flex flex-col gap-1\">\r\n              <div className=\"flex items-center gap-2 text-sm text-green-600\">\r\n                <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\r\n                Sauvegarde automatique activ√©e\r\n              </div>\r\n              <div className=\"flex items-center gap-2 text-sm text-blue-600\">\r\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\r\n                Synchronis√© avec l",
    "pdivclassnameflexfle1": ")}</p>\r\n          <div className=\"flex flex-col gap-1\">\r\n            <div className=\"flex items-center gap-2 text-sm text-green-600\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\r\n              Sauvegarde automatique activ√©e\r\n            </div>\r\n            <div className=\"flex items-center gap-2 text-sm text-blue-600\">\r\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\r\n              Synchronis√© avec l",
    "pdivstatistiquesdivc": ")}</p>\r\n      </div>\r\n\r\n      {/* Statistiques */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <ShoppingBag className=\"w-8 h-8 text-blue-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.total}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-8 h-8 text-yellow-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">En attente</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.pending}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Confirm√©es</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.confirmed}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <Package className=\"w-8 h-8 text-orange-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Exp√©di√©es</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{stats.shipped}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"w-8 h-8 text-green-600 font-bold text-lg\">¬•</div>\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Chiffre d",
    "supplierproductsuppl": ",\r\n                        supplier: product.supplier,\r\n                        description: product.description,\r\n                        variants: product.variants.map(v => v.name),\r\n                        stock: product.stock,\r\n                        tags: product.tags,\r\n                        discount: product.discount\r\n                    };\r\n                })\r\n                .filter(product => product.id !== productId) // Exclure le produit actuel\r\n                .slice(0, limitCount); // Limiter au nombre demand√©\r\n\r\n            return products;\r\n        } catch (error) {\r\n            console.error(",
    "supplierproductsuppl1": ",\r\n                        supplier: product.supplier,\r\n                        description: product.description,\r\n                        variants: product.variants.map(v => v.name),\r\n                        stock: product.stock,\r\n                        tags: product.tags,\r\n                        discount: product.discount\r\n                    };\r\n                })\r\n                .filter(product => product.id !== productId) // Exclure le produit actuel\r\n                .slice(0, limitCount); // Limiter au nombre demand√©\r\n\r\n            return products;\r\n        } catch (error) {\r\n            console.error(",
    "supplierproductsuppl2": ",\r\n                    supplier: product.supplier,\r\n                    description: product.description,\r\n                    variants: product.variants.map(v => v.name),\r\n                    stock: product.stock,\r\n                    tags: product.tags,\r\n                    discount: product.discount\r\n                };\r\n            });\r\n\r\n            // Filtrer c√¥t√© client (pour une recherche plus avanc√©e, utilisez Algolia ou Elasticsearch)\r\n            const searchTermLower = searchTerm.toLowerCase();\r\n            return allProducts.filter(product =>\r\n                product.name.toLowerCase().includes(searchTermLower) ||\r\n                product.description.toLowerCase().includes(searchTermLower) ||\r\n                product.tags.some(tag => tag.toLowerCase().includes(searchTermLower))\r\n            );\r\n        } catch (error) {\r\n            console.error(",
    "supplierproductsuppl3": ",\r\n                    supplier: product.supplier,\r\n                    description: product.description,\r\n                    variants: product.variants.map(v => v.name),\r\n                    stock: product.stock,\r\n                    tags: product.tags,\r\n                    discount: product.discount\r\n                };\r\n            });\r\n\r\n            // Filtrer c√¥t√© client (pour une recherche plus avanc√©e, utilisez Algolia ou Elasticsearch)\r\n            const searchTermLower = searchTerm.toLowerCase();\r\n            return allProducts.filter(product =>\r\n                product.name.toLowerCase().includes(searchTermLower) ||\r\n                product.description.toLowerCase().includes(searchTermLower) ||\r\n                product.tags.some(tag => tag.toLowerCase().includes(searchTermLower))\r\n            );\r\n        } catch (error) {\r\n            console.error(",
    "supplierproductsuppl4": ",\r\n                    supplier: product.supplier,\r\n                    description: product.description,\r\n                    variants: product.variants.map(v => v.name),\r\n                    stock: product.stock,\r\n                    tags: product.tags,\r\n                    discount: product.discount\r\n                };\r\n            });\r\n\r\n            // Filtrer c√¥t√© client (pour une recherche plus avanc√©e, utilisez Algolia ou Elasticsearch)\r\n            const searchTermLower = searchTerm.toLowerCase();\r\n            return allProducts.filter(product =>\r\n                product.name.toLowerCase().includes(searchTermLower) ||\r\n                product.description.toLowerCase().includes(searchTermLower) ||\r\n                product.tags.some(tag => tag.toLowerCase().includes(searchTermLower))\r\n            );\r\n        } catch (error) {\r\n            console.error(",
    "textresultdeletedcou": ",\r\n                    text: `${result.deletedCount} utilisateurs supprim√©s avec succ√®s`\r\n                });\r\n            } else {\r\n                setMessage({\r\n                    type: ",
    "textresultdeletedcou1": ",\r\n                    text: `${result.deletedCount} utilisateurs supprim√©s avec succ√®s`\r\n                });\r\n            } else {\r\n                setMessage({\r\n                    type: ",
    "textresultdeletedcou2": ",\r\n                    text: `${result.deletedCount} utilisateurs supprim√©s avec succ√®s`\r\n                });\r\n            } else {\r\n                setMessage({\r\n                    type: ",
    "textsuppressionparti": ",\r\n                    text: `Suppression partielle: ${result.deletedCount} supprim√©s, ${result.errors.length} erreurs`\r\n                });\r\n            }\r\n\r\n            await loadSummary();\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "textsuppressionparti1": ",\r\n                    text: `Suppression partielle: ${result.deletedCount} supprim√©s, ${result.errors.length} erreurs`\r\n                });\r\n            }\r\n\r\n            await loadSummary();\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "createdatnowupdateda": ",\r\n                createdAt: now,\r\n                updatedAt: now,\r\n                created_at: now,\r\n                updated_at: now\r\n            };\r\n\r\n            // Sauvegarder en base de donn√©es\r\n            await setDoc(doc(db, this.collectionName, uid), userDocument);\r\n\r\n            console.log(",
    "createdatnowupdateda1": ",\r\n                createdAt: now,\r\n                updatedAt: now,\r\n                created_at: now,\r\n                updated_at: now\r\n            };\r\n\r\n            // Sauvegarder en base de donn√©es\r\n            await setDoc(doc(db, this.collectionName, uid), userDocument);\r\n\r\n            console.log(",
    "texterreurerrormessa": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const handlePurgeUsers = async () => {\r\n        const confirmed = confirm(`\r\n‚ö†Ô∏è ATTENTION: OP√âRATION IRR√âVERSIBLE\r\n\r\nVous allez supprimer TOUS les utilisateurs existants.\r\n\r\nCette action ne peut pas √™tre annul√©e.\r\n\r\n√ätes-vous absolument certain de vouloir continuer ?`);\r\n\r\n        if (!confirmed) return;\r\n\r\n        setIsPurging(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error(",
    "texterreurerrormessa1": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const handlePurgeUsers = async () => {\r\n        const confirmed = confirm(`\r\n‚ö†Ô∏è ATTENTION: OP√âRATION IRR√âVERSIBLE\r\n\r\nVous allez supprimer TOUS les utilisateurs existants.\r\n\r\nCette action ne peut pas √™tre annul√©e.\r\n\r\n√ätes-vous absolument certain de vouloir continuer ?`);\r\n\r\n        if (!confirmed) return;\r\n\r\n        setIsPurging(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error(",
    "texterreurerrormessa2": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const handlePurgeUsers = async () => {\r\n        const confirmed = confirm(`\r\n‚ö†Ô∏è ATTENTION: OP√âRATION IRR√âVERSIBLE\r\n\r\nVous allez supprimer TOUS les utilisateurs existants.\r\n\r\nCette action ne peut pas √™tre annul√©e.\r\n\r\n√ätes-vous absolument certain de vouloir continuer ?`);\r\n\r\n        if (!confirmed) return;\r\n\r\n        setIsPurging(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error(",
    "pricerangemin0max10m": ",\r\n            priceRange: { min: 0, max: 10 },\r\n            moqRange: { min: 0, max: 500 }\r\n        });\r\n    };\r\n\r\n    // Affichage du chargement\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Affichage des erreurs\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                        Erreur de chargement\r\n                    </h2>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mb-6\">{error}</p>\r\n                    <button\r\n                        onClick={() => window.location.reload()}\r\n                        className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n            {/* Header avec filtres */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-lg border-b border-gray-200 dark:border-gray-700 sticky top-0 z-40\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n                    <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-6\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                                Catalogue B2B\r\n                            </h1>\r\n                            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n                                {filteredProducts.length} produits disponibles\r\n                            </p>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => setShowFilters(!showFilters)}\r\n                            className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all duration-300 font-medium shadow-lg\"\r\n                        >\r\n                            <Filter size={20} />\r\n                            <span>Filtres</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Filtres */}\r\n                    {showFilters && (\r\n                        <div className=\"mt-6 p-6 bg-gray-50 dark:bg-gray-700 rounded-xl border border-gray-200 dark:border-gray-600\">\r\n                            <div className=\"flex justify-between items-center mb-4\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Filtres</h3>\r\n                                <button\r\n                                    onClick={clearFilters}\r\n                                    className=\"text-blue-600 hover:text-blue-700 font-medium\"\r\n                                >\r\n                                    R√©initialiser\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                {/* Prix */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Prix (‚Ç¨)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={filters.priceRange.min}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, min: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={filters.priceRange.max}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, max: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* MOQ */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={moqRange.min}\r\n                                            onChange={(e) => setMoqRange(prev => ({ ...prev, min: Number(e.target.value) }))}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={moqRange.max}\r\n                                            onChange={(e) => setMoqRange(prev => ({ ...prev, max: Number(e.target.value) }))}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits */}\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                    {filteredProducts.map((product) => {\r\n                        const quantity = getQuantity(product.id);\r\n                        const total = calculateTotal(product, quantity);\r\n                        const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n\r\n                        return (\r\n                            <div\r\n                                key={product.id}\r\n                                className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border border-gray-200 dark:border-gray-700 overflow-hidden group\"\r\n                            >\r\n                                {/* Image du produit */}\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <img\r\n                                        src={product.image}\r\n                                        alt={product.name}\r\n                                        className=\"w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110\"\r\n                                    />\r\n\r\n                                    {/* Boutons en overlay */}\r\n                                    <div className=\"absolute top-4 right-4 flex flex-col gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n                                        <button\r\n                                            onClick={() => toggleFavorite(product.id)}\r\n                                            className={`p-2 rounded-full transition-all duration-300 ${favorites.has(product.id)\r\n                                                ? ",
    "pricerangemin0max10m1": ",\r\n            priceRange: { min: 0, max: 10 },\r\n            moqRange: { min: 0, max: 500 }\r\n        });\r\n    };\r\n\r\n    // Affichage du chargement\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Affichage des erreurs\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Erreur</h2>\r\n                    <p className=\"text-gray-600 dark:text-gray-400\">{error}</p>\r\n                    <button\r\n                        onClick={() => window.location.reload()}\r\n                        className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n            {/* En-t√™te avec filtres */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-sm\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                                Produits B2B\r\n                            </h1>\r\n                            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\r\n                                {filteredProducts.length} produits disponibles\r\n                            </p>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => setShowFilters(!showFilters)}\r\n                            className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                        >\r\n                            <Filter size={20} />\r\n                            Filtres\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Panneau de filtres */}\r\n                    {showFilters && (\r\n                        <div className=\"mt-6 p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n                            <div className=\"flex items-center justify-between mb-4\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                                    Filtres\r\n                                </h3>\r\n                                <button\r\n                                    onClick={() => setShowFilters(false)}\r\n                                    className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                                >\r\n                                    <X size={20} />\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                {/* Prix */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Prix (‚Ç¨)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={filters.priceRange.min}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, min: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={filters.priceRange.max}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, max: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* MOQ */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={filters.moqRange?.min || 0}\r\n                                            onChange={(e) => updateFilters({\r\n                                                moqRange: { ...filters.moqRange, min: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={filters.moqRange?.max || 1000}\r\n                                            onChange={(e) => updateFilters({\r\n                                                moqRange: { ...filters.moqRange, max: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits */}\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                    {filteredProducts.map((product) => {\r\n                        const quantity = getQuantity(product.id!);\r\n                        const total = calculateTotal(product, quantity);\r\n                        const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n                        const isProductInQuote = getItemQuantity(product.id!) > 0;\r\n\r\n                        return (\r\n                            <div\r\n                                key={product.id}\r\n                                className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border border-gray-200 dark:border-gray-700 overflow-hidden group\"\r\n                            >\r\n                                {/* Image du produit */}\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <img\r\n                                        src={product.image}\r\n                                        alt={product.name}\r\n                                        className=\"w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110\"\r\n                                    />\r\n\r\n                                    {/* Boutons en overlay */}\r\n                                    <div className=\"absolute top-4 right-4 flex flex-col gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n                                        <button\r\n                                            onClick={() => toggleFavorite(product.id!)}\r\n                                            className={`p-2 rounded-full transition-all duration-300 ${isFavorite(product.id!)\r\n                                                ? ",
    "pricerangemin0max10m2": ",\r\n            priceRange: { min: 0, max: 10 },\r\n            moqRange: { min: 0, max: 500 }\r\n        });\r\n    };\r\n\r\n    // Affichage du chargement\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Affichage des erreurs\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Erreur</h2>\r\n                    <p className=\"text-gray-600 dark:text-gray-400\">{error}</p>\r\n                    <button\r\n                        onClick={() => window.location.reload()}\r\n                        className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                    >\r\n                        R√©essayer\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n            {/* En-t√™te avec filtres */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-sm\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n                    <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                                Produits B2B\r\n                            </h1>\r\n                            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\r\n                                {filteredProducts.length} produits disponibles\r\n                            </p>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => setShowFilters(!showFilters)}\r\n                            className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                        >\r\n                            <Filter size={20} />\r\n                            Filtres\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Panneau de filtres */}\r\n                    {showFilters && (\r\n                        <div className=\"mt-6 p-6 bg-gray-50 dark:bg-gray-700 rounded-xl\">\r\n                            <div className=\"flex items-center justify-between mb-4\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                                    Filtres\r\n                                </h3>\r\n                                <button\r\n                                    onClick={() => setShowFilters(false)}\r\n                                    className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\r\n                                >\r\n                                    <X size={20} />\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    >\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category}>{category}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                {/* Prix */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Prix (‚Ç¨)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={filters.priceRange.min}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, min: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={filters.priceRange.max}\r\n                                            onChange={(e) => updateFilters({\r\n                                                priceRange: { ...filters.priceRange, max: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* MOQ */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Min\"\r\n                                            value={filters.moqRange?.min || 0}\r\n                                            onChange={(e) => updateFilters({\r\n                                                moqRange: { ...filters.moqRange, min: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Max\"\r\n                                            value={filters.moqRange?.max || 1000}\r\n                                            onChange={(e) => updateFilters({\r\n                                                moqRange: { ...filters.moqRange, max: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits */}\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n                    {filteredProducts.map((product) => {\r\n                        const quantity = getQuantity(product.id!);\r\n                        const total = calculateTotal(product, quantity);\r\n                        const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n                        const isProductInQuote = getItemQuantity(product.id!) > 0;\r\n\r\n                        return (\r\n                            <div\r\n                                key={product.id}\r\n                                className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border border-gray-200 dark:border-gray-700 overflow-hidden group\"\r\n                            >\r\n                                {/* Image du produit */}\r\n                                <div className=\"relative overflow-hidden\">\r\n                                    <img\r\n                                        src={product.image}\r\n                                        alt={product.name}\r\n                                        className=\"w-full h-48 object-cover transition-transform duration-300 group-hover:scale-110\"\r\n                                    />\r\n\r\n                                    {/* Boutons en overlay */}\r\n                                    <div className=\"absolute top-4 right-4 flex flex-col gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                toggleFavorite(product.id!);\r\n                                                const isFav = isFavorite(product.id!);\r\n                                                showToast(\r\n                                                    isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                                    ",
    "verifiedfalsereturnd": ",\r\n            verified: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    Rechercher un influenceur\r\n                </h2>\r\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {filteredInfluencers.length} r√©sultat(s) trouv√©(s)\r\n                </div>\r\n            </div>\r\n\r\n            {/* Barre de recherche */}\r\n            <div className=\"flex gap-4\">\r\n                <div className=\"flex-1 relative\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Rechercher par nom ou description...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    />\r\n                </div>\r\n                <button\r\n                    onClick={() => setShowFilters(!showFilters)}\r\n                    className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\r\n                >\r\n                    <Filter size={20} />\r\n                    Filtres\r\n                </button>\r\n            </div>\r\n\r\n            {/* Filtres */}\r\n            {showFilters && (\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                            Filtres de recherche\r\n                        </h3>\r\n                        <button\r\n                            onClick={clearFilters}\r\n                            className=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 text-sm\"\r\n                        >\r\n                            R√©initialiser\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Cat√©gorie\r\n                            </label>\r\n                            <select\r\n                                value={filters.category}\r\n                                onChange={(e) => setFilters({ ...filters, category: e.target.value })}\r\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                            >\r\n                                <option value=\"\">Toutes les cat√©gories</option>\r\n                                {categories.map(cat => (\r\n                                    <option key={cat} value={cat}>{cat}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Pays\r\n                            </label>\r\n                            <select\r\n                                value={filters.country}\r\n                                onChange={(e) => setFilters({ ...filters, country: e.target.value })}\r\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                            >\r\n                                <option value=\"\">Tous les pays</option>\r\n                                {countries.map(country => (\r\n                                    <option key={country} value={country}>{country}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Followers minimum\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Ex: 50000\"\r\n                                value={filters.minFollowers}\r\n                                onChange={(e) => setFilters({ ...filters, minFollowers: e.target.value })}\r\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                Prix maximum (‚Ç¨)\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Ex: 2000\"\r\n                                value={filters.maxPrice}\r\n                                onChange={(e) => setFilters({ ...filters, maxPrice: e.target.value })}\r\n                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                        <label className=\"flex items-center gap-2\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={filters.verified}\r\n                                onChange={(e) => setFilters({ ...filters, verified: e.target.checked })}\r\n                                className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                            />\r\n                            <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                                Comptes v√©rifi√©s uniquement\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {filteredInfluencers.map((influencer) => (\r\n                    <div\r\n                        key={influencer.id}\r\n                        className=\"bg-white dark:bg-gray-800 rounded-2xl overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300\"\r\n                    >\r\n                        <div className=\"relative\">\r\n                            <img\r\n                                src={influencer.image}\r\n                                alt={influencer.name}\r\n                                className=\"w-full h-48 object-cover\"\r\n                            />\r\n                            {influencer.verified && (\r\n                                <div className=\"absolute top-4 right-4 bg-blue-500 text-white p-2 rounded-full\">\r\n                                    <Star size={16} fill=\"currentColor\" />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"p-6\">\r\n                            <div className=\"mb-3\">\r\n                                <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-1\">\r\n                                    {influencer.name}\r\n                                </h3>\r\n                                <div className=\"flex items-center gap-2 text-gray-500 dark:text-gray-400 text-sm\">\r\n                                    <MapPin size={14} />\r\n                                    <span>{influencer.country}</span>\r\n                                    <span className=\"mx-1\">‚Ä¢</span>\r\n                                    <span className=\"bg-blue-100 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 px-2 py-1 rounded-full text-xs\">\r\n                                        {influencer.category}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-2\">\r\n                                {influencer.description}\r\n                            </p>\r\n\r\n                            <div className=\"grid grid-cols-3 gap-2 mb-4 text-center\">\r\n                                <div>\r\n                                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Followers</div>\r\n                                    <div className=\"font-bold text-gray-900 dark:text-white text-sm\">\r\n                                        {formatFollowers(influencer.followers)}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Engagement</div>\r\n                                    <div className=\"font-bold text-gray-900 dark:text-white text-sm\">\r\n                                        {influencer.engagement}%\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Post</div>\r\n                                    <div className=\"font-bold text-blue-600 dark:text-blue-400 text-sm\">\r\n                                        {influencer.pricePerPost}‚Ç¨\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex gap-2\">\r\n                                <button className=\"flex-1 bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm\">\r\n                                    Contacter\r\n                                </button>\r\n                                <button className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-sm\">\r\n                                    Voir plus\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {filteredInfluencers.length === 0 && (\r\n                <div className=\"text-center py-12\">\r\n                    <div className=\"text-gray-400 mb-4\">\r\n                        <Search size={64} className=\"mx-auto\" />\r\n                    </div>\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                        Aucun influenceur trouv√©\r\n                    </h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                        Essayez de modifier vos crit√®res de recherche\r\n                    </p>\r\n                    <button\r\n                        onClick={() => {\r\n                            setSearchTerm(",
    "cachekeyprofileprosp": ",\r\n        cacheKey: `profile-${prospect.id}`\r\n    });\r\n\r\n    const profile = useMemo(() => profiles?.[0], [profiles]);\r\n\r\n    const [formData, setFormData] = React.useState(() => ({\r\n        // Informations de base\r\n        name: prospect.name || ",
    "cachettl3000005minut": ",\r\n        cacheTTL: 300000 // 5 minutes\r\n    });\r\n\r\n    // M√©morisation des calculs\r\n    const stats = useMemo(() => ({\r\n        activeClientsCount: companies?.length || 0,\r\n        productsCount: products?.length || 0,\r\n        pendingQuotesCount: quotes?.length || 0,\r\n        upcomingAppointmentsCount: appointments?.length || 0\r\n    }), [companies, products, quotes, appointments]);\r\n\r\n    const trends = useMemo(() => ({\r\n        clientsTrend: { value: 12, isPositive: true },\r\n        quotesTrend: { value: 5, isPositive: true },\r\n        appointmentsTrend: { value: 2, isPositive: false }\r\n    }), []);\r\n\r\n    return (\r\n        <div className=",
    "cachettl3000005minut1": ",\r\n        cacheTTL: 300000 // 5 minutes\r\n    });\r\n\r\n    // M√©morisation des calculs\r\n    const stats = useMemo(() => ({\r\n        activeClientsCount: companies?.length || 0,\r\n        productsCount: products?.length || 0,\r\n        pendingQuotesCount: quotes?.length || 0,\r\n        upcomingAppointmentsCount: appointments?.length || 0\r\n    }), [companies, products, quotes, appointments]);\r\n\r\n    const trends = useMemo(() => ({\r\n        clientsTrend: { value: 12, isPositive: true },\r\n        quotesTrend: { value: 5, isPositive: true },\r\n        appointmentsTrend: { value: 2, isPositive: false }\r\n    }), []);\r\n\r\n    return (\r\n        <div className=\"p-4 md:p-6 w-full\">\r\n            <div className=\"mb-6\">\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">{t(",
    "longdescriptioncecha": ",\r\n        longDescription: `Ce chargeur sans fil nouvelle g√©n√©ration offre une charge rapide et s√©curis√©e pour tous vos appareils compatibles Qi.\r\n\r\nAvec sa puissance de 15W, il charge vos smartphones jusqu",
    "longdescriptioncecha1": ",\r\n        longDescription: `Ce chargeur sans fil nouvelle g√©n√©ration offre une charge rapide et s√©curis√©e pour tous vos appareils compatibles Qi.\r\n\r\nAvec sa puissance de 15W, il charge vos smartphones jusqu",
    "messagereponserecued": ",\r\n        message: `R√©ponse re√ßue de ${supplierName}`,\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`fixed bottom-4 right-4 w-96 bg-white dark:bg-gray-800 rounded-lg shadow-xl transition-all duration-300 ${\r\n        isMinimized ? ",
    "messagereponserecued1": ",\r\n        message: `R√©ponse re√ßue de ${supplierName}`,\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`fixed bottom-4 right-4 w-96 bg-white dark:bg-gray-800 rounded-lg shadow-xl transition-all duration-300 ${\r\n        isMinimized ? ",
    "timestampnewdateisre": ",\r\n        timestamp: new Date(),\r\n        isRead: false,\r\n      };\r\n      setMessages((prev) => [...prev, response]);\r\n      addNotification({\r\n        type: ",
    "conststylesgetvarian": ",\r\n        };\r\n    }\r\n  };\r\n\r\n  const styles = getVariantStyles();\r\n\r\n  return (\r\n    <div className={`w-full ${styles.container} mx-auto ${className}`}>\r\n      <form onSubmit={handleSubmit} className=\"relative\">\r\n        <div className=\"flex items-center bg-white dark:bg-gray-700 rounded-lg shadow-sm border border-gray-300 dark:border-gray-500 overflow-hidden transition-all duration-200 hover:shadow-md focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500\">\r\n          {/* Ic√¥ne de recherche */}\r\n          <div className=\"pl-4 pr-3\">\r\n            <Search className={`${styles.icon} text-gray-500 dark:text-gray-300`} />\r\n          </div>\r\n          \r\n          {/* Input de recherche */}\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder={placeholder || t(",
    "actionurlrequestacti": ",\r\n      actionUrl: request.actionUrl,\r\n      metadata: request.metadata || {}\r\n    };\r\n\r\n    mockNotifications.unshift(newNotification);\r\n    return newNotification;\r\n  }\r\n\r\n  async deleteNotification(notificationId: string): Promise<void> {\r\n    ",
    "contactphone1": ",\r\n    contactPhone: ",
    "arrayfrometargetsele": ", Array.from(e.target.selectedOptions, option => option.value))}\r\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"iso9001\">ISO 9001</option>\r\n              <option value=\"iso14001\">ISO 14001</option>\r\n              <option value=\"ce\">CE</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Quantit√© minimale */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">\r\n              {t(",
    "filterspricerange0nu": ", [filters.priceRange[0], Number(e.target.value)])}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cat√©gories */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">\r\n              {t(",
    "containeridenproduct": ", containerId);\r\n        // En production, ceci ferait un appel API pour supprimer\r\n        alert(",
    "documentnamecreerunl": ", document.name);\r\n    \r\n    // Cr√©er un lien de t√©l√©chargement fictif\r\n    const link = window.document.createElement(",
    "documentnamecreerunl1": ", document.name);\r\n    \r\n    // Cr√©er un lien de t√©l√©chargement fictif\r\n    const link = window.document.createElement(",
    "documentnamecreerunl2": ", document.name);\r\n    \r\n    // Cr√©er un lien de t√©l√©chargement fictif\r\n    const link = window.document.createElement(",
    "documentnameifdocume": ", document.name);\r\n    \r\n    if (document.url) {\r\n      // T√©l√©charger le vrai fichier\r\n      const link = window.document.createElement(",
    "documentnameifdocume1": ", document.name);\r\n    \r\n    if (document.url) {\r\n      // T√©l√©charger le vrai fichier\r\n      const link = window.document.createElement(",
    "etargetvalueclassnam": ", e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              T√©l√©phone\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              value={settings.company.phone}\r\n              onChange={(e) => handleInputChange(",
    "etargetvalueclassnam1": ", e.target.value)}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n        >\r\n          <option value=\"fr\">Fran√ßais</option>\r\n          <option value=\"en\">English</option>\r\n          <option value=\"zh\">‰∏≠Êñá</option>\r\n          <option value=\"es\">Espa√±ol</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Devise par d√©faut\r\n        </label>\r\n        <select\r\n          value={settings.defaultCurrency}\r\n          onChange={(e) => updateSetting(",
    "etargetvaluerows3cla": ", e.target.value)}\r\n          rows={3}\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n        <div>\r\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white\">Mode maintenance</h3>\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            D√©sactive l",
    "editingcontaineridfo": ", editingContainer.id, formData);\r\n        // En production, ceci ferait un appel API pour mettre √† jour\r\n      } else {\r\n        ",
    "editingcontaineridfo1": ", editingContainer.id, formData);\r\n        // En production, ceci ferait un appel API pour mettre √† jour\r\n      } else {\r\n        // Create new container\r\n        console.log(",
    "errsupprimerunecarte": ", err);\r\n        }\r\n    };\r\n\r\n    // Supprimer une carte\r\n    const handleDelete = async (cardId: string) => {\r\n        if (confirm(",
    "errtelechargerunecar": ", err);\r\n        }\r\n    };\r\n\r\n    // T√©l√©charger une carte\r\n    const handleDownload = async (card: SavedBusinessCard) => {\r\n        try {\r\n            await updateCard(card.id, { downloads: card.downloads + 1 });\r\n            // Ici on impl√©menterait le t√©l√©chargement r√©el avec html2canvas\r\n            alert(",
    "errtelechargerunecar1": ", err);\r\n        }\r\n    };\r\n\r\n    // T√©l√©charger une carte\r\n    const handleDownload = async (card: SavedBusinessCard) => {\r\n        try {\r\n            await updateCard(card.id, { downloads: card.downloads + 1 });\r\n            // Ici on impl√©menterait le t√©l√©chargement r√©el avec html2canvas\r\n            alert(",
    "errifloadingisloaded": ", err);\r\n        }\r\n    };\r\n\r\n    if (loading || !isLoaded) {\r\n        return (\r\n            <div className=\"min-h-96 bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n                    <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Chargement de vos cartes...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"min-h-96 bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">‚ö†Ô∏è</div>\r\n                    <p className=\"text-red-600 dark:text-red-400\">{error}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n            {/* Header */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\r\n                <div className=\"max-w-7xl mx-auto px-4 py-6\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                                Mes Cartes de Visite\r\n                            </h1>\r\n                            <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\r\n                                Cr√©ez et g√©rez vos cartes de visite personnalis√©es\r\n                            </p>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleCreateNew}\r\n                            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold transition-colors flex items-center space-x-2\"\r\n                        >\r\n                            <Plus className=\"h-5 w-5\" />\r\n                            <span>Nouvelle carte</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Search and filters */}\r\n                    <div className=\"mt-6 flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <div className=\"relative\">\r\n                                <Search className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Rechercher une carte...\"\r\n                                    value={searchQuery}\r\n                                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                                    className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                />\r\n                            </div>\r\n                            <button className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\">\r\n                                <Filter className=\"h-5 w-5\" />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <button\r\n                                onClick={() => setViewMode(",
    "errfinallysetmarking": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  // Gestion des filtres\r\n  const handleFilterChange = (newFilters: Partial<NotificationFilters>) => {\r\n    setFilters(prev => ({ ...prev, ...newFilters }));\r\n    setPage(1);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({});\r\n    setPage(1);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <>\r\n      {/* Overlay */}\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity duration-300\" />\r\n      \r\n      {/* Notification Center */}\r\n      <div\r\n        ref={notificationCenterRef}\r\n        className={`\r\n          fixed top-0 right-0 h-full w-96 bg-white dark:bg-gray-800 shadow-2xl z-50\r\n          transform transition-transform duration-300 ease-in-out\r\n          ${isOpen ? ",
    "errorerrorspusherreu": ", error);\r\n            errors.push(`Erreur g√©n√©rale: ${error.message}`);\r\n\r\n            return {\r\n                success: false,\r\n                deletedCount,\r\n                errors\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un utilisateur complet (Firebase Auth + Firestore)\r\n     *",
    "errorreturnsuccessfa": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Supprimer un utilisateur\r\n     *",
    "errorthrowerrorsuppr": ", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Supprimer une collaboration\r\n    async deleteCollaboration(id: string): Promise<void> {\r\n        try {\r\n            await deleteDoc(doc(db, ",
    "errorsauvegarderlede": ", error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Sauvegarder le devis dans le localStorage √† chaque changement\r\n    useEffect(() => {\r\n        localStorage.setItem(QUOTE_STORAGE_KEY, JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    const calculateItemPrice = (product: ProductListItem, quantity: number, variants: Record<string, string> = {}) => {\r\n        let unitPrice = product.price;\r\n\r\n        // Ajouter le prix des variantes (si disponibles)\r\n        ",
    "errorsauvegarderlede1": ", error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Sauvegarder le devis dans le localStorage √† chaque changement\r\n    useEffect(() => {\r\n        localStorage.setItem(QUOTE_STORAGE_KEY, JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    const calculateItemPrice = (product: ProductListItem, quantity: number, variants: Record<string, string> = {}) => {\r\n        let unitPrice = product.price;\r\n\r\n        // Ajouter le prix des variantes (si disponibles)\r\n        // Note: Pour simplifier, on consid√®re que les variantes n",
    "errorsauvegarderlede2": ", error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Sauvegarder le devis dans le localStorage √† chaque changement\r\n    useEffect(() => {\r\n        localStorage.setItem(QUOTE_STORAGE_KEY, JSON.stringify(items));\r\n    }, [items]);\r\n\r\n    const calculateItemPrice = (product: ProductListItem, quantity: number, variants: Record<string, string> = {}) => {\r\n        let unitPrice = product.price;\r\n\r\n        // Ajouter le prix des variantes (si disponibles)\r\n        // Note: Pour simplifier, on consid√®re que les variantes n",
    "errorsauvegarderlesf": ", error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Sauvegarder les favoris dans le localStorage √† chaque changement\r\n    useEffect(() => {\r\n        localStorage.setItem(FAVORITES_STORAGE_KEY, JSON.stringify(Array.from(favorites)));\r\n    }, [favorites]);\r\n\r\n    const addToFavorites = (productId: string) => {\r\n        setFavorites(prev => new Set(prev).add(productId));\r\n    };\r\n\r\n    const removeFromFavorites = (productId: string) => {\r\n        setFavorites(prev => {\r\n            const newFavorites = new Set(prev);\r\n            newFavorites.delete(productId);\r\n            return newFavorites;\r\n        });\r\n    };\r\n\r\n    const toggleFavorite = (productId: string) => {\r\n        if (favorites.has(productId)) {\r\n            removeFromFavorites(productId);\r\n        } else {\r\n            addToFavorites(productId);\r\n        }\r\n    };\r\n\r\n    const isFavorite = (productId: string) => {\r\n        return favorites.has(productId);\r\n    };\r\n\r\n    const getFavoriteProducts = () => {\r\n        return Array.from(favorites);\r\n    };\r\n\r\n    const clearFavorites = () => {\r\n        setFavorites(new Set());\r\n    };\r\n\r\n    const value: FavoritesContextType = {\r\n        favorites,\r\n        addToFavorites,\r\n        removeFromFavorites,\r\n        toggleFavorite,\r\n        isFavorite,\r\n        getFavoriteProducts,\r\n        clearFavorites\r\n    };\r\n\r\n    return (\r\n        <FavoritesContext.Provider value={value}>\r\n            {children}\r\n        <",
    "errorsauvegarderlesf1": ", error);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Sauvegarder les favoris dans le localStorage √† chaque changement\r\n    useEffect(() => {\r\n        localStorage.setItem(FAVORITES_STORAGE_KEY, JSON.stringify(Array.from(favorites)));\r\n    }, [favorites]);\r\n\r\n    const addToFavorites = (productId: string) => {\r\n        setFavorites(prev => new Set(prev).add(productId));\r\n    };\r\n\r\n    const removeFromFavorites = (productId: string) => {\r\n        setFavorites(prev => {\r\n            const newFavorites = new Set(prev);\r\n            newFavorites.delete(productId);\r\n            return newFavorites;\r\n        });\r\n    };\r\n\r\n    const toggleFavorite = (productId: string) => {\r\n        if (favorites.has(productId)) {\r\n            removeFromFavorites(productId);\r\n        } else {\r\n            addToFavorites(productId);\r\n        }\r\n    };\r\n\r\n    const isFavorite = (productId: string) => {\r\n        return favorites.has(productId);\r\n    };\r\n\r\n    const getFavoriteProducts = () => {\r\n        return Array.from(favorites);\r\n    };\r\n\r\n    const clearFavorites = () => {\r\n        setFavorites(new Set());\r\n    };\r\n\r\n    const value: FavoritesContextType = {\r\n        favorites,\r\n        addToFavorites,\r\n        removeFromFavorites,\r\n        toggleFavorite,\r\n        isFavorite,\r\n        getFavoriteProducts,\r\n        clearFavorites\r\n    };\r\n\r\n    return (\r\n        <FavoritesContext.Provider value={value}>\r\n            {children}\r\n        </FavoritesContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useFavorites = () => {\r\n    const context = useContext(FavoritesContext);\r\n    if (!context) {\r\n        throw new Error(",
    "errorprivategenerate": ", error);\r\n        }\r\n    }\r\n\r\n    private generateId(): string {\r\n        return `card_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    // Donn√©es initiales pour la d√©mo\r\n    private getInitialCards(): SavedBusinessCard[] {\r\n        return [\r\n            {\r\n                id: ",
    "errorprivategenerate1": ", error);\r\n        }\r\n    }\r\n\r\n    private generateId(): string {\r\n        return `card_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    // Donn√©es initiales pour la d√©mo\r\n    private getInitialCards(): SavedBusinessCard[] {\r\n        return [\r\n            {\r\n                id: ",
    "errorreturnsupprimer": ", error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Supprimer un fichier\r\n   *",
    "errorreturnfalsevali": ", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validation des fichiers\r\n   */\r\n  private validateFile(file: File, options: UploadOptions): { valid: boolean; error?: string } {\r\n    // V√©rifier la taille\r\n    const maxSize = (options.maxSize || 50) * 1024 * 1024; // Convertir MB en bytes\r\n    if (file.size > maxSize) {\r\n      return {\r\n        valid: false,\r\n        error: `Le fichier ${file.name} d√©passe la taille maximale de ${options.maxSize || 50}MB`\r\n      };\r\n    }\r\n\r\n    // V√©rifier le type\r\n    if (options.allowedTypes && options.allowedTypes.length > 0) {\r\n      const fileExtension = ",
    "errorreturnfalsevali1": ", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validation des fichiers\r\n   */\r\n  private validateFile(file: File, options: UploadOptions): { valid: boolean; error?: string } {\r\n    // V√©rifier la taille\r\n    const maxSize = (options.maxSize || 50) * 1024 * 1024; // Convertir MB en bytes\r\n    if (file.size > maxSize) {\r\n      return {\r\n        valid: false,\r\n        error: `Le fichier ${file.name} d√©passe la taille maximale de ${options.maxSize || 50}MB`\r\n      };\r\n    }\r\n\r\n    // V√©rifier le type\r\n    if (options.allowedTypes && options.allowedTypes.length > 0) {\r\n      const fileExtension = ",
    "errorthrowerrorsuppr1": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Supprimer plusieurs fichiers\r\n   *",
    "errorthrowerroruploa": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload multiple fichiers en batch\r\n   */\r\n  async uploadMultipleFiles(\r\n    files: File[],\r\n    basePath: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const result: BatchUploadResult = {\r\n      successful: [],\r\n      failed: [],\r\n      totalUploaded: 0,\r\n      totalFailed: 0\r\n    };\r\n\r\n    const uploadPromises = files.map(async (file, index) => {\r\n      try {\r\n        const fileName = options.fileName \r\n          ? `${options.fileName}_${index + 1}_${file.name}`\r\n          : `${Date.now()}_${index}_${file.name}`;\r\n        \r\n        const fullPath = `${basePath}/${fileName}`;\r\n        \r\n        const mediaFile = await this.uploadFile(file, fullPath, {\r\n          ...options,\r\n          onProgress: (progress) => {\r\n            // Progress sp√©cifique au fichier\r\n            options.onProgress?.({\r\n              ...progress,\r\n              ",
    "errorthrowerroruploa1": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload multiple fichiers en batch\r\n   */\r\n  async uploadMultipleFiles(\r\n    files: File[],\r\n    basePath: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const result: BatchUploadResult = {\r\n      successful: [],\r\n      failed: [],\r\n      totalUploaded: 0,\r\n      totalFailed: 0\r\n    };\r\n\r\n    const uploadPromises = files.map(async (file, index) => {\r\n      try {\r\n        const fileName = options.fileName \r\n          ? `${options.fileName}_${index + 1}_${file.name}`\r\n          : `${Date.now()}_${index}_${file.name}`;\r\n        \r\n        const fullPath = `${basePath}/${fileName}`;\r\n        \r\n        const mediaFile = await this.uploadFile(file, fullPath, {\r\n          ...options,\r\n          onProgress: (progress) => {\r\n            // Progress sp√©cifique au fichier\r\n            options.onProgress?.({\r\n              ...progress,\r\n              // Ajouter l",
    "errorthrowerroruploa2": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upload multiple fichiers en batch\r\n   */\r\n  async uploadMultipleFiles(\r\n    files: File[],\r\n    basePath: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const result: BatchUploadResult = {\r\n      successful: [],\r\n      failed: [],\r\n      totalUploaded: 0,\r\n      totalFailed: 0\r\n    };\r\n\r\n    const uploadPromises = files.map(async (file, index) => {\r\n      try {\r\n        const fileName = options.fileName \r\n          ? `${options.fileName}_${index + 1}_${file.name}`\r\n          : `${Date.now()}_${index}_${file.name}`;\r\n        \r\n        const fullPath = `${basePath}/${fileName}`;\r\n        \r\n        const mediaFile = await this.uploadFile(file, fullPath, {\r\n          ...options,\r\n          onProgress: (progress) => {\r\n            // Progress sp√©cifique au fichier\r\n            options.onProgress?.({\r\n              ...progress,\r\n              // Ajouter l",
    "errorthrowerrorconst": ", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleDownloadDocument = (document: Document) => {\r\n    // Simulation du t√©l√©chargement\r\n    console.log(",
    "errorthrowerrorconst1": ", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleDownloadDocument = (document: Document) => {\r\n    // Simulation du t√©l√©chargement\r\n    console.log(",
    "errorthrowerrorconst2": ", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = async (imageUrl: string) => {\r\n    try {\r\n      // Supprimer du serveur si c",
    "errorobtenirtouslesp": ", error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtenir tous les produits (initiaux + ajout√©s par fournisseurs)\r\n   */\r\n  getAllProducts(): Product[] {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      console.log(",
    "errorajouterunnouvea": ", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ajouter un nouveau produit\r\n   */\r\n  addProduct(product: Product): void {\r\n    const currentProducts = this.getAllProducts();\r\n    const updatedProducts = [product, ...currentProducts];\r\n    this.saveProducts(updatedProducts);\r\n  }\r\n\r\n  /**\r\n   * Mettre √† jour un produit existant\r\n   */\r\n  updateProduct(productId: string, updatedProduct: Partial<Product>): void {\r\n    const currentProducts = this.getAllProducts();\r\n    const updatedProducts = currentProducts.map(p =>\r\n      p.id === productId ? { ...p, ...updatedProduct } : p\r\n    );\r\n    this.saveProducts(updatedProducts);\r\n  }\r\n\r\n  /**\r\n   * Forcer la r√©initialisation avec les produits par d√©faut\r\n   *",
    "errorajouterunnouvea1": ", error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ajouter un nouveau produit\r\n   */\r\n  addProduct(product: Product): void {\r\n    const currentProducts = this.getAllProducts();\r\n    const updatedProducts = [product, ...currentProducts];\r\n    this.saveProducts(updatedProducts);\r\n  }\r\n\r\n  /**\r\n   * Mettre √† jour un produit existant\r\n   */\r\n  updateProduct(productId: string, updatedProduct: Partial<Product>): void {\r\n    const currentProducts = this.getAllProducts();\r\n    const updatedProducts = currentProducts.map(p =>\r\n      p.id === productId ? { ...p, ...updatedProduct } : p\r\n    );\r\n    this.saveProducts(updatedProducts);\r\n  }\r\n\r\n  /**\r\n   * Forcer la r√©initialisation avec les produits par d√©faut\r\n   */\r\n  forceReset(): void {\r\n    localStorage.removeItem(STORAGE_KEY);\r\n    console.log(",
    "errorproductslistfil": ", error);\r\n    }\r\n  }, [productsList]);\r\n\r\n  // Filtrage des produits\r\n  const filteredProducts = productsList.filter(product => {\r\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCategory = !selectedCategory || product.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const categories = Array.from(new Set(products.map(p => p.category)));\r\n  \r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleEditProduct = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleSaveProduct = (productData: any) => {\r\n    try {\r\n      if (editingProduct) {\r\n        // Modifier le produit existant\r\n        setProductsList(prev => prev.map(p => \r\n          p.id === editingProduct.id \r\n            ? { \r\n                ...p, \r\n                name: productData.name, \r\n                category: productData.category,\r\n                images: productData.images || p.images,\r\n                description: {\r\n                  ...p.description,\r\n                  fr: productData.description || (p.description as { fr?: string }).fr || ",
    "errorproductslistfil1": ", error);\r\n    }\r\n  }, [productsList]);\r\n\r\n  // Filtrage des produits\r\n  const filteredProducts = productsList.filter(product => {\r\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCategory = !selectedCategory || product.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const categories = Array.from(new Set(products.map(p => p.category)));\r\n  \r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleEditProduct = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleSaveProduct = (productData: any) => {\r\n    try {\r\n      if (editingProduct) {\r\n        // Modifier le produit existant\r\n        setProductsList(prev => prev.map(p => \r\n          p.id === editingProduct.id \r\n            ? { \r\n                ...p, \r\n                name: productData.name, \r\n                category: productData.category,\r\n                images: productData.images || p.images, ",
    "errorproductslistfil2": ", error);\r\n    }\r\n  }, [productsList]);\r\n\r\n  // Filtrage des produits\r\n  const filteredProducts = productsList.filter(product => {\r\n    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCategory = !selectedCategory || product.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const categories = Array.from(new Set(products.map(p => p.category)));\r\n  \r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleEditProduct = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleSaveProduct = (productData: any) => {\r\n    try {\r\n      if (editingProduct) {\r\n        // Modifier le produit existant\r\n        setProductsList(prev => prev.map(p => \r\n          p.id === editingProduct.id \r\n            ? { \r\n                ...p, \r\n                name: productData.name, \r\n                category: productData.category,\r\n                images: productData.images || p.images, // Conserver les images existantes si pas de nouvelles                description: {\r\n                  ...p.description,\r\n                  fr: productData.description || p.description.fr\r\n                }\r\n              }\r\n            : p\r\n        ));\r\n        success(`Produit \"${productData.name}\" modifi√© avec succ√®s !`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...products[0].description,\r\n            french: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : [",
    "errorproductslistfil3": ", error);\r\n    }\r\n  }, [productsList]);\r\n  // Filtrage des produits\r\n  const filteredProducts = productsList.filter(product => {\r\n    const productName = getProductName(product, language);\r\n    const matchesSearch = productName.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesCategory = !selectedCategory || product.category === selectedCategory;\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const categories = Array.from(new Set(products.map(p => p.category)));\r\n  \r\n  const handleAddProduct = () => {\r\n    setEditingProduct(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleEditProduct = (product: Product) => {\r\n    setEditingProduct(product);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleSaveProduct = (productData: any) => {\r\n    try {\r\n      if (editingProduct) {\r\n        // Modifier le produit existant\r\n        setProductsList(prev => prev.map(p => \r\n          p.id === editingProduct.id \r\n            ? { \r\n                ...p, \r\n                name: productData.name, \r\n                category: productData.category,\r\n                images: productData.images || p.images,\r\n                description: {\r\n                  ...p.description,\r\n                  fr: productData.description || (p.description as any).fr || ",
    "errorreturndivclassn": ", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\r\n          D√©monstration Upload\r\n        </h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Testez les fonctionnalit√©s d",
    "errormsgawaitpromise": ", errorMsg);\r\n                }\r\n            });\r\n\r\n            await Promise.all(deletePromises);\r\n\r\n            // Note: Pour supprimer les utilisateurs Firebase Auth, il faudrait utiliser\r\n            ",
    "formdataenproduction": ", formData);\r\n        // En production, ceci ferait un appel API pour cr√©er\r\n      }\r\n      \r\n      setShowCreateModal(false);\r\n      loadContainers(); // Refresh the list\r\n      \r\n      // Show success message\r\n      alert(editingContainer \r\n        ? ",
    "handleclickoutsideis": ", handleClickOutside);\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  // Charger les notifications au montage et lors des changements de filtres\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadNotifications(true);\r\n    }\r\n  }, [isOpen, filters]);\r\n\r\n  // Scroll infini\r\n  const handleScroll = () => {\r\n    if (!scrollContainerRef.current || loading || !hasMore) return;\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = scrollContainerRef.current;\r\n    if (scrollHeight - scrollTop <= clientHeight + 100) {\r\n      loadNotifications();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (scrollContainer) {\r\n      scrollContainer.addEventListener(",
    "handleclickoutsideis1": ", handleClickOutside);\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  // Charger les notifications au montage et lors des changements de filtres\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadNotifications(true);\r\n    }\r\n  }, [isOpen, filters]);\r\n\r\n  // Scroll infini\r\n  const handleScroll = () => {\r\n    if (!scrollContainerRef.current || loading || !hasMore) return;\r\n\r\n    const { scrollTop, scrollHeight, clientHeight } = scrollContainerRef.current;\r\n    if (scrollHeight - scrollTop <= clientHeight + 100) {\r\n      loadNotifications();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (scrollContainer) {\r\n      scrollContainer.addEventListener(",
    "iconclocksize20mapst": ", icon: <Clock size={20} /> }\r\n                  ].map((stat, index) => (\r\n                    <div key={stat.label} className=\"stagger-item interactive-card bg-white dark:bg-gray-800 p-4 rounded-xl border border-gray-200 dark:border-gray-700\">\r\n                      <div className={`w-12 h-12 rounded-lg bg-gradient-to-r ${stat.color} flex items-center justify-center text-white mb-3 animate-float`} style={{ animationDelay: `${index * 0.2}s` }}>\r\n                        {stat.icon}\r\n                      </div>\r\n                      <div className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">\r\n                        {stat.value}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {stat.label}\r\n                      </div>\r\n                      <div className=\"mt-2 h-1 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\r\n                        <div className={`h-full bg-gradient-to-r ${stat.color} rounded-full animate-shimmer`} style={{ width: `${Math.min(stat.value * 10, 100)}%` }}></div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Favoris avec animations am√©lior√©es */}\r\n              <Section icon={<Heart className=\"w-5 h-5\" />} title=\"Produits favoris\" collapsible={true}>\r\n                {user.favorites?.length === 0 ? (\r\n                  <div className=\"text-center py-12\">\r\n                    <div className=\"animate-bounce-gentle\">\r\n                      <Heart className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n                    </div>\r\n                    <p className=\"text-lg text-gray-500 dark:text-gray-400 mb-2\">Aucun produit favori</p>\r\n                    <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n                      Explorez notre catalogue et ajoutez vos produits pr√©f√©r√©s !\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {user.favorites?.slice(0, 6).map((id: string, index: number) => {\r\n                      const product = getProductById(id);\r\n                      return product ? (\r\n                        <div key={id} className=\"stagger-item hover-lift\" style={{ animationDelay: `${index * 100}ms` }}>\r\n                          <ProductCard product={product} />\r\n                        </div>\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Messages r√©cents am√©lior√©s */}\r\n              <Section icon={<Mail className=\"w-5 h-5\" />} title=\"Messages r√©cents\" collapsible={true}>\r\n                {fakeMessages.length === 0 ? (\r\n                  <div className=\"text-center py-12\">\r\n                    <div className=\"animate-pulse-soft\">\r\n                      <Mail className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n                    </div>\r\n                    <p className=\"text-lg text-gray-500 dark:text-gray-400\">Aucun message</p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {fakeMessages.map((msg, index) => (\r\n                      <div\r\n                        key={msg.id}\r\n                        className=\"stagger-item interactive-card p-4 bg-gray-50 dark:bg-gray-700 rounded-xl border border-gray-200 dark:border-gray-600\"\r\n                        style={{ animationDelay: `${index * 100}ms` }}\r\n                      >\r\n                        <div className=\"flex justify-between items-start mb-3\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">\r\n                              {msg.from.charAt(0)}\r\n                            </div>\r\n                            <div>\r\n                              <span className=\"font-medium text-gray-900 dark:text-white\">{msg.from}</span>\r\n                              <div className=\"text-xs text-gray-500 flex items-center gap-1 mt-1\">\r\n                                <Clock size={12} />\r\n                                {msg.date}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <span className=\"text-xs text-gray-500 bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded-full\">\r\n                            Nouveau\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed\">{msg.content}</p>\r\n                        <div className=\"flex gap-2 mt-3\">\r\n                          <button className=\"text-xs px-3 py-1 bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors\">\r\n                            R√©pondre\r\n                          </button>\r\n                          <button className=\"text-xs px-3 py-1 bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors\">\r\n                            Marquer lu\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Activit√© r√©cente am√©lior√©e */}\r\n              <Section icon={<Clock className=\"w-5 h-5\" />} title=\"Activit√© r√©cente\" collapsible={true} defaultExpanded={false}>\r\n                <div className=\"space-y-3\">\r\n                  {[\r\n                    { action: ",
    "idreturnadminlayoutd": ", id);\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Mod√©ration\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            G√©rez les signalements et mod√©rez le contenu de la plateforme\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"h-8 w-8 text-yellow-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">En attente</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {items.filter(i => i.status === ",
    "maxpricetriqqueryqor": ", maxPrice));\r\n      }\r\n\r\n      // Tri\r\n      q = query(q, orderBy(sortBy, sortOrder));\r\n\r\n      // Pagination\r\n      q = query(q, limit(queryLimit + 1));\r\n\r\n      if (startAfterDoc) {\r\n        q = query(q, startAfter(startAfterDoc));\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const docs = snapshot.docs;\r\n      const hasMore = docs.length > queryLimit;\r\n      \r\n      if (hasMore) {\r\n        docs.pop(); // Retirer le document extra utilis√© pour la pagination\r\n      }\r\n\r\n      const products: Product[] = docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        createdAt: doc.data().createdAt?.toDate?.() || new Date(),\r\n        updatedAt: doc.data().updatedAt?.toDate?.() || new Date()\r\n      } as Product));\r\n\r\n      // Filtrage par terme de recherche (c√¥t√© client pour la compatibilit√©)\r\n      let filteredProducts = products;\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        filteredProducts = products.filter(product =>\r\n          product.name.toLowerCase().includes(term) ||\r\n          product.description?.toLowerCase().includes(term) ||\r\n          product.brand.toLowerCase().includes(term) ||\r\n          product.category.toLowerCase().includes(term)\r\n        );\r\n      }\r\n\r\n      return {\r\n        products: filteredProducts,\r\n        hasMore: hasMore && filteredProducts.length === queryLimit,\r\n        lastDoc: hasMore ? docs[docs.length - 1] : undefined\r\n      };\r\n    } catch (error) {\r\n      console.error(",
    "maxpricetriqqueryqor1": ", maxPrice));\r\n      }\r\n\r\n      // Tri\r\n      q = query(q, orderBy(sortBy, sortOrder));\r\n\r\n      // Pagination\r\n      q = query(q, limit(queryLimit + 1));\r\n\r\n      if (startAfterDoc) {\r\n        q = query(q, startAfter(startAfterDoc));\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const docs = snapshot.docs;\r\n      const hasMore = docs.length > queryLimit;\r\n      \r\n      if (hasMore) {\r\n        docs.pop(); // Retirer le document extra utilis√© pour la pagination\r\n      }\r\n\r\n      const products: Product[] = docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        createdAt: doc.data().createdAt?.toDate?.() || new Date(),\r\n        updatedAt: doc.data().updatedAt?.toDate?.() || new Date()\r\n      } as Product));\r\n\r\n      // Filtrage par terme de recherche (c√¥t√© client pour la compatibilit√©)\r\n      let filteredProducts = products;\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        filteredProducts = products.filter(product =>\r\n          product.name.toLowerCase().includes(term) ||\r\n          product.description?.toLowerCase().includes(term) ||\r\n          product.brand.toLowerCase().includes(term) ||\r\n          product.category.toLowerCase().includes(term)\r\n        );\r\n      }\r\n\r\n      return {\r\n        products: filteredProducts,\r\n        hasMore: hasMore && filteredProducts.length === queryLimit,\r\n        lastDoc: hasMore ? docs[docs.length - 1] : undefined\r\n      };\r\n    } catch (error) {\r\n      console.error(",
    "maxpricetriqqueryqor2": ", maxPrice));\r\n      }\r\n\r\n      // Tri\r\n      q = query(q, orderBy(sortBy, sortOrder));\r\n\r\n      // Pagination\r\n      q = query(q, limit(queryLimit + 1));\r\n\r\n      if (startAfterDoc) {\r\n        q = query(q, startAfter(startAfterDoc));\r\n      }\r\n\r\n      const snapshot = await getDocs(q);\r\n      const docs = snapshot.docs;\r\n      const hasMore = docs.length > queryLimit;\r\n      \r\n      if (hasMore) {\r\n        docs.pop(); // Retirer le document extra utilis√© pour la pagination\r\n      }\r\n\r\n      const products: Product[] = docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n        createdAt: doc.data().createdAt?.toDate?.() || new Date(),\r\n        updatedAt: doc.data().updatedAt?.toDate?.() || new Date()\r\n      } as Product));\r\n\r\n      // Filtrage par terme de recherche (c√¥t√© client pour la compatibilit√©)\r\n      let filteredProducts = products;\r\n      if (searchTerm) {\r\n        const term = searchTerm.toLowerCase();\r\n        filteredProducts = products.filter(product =>\r\n          product.name.toLowerCase().includes(term) ||\r\n          product.description?.toLowerCase().includes(term) ||\r\n          product.brand.toLowerCase().includes(term) ||\r\n          product.category.toLowerCase().includes(term)\r\n        );\r\n      }\r\n\r\n      return {\r\n        products: filteredProducts,\r\n        hasMore: hasMore && filteredProducts.length === queryLimit,\r\n        lastDoc: hasMore ? docs[docs.length - 1] : undefined\r\n      };\r\n    } catch (error) {\r\n      console.error(",
    "messagestringnullnul": ", message: string } | null>(null);\r\n\r\n  // Cast pour acc√©der aux propri√©t√©s √©tendues non typ√©es\r\n  const user = baseUser as Record<string, any>;\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEditedUser({ ...user });\r\n    }\r\n  }, [user]);\r\n\r\n  ",
    "messagestringnullnul1": ", message: string } | null>(null);\r\n\r\n  // Cast pour acc√©der aux propri√©t√©s √©tendues non typ√©es\r\n  const user = baseUser as Record<string, any>;\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEditedUser({ ...user });\r\n    }\r\n  }, [user]);\r\n\r\n  // Animation notification\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  const showNotification = (type: ",
    "optionsfilenamexmlht": ", options.fileName);\r\n      }\r\n\r\n      // XMLHttpRequest pour suivre le progr√®s\r\n      return new Promise((resolve) => {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        xhr.upload.addEventListener(",
    "optionsfilenamexmlht1": ", options.fileName);\r\n      }\r\n\r\n      // XMLHttpRequest pour suivre le progr√®s\r\n      return new Promise((resolve) => {\r\n        const xhr = new XMLHttpRequest();\r\n\r\n        xhr.upload.addEventListener(",
    "parseintetargetvalue": ", parseInt(e.target.value))}\r\n              min=\"3\"\r\n              max=\"10\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Avant verrouillage du compte</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Dur√©e de verrouillage (minutes)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={settings.lockoutDuration}\r\n              onChange={(e) => updateSetting(",
    "parseintetargetvalue1": ", parseInt(e.target.value))}\r\n              min=\"6\"\r\n              max=\"32\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Recommand√©: 8 caract√®res minimum</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              D√©lai d",
    "parseintetargetvalue2": ", parseInt(e.target.value))}\r\n          min=\"1\"\r\n          max=\"100\"\r\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Types de fichiers autoris√©s\r\n        </label>\r\n        <div className=\"grid grid-cols-3 gap-2\">\r\n          {[",
    "portusbmateriauimper": ", port USB, mat√©riau imperm√©able et design ergonomique.',\r\n        variants: ['Noir', 'Gris', 'Bleu Marine'],\r\n        stock: 15000,\r\n        tags: ['USB Port', 'Imperm√©able', '15.6",
    "revenue21800orders64": ", revenue: 21800, orders: 64 },\r\n              ].map((supplier, index) => (\r\n                <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"h-8 w-8 rounded-full bg-gradient-to-r from-red-400 to-red-600 flex items-center justify-center mr-3\">\r\n                      <span className=\"text-white font-medium text-sm\">\r\n                        {supplier.name.charAt(0)}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        {supplier.name}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        {supplier.orders} commandes\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-sm font-semibold text-gray-900 dark:text-white\">\r\n                    {formatPrice(supplier.revenue)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Recent Activity */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">\r\n              Activit√© R√©cente\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {[\r\n                { text: ",
    "searchquerysearchque": ", searchQuery);\n    }\n  }, [searchQuery]);\n\n  // M√©morisation des cat√©gories pour √©viter les re-renders\n  const categories = useMemo(() => [\n    { name: t(",
    "searchquerysearchque1": ", searchQuery);\n    }\n  }, [searchQuery]);\n\n  // M√©morisation des cat√©gories pour √©viter les re-renders\n  const categories = useMemo(() => [\n    { name: t(",
    "stopopacity06linearg": ", stopOpacity: 0.6 }} />\n              </linearGradient>\n            </defs>\n\n            {/* Montagne arri√®re */}\n            <path d=\"M0,400 L200,180 L400,220 L600,140 L800,160 L1000,100 L1200,140 L1200,400 Z\" fill=\"url(#mountain3)\" />\n\n            {/* Montagne moyenne */}\n            <path d=\"M0,400 L150,200 L350,240 L550,160 L750,180 L950,120 L1200,160 L1200,400 Z\" fill=\"url(#mountain2)\" />\n\n            {/* Montagne avant */}\n            <path d=\"M0,400 L100,220 L300,200 L500,280 L700,150 L900,180 L1100,140 L1200,180 L1200,400 Z\" fill=\"url(#mountain1)\" />\n          </svg>          {/* Logo et titre au centre */}\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center z-20\">\n            <div className={`flex items-center mb-4 transform transition-all duration-1000 delay-300 ${isLoaded ? ",
    "stopopacity07linearg": ", stopOpacity: 0.7}} />\n              </linearGradient>\n            </defs>\n            \n            {/* Montagne arri√®re */}\n            <path d=\"M0,400 L200,180 L400,220 L600,140 L800,160 L1000,100 L1200,140 L1200,400 Z\" fill=\"url(#mountain3)\" />\n            \n            {/* Montagne moyenne */}\n            <path d=\"M0,400 L150,200 L350,240 L550,160 L750,180 L950,120 L1200,160 L1200,400 Z\" fill=\"url(#mountain2)\" />\n            \n            {/* Montagne avant */}\n            <path d=\"M0,400 L100,220 L300,200 L500,280 L700,150 L900,180 L1100,140 L1200,180 L1200,400 Z\" fill=\"url(#mountain1)\" />\n          </svg>\n\n          {/* Logo et titre au centre */}\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center z-10\">\n            <div className={`flex items-center mb-4 transform transition-all duration-1000 delay-300 ${\n              isLoaded ? ",
    "tempuseruid6mettreaj": ", tempUser.uid);\r\n\r\n            // 6. Mettre √† jour le profil\r\n            await updateProfile(tempUser, {\r\n                displayName: userData.name\r\n            });\r\n\r\n            // 7. Cr√©er le document Firestore (sur l",
    "userdocidawaitpromis": ", userDoc.id)));\r\n            });\r\n\r\n            await Promise.all(deletePromises);\r\n\r\n            setResults(prev => prev + `‚úÖ ${usersSnapshot.size} utilisateur(s) supprim√©(s)\\n`);\r\n\r\n            return { success: true, deletedCount: usersSnapshot.size };\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `‚ùå Erreur: ${error.message}\\n`);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    const createNewUsers = async () => {\r\n        setIsCreating(true);\r\n        setResults(prev => prev + ",
    "userdocidawaitpromis1": ", userDoc.id)));\r\n            });\r\n\r\n            await Promise.all(deletePromises);\r\n\r\n            setResults(prev => prev + `‚úÖ ${usersSnapshot.size} utilisateur(s) supprim√©(s)\\n`);\r\n\r\n            return { success: true, deletedCount: usersSnapshot.size };\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `‚ùå Erreur: ${error.message}\\n`);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setIsDeleting(false);\r\n        }\r\n    };\r\n\r\n    const createNewUsers = async () => {\r\n        setIsCreating(true);\r\n        setResults(prev => prev + ",
    "useridsupprimerd": ", userId);\r\n\r\n            // Supprimer d",
    "useridconstuserrefdo": ", userId);\r\n\r\n            const userRef = doc(db, this.collectionName, userId);\r\n            const updatePayload = {\r\n                ...updateData,\r\n                updatedAt: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            await updateDoc(userRef, updatePayload);\r\n\r\n            // R√©cup√©rer l",
    "useridconstuserrefdo1": ", userId);\r\n\r\n            const userRef = doc(db, this.collectionName, userId);\r\n            const updatePayload = {\r\n                ...updateData,\r\n                updatedAt: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            await updateDoc(userRef, updatePayload);\r\n\r\n            // R√©cup√©rer l",
    "userrefidcreerleprof": ", userRef.id);\r\n\r\n        // Cr√©er le profil influenceur correspondant\r\n        const influencerProfile = {\r\n            userId: userRef.id,\r\n            name: ",
    "svgdivdivdivcategori": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie d'influence */}\r\n                <div className=",
    "svgdivdivdivcategori1": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie de produits */}\r\n                <div className=",
    "svgdivdivdivdepotded": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* D√©p√¥t de documents */}\r\n                <div className=",
    "svgdivdivdivmessaged": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Message de pr√©sentation */}\r\n                <div className=",
    "svgdivdivdivnumerode": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Num√©ro d'enregistrement l√©gal */}\r\n                <div className=",
    "svgdivdivdivpaysetre": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Pays et r√©gion de production *",
    "svgdivdivdivpaysetre1": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Pays et r√©gion de production */}\r\n                <div className=",
    "svgdivdivdivdepotded1": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* D√©p√¥t de documents */}\r\n                <div className=",
    "svgdivdivdivmethodes": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* M√©thodes de contr√¥le qualit√© */}\r\n                <div className=",
    "svgdivdivdivselecteu": "/>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* S√©lecteur de r√¥le */}\r\n            <div className=",
    "isvalidvaluetrimleng": ":\r\n        isValid = value.trim().length >= 2;\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    return isValid\r\n      ? <CheckCircle size={16} className=\"text-green-500 absolute right-3 top-1/2 transform -translate-y-1/2\" />\r\n      : <X size={16} className=\"text-red-500 absolute right-3 top-1/2 transform -translate-y-1/2\" />;\r\n  };\r\n\r\n  // Donn√©es fictives pour illustration\r\n  const fakeOrders = [\r\n    { id: ",
    "returnrendersecurity": ":\r\n        return renderSecuritySettings();\r\n      default:\r\n        return renderGeneralSettings();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Param√®tres de la Plateforme\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              Configurez les param√®tres g√©n√©raux de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button\r\n            onClick={handleSave}\r\n            disabled={loading}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n            ) : (\r\n              <Save size={16} />\r\n            )}\r\n            Sauvegarder\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\r\n          {/* Tabs */}\r\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n            <nav className=\"flex space-x-8 px-6\">\r\n              {tabs.map((tab) => (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id)}\r\n                  className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center gap-2 transition-colors ${activeTab === tab.id\r\n                      ? ",
    "constnotfoundpagerea": ";\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center px-4 py-12\">\n      <h1 className=\"text-6xl font-bold text-blue-700\">404</h1>\n      <h2 className=\"mt-4 text-2xl font-bold text-gray-900\">Page non trouv√©e</h2>\n      <p className=\"mt-2 text-gray-600 text-center max-w-md\">\n        La page que vous recherchez n",
    "utiliserlehookpourge": ";\r\n\r\n    // Utiliser le hook pour g√©rer les cartes\r\n    const { cards, loading, error, saveCard, updateCard, deleteCard } = useBusinessCards(currentSupplierId);\r\n\r\n    const [isEditorOpen, setIsEditorOpen] = useState(false);\r\n    const [editingCard, setEditingCard] = useState<SavedBusinessCard | null>(null);\r\n    const [viewMode, setViewMode] = useState<",
    "utiliserlehookpourge1": ";\r\n\r\n    // Utiliser le hook pour g√©rer les cartes\r\n    const { cards, loading, error, saveCard, updateCard, deleteCard } = useBusinessCards(currentSupplierId);\r\n\r\n    const [isEditorOpen, setIsEditorOpen] = useState(false);\r\n    const [editingCard, setEditingCard] = useState<SavedBusinessCard | null>(null);\r\n    const [viewMode, setViewMode] = useState<",
    "cettemapsimuleunstoc": ";\r\n\r\n// Cette map simule un stockage en m√©moire qui serait une base de donn√©es en r√©alit√©.\r\n// Elle permet de modifier l",
    "cettemapsimuleunstoc1": ";\r\n\r\n// Cette map simule un stockage en m√©moire qui serait une base de donn√©es en r√©alit√©.\r\n// Elle permet de modifier l",
    "interfacepourlesprod": ";\r\n\r\n// Interface pour les produits (m√™me que ProductsPageFixed)\r\ninterface SimpleProduct {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    originalPrice?: number;\r\n    discount?: number;\r\n    brand: string;\r\n    category: string;\r\n    image: string;\r\n    isNew?: boolean;\r\n    isPopular?: boolean;\r\n    features?: string[];\r\n    description?: string;\r\n    rating?: number;\r\n    reviews?: number;\r\n    images?: string[];\r\n    specifications?: { [key: string]: string };\r\n}\r\n\r\n",
    "interfacepourlesprod1": ";\r\n\r\n// Interface pour les produits (m√™me que ProductsPageFixed)\r\ninterface SimpleProduct {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    originalPrice?: number;\r\n    discount?: number;\r\n    brand: string;\r\n    category: string;\r\n    image: string;\r\n    isNew?: boolean;\r\n    isPopular?: boolean;\r\n    features?: string[];\r\n    description?: string;\r\n    rating?: number;\r\n    reviews?: number;\r\n    images?: string[];\r\n    specifications?: { [key: string]: string };\r\n}\r\n\r\n// Donn√©es √©tendues pour la page produit\r\nconst getProductById = (id: string): SimpleProduct | null => {\r\n    const products: SimpleProduct[] = [\r\n        {\r\n            id: ",
    "interfacepourlesprod2": ";\r\n\r\n// Interface pour les produits (m√™me que ProductsPageFixed)\r\ninterface SimpleProduct {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    originalPrice?: number;\r\n    discount?: number;\r\n    brand: string;\r\n    category: string;\r\n    image: string;\r\n    isNew?: boolean;\r\n    isPopular?: boolean;\r\n    features?: string[];\r\n    description?: string;\r\n    rating?: number;\r\n    reviews?: number;\r\n    images?: string[];\r\n    specifications?: { [key: string]: string };\r\n}\r\n\r\n// Donn√©es √©tendues pour la page produit\r\nconst getProductById = (id: string): SimpleProduct | null => {\r\n    const products: SimpleProduct[] = [\r\n        {\r\n            id: ",
    "interfacepourlesprod3": ";\r\n\r\n// Interface pour les produits Firebase basique\r\nexport interface Product {\r\n  id?: string;\r\n  name: string;\r\n  price: number;\r\n  originalPrice?: number;\r\n  discount?: number;\r\n  brand: string;\r\n  category: string;\r\n  image: string;\r\n  images?: string[];\r\n  videos?: string[];\r\n  documents?: string[];\r\n  description?: string;\r\n  features?: string[];\r\n  isNew?: boolean;\r\n  isPopular?: boolean;\r\n  stock?: number;\r\n  rating?: number;\r\n  reviewCount?: number;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\nexport interface ProductQueryOptions {\r\n  category?: string;\r\n  brand?: string;\r\n  minPrice?: number;\r\n  maxPrice?: number;\r\n  searchTerm?: string;\r\n  sortBy?: ",
    "interfacepourunecart": ";\r\n\r\n// Interface pour une carte de visite sauvegard√©e\r\nexport interface SavedBusinessCard {\r\n    id: string;\r\n    name: string;\r\n    data: BusinessCardData;\r\n    supplierId: string;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    downloads: number;\r\n    shares: number;\r\n    tags: string[];\r\n}\r\n\r\n// Service pour g√©rer les cartes de visite\r\nclass BusinessCardService {\r\n    private storageKey = ",
    "interfacepourunecart1": ";\r\n\r\n// Interface pour une carte de visite sauvegard√©e\r\nexport interface SavedBusinessCard {\r\n    id: string;\r\n    name: string;\r\n    data: BusinessCardData;\r\n    supplierId: string;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n    downloads: number;\r\n    shares: number;\r\n    tags: string[];\r\n}\r\n\r\n// Service pour g√©rer les cartes de visite\r\nclass BusinessCardService {\r\n    private storageKey = ",
    "listedescategoriescl": ";\r\n\r\n// Liste des cat√©gories (cl√©, nom, ic√¥ne, description courte)\r\nconst categories = [\r\n  { key: ",
    "listedescategoriescl1": ";\r\n\r\n// Liste des cat√©gories (cl√©, nom, ic√¥ne, description courte)\r\nconst categories = [\r\n  { key: ",
    "typespourlagestionde": ";\r\n\r\n// Types pour la gestion des fichiers m√©dia\r\nexport interface MediaFile {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  type: ",
    "typespourlagestionde1": ";\r\n\r\n// Types pour la gestion des fichiers m√©dia\r\nexport interface MediaFile {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  type: ",
    "typespourlesproduits": ";\r\n\r\n// Types pour les produits (identiques √† ceux utilis√©s dans les pages)\r\nexport interface ProductImage {\r\n    id: string;\r\n    url: string;\r\n    alt: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n    id: string;\r\n    name: string;\r\n    type: ",
    "typespourlesproduits1": ";\r\n\r\n// Types pour les produits (identiques √† ceux utilis√©s dans les pages)\r\nexport interface ProductImage {\r\n    id: string;\r\n    url: string;\r\n    alt: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n    id: string;\r\n    name: string;\r\n    type: ",
    "typespourlesproduits2": ";\r\n\r\n// Types pour les produits (identiques √† ceux utilis√©s dans les pages)\r\nexport interface ProductImage {\r\n    id: string;\r\n    url: string;\r\n    alt: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n    id: string;\r\n    name: string;\r\n    type: ",
    "constcontainersmanag": ";\r\n\r\nconst ContainersManagementPage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const [containers, setContainers] = useState<Container[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [editingContainer, setEditingContainer] = useState<Container | null>(null);\r\n\r\n  // Nouvel √©tat pour le formulaire de cr√©ation/√©dition\r\n  const [formData, setFormData] = useState({\r\n    name: ",
    "constcontainersmanag1": ";\r\n\r\nconst ContainersManagementPage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const [containers, setContainers] = useState<Container[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [editingContainer, setEditingContainer] = useState<Container | null>(null);\r\n\r\n  // Nouvel √©tat pour le formulaire de cr√©ation/√©dition\r\n  const [formData, setFormData] = useState({\r\n    name: ",
    "constproductdetailpa": ";\r\n\r\nconst ProductDetailPageB2B: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const { product, loading, error } = useProduct(id);\r\n    const { products: similarProducts, loading: similarLoading } = useSimilarProducts(id, product?.category);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    ",
    "constproductdetailpa1": ";\r\n\r\nconst ProductDetailPageB2B: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const { product, loading, error } = useProduct(id);\r\n    const { products: similarProducts, loading: similarLoading } = useSimilarProducts(id, product?.category);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    // √âtats pour l",
    "constproductdetailpa2": ";\r\n\r\nconst ProductDetailPageB2B: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const { product, loading, error } = useProduct(id);\r\n    const { products: similarProducts, loading: similarLoading } = useSimilarProducts(id, product?.category);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    // √âtats pour l",
    "constproductrecommen": ";\r\n\r\nconst ProductRecommendations: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const [currentIndex, setCurrentIndex] = useState(0);  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n  const touchStartX = useRef<number>(0);\r\n  const touchEndX = useRef<number>(0);\r\n  \r\n  // S√©lectionner 8 produits recommand√©s (m√©lange des premiers produits)\r\n  const recommendedProducts = products.slice(0, 8);\r\n  \r\n  // Nombre de produits visibles selon la taille d",
    "constproductrecommen1": ";\r\n\r\nconst ProductRecommendations: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const [currentIndex, setCurrentIndex] = useState(0);  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n  const touchStartX = useRef<number>(0);\r\n  const touchEndX = useRef<number>(0);\r\n  \r\n  // S√©lectionner 8 produits recommand√©s (m√©lange des premiers produits)\r\n  const recommendedProducts = products.slice(0, 8);\r\n  \r\n  // Nombre de produits visibles selon la taille d",
    "constsupplierproduct": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        ",
    "constsupplierproduct1": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "constsupplierproduct2": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "constsupplierproduct3": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  \r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        ",
    "constsupplierproduct4": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  \r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "constsupplierproduct5": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  \r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "constsupplierproduct6": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        ",
    "constsupplierproduct7": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "constsupplierproduct8": ";\r\n\r\nconst SupplierProductsPage: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  // Charger les produits depuis localStorage ou utiliser les donn√©es par d√©faut\r\n  const [productsList, setProductsList] = useState<Product[]>(() => {\r\n    try {\r\n      const saved = localStorage.getItem(STORAGE_KEY);\r\n      if (saved) {\r\n        const parsedProducts = JSON.parse(saved);\r\n        // V√©rifier que les donn√©es sont valides\r\n        if (Array.isArray(parsedProducts) && parsedProducts.length > 0) {\r\n          return parsedProducts;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(",
    "interfaceinfluencerp": ";\r\n\r\ninterface InfluencerProfile {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n    followers: number;\r\n    country: string;\r\n    category: string;\r\n    pricePerPost: number;\r\n    pricePerStory: number;\r\n    engagement: number;\r\n    verified: boolean;\r\n    languages: string[];\r\n    description: string;\r\n}\r\n\r\nconst SearchSection: React.FC = () => {\r\n    const [searchTerm, setSearchTerm] = useState(",
    "interfaceinfluencers": ";\r\n\r\ninterface InfluencerStar {\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n    followers: number;\r\n    country: string;\r\n    category: string;\r\n    pricePerPost: number;\r\n    pricePerStory: number;\r\n    engagement: number;\r\n    verified: boolean;\r\n    description: string;\r\n}\r\n\r\nconst StarsSection: React.FC = () => {\r\n    const [selectedInfluencer, setSelectedInfluencer] = useState<InfluencerStar | null>(null);\r\n    const [showContactModal, setShowContactModal] = useState(false);\r\n\r\n    const influencerStars: InfluencerStar[] = [\r\n        {\r\n            id: ",
    "interfacemessageidst": ";\r\n\r\ninterface Message {\r\n  id: string;\r\n  sender: string;\r\n  content: string;\r\n  timestamp: Date;\r\n  isRead: boolean;\r\n}\r\n\r\ninterface ChatWindowProps {\r\n  supplierId: string;\r\n  supplierName: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst ChatWindow: React.FC<ChatWindowProps> = ({ supplierName, onClose }) => {\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [newMessage, setNewMessage] = useState(",
    "interfacenotificatio": ";\r\n\r\ninterface Notification {\r\n  id: string;\r\n  type: NotificationType;\r\n  message: string;\r\n  title?: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface NotificationContextType {\r\n  notifications: Notification[];\r\n  addNotification: (notification: Omit<Notification, ",
    "interfaceproductreco": ";\r\n\r\ninterface ProductRecommendationCardProps {\r\n  product: Product;\r\n  index: number;\r\n}\r\n\r\nconst ProductRecommendationCard: React.FC<ProductRecommendationCardProps> = ({ product, index }) => {\r\n  const { t } = useLanguage();\r\n  const { currency } = useCurrency();\r\n\r\n  const convertedPrice = convertCurrency(product.price.cny, currency);\r\n  const formattedPrice = formatPrice(convertedPrice, currency);\r\n\r\n  return (\r\n    <div \r\n      className=\"group relative bg-white dark:bg-gray-800 rounded-2xl shadow-lg hover:shadow-2xl transform hover:-translate-y-2 transition-all duration-500 overflow-hidden border border-gray-100 dark:border-gray-700 animate-fade-in-up\"\r\n      style={{ animationDelay: `${index * 100}ms` }}\r\n    >      {/* Image Container */}\r\n      <div className=\"relative overflow-hidden rounded-t-2xl aspect-square\">\r\n        <img\r\n          src={product.images[0]}\r\n          alt={product.name}\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n          className=\"w-full h-full object-cover transition-transform duration-700 group-hover:scale-110\"\r\n        />\r\n        \r\n        {/* Overlay avec gradient */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n        \r\n        {/* Badge CE si certifi√© */}\r\n        {product.certifiedCE && (\r\n          <div className=\"absolute top-3 left-3 bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n            CE\r\n          </div>\r\n        )}\r\n        \r\n        {/* Actions flottantes */}\r\n        <div className=\"absolute top-3 right-3 flex flex-col space-y-2 opacity-0 group-hover:opacity-100 transition-all duration-300 translate-x-4 group-hover:translate-x-0\">\r\n          <button className=\"w-8 h-8 bg-white/90 dark:bg-gray-800/90 rounded-full flex items-center justify-center hover:bg-white dark:hover:bg-gray-700 transition-colors shadow-lg\">\r\n            <Heart className=\"w-4 h-4 text-gray-600 dark:text-gray-300 hover:text-red-500\" />\r\n          </button>\r\n          <button className=\"w-8 h-8 bg-white/90 dark:bg-gray-800/90 rounded-full flex items-center justify-center hover:bg-white dark:hover:bg-gray-700 transition-colors shadow-lg\">\r\n            <Eye className=\"w-4 h-4 text-gray-600 dark:text-gray-300 hover:text-blue-500\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contenu de la carte */}\r\n      <div className=\"p-5\">\r\n        {/* Nom du produit */}\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-300 font-display\">\r\n          {product.name}\r\n        </h3>\r\n\r\n        {/* Fournisseur */}\r\n        <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-3 font-reading\">\r\n          {product.supplier.name}\r\n        </p>\r\n\r\n        {/* Prix */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex flex-col\">\r\n            <span className=\"text-2xl font-bold text-blue-600 dark:text-blue-400 font-display\">\r\n              {formattedPrice}\r\n            </span>\r\n            {product.moq > 1 && (\r\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                MOQ: {product.moq}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Rating √©toiles */}\r\n          <div className=\"flex items-center space-x-1\">\r\n            {[...Array(5)].map((_, i) => (\r\n              <Star\r\n                key={i}\r\n                className={`w-4 h-4 ${\r\n                  i < 4 \r\n                    ? ",
    "switchtypecasesucces": ";\r\n    \r\n    switch (type) {\r\n      case 'success':\r\n        return <CheckCircle className={`${iconClass} text-green-500`} />;\r\n      case 'warning':\r\n        return <AlertTriangle className={`${iconClass} text-yellow-500`} />;\r\n      case 'error':\r\n        return <XCircle className={`${iconClass} text-red-500`} />;\r\n      case 'info':\r\n        return <Info className={`${iconClass} text-blue-500`} />;\r\n      case 'order':\r\n        return <ShoppingBag className={`${iconClass} text-purple-500`} />;\r\n      case 'payment':\r\n        return <CreditCard className={`${iconClass} text-green-500`} />;\r\n      case 'shipment':\r\n        return <Truck className={`${iconClass} text-blue-500`} />;\r\n      case 'system':\r\n        return <Settings className={`${iconClass} text-gray-500`} />;\r\n      default:\r\n        return <Info className={`${iconClass} text-gray-500`} />;\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: Notification['priority']) => {\r\n    switch (priority) {\r\n      case 'urgent':\r\n        return 'border-l-red-500';\r\n      case 'high':\r\n        return 'border-l-orange-500';\r\n      case 'medium':\r\n        return 'border-l-yellow-500';\r\n      case 'low':\r\n        return 'border-l-gray-400';\r\n      default:\r\n        return 'border-l-gray-400';\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (date: Date) => {\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n    \r\n    if (diffInSeconds < 60) {\r\n      return '√Ä l\\'instant';\r\n    } else if (diffInSeconds < 3600) {\r\n      const minutes = Math.floor(diffInSeconds / 60);\r\n      return `Il y a ${minutes} min`;\r\n    } else if (diffInSeconds < 86400) {\r\n      const hours = Math.floor(diffInSeconds / 3600);\r\n      return `Il y a ${hours}h`;\r\n    } else if (diffInSeconds < 604800) {\r\n      const days = Math.floor(diffInSeconds / 86400);\r\n      return `Il y a ${days}j`;\r\n    } else {\r\n      return date.toLocaleDateString('fr-FR', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: '2-digit'\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!notification.isRead) {\r\n      onMarkAsRead(notification.id);\r\n    }\r\n    onNotificationClick(notification);\r\n  };\r\n\r\n  const handleMarkAsReadClick = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    onMarkAsRead(notification.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        relative p-4 border-l-4 ${getPriorityColor(notification.priority)}\r\n        ${notification.isRead \r\n          ? 'bg-white dark:bg-gray-800' \r\n          : 'bg-blue-50 dark:bg-blue-900/20'\r\n        }\r\n        hover:bg-gray-50 dark:hover:bg-gray-700\r\n        transition-all duration-200 cursor-pointer\r\n        border-b border-gray-200 dark:border-gray-600\r\n      `}\r\n      onClick={handleClick}\r\n    >\r\n      {/* Indicateur de notification non lue */}\r\n      {!notification.isRead && (\r\n        <div className=",
    "constfilenameoptions": ";\r\n            const fileName = options.fileName || `${timestamp}-${randomId}.${extension}`;\r\n            \r\n            resolve({\r\n              success: true,\r\n              url: `https://example.com/${folder}/${fileName}`,\r\n              progress: 100\r\n            });\r\n          }\r\n        } else {\r\n          onProgress?.(progress);\r\n        }\r\n      }, 150 + Math.random() * 200); // D√©lai variable pour simuler la r√©alit√©\r\n    });\r\n  }\r\n\r\n  ",
    "constfilenameoptions1": ";\r\n            const fileName = options.fileName || `${timestamp}-${randomId}.${extension}`;\r\n            \r\n            resolve({\r\n              success: true,\r\n              url: `https://example.com/${folder}/${fileName}`,\r\n              progress: 100\r\n            });\r\n          }\r\n        } else {\r\n          onProgress?.(progress);\r\n        }\r\n      }, 150 + Math.random() * 200); // D√©lai variable pour simuler la r√©alit√©\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Redimensionner une image\r\n   */\r\n  private resizeImage(\r\n    file: File,\r\n    options: { maxWidth: number; maxHeight: number; quality: number }\r\n  ): Promise<File> {\r\n    return new Promise((resolve, reject) => {\r\n      const canvas = document.createElement(",
    "createdatstringcompo": ";\r\n    created_at: string;\r\n}\r\n\r\n// Composant m√©moris√© pour chaque item de la liste\r\nconst CompanyItem = memo(({ company }: { company: Company }) => (\r\n    <div className=",
    "createdatstringcompo1": ";\r\n    created_at: string;\r\n}\r\n\r\n// Composant m√©moris√© pour chaque item de la liste\r\nconst CompanyItem = memo(({ company }: { company: Company }) => (\r\n    <div className=\"flex items-center p-4 bg-white border-b border-gray-100 hover:bg-gray-50 transition-colors duration-150\">\r\n        <div className=\"flex-shrink-0 w-12 h-12 mr-4\">\r\n            <OptimizedImage\r\n                src={company.logo || ",
    "valuestringpricenumb": ";\r\n    value: string;\r\n    price?: number;\r\n    available: boolean;\r\n}\r\n\r\nexport interface Supplier {\r\n    id: string;\r\n    name: string;\r\n    location: string;\r\n    rating: number;\r\n    verified: boolean;\r\n    responseTime: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport interface Product {\r\n    id?: string; // Optionnel car g√©n√©r√© par Firebase\r\n    name: string;\r\n    description: string;\r\n    longDescription: string;\r\n    price: number;\r\n    moq: number;\r\n    category: string;\r\n    images: ProductImage[];\r\n    variants: ProductVariant[];\r\n    supplier: Supplier;\r\n    stock: number;\r\n    tags: string[];\r\n    deliveryTime: {\r\n        min: number;\r\n        max: number;\r\n        unit: ",
    "valuestringpricenumb1": ";\r\n    value: string;\r\n    price?: number;\r\n    available: boolean;\r\n}\r\n\r\nexport interface Supplier {\r\n    id: string;\r\n    name: string;\r\n    location: string;\r\n    rating: number;\r\n    verified: boolean;\r\n    responseTime: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport interface Product {\r\n    id?: string; // Optionnel car g√©n√©r√© par Firebase\r\n    name: string;\r\n    description: string;\r\n    longDescription: string;\r\n    price: number;\r\n    moq: number;\r\n    category: string;\r\n    images: ProductImage[];\r\n    variants: ProductVariant[];\r\n    supplier: Supplier;\r\n    stock: number;\r\n    tags: string[];\r\n    deliveryTime: {\r\n        min: number;\r\n        max: number;\r\n        unit: ",
    "fonctionpourajoutera": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        ",
    "fonctionpourajoutera1": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        ",
    "fonctionpourajoutera2": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        // Notification de succ√®s\r\n        showToast(`${product.name} ajout√© au devis (${quantity} unit√©s)`, ",
    "fonctionpourajoutera3": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        // Notification de succ√®s\r\n        showToast(`${product.name} ajout√© au devis (${quantity} unit√©s)`, ",
    "fonctionpourajoutera4": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        // Notification de succ√®s (optionnel)\r\n        console.log(`Produit ${product.name} ajout√© au devis avec quantit√©: ${quantity}`);\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "fonctionpourajoutera5": ";\r\n    };\r\n\r\n    // Fonction pour ajouter au devis\r\n    const handleAddToQuote = (product: ProductListItem) => {\r\n        const quantity = getQuantity(product.id!);\r\n        addToQuote(product, quantity);\r\n\r\n        // Notification de succ√®s (optionnel)\r\n        console.log(`Produit ${product.name} ajout√© au devis avec quantit√©: ${quantity}`);\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "specificationsrecord": ";\r\n    };\r\n    specifications: Record<string, string>;\r\n    discount?: {\r\n        minQty: number;\r\n        percentage: number;\r\n    };\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    active?: boolean; // Pour masquer/afficher des produits\r\n}\r\n\r\n// Interface simplifi√©e pour la liste des produits\r\nexport interface ProductListItem {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    moq: number;\r\n    category: string;\r\n    image: string; ",
    "specificationsrecord1": ";\r\n    };\r\n    specifications: Record<string, string>;\r\n    discount?: {\r\n        minQty: number;\r\n        percentage: number;\r\n    };\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    active?: boolean; // Pour masquer/afficher des produits\r\n}\r\n\r\n// Interface simplifi√©e pour la liste des produits\r\nexport interface ProductListItem {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    moq: number;\r\n    category: string;\r\n    image: string; ",
    "specificationsrecord2": ";\r\n    };\r\n    specifications: Record<string, string>;\r\n    discount?: {\r\n        minQty: number;\r\n        percentage: number;\r\n    };\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n    active?: boolean; // Pour masquer/afficher des produits\r\n}\r\n\r\n// Interface simplifi√©e pour la liste des produits\r\nexport interface ProductListItem {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    moq: number;\r\n    category: string;\r\n    image: string; // URL de l",
    "limitcountnumberstar": ";\r\n  limitCount?: number;\r\n  startAfterDoc?: QueryDocumentSnapshot;\r\n}\r\n\r\nexport interface PaginatedResult<T> {\r\n  data: T[];\r\n  lastDoc?: QueryDocumentSnapshot;\r\n  hasMore: boolean;\r\n  total?: number;\r\n}\r\n\r\n/**\r\n * Service CRUD g√©n√©rique pour toutes les collections Firestore\r\n */\r\nexport class FirestoreCrudService<T extends { id?: string }> {\r\n  constructor(private collectionName: string) {}\r\n\r\n  /**\r\n   * Cr√©e un nouveau document\r\n   *",
    "limitcountnumberstar1": ";\r\n  limitCount?: number;\r\n  startAfterDoc?: QueryDocumentSnapshot;\r\n}\r\n\r\nexport interface PaginatedResult<T> {\r\n  data: T[];\r\n  lastDoc?: QueryDocumentSnapshot;\r\n  hasMore: boolean;\r\n  total?: number;\r\n}\r\n\r\n/**\r\n * Service CRUD g√©n√©rique pour toutes les collections Firestore\r\n */\r\nexport class FirestoreCrudService<T extends { id?: string }> {\r\n  constructor(private collectionName: string) {}\r\n\r\n  /**\r\n   * Cr√©e un nouveau document\r\n   *",
    "limitcountnumberstar2": ";\r\n  limitCount?: number;\r\n  startAfterDoc?: QueryDocumentSnapshot;\r\n}\r\n\r\nexport interface PaginatedResult<T> {\r\n  data: T[];\r\n  lastDoc?: QueryDocumentSnapshot;\r\n  hasMore: boolean;\r\n  total?: number;\r\n}\r\n\r\n/**\r\n * Service CRUD g√©n√©rique pour toutes les collections Firestore\r\n */\r\nexport class FirestoreCrudService<T extends { id?: string }> {\r\n  constructor(private collectionName: string) {}\r\n\r\n  /**\r\n   * Cr√©e un nouveau document\r\n   */\r\n  async create(data: Omit<T, ",
    "urlstringprogressnum": ";\r\n  url?: string;\r\n  progress?: number;\r\n}\r\n\r\nconst ImageUpload: React.FC<ImageUploadProps> = ({\r\n  onImageSelect,\r\n  onUpload,\r\n  maxImages = 10,\r\n  maxSizePerImage = 10, // 10MB par d√©faut\r\n  className = ",
    "urlstringprogressnum1": ";\r\n  url?: string;\r\n  progress?: number;\r\n}\r\n\r\nconst ImageUpload: React.FC<ImageUploadProps> = ({\r\n  onImageSelect,\r\n  onUpload,\r\n  maxImages = 10,\r\n  maxSizePerImage = 10, // 10MB par d√©faut\r\n  className = ",
    "silenomestencoreunec": ";\r\n  }\r\n  \r\n  // Si le nom est encore une cha√Æne simple, utiliser les traductions pr√©d√©finies\r\n  const productNameTranslations: Record<string, Record<UserLanguage, string>> = {\r\n    ",
    "silenomestencoreunec1": ";\r\n  }\r\n  \r\n  // Si le nom est encore une cha√Æne simple, utiliser les traductions pr√©d√©finies\r\n  const productNameTranslations: Record<string, Record<UserLanguage, string>> = {\r\n    ",
    "ifloadingreturnadmin": ";\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <AdminLayout>\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n        </div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* En-t√™te */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {t(",
    "importuserssearcheye": ";\r\nimport { Users, Search, Eye, MessageSquare, MapPin, Calendar, Mail, Phone, ShoppingBag } from ",
    "categorynamespanlink": ">\n                      {category.name}\n                    </span>\n                  </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section des cartes produits - D√©plac√©e en haut *",
    "categorynamespanlink1": ">\n                      {category.name}\n                    </span>\n                  </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section des cartes produits - D√©plac√©e en haut *",
    "categorynamespanlink2": ">\n                      {category.name}\n                    </span>\n                  </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section des cartes produits - D√©plac√©e en haut */}\n      <div className=",
    "tsupplierregistratio": ">\n                      {t('supplier.registration.validation')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Message personnalis√© pour les sourceurs avec animation */}\n            {role === 'sourcer' && (\n              <div \n                className=",
    "objectentriescurrenc": ">\n                  {Object.entries(currencyNames).map(([code, name]) => (\n                    <button\n                      key={code}\n                      onClick={() => handleCurrencyChange(code as UserCurrency)}\n                      className={`${currency === code ? 'bg-gray-100 dark:bg-gray-600' : ''} block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\n                    >\n                      {name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s */}\n            {user && (\n              <>\n                <div\n                  className=",
    "categorynamespanlink3": ">\n                  {category.name}\n                </span>\n              </Link>\n            ))}\n          </div>          </div>        </div>\n      </div>\n\n      {/* Section Recommandations - Positionn√©e avant les cartes de cat√©gories *",
    "categorynamespanlink4": ">\n                  {category.name}\n                </span>\n              </Link>\n            ))}\n          </div>          </div>        </div>\n      </div>\n\n      {/* Section Recommandations - Positionn√©e avant les cartes de cat√©gories */}\n      <div className=",
    "messagesquareclassna1": ">\n                <MessageSquare className=",
    "messagesquareclassna2": ">\n                <MessageSquare className=",
    "explorezparcategorie": ">\n                Explorez par cat√©gorie\n              </h3>\n              <p className=",
    "reseauglobalspandivd": ">\n                R√©seau global\n              </span>\n            </div>\n          </div>\n\n          <h2 className=",
    "reseauglobalspandivd1": ">\n                R√©seau global\n              </span>\n            </div>\n          </div>\n          \n          <h2 className=",
    "effetdebrillanceanim": ">\n                {/* Effet de brillance anim√© */}\n                <div className=",
    "effetdebrillanceanim1": ">\n                {/* Effet de brillance anim√© */}\n                <div className=",
    "rolecustomertrolecus": ">\n                {role === 'customer' && t('role.customerDescription')}\n                {role === 'supplier' && t('role.supplierDescription')}\n                {role === 'sourcer' && t('role.sourcerDescription')}\n                {role === 'influencer' && t('role.sourcerDescription')} {/* Utilise la m√™me description que sourceur */}\n              </p>\n            </div>\n\n            {/* Message personnalis√© pour les fournisseurs avec animation */}\n            {role === 'supplier' && (\n              <div \n                className=",
    "rolecustomertrolecus1": ">\n                {role === 'customer' && t('role.customerTitle')}\n                {role === 'supplier' && t('role.supplierTitle')}\n                {role === 'sourcer' && t('role.sourcerTitle')}\n                {role === 'influencer' && t('role.sourcerTitle')} {/* Utilise le m√™me titre que sourceur */}\n              </h4>\n              <p className=",
    "usermessagesmapmessa": ">\n                {user.messages.map((message: Message) => {\n                  const product = getProductById(message.supplierId);\n                  return (\n                    <div key={message.id} className=",
    "explorezparcategorie1": ">\n              Explorez par cat√©gorie\n            </h3>\n            <p className=",
    "etesvoussurdevouloir": ">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "etesvoussurdevouloir1": ">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "etesvoussurdevouloir2": ">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "etesvoussurdevouloir3": ">\n              √ätes-vous s√ªr de vouloir supprimer l",
    "etesvoussurdevouloir4": ">\n              √ätes-vous s√ªr de vouloir supprimer l'utilisateur <span className=",
    "etesvoussurdevouloir5": ">\n              √ätes-vous s√ªr de vouloir supprimer l'utilisateur <span className=",
    "carteelectroniquediv": ">\n            {/* Carte √âlectronique */}\n            <div className={`bg-gradient-to-br from-blue-200 via-blue-300 to-orange-300 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 hover:rotate-1 cursor-pointer group relative ${\n              visibleCards >= 1 ? 'translate-y-0 opacity-100 scale-100' : 'translate-y-8 opacity-0 scale-95'\n            }`}\n            style={{ transitionDelay: '200ms' }}>\n              <div className=",
    "carteelectroniquediv1": ">\n            {/* Carte √âlectronique */}\n            <div className={`bg-gradient-to-br from-blue-200 via-blue-300 to-orange-300 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 hover:rotate-1 cursor-pointer group relative ${visibleCards >= 1 ? 'translate-y-0 opacity-100 scale-100' : 'translate-y-8 opacity-0 scale-95'\n              }`}\n              style={{ transitionDelay: '200ms' }}>\n              <div className=",
    "etape1divclassname": ">\n            {/* √âtape 1 */}\n            <div className=",
    "etape1divclassname1": ">\n            {/* √âtape 1 */}\n            <div className=",
    "usermessageslength0d": ">\n            {user.messages.length > 0 ? (\n              <div className=",
    "recommandediviscurre": ">\n          Recommand√©\n        </div>\n      )}\n      \n      {isCurrentPlan && (\n        <div className=",
    "lapagequevousrecherc": ">\n        La page que vous recherchez n'existe pas ou a √©t√© d√©plac√©e.\n      </p>\n      <div className=",
    "elementsdecoratifsde": ">\n        {/* √âl√©ments d√©coratifs de fond */}\n        <div className=",
    "elementsdecoratifsde1": ">\n        {/* √âl√©ments d√©coratifs de fond */}\n        <div className=",
    "herosectionavecpaysa": ">\n      {/* Hero Section avec paysage chinois stylis√© *",
    "herosectionavecpaysa1": ">\n      {/* Hero Section avec paysage chinois stylis√© *",
    "herosectionavecpaysa2": ">\n      {/* Hero Section avec paysage chinois stylis√© */}\n      <div className=",
    "creeelecardcreatedat": ">\r\n                                                            Cr√©√©e le {card.createdAt.toLocaleDateString()} ‚Ä¢ Modifi√©e le {card.updatedAt.toLocaleDateString()}\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    {/* Actions */}\r\n                                                    <div className=",
    "carddatacompanynamec": ">\r\n                                                            {card.data.companyName} ‚Ä¢ {card.data.contactPerson}\r\n                                                        <",
    "spancarddownloadstel": ">\r\n                                                        <span>{card.downloads} t√©l√©chargements</span>\r\n                                                        <span>{card.shares} partages</span>\r\n                                                        <span>Template: {card.data.template}</span>\r\n                                                    </div>\r\n                                                    {!card.isDefault && (\r\n                                                        <button\r\n                                                            onClick={() => handleSetDefault(card.id)}\r\n                                                            className=",
    "repondrebuttondivdiv": ">\r\n                                                        R√©pondre\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Sidebar */}\r\n                    <div className=",
    "variantpricetofixed2": ">\r\n                                                    +{variant.price.toFixed(2)}‚Ç¨\r\n                                                </span>\r\n                                            )}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                        {/* S√©lecteur de quantit√© */}\r\n                        <div className=",
    "excellentfournisseur": ">\r\n                                                    Excellent fournisseur ! Qualit√© des produits irr√©prochable et livraison tr√®s rapide. Je recommande vivement.\r\n                                                </p>\r\n                                                <div className=",
    "productsupplierratin": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=",
    "productsupplierratin1": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=",
    "productsupplierratin2": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=",
    "shieldsize12verified": ">\r\n                                                <Shield size={12} />\r\n                                                V√©rifi√©\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=",
    "spanmodifieelecardup": ">\r\n                                                <span>Modifi√©e le {card.updatedAt.toLocaleDateString()}</span>\r\n                                                <div className=",
    "commandesrealiseesdi": ">\r\n                                                Commandes r√©alis√©es\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=",
    "livraisonatempsdivdi": ">\r\n                                                Livraison √† temps\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {activeTab === 'products' && (\r\n                            <div className=",
    "reductiondeproductdi": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d'action */}\r\n                                    <div className=",
    "reductiondeproductdi1": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d'action */}\r\n                                    <div className=",
    "reductiondeproductdi2": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d'action */}\r\n                                    <div className=",
    "tempsdereponsedivdiv": ">\r\n                                                Temps de r√©ponse\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=",
    "telephone": ">\r\n                                                T√©l√©phone\r\n                                            <",
    "telephonedivdivclass": ">\r\n                                                T√©l√©phone\r\n                                            </div>\r\n                                            <div className=",
    "suppliercontactphone": ">\r\n                                                {supplier.contact.phone}\r\n                                            <",
    "productdiscountperce": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=",
    "productdiscountperce1": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=",
    "productdiscountperce2": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=",
    "clocksize14repondenp": ">\r\n                                            <Clock size={14} />\r\n                                            R√©pond en {product.supplier.responseTime}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Variantes */}\r\n                        {Object.entries(variantsByType).map(([type, variants]) => (\r\n                            <div key={type} className=",
    "shieldsize12verified1": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=",
    "shieldsize12verified2": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=",
    "shieldsize12verified3": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=",
    "supplierbusinesscard": ">\r\n                                            <SupplierBusinessCard\r\n                                                supplierData={{\r\n                                                    name: supplier.name,\r\n                                                    logo: supplier.logo,\r\n                                                    contact: supplier.contact,\r\n                                                    location: supplier.location\r\n                                                }}\r\n                                                isOwner={isOwner}\r\n                                            ",
    "ajouteraudevis3": ">\r\n                                            Ajouter au devis\r\n                                        <",
    "caracteristiquesh4di": ">\r\n                                            Caract√©ristiques\r\n                                        </h4>\r\n                                        <div className=",
    "nomdecontact": ">\r\n                                            Nom de contact\r\n                                        <",
    "quantitelabeldivclas": ">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=",
    "quantitelabeldivclas1": ">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=",
    "quantitelabeldivclas2": ">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=",
    "rolelabelselectvalue": ">\r\n                                            R√¥le *\r\n                                        </label>\r\n                                        <select\r\n                                            value={newUser.role}\r\n                                            onChange={(e) => setNewUser({ ...newUser, role: e.target.value as any })}\r\n                                            className=",
    "telephone1": ">\r\n                                            T√©l√©phone\r\n                                        <",
    "telephone2": ">\r\n                                            T√©l√©phone\r\n                                        <",
    "telephonelabelinputt": ">\r\n                                            T√©l√©phone\r\n                                        </label>\r\n                                        <input\r\n                                            type=",
    "telephonelabelinputt1": ">\r\n                                            T√©l√©phone\r\n                                        </label>\r\n                                        <input\r\n                                            type=",
    "productdiscountperce3": ">\r\n                                        -{product.discount!.percentage}% d√®s {product.discount!.minQty} pcs\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <p className=",
    "buttononclickhandlea": ">\r\n                                        <button\r\n                                            onClick={() => handleAddToQuote(product)}\r\n                                            className={`w-full py-3 rounded-lg font-semibold transition-all duration-300 flex items-center justify-center gap-2 ${isProductInQuote\r\n                                                    ? 'bg-green-600 text-white hover:bg-green-700'\r\n                                                    : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                                                }`}\r\n                                        >\r\n                                            <ShoppingCart size={18} />\r\n                                            {isProductInQuote ? 'D√©j√† dans le devis' : 'Ajouter au devis'}\r\n                                        </button>\r\n\r\n                                        <button className=",
    "buttononclickhandlea1": ">\r\n                                        <button\r\n                                            onClick={() => handleAddToQuote(product)}\r\n                                            className={`w-full py-3 rounded-lg font-semibold transition-all duration-300 flex items-center justify-center gap-2 ${isProductInQuote\r\n                                                    ? 'bg-green-600 text-white hover:bg-green-700'\r\n                                                    : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                                                }`}\r\n                                        >\r\n                                            <ShoppingCart size={18} />\r\n                                            {isProductInQuote ? 'D√©j√† dans le devis' : 'Ajouter au devis'}\r\n                                        </button>\r\n\r\n                                        <button className=",
    "buttononclicktogglef": ">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                toggleFavorite(product.id!);\r\n                                                const isFav = isFavorite(product.id!);\r\n                                                showToast(\r\n                                                    isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                                    ",
    "buttononclicktogglef1": ">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                toggleFavorite(product.id!);\r\n                                                const isFav = isFavorite(product.id!);\r\n                                                showToast(\r\n                                                    isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                                    ",
    "buttononclicktogglef2": ">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                toggleFavorite(product.id!);\r\n                                                const isFav = isFavorite(product.id!);\r\n                                                showToast(\r\n                                                    isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                                    'success',\r\n                                                    'heart'\r\n                                                );\r\n                                            }}\r\n                                            className={`p-2 rounded-full transition-all duration-300 ${isFavorite(product.id!)\r\n                                                ? 'bg-red-500 text-white'\r\n                                                : 'bg-white text-gray-600 hover:bg-red-50 hover:text-red-500'\r\n                                                }`}\r\n                                        >\r\n                                            <Heart size={18} fill={isFavorite(product.id!) ? 'currentColor' : 'none'} />\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            onClick={() => openQuickView(product)}\r\n                                            className=",
    "categorielabelselect": ">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=",
    "categorielabelselect1": ">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=",
    "categorielabelselect2": ">\r\n                                        Cat√©gorie\r\n                                    </label>\r\n                                    <select\r\n                                        value={filters.category}\r\n                                        onChange={(e) => updateFilters({ category: e.target.value })}\r\n                                        className=",
    "dernieremiseajourtht": ">\r\n                                        Derni√®re mise √† jour\r\n                                    </th>\r\n                                    <th className=",
    "moqquantiteminimumla": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=",
    "moqquantiteminimumla1": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=",
    "moqquantiteminimumla2": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    </label>\r\n                                    <div className=",
    "specialitesh2divclas": ">\r\n                                        Sp√©cialit√©s\r\n                                    </h2>\r\n                                    <div className=",
    "isownercreezetperson": ">\r\n                                        {isOwner\r\n                                            ? 'Cr√©ez et personnalisez vos cartes de visite professionnelles. Partagez-les facilement avec vos clients et partenaires.'\r\n                                            : 'D√©couvrez les cartes de visite de ce fournisseur et t√©l√©chargez-les pour vos contacts.'\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n\r\n                                {/* Affichage conditionnel selon les permissions */}\r\n                                {canManageCards ? (\r\n                                    <BusinessCardGallery supplierId={supplierId} />\r\n                                ) : (\r\n                                    <div className=",
    "aproposdelentreprise": ">\r\n                                        √Ä propos de l'entreprise\r\n                                    </h2>\r\n                                    <p className=",
    "donneesencachespanh1": ">\r\n                                    (Donn√©es en cache)\r\n                                </span>\r\n                            )}\r\n                        </h1>\r\n                        <p className=",
    "instagramsize16butto": ">\r\n                                    <Instagram size={16} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Modal de contact */}\r\n            {showContactModal && selectedInfluencer && (\r\n                <div className=",
    "optionpostinstagramo": ">\r\n                                    <option>Post Instagram</option>\r\n                                    <option>Story Instagram</option>\r\n                                    <option>Campagne compl√®te</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=",
    "strongprochainesetap": ">\r\n                                    <strong>üîó Prochaines √©tapes :</strong>\r\n                                    <br />\r\n                                    1. Connectez-vous sur <code className=",
    "caracteristiquesprin": ">\r\n                                    Caract√©ristiques principales\r\n                                </h3>\r\n                                <div className=",
    "periodeh4divclassnam": ">\r\n                                    P√©riode\r\n                                </h4>\r\n                                <div className=",
    "reductiondeproductdi3": ">\r\n                                    R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                </div>\r\n                            )}\r\n                            <div className=",
    "typecolorcouleurtype": ">\r\n                                    {type === 'color' ? 'Couleur' : type === 'size' ? 'Taille' : 'Mat√©riau'}\r\n                                </h3>\r\n                                <div className=",
    "eyesize16voirdetails": ">\r\n                                <Eye size={16} />\r\n                                Voir d√©tails\r\n                            </button>\r\n                            {collab.status === 'pending' && (\r\n                                <>\r\n                                    <button className=",
    "share2size16partager": ">\r\n                                <Share2 size={16} />\r\n                                Partager\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Liste des filleuls r√©cents */}\r\n            <div className=",
    "buttononclickhandlec": ">\r\n                                <button\r\n                                    onClick={() => handleContact(influencer)}\r\n                                    className=",
    "buttononclicksetshow": ">\r\n                                <button\r\n                                    onClick={() => setShowContactForm(true)}\r\n                                    className=",
    "apercurapideh2button": ">\r\n                                Aper√ßu rapide\r\n                            </h2>\r\n                            <button\r\n                                onClick={closeQuickView}\r\n                                className=",
    "cartedevisiteentemps": ">\r\n                                Carte de visite en temps r√©el\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=",
    "categorielabelselect3": ">\r\n                                Cat√©gorie\r\n                            </label>\r\n                            <select\r\n                                value={filters.category}\r\n                                onChange={(e) => setFilters({ ...filters, category: e.target.value })}\r\n                                className=",
    "comptescreescreateda": ">\r\n                                Comptes cr√©√©s ({createdAccounts.length})\r\n                            </h3>\r\n                            <div className=",
    "comptesverifiesuniqu": ">\r\n                                Comptes v√©rifi√©s uniquement\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats */}\r\n            <div className=",
    "contacterlefournisse1": ">\r\n                                Contacter le fournisseur\r\n                            </h3>\r\n                            <button\r\n                                onClick={() => setShowContactForm(false)}\r\n                                className=",
    "creezetgerezvoscarte": ">\r\n                                Cr√©ez et g√©rez vos cartes de visite personnalis√©es\r\n                            </p>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleCreateNew}\r\n                            className=",
    "interfacesecuriseepo": ">\r\n                                Interface s√©curis√©e pour la gestion des comptes utilisateurs\r\n                            </p>\r\n                        </div>\r\n                        <div className=",
    "produitsdinteretlabe": ">\r\n                                Produits d'int√©r√™t\r\n                            </label>\r\n                            <div className=",
    "previsualisationh3pc": ">\r\n                                Pr√©visualisation\r\n                            </h3>\r\n                            <p className=",
    "quantitemoqproductmo": ">\r\n                                Quantit√© (MOQ: {product.moq})\r\n                            </h3>\r\n                            <div className=",
    "totalpricequantityto": ">\r\n                                {(totalPrice / quantity).toFixed(2)}‚Ç¨ par unit√©\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* D√©lai de livraison */}\r\n                        <div className=",
    "categoriedivlabelcla": ">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=",
    "categoriedivlabelcla1": ">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=",
    "categoriedivlabelcla2": ">\r\n                                {/* Cat√©gorie */}\r\n                                <div>\r\n                                    <label className=",
    "alertslength0aucunea": ">\r\n                                {alerts.length === 0 ? 'Aucune alerte pour le moment.' : 'Aucune alerte ne correspond aux filtres appliqu√©s.'}\r\n                            </p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=",
    "itemproductnameitemq": ">\r\n                                {item.product.name} - {item.quantity} unit√©s\r\n                            <",
    "itemproductnameitemq1": ">\r\n                                {item.product.name} - {item.quantity} unit√©s\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* LocalStorage info */}\r\n            <div className=",
    "paragraphtrimpdivdiv": ">\r\n                                {paragraph.trim()}\r\n                            </p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Sp√©cifications */}\r\n                <div className=",
    "productdescriptionpc": ">\r\n                                {product.description}\r\n                            </p>\r\n                        )}\r\n\r\n                        {/* Caract√©ristiques */}\r\n                        {product.features && (\r\n                            <div>\r\n                                <h3 className=",
    "searchqueryessayezde": ">\r\n                                {searchQuery\r\n                                    ? 'Essayez de modifier votre recherche'\r\n                                    : 'Cr√©ez votre premi√®re carte de visite personnalis√©e'\r\n                                }\r\n                            </p>\r\n                            {!searchQuery && (\r\n                                <button\r\n                                    onClick={handleCreateNew}\r\n                                    className=",
    "searchqueryaucunecar": ">\r\n                                {searchQuery ? 'Aucune carte trouv√©e' : 'Aucune carte de visite'}\r\n                            </h3>\r\n                            <p className=",
    "systemeconfigureavec": ">\r\n                                üéâ Syst√®me configur√© avec succ√®s !\r\n                                <span className=",
    "systemeconfigureavec1": ">\r\n                                üéâ Syst√®me configur√© avec succ√®s !\r\n                                <span className=",
    "clocksize12livraison": ">\r\n                              <Clock size={12} />\r\n                              Livraison pr√©vue: {formatDate(shipment.estimatedDelivery)}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=",
    "trucksize12expedieef": ">\r\n                              <Truck size={12} />\r\n                              Exp√©di√©e: {formatDate(shipment.shippedAt)}\r\n                            </div>\r\n                          )}\r\n                          {shipment.estimatedDelivery && (\r\n                            <div className=",
    "bellsize20notificati": ">\r\n                            <Bell size={20} />\r\n                            {notifications > 0 && (\r\n                                <span className=",
    "calendarsize12creeef": ">\r\n                            <Calendar size={12} />\r\n                            Cr√©√©e: {formatDate(shipment.createdAt)}\r\n                          </div>\r\n                          {shipment.shippedAt && (\r\n                            <div className=",
    "downloadsize12docdow": ">\r\n                            <Download size={12} />\r\n                            {doc.downloads} t√©l√©chargements\r\n                          </span>\r\n                          <span className=",
    "shoppingbagsize12der": ">\r\n                            <ShoppingBag size={12} />\r\n                            Derni√®re commande: {formatDate(customer.lastOrderDate)}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=",
    "trucksize20spanlivra": ">\r\n                            <Truck size={20} />\r\n                            <span>\r\n                                Livraison estim√©e: {product.deliveryTime.min}-{product.deliveryTime.max} {product.deliveryTime.unit === 'days' ? 'jours' : 'semaines'}\r\n                            </span>\r\n                        </div>\r\n\r\n                        {/* Boutons d'action */}\r\n                        <div className=",
    "buttononclickhandlea2": ">\r\n                            <button\r\n                                onClick={handleAddToQuote}\r\n                                className={`w-full py-4 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center justify-center gap-2 ${isProductInQuote\r\n                                        ? 'bg-green-600 text-white hover:bg-green-700'\r\n                                        : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700'\r\n                                    }`}\r\n                            >\r\n                                <ShoppingCart size={20} />\r\n                                {isProductInQuote ? 'D√©j√† dans le devis' : 'Ajouter au devis'}\r\n                            </button>\r\n\r\n                            <div className=",
    "aucunproduittrouveh3": ">\r\n                            Aucun produit trouv√©\r\n                        </h3>\r\n                        <p className=",
    "aucunproduittrouveh31": ">\r\n                            Aucun produit trouv√©\r\n                        </h3>\r\n                        <p className=",
    "contacterselectedinf": ">\r\n                            Contacter {selectedInfluencer.name}\r\n                        <",
    "essayezdemodifiervos": ">\r\n                            Essayez de modifier vos filtres ou de rechercher autre chose\r\n                        <",
    "essayezdemodifiervos1": ">\r\n                            Essayez de modifier vos filtres ou de rechercher autre chose\r\n                        <",
    "lareinitialisationco": ">\r\n                            La r√©initialisation compl√®te supprimera d√©finitivement tous les utilisateurs existants\r\n                            et cr√©era de nouveaux comptes avec des mots de passe par d√©faut.\r\n                        <",
    "lareinitialisationco1": ">\r\n                            La r√©initialisation compl√®te supprimera d√©finitivement tous les utilisateurs existants\r\n                            et cr√©era de nouveaux comptes avec des mots de passe par d√©faut.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats *",
    "lareinitialisationco2": ">\r\n                            La r√©initialisation compl√®te supprimera d√©finitivement tous les utilisateurs existants\r\n                            et cr√©era de nouveaux comptes avec des mots de passe par d√©faut.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats */}\r\n            {results && (\r\n                <div className=",
    "lesavantagesquifontl": ">\r\n                            Les avantages qui font la diff√©rence\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=",
    "marquerlubuttondivdi": ">\r\n                            Marquer lu\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Activit√© r√©cente am√©lior√©e */}\r\n              <Section icon={<Clock className=",
    "modifierleprospectpr": ">\r\n                            Modifier le prospect : {prospect.name}\r\n                        <",
    "repondrebuttonbutton": ">\r\n                            R√©pondre\r\n                          </button>\r\n                          <button className=",
    "rolelabeldivclassnam": ">\r\n                            R√¥le\r\n                        </label>\r\n                        <div className=",
    "specificationstechni": ">\r\n                            Sp√©cifications techniques\r\n                        </h2>\r\n                        <div className=",
    "verifiespandivdivcla": ">\r\n                            V√©rifi√©\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      <div className=",
    "cartedevisitedufourn": ">\r\n                            {/* Carte de visite du fournisseur */}\r\n                            <SupplierBusinessCard\r\n                                supplierData={{\r\n                                    name: supplier.name,\r\n                                    logo: supplier.logo,\r\n                                    contact: supplier.contact,\r\n                                    location: supplier.location\r\n                                }}\r\n                                isOwner={isOwner}\r\n                                onManageCards={() => setActiveTab(",
    "selecteurdequantited": ">\r\n                            {/* S√©lecteur de quantit√© */}\r\n                            <div className=",
    "etatdestablesh2divdi": ">\r\n                            √âtat des Tables\r\n                        </h2>\r\n                    </div>\r\n\r\n                    <div className=",
    "strongdangerstrongsu": ">\r\n                            ‚ö†Ô∏è <strong>DANGER:</strong> Supprime TOUS les utilisateurs existants. Op√©ration irr√©versible.\r\n                        </p>\r\n                        <button\r\n                            onClick={handlePurgeUsers}\r\n                            disabled={isPurging}\r\n                            className=",
    "activeele15juin2024p": ">\r\n                          Activ√©e le 15 juin 2024\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=",
    "votrecompteestproteg": ">\r\n                          Votre compte est prot√©g√© par l'authentification √† deux facteurs\r\n                        </p>\r\n                        <p className=",
    "filtercomponentdivdi": ">\r\n                        <FilterComponent />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Liste virtualis√©e avec recherche int√©gr√©e */}\r\n            <div className=",
    "buttononclickshownot": ">\r\n                        <button\r\n                          onClick={() => showNotification('info', `Notification ${notif.title} ${notif.enabled ? 'd√©sactiv√©e' : 'activ√©e'}`)}\r\n                          className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${notif.enabled ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-700'\r\n                            }`}\r\n                        >\r\n                          <span\r\n                            className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${notif.enabled ? 'translate-x-6' : 'translate-x-1'\r\n                              }`}\r\n                          />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Section>\r\n            </div>\r\n          )}\r\n\r\n          {tab === 'security' && (\r\n            <div className=",
    "divclassnamehfullbgg": ">\r\n                        <div className={`h-full bg-gradient-to-r ${stat.color} rounded-full animate-shimmer`} style={{ width: `${Math.min(stat.value * 10, 100)}%` }}></div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Favoris avec animations am√©lior√©es *",
    "divclassnamehfullbgg1": ">\r\n                        <div className={`h-full bg-gradient-to-r ${stat.color} rounded-full animate-shimmer`} style={{ width: `${Math.min(stat.value * 10, 100)}%` }}></div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Favoris avec animations am√©lior√©es *",
    "divclassnamehfullbgg2": ">\r\n                        <div className={`h-full bg-gradient-to-r ${stat.color} rounded-full animate-shimmer`} style={{ width: `${Math.min(stat.value * 10, 100)}%` }}></div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Favoris avec animations am√©lior√©es */}\r\n              <Section icon={<Heart className=",
    "accedezavotreespacec": ">\r\n                        Acc√©dez √† votre espace Chine Ton Usine\r\n                    </p>\r\n                    <div className=",
    "aucuninfluenceurtrou": ">\r\n                        Aucun influenceur trouv√©\r\n                    </h3>\r\n                    <p className=",
    "caracteristiquesh2di": ">\r\n                        Caract√©ristiques\r\n                    </h2>\r\n                    <div className=",
    "categoriespopulaires": ">\r\n                        Cat√©gories Populaires\r\n                    </h2>\r\n                    <p className=",
    "cemoisdivdivdivgraph": ">\r\n                        Ce mois\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Graphiques simplifi√©s */}\r\n            <div className=",
    "cettepageestencoursd": ">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir des fonctionnalit√©s de recherche avanc√©es.\r\n                    </p>\r\n\r\n                    <div className=",
    "cettepageestencoursd1": ">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir une exp√©rience personnalis√©e.\r\n                    </p>\r\n\r\n                    <div className=",
    "creerunnouvelutilisa": ">\r\n                        Cr√©er un nouvel utilisateur\r\n                    </h2>\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=",
    "descriptiondetaillee": ">\r\n                        Description d√©taill√©e\r\n                    </h2>\r\n                    <div className=",
    "decouvreznoscategori": ">\r\n                        D√©couvrez nos cat√©gories les plus demand√©es\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=",
    "essayezdemodifiervos2": ">\r\n                        Essayez de modifier vos crit√®res de recherche\r\n                    <",
    "essayezdemodifiervos3": ">\r\n                        Essayez de modifier vos crit√®res de recherche\r\n                    <",
    "essayezdemodifiervos4": ">\r\n                        Essayez de modifier vos crit√®res de recherche\r\n                    </p>\r\n                    <button\r\n                        onClick={() => {\r\n                            setSearchTerm('');\r\n                            clearFilters();\r\n                        }}\r\n                        className=",
    "gestiondelabasededon": ">\r\n                        Gestion de la Base de Donn√©es\r\n                    </h1>\r\n                    <p className=",
    "performancesrecentes": ">\r\n                        Performances r√©centes\r\n                    </h3>\r\n                    <div className=",
    "pretacommencerh2pcla": ">\r\n                        Pr√™t √† Commencer ?\r\n                    </h2>\r\n                    <p className=",
    "reponsedufournisseur": ">\r\n                        R√©ponse du fournisseur\r\n                      </span>\r\n                      <span className=",
    "specificationstechni1": ">\r\n                        Sp√©cifications techniques\r\n                    </h2>\r\n                    <div className=",
    "suppressiondefinitiv": ">\r\n                        Suppression d√©finitive de toutes les donn√©es\r\n                      </p>\r\n                      <button\r\n                        onClick={() => showNotification('error', 'Action sensible ! Contactez le support pour cette demande.')}\r\n                        className=",
    "surveillezetgereztou": ">\r\n                        Surveillez et g√©rez toutes les alertes syst√®me en temps r√©el\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Statistiques rapides */}\r\n                <div className=",
    "surveillezetgerezvot": ">\r\n                        Surveillez et g√©rez votre base de donn√©es, cr√©ez des sauvegardes et analysez les performances\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Statistiques g√©n√©rales */}\r\n                <div className=",
    "systemeultimedutilis": ">\r\n                        Syst√®me Ultime d'Utilisateurs\r\n                    </h2>\r\n                    <p className=",
    "voirquellesdonneesno": ">\r\n                        Voir quelles donn√©es nous stockons\r\n                      </p>\r\n                      <button\r\n                        onClick={() => showNotification('info', 'Ouverture de la page des donn√©es collect√©es')}\r\n                        className=",
    "enteteproduitdivh1cl": ">\r\n                        {/* En-t√™te produit */}\r\n                        <div>\r\n                            <h1 className=",
    "enteteproduitdivbadg": ">\r\n                        {/* En-t√™te produit */}\r\n                        <div>\r\n                            {/* Badges */}\r\n                            <div className=",
    "filtercomponentdivdi1": ">\r\n                        {filterComponent}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Indicateur de r√©sultats */}\r\n            <div className=",
    "resultspredivafficha": ">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* Affichage des comptes cr√©√©s */}\r\n            {createdAccounts.length > 0 && (\r\n                <div className=",
    "resultspredivresulta": ">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats du syst√®me ultime */}\r\n            {ultimateResult && ultimateResult.success && ultimateResult.accounts && (\r\n                <div className=",
    "evolutiondesvues7der": ">\r\n                        √âvolution des vues (7 derniers mois)\r\n                    </h3>\r\n                    <div className=",
    "metriquesdeperforman": ">\r\n                        üìä M√©triques de Performance\r\n                    </h3>\r\n                    <div className=",
    "settingssize16parame": ">\r\n                      <Settings size={16} />\r\n                      Param√®tres avanc√©s\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Section de s√©curit√© avanc√©e - Nouvelles fonctionnalit√©s */}\r\n              <Section icon={<Shield className=",
    "settingssize18parame": ">\r\n                      <Settings size={18} />\r\n                      Param√®tres de confidentialit√©\r\n                    </h4>\r\n                    <div className=",
    "spansignaleparitemre": ">\r\n                      <span>Signal√© par: {item.reportedBy}</span>\r\n                      <span>{formatDate(item.reportedAt)}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Actions */}\r\n                  {item.status === 'pending' && (\r\n                    <div className=",
    "datecreationththclas": ">\r\n                      Date cr√©ation\r\n                    </th>\r\n                    <th className=",
    "exploreznotrecatalog": ">\r\n                      Explorez notre catalogue et ajoutez vos produits pr√©f√©r√©s !\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=",
    "expeditionththclassn": ">\r\n                      Exp√©dition\r\n                    </th>\r\n                    <th className=",
    "roleththclassname": ">\r\n                      R√¥le\r\n                    </th>\r\n                    <th className=",
    "formatfilesizeimagef": ">\r\n                      {formatFileSize(image.file.size)}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de pr√©visualisation */}\r\n      {showPreview && (\r\n        <div className=",
    "buttononclickshownot1": ">\r\n                    <button\r\n                      onClick={() => showNotification('error', '2FA d√©sactiv√©e. Votre compte est moins s√©curis√©.')}\r\n                      className=",
    "divtailleformatfiles": ">\r\n                    <div>Taille: {formatFileSize(file.size)}</div>\r\n                    <div>Ajout√©: {file.uploadedAt.toLocaleDateString()}</div>\r\n                    {file.metadata?.width && file.metadata?.height && (\r\n                      <div>Dimensions: {file.metadata.width}x{file.metadata.height}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                <div className=",
    "li1strongcompteparde": ">\r\n                    <li>1. <strong>Compte Par D√©faut</strong> : Cr√©e admin@chinetonusine.com / admin123456</li>\r\n                    <li>2. <strong>Compte Personnalis√©</strong> : Modifiez les champs puis cr√©ez</li>\r\n                    <li>3. <strong>Comptes Test</strong> : Cr√©e 3 comptes admin diff√©rents</li>\r\n                    <li>4. <strong>Apr√®s cr√©ation</strong> : D√©connectez-vous et reconnectez-vous</li>\r\n                    <li>5. <strong>V√©rification</strong> : Redirection automatique vers /admin/dashboard</li>\r\n                </ol>\r\n            </div>\r\n\r\n            {/* Acc√®s rapide console */}\r\n            <div className=",
    "capaciteththclassnam": ">\r\n                    Capacit√©\r\n                  </th>\r\n                  <th className=",
    "chargementspandivhas": ">\r\n                    Chargement...\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {!hasMore && notifications.length > 0 && (\r\n                <div className=",
    "chargementspandivhas1": ">\r\n                    Chargement...\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {!hasMore && notifications.length > 0 && (\r\n                <div className=",
    "creationdecompteadmi": ">\r\n                    Cr√©ation de Compte Admin\r\n                </h3>\r\n            </div>\r\n\r\n            {/* Formulaire de cr√©ation personnalis√©e */}\r\n            <div className=",
    "departestimeththclas": ">\r\n                    D√©part estim√©\r\n                  </th>\r\n                  <th className=",
    "filleulsrecentsh3div": ">\r\n                    Filleuls r√©cents\r\n                </h3>\r\n\r\n                <div className=",
    "itineraireththclassn": ">\r\n                    Itin√©raire\r\n                  </th>\r\n                  <th className=",
    "telechargementsththc": ">\r\n                    T√©l√©chargements\r\n                  </th>\r\n                  <th className=",
    "telechargementsththc1": ">\r\n                    T√©l√©chargements\r\n                  </th>\r\n                  <th className=",
    "pourproductmoqunites": ">\r\n                    pour {product.moq} unit√©s\r\n                  </div>\r\n                </div>\r\n                <div className=",
    "pourproductmoqunites1": ">\r\n                    pour {product.moq} unit√©s\r\n                  </div>\r\n                </div>\r\n                <div className=",
    "creationdesutilisate": ">\r\n                    {/* Cr√©ation des utilisateurs essentiels */}\r\n                    <div className=",
    "fakemessagesmapmsgin": ">\r\n                    {fakeMessages.map((msg, index) => (\r\n                      <div\r\n                        key={msg.id}\r\n                        className=",
    "filteredinfluencersl": ">\r\n                    {filteredInfluencers.length} r√©sultat(s) trouv√©(s)\r\n                </div>\r\n            </div>\r\n\r\n            {/* Barre de recherche */}\r\n            <div className=",
    "formatfilesizeupload": ">\r\n                    {formatFileSize(uploadFile.file.size)}\r\n                  </p>\r\n                  \r\n                  {/* Barre de progr√®s */}\r\n                  {uploadFile.status === 'uploading' && (\r\n                    <div className=",
    "formatpriceunitprice": ">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  </div>\r\n                  <div className=",
    "formatpriceunitprice1": ">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  </div>\r\n                  <div className=",
    "influencerstarslengt": ">\r\n                    {influencerStars.length} c√©l√©brit√©s disponibles\r\n                </div>\r\n            </div>\r\n\r\n            <div className=",
    "iseditingbuttononcli": ">\r\n                    {isEditing ? (\r\n                      <>\r\n                        <button\r\n                          onClick={handleSaveProfile}\r\n                          className=",
    "socialnetworkselecto": ">\r\n                  <SocialNetworkSelector\r\n                    selectedNetworks={selectedNetworks}\r\n                    onChange={handleNetworkSelection}\r\n                    disabled={isLoading}\r\n                  />\r\n                </div>\r\n\r\n                {/* Nombre d'abonn√©s */}\r\n                <div className=",
    "categorieththclassna": ">\r\n                  Cat√©gorie\r\n                </th>\r\n                <th className=",
    "categorielabelselect4": ">\r\n                  Cat√©gorie *\r\n                </label>\r\n                <select\r\n                  value={metadata.category}\r\n                  onChange={(e) => setMetadata(prev => ({ ...prev, category: e.target.value }))}\r\n                  className=",
    "selectionnezuneconve": ">\r\n                  S√©lectionnez une conversation\r\n                </h3>\r\n                <p className=",
    "nouveauboutondereser": ">\r\n                  {/* Nouveau bouton de r√©servation interactif */}\r\n                  <button\r\n                    onClick={() => handleReserveSpace(container)}\r\n                    className=",
    "scoredesecuritedivcl": ">\r\n                  {/* Score de s√©curit√© */}\r\n                  <div className=",
    "objectentriescurrenc1": ">\r\n                  {Object.entries(currencyNames).map(([code, name]) => (\r\n                    <button\r\n                      key={code}\r\n                      onClick={() => handleCurrencyChange(code as UserCurrency)}\r\n                      className={`${currency === code ? 'bg-gray-100 dark:bg-gray-600' : ''\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\r\n                    >\r\n                      {name}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s */}\r\n            {user && (\r\n              <div\r\n                className=",
    "iseditingbuttononcli1": ">\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={handleSaveProfile}\r\n                        className=",
    "accessimplifiespandi": ">\r\n                  üöÄ Acc√®s Simplifi√©\r\n                </span>\r\n              </div>\r\n              <p className=",
    "messagesquareclassna3": ">\r\n                <MessageSquare className=",
    "adressesipautorisees": ">\r\n                Adresses IP autoris√©es (une par ligne)\r\n              <",
    "adressesipautorisees1": ">\r\n                Adresses IP autoris√©es (une par ligne)\r\n              </label>\r\n              <textarea\r\n                value={settings.allowedIPs.join('\\n')}\r\n                onChange={(e) => updateSetting('allowedIPs', e.target.value.split('\\n').filter(ip => ip.trim()))}\r\n                rows={4}\r\n                placeholder=",
    "categorielabelselect5": ">\r\n                Cat√©gorie *\r\n              </label>\r\n              <select\r\n                value={formData.category}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, category: e.target.value }))}\r\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.category ? 'border-red-500' : 'border-gray-300'\r\n                }`}\r\n              >\r\n                <option value=",
    "fichierslabelfileupl": ">\r\n                Fichiers *\r\n              </label>\r\n              <FileUpload\r\n                onFileSelect={handleFileSelect}\r\n                onUpload={handleCustomUpload}\r\n                maxFiles={5}\r\n                maxSizePerFile={20}\r\n                acceptedTypes={['.pdf', '.doc', '.docx', '.txt', '.jpg', '.jpeg', '.png']}\r\n              />\r\n            </div>\r\n\r\n            {/* Information sur les formats accept√©s */}\r\n            <div className=",
    "formatsacceptesh4ulc": ">\r\n                Formats accept√©s\r\n              </h4>\r\n              <ul className=",
    "moqproductmoqspandiv": ">\r\n                MOQ: {product.moq}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Rating √©toiles */}\r\n          <div className=",
    "plusbesoindechoisirv": ">\r\n                Plus besoin de choisir votre r√¥le. Connectez-vous directement avec vos identifiants.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=",
    "selectionnequantityc": ">\r\n                S√©lectionn√© ({quantity} CBM)\r\n              </span>\r\n            </div>\r\n            <div className=",
    "utilisecontainerused": ">\r\n                Utilis√© ({container.usedCapacity} CBM)\r\n              </span>\r\n            </div>\r\n            <div className=",
    "entetedivclassname4": ">\r\n                {/* En-t√™te */}\r\n                <div className=",
    "entetedivclassname5": ">\r\n                {/* En-t√™te */}\r\n                <div className=",
    "entetedivclassname6": ">\r\n                {/* En-t√™te */}\r\n                <div className=",
    "paneldegaucheediteur": ">\r\n                {/* Panel de gauche - √âditeur */}\r\n                <div className=",
    "evolutiondesvuesdivc": ">\r\n                {/* √âvolution des vues */}\r\n                <div className=",
    "conversationmessages": ">\r\n                {conversationMessages.map((message) => (\r\n                  <div\r\n                    key={message.id}\r\n                    className={`flex ${message.fromType === ",
    "filtereditemslengthr": ">\r\n                {filteredItems.length} r√©sultat{filteredItems.length > 1 ? ",
    "filtereditemslengthr1": ">\r\n                {filteredItems.length} r√©sultat{filteredItems.length > 1 ? 's' : ''}\r\n                {debouncedSearchTerm && ` pour ",
    "evolutiondescommande": ">\r\n                √âvolution des Commandes\r\n              </h3>\r\n              <ShoppingBag className=",
    "evolutiondesrevenush": ">\r\n                √âvolution des Revenus\r\n              </h3>\r\n              <BarChart3 className=",
    "messagesquareclassna4": ">\r\n              <MessageSquare className=",
    "messagesquareclassna5": ">\r\n              <MessageSquare className=",
    "span0spanspanavailab": ">\r\n              <span>0</span>\r\n              <span>{availableCapacity} CBM</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Barre de progression des capacit√©s */}\r\n        <div className=",
    "spanmoqproductmoquni": ">\r\n              <span>MOQ: {product.moq} unit√©s</span>\r\n              <span className=",
    "spanmoqproductmoquni1": ">\r\n              <span>MOQ: {product.moq} unit√©s</span>\r\n              <span className=",
    "activiterecenteh3div": ">\r\n              Activit√© R√©cente\r\n            </h3>\r\n            <div className=",
    "ajouterdesactivetab": ">\r\n              Ajouter des {activeTab}\r\n            <",
    "configurezlesparamet": ">\r\n              Configurez les param√®tres g√©n√©raux de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button\r\n            onClick={handleSave}\r\n            disabled={loading}\r\n            className=",
    "configurezvotrecompt": ">\r\n              Configurez votre compte et vos pr√©f√©rences\r\n            </p>\r\n          </div>\r\n          {hasChanges && (\r\n            <Button onClick={handleSave} className=",
    "coupdefoudreinevitab": ">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche */}\r\n            <form onSubmit={handleSearch} className=",
    "coupdefoudreinevitab1": ">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche */}\r\n            <form onSubmit={handleSearch} className=",
    "detailsdelacommandes": ">\r\n              D√©tails de la commande {selectedOrder.id}\r\n            </h3>\r\n            <div className=",
    "fichiersselectionnes": ">\r\n              Fichiers s√©lectionn√©s ({uploadFiles.length})\r\n            </h3>\r\n            <div className=",
    "glissezdeposezvosfic": ">\r\n              Glissez-d√©posez vos fichiers ici ou cliquez pour s√©lectionner\r\n            </p>\r\n            <p className=",
    "gerezlesconteneurset": ">\r\n              G√©rez les conteneurs et leurs capacit√©s\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={handleCreateContainer}\r\n            className=",
    "gereztouslesdocument": ">\r\n              G√©rez tous les documents de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button onClick={() => console.log('Upload document')} className=",
    "gereztouslesfourniss": ">\r\n              G√©rez tous les fournisseurs de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button onClick={() => console.log('Ajouter fournisseur')} className=",
    "gereztouslesutilisat": ">\r\n              G√©rez tous les utilisateurs de la plateforme\r\n            </p>\r\n          </div>          <div className=",
    "gerezvosdocumentsetf": ">\r\n              G√©rez vos documents et fichiers\r\n            </p>\r\n          </div>          <Button \r\n            className=",
    "gerezvosdocumentsetf1": ">\r\n              G√©rez vos documents et fichiers\r\n            </p>\r\n          </div>          <Button \r\n            className=",
    "parametresdelaplatef": ">\r\n              Param√®tres de la Plateforme\r\n            </h1>\r\n            <p className=",
    "reserverdelespaceh2p": ">\r\n              R√©server de l'espace\r\n            </h2>\r\n            <p className=",
    "suivezetgereztoutesl": ">\r\n              Suivez et g√©rez toutes les commandes de la plateforme\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "telephone3": ">\r\n              T√©l√©phone\r\n            <",
    "telephonelabelinputt2": ">\r\n              T√©l√©phone\r\n            </label>\r\n            <input\r\n              type=",
    "informationspersonne": ">\r\n              {/* Informations personnelles avec √©dition inline */}\r\n              <Section icon={<User className=",
    "languageselectoravec": ">\r\n              {/* Language selector avec isolation compl√®te */}\r\n              <div className=",
    "preferenceslinguisti": ">\r\n              {/* Pr√©f√©rences linguistiques et r√©gionales */}\r\n              <Section icon={<Globe className=",
    "arrayfromlengthmaxin": ">\r\n              {Array.from({ length: maxIndex + 1 }, (_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => goToSlide(index)}\r\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\r\n                    index === currentIndex\r\n                      ? 'bg-gradient-to-r from-blue-500 to-purple-500 w-8'\r\n                      : 'bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500'\r\n                  }`}\r\n                  aria-label={`Aller √† la page ${index + 1}`}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Call to action */}\r\n        <div className=",
    "textnouvellecommande": ">\r\n              {[\r\n                { text: 'Nouvelle commande de Marie Dupont', time: 'Il y a 2h', type: 'order' },\r\n                { text: 'Nouveau fournisseur approuv√©', time: 'Il y a 4h', type: 'supplier' },\r\n                { text: 'Commande livr√©e √† Jean Martin', time: 'Il y a 6h', type: 'delivery' },\r\n                { text: 'Nouveau utilisateur inscrit', time: 'Il y a 8h', type: 'user' },\r\n              ].map((activity, index) => (\r\n                <div key={index} className=",
    "currentyeartcopyrigh": ">\r\n              ¬© {currentYear} {t('copyright')} ‚Ä¢ Tous droits r√©serv√©s\r\n            </div>\r\n            <div className=",
    "cavavousspanclassnam": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam1": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam2": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam3": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam4": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam5": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam6": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "cavavousspanclassnam7": ">\r\n              √áA VA VOUS \r\n              <span className=",
    "searchclassnamestyle": ">\r\n            <Search className={`${styles.icon} text-gray-500 dark:text-gray-300`} />\r\n          </div>\r\n          \r\n          {/* Input de recherche *",
    "uploadsize16telechar": ">\r\n            <Upload size={16} />\r\n            T√©l√©charger un document\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "consultezetrepondeza": ">\r\n            Consultez et r√©pondez aux avis de vos clients\r\n          </p>\r\n        </div>\r\n\r\n        {/* Overview Cards */}\r\n        <div className=",
    "coupdefoudreinevitab2": ">\r\n            Coup de foudre in√©vitable.\r\n          </p>\r\n            {/* Bouton CTA */}\r\n          <div className=",
    "coupdefoudreinevitab3": ">\r\n            Coup de foudre in√©vitable.\r\n          </p>{/* Bouton CTA */}\r\n          <div className=",
    "deposezvosimagesicip": ">\r\n            D√©posez vos images ici\r\n          </p>\r\n          <p className=",
    "desactivelaccespubli": ">\r\n            D√©sactive l'acc√®s public au site\r\n          </p>\r\n        </div>\r\n        <label className=",
    "gerezlessignalements": ">\r\n            G√©rez les signalements et mod√©rez le contenu de la plateforme\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "gerezvosrelationscli": ">\r\n            G√©rez vos relations clients et suivez leur activit√©\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "mesexpeditionsh1pcla": ">\r\n            Mes Exp√©ditions\r\n          </h1>\r\n          <p className=",
    "moderationh1pclassna": ">\r\n            Mod√©ration\r\n          </h1>\r\n          <p className=",
    "quantiteareserverlab": ">\r\n            Quantit√© √† r√©server\r\n          </label>\r\n          <div className={`text-2xl font-bold text-blue-600 dark:text-blue-400 quantity-display ${quantityAnimating ? 'updating' : ''\r\n            }`}>\r\n            {quantity} CBM\r\n          </div>\r\n        </div>\r\n          <div className=",
    "repartitiondelacapac": ">\r\n            R√©partition de la capacit√©\r\n          </h3>            <div className=",
    "repartitiondesnotesh": ">\r\n            R√©partition des notes\r\n          </h3>\r\n          <div className=",
    "suivezetgereztoutesv": ">\r\n            Suivez et g√©rez toutes vos exp√©ditions\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=",
    "oucliquezpourselecti": ">\r\n            ou cliquez pour s√©lectionner des images\r\n          </p>\r\n          <p className=",
    "capaciteutiliseedivc": ">\r\n            {/* Capacit√© utilis√©e */}\r\n            <div\r\n              className=",
    "enteteavecfiltresdiv": ">\r\n            {/* En-t√™te avec filtres */}\r\n            <div className=",
    "enteteavecfiltresdiv1": ">\r\n            {/* En-t√™te avec filtres */}\r\n            <div className=",
    "enteteavecstatistiqu": ">\r\n            {/* En-t√™te avec statistiques */}\r\n            <div className=",
    "metadonneesdivclassn": ">\r\n            {/* M√©tadonn√©es */}\r\n            <div className=",
    "idinfoslabelinformat": ">\r\n            {[\r\n              { id: 'infos', label: 'Informations', icon: <User size={18} /> },\r\n              { id: 'settings', label: 'Param√®tres', icon: <Settings size={18} /> },\r\n              { id: 'security', label: 'S√©curit√©', icon: <ShieldCheck size={18} /> }\r\n            ].map((tabItem) => (\r\n              <button\r\n                key={tabItem.id}\r\n                onClick={() => setTab(tabItem.id)}\r\n                className={`flex-1 flex items-center justify-center px-6 py-4 font-medium transition-all duration-300 relative overflow-hidden ${tab === tabItem.id\r\n                  ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\r\n                  : 'text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-50 dark:hover:bg-gray-700/50'\r\n                  }`}\r\n              >\r\n                <div className=",
    "categoryproductsleng": ">\r\n            {category.products.length} produits trouv√©s dans {category.name}\r\n          <",
    "categoryproductsleng1": ">\r\n            {category.products.length} produits trouv√©s dans {category.name}\r\n          <",
    "categoryproductsleng2": ">\r\n            {category.products.length} produits trouv√©s dans {category.name}\r\n          </p>\r\n        </div>\r\n\r\n        {viewMode === 'grid' ? (\r\n          <div className=",
    "messagesmapmessagedi": ">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`flex ${\r\n                  message.sender === ",
    "productdescriptionpf": ">\r\n            {productDescription}\r\n          </p>\r\n          \r\n          {/* Fonctionnalit√©s principales */}\r\n          {product.featured && product.featured.length > 0 && (\r\n            <div className=",
    "divstrongmodeactuels": ">\r\n          <div>\r\n            <strong>Mode actuel :</strong> {uploadService['mockMode'] ? 'Simulation' : 'Production'}\r\n          </div>\r\n          <div>\r\n            <strong>URL API :</strong> {uploadService['baseUrl']}\r\n          </div>\r\n          <div>\r\n            <strong>Types support√©s :</strong> PDF, DOC, DOCX, TXT, JPG, PNG, XLSX\r\n          </div>\r\n          <div>\r\n            <strong>Taille max :</strong> 10MB par fichier (documents), 5MB (images)\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=",
    "devisepardefautlabel": ">\r\n          Devise par d√©faut\r\n        </label>\r\n        <select\r\n          value={settings.defaultCurrency}\r\n          onChange={(e) => updateSetting('defaultCurrency', e.target.value)}\r\n          className=",
    "demonstrationuploadh": ">\r\n          D√©monstration Upload\r\n        </h1>\r\n        <p className=",
    "deposezvosfichiersic": ">\r\n          D√©posez vos fichiers ici\r\n        </p>\r\n        <p className=",
    "languepardefautlabel": ">\r\n          Langue par d√©faut\r\n        </label>\r\n        <select\r\n          value={settings.defaultLanguage}\r\n          onChange={(e) => updateSetting('defaultLanguage', e.target.value)}\r\n          className=",
    "testezlesfonctionnal": ">\r\n          Testez les fonctionnalit√©s d'upload de fichiers et d'images\r\n        </p>\r\n      </div>\r\n\r\n      {/* Onglets */}\r\n      <div className=",
    "typesdefichiersautor": ">\r\n          Types de fichiers autoris√©s\r\n        </label>\r\n        <div className=",
    "oucliquezpourselecti1": ">\r\n          ou cliquez pour s√©lectionner des fichiers\r\n        </p>\r\n        <p className=",
    "iconederecherchedivc": ">\r\n          {/* Ic√¥ne de recherche */}\r\n          <div className=",
    "entetedivclassname7": ">\r\n        {/* En-t√™te */}\r\n        <div className=",
    "headeravecavataramel": ">\r\n        {/* Header avec avatar am√©lior√© */}\r\n        <div className=",
    "iconedivclassname": ">\r\n        {/* Ic√¥ne */}\r\n        <div className=",
    "particulesflottantes": ">\r\n        {/* Particules flottantes am√©lior√©es */}\r\n        <div className=",
    "notificationslength0": ">\r\n        {notifications.length === 0 ? (\r\n          <div className=",
    "notificationsmapnoti": ">\r\n        {notifications.map((notification) => (\r\n          <div\r\n            key={notification.id}\r\n            className={`p-4 rounded-lg shadow-lg transform transition-all duration-300 ${\r\n              notification.type === ",
    "selecteurdereseauxso": ">                {/* S√©lecteur de r√©seaux sociaux */}\r\n                <div className=",
    "voidremovenotificati": ">) => void;\r\n  removeNotification: (id: string) => void;\r\n  clearNotifications: () => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const NotificationProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n\r\n  const addNotification = (notification: Omit<Notification, ",
    "constnewnotification": ">) => {\r\n    const newNotification: Notification = {\r\n      ...notification,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setNotifications((prev) => [...prev, newNotification]);\r\n\r\n    // Auto-remove notification after 5 seconds\r\n    setTimeout(() => {\r\n      removeNotification(newNotification.id);\r\n    }, 5000);\r\n  };\r\n\r\n  const removeNotification = (id: string) => {\r\n    setNotifications((prev) => prev.filter((notification) => notification.id !== id));\r\n  };\r\n\r\n  const clearNotifications = () => {\r\n    setNotifications([]);\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        notifications,\r\n        addNotification,\r\n        removeNotification,\r\n        clearNotifications,\r\n      }}\r\n    >\r\n      {children}\r\n      <div className=",
    "returnproductcreated": ">) => {\r\n    return {\r\n        ...product,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n    };\r\n};\r\n\r\n// Service pour g√©rer les produits\r\nexport class ProductService {\r\n\r\n    // R√©cup√©rer tous les produits actifs\r\n    static async getAllProducts(): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION)\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            return querySnapshot.docs.map(doc => {\r\n                const product = convertFirestoreProduct(doc);\r\n                return {\r\n                    id: product.id!,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    moq: product.moq,\r\n                    category: product.category,\r\n                    image: product.images[0]?.url || ",
    "returnproductcreated1": ">) => {\r\n    return {\r\n        ...product,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n    };\r\n};\r\n\r\n// Service pour g√©rer les produits\r\nexport class ProductService {\r\n\r\n    // R√©cup√©rer tous les produits actifs\r\n    static async getAllProducts(): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION)\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            return querySnapshot.docs.map(doc => {\r\n                const product = convertFirestoreProduct(doc);\r\n                return {\r\n                    id: product.id!,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    moq: product.moq,\r\n                    category: product.category,\r\n                    image: product.images[0]?.url || ",
    "returnproductcreated2": ">) => {\r\n    return {\r\n        ...product,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n    };\r\n};\r\n\r\n// Service pour g√©rer les produits\r\nexport class ProductService {\r\n\r\n    // R√©cup√©rer tous les produits actifs\r\n    static async getAllProducts(): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION)\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            return querySnapshot.docs.map(doc => {\r\n                const product = convertFirestoreProduct(doc);\r\n                return {\r\n                    id: product.id!,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    moq: product.moq,\r\n                    category: product.category,\r\n                    image: product.images[0]?.url || ",
    "tryconstnewnotificat": ">) => {\r\n    try {\r\n      const newNotification = await notificationService.createNotification({\r\n        title: notification.title,\r\n        message: notification.message,\r\n        type: notification.type,\r\n        userId: notification.userId,\r\n        priority: notification.priority,\r\n        actionUrl: notification.actionUrl,\r\n        metadata: notification.metadata\r\n      });\r\n      \r\n      // Ajouter √† l",
    "tryconstnewnotificat1": ">) => {\r\n    try {\r\n      const newNotification = await notificationService.createNotification({\r\n        title: notification.title,\r\n        message: notification.message,\r\n        type: notification.type,\r\n        userId: notification.userId,\r\n        priority: notification.priority,\r\n        actionUrl: notification.actionUrl,\r\n        metadata: notification.metadata\r\n      });\r\n      \r\n      // Ajouter √† l",
    "tryconstnewnotificat2": ">) => {\r\n    try {\r\n      const newNotification = await notificationService.createNotification({\r\n        title: notification.title,\r\n        message: notification.message,\r\n        type: notification.type,\r\n        userId: notification.userId,\r\n        priority: notification.priority,\r\n        actionUrl: notification.actionUrl,\r\n        metadata: notification.metadata\r\n      });\r\n      \r\n      // Ajouter √† l",
    "promisettryconstdocd": ">): Promise<T> {\r\n    try {\r\n      const docData = {\r\n        ...data,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), docData);\r\n      \r\n      return {\r\n        ...docData,\r\n        id: docRef.id\r\n      } as T;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la cr√©ation dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lit un document par ID\r\n   */\r\n  async read(id: string): Promise<T | null> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        return {\r\n          id: docSnap.id,\r\n          ...docSnap.data()\r\n        } as T;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la lecture dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Met √† jour un document\r\n   *",
    "promisettryconstdocd1": ">): Promise<T> {\r\n    try {\r\n      const docData = {\r\n        ...data,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, this.collectionName), docData);\r\n      \r\n      return {\r\n        ...docData,\r\n        id: docRef.id\r\n      } as T;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la cr√©ation dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Lit un document par ID\r\n   */\r\n  async read(id: string): Promise<T | null> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        return {\r\n          id: docSnap.id,\r\n          ...docSnap.data()\r\n        } as T;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la lecture dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Met √† jour un document\r\n   */\r\n  async update(id: string, data: Partial<Omit<T, ",
    "unitespandivhasdisco": ">/unit√©</span>\r\n                                </div>\r\n                                {hasDiscount && (\r\n                                    <div className=",
    "1etoileoptionselectd": ">1 √©toile</option>\r\n              </select>\r\n            </div>            <div className=",
    "2faactiveeh4pclassna": ">2FA activ√©e</h4>\r\n                        <p className=",
    "divblobsmorphiquesde": "></div>\n\n          {/* Blobs morphiques d√©coratifs */}\n          <div className=",
    "divgradientoverlayan": "></div>\n\n          {/* Gradient overlay anim√© pour garder l'esth√©tique originale */}\n          <div className=",
    "divparticulesdenergi": "></div>\r\n        \r\n        {/* Particules d'√©nergie */}\r\n        <div className=",
    "divparticulesdenergi1": "></div>\r\n        \r\n        {/* Particules d'√©nergie */}\r\n        <div className=",
    "divparticulesdelumie": "></div>\r\n        \r\n        {/* Particules de lumi√®re */}\r\n        <div className=",
    "divpulsationsenerget": "></div>\r\n        \r\n        {/* Pulsations √©nerg√©tiques */}\r\n        <div className=",
    "divdivdivdivboutonsd": "></div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Boutons d'√©dition mobiles */}\r\n                <div className=",
    "divdivdivdivfooterno": "></div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      {notifications.length > 0 && (\r\n        <div className=",
    "divsauvegardeautomat": "></div>\r\n                Sauvegarde automatique activ√©e\r\n              </div>\r\n              <div className=",
    "divsynchroniseaveclo": "></div>\r\n                Synchronis√© avec l'onglet D√©couvrir\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>      {/* Actions et filtres */}\r\n      <div className=",
    "divspanreservationsp": "></div>\r\n              <span>R√©servation...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <CheckCircle className=",
    "divsauvegardeautomat1": "></div>\r\n              Sauvegarde automatique activ√©e\r\n            </div>\r\n            <div className=",
    "divsynchroniseaveclo1": "></div>\r\n              Synchronis√© avec l'onglet D√©couvrir\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Actions et filtres */}\r\n      <div className=",
    "divdivdivdivinterfac": "></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\ninterface Company {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Quote {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Appointment {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Product {\r\n    id: string;\r\n}\r\n\r\nconst OptimizedDashboard: React.FC = memo(() => {\r\n    const { t } = useLanguage();\r\n\r\n    // Requ√™tes optimis√©es avec mise en cache\r\n    const { data: companies } = useOptimizedQuery<Company>('companies', {\r\n        filter: { status: 'active' },\r\n        select: 'id, status',\r\n        cacheKey: 'active-companies-count',\r\n        cacheTTL: 60000 // 1 minute\r\n    });\r\n\r\n    const { data: quotes } = useOptimizedQuery<Quote>('quotes', {\r\n        filter: { status: 'pending' },\r\n        select: 'id, status',\r\n        cacheKey: 'pending-quotes-count',\r\n        cacheTTL: 30000 // 30 secondes\r\n    });\r\n\r\n    const { data: appointments } = useOptimizedQuery<Appointment>('appointments', {\r\n        filter: { status: 'validated' },\r\n        select: 'id, status',\r\n        cacheKey: 'validated-appointments-count',\r\n        cacheTTL: 60000 // 1 minute\r\n    });\r\n\r\n    const { data: products } = useOptimizedQuery<Product>('products', {\r\n        select: 'id',\r\n        cacheKey: 'products-count',\r\n        cacheTTL: 300000 // 5 minutes\r\n    });\r\n\r\n    // M√©morisation des calculs\r\n    const stats = useMemo(() => ({\r\n        activeClientsCount: companies?.length || 0,\r\n        productsCount: products?.length || 0,\r\n        pendingQuotesCount: quotes?.length || 0,\r\n        upcomingAppointmentsCount: appointments?.length || 0\r\n    }), [companies, products, quotes, appointments]);\r\n\r\n    const trends = useMemo(() => ({\r\n        clientsTrend: { value: 12, isPositive: true },\r\n        quotesTrend: { value: 5, isPositive: true },\r\n        appointmentsTrend: { value: 2, isPositive: false }\r\n    }), []);\r\n\r\n    return (\r\n        <div className=",
    "promisevoidtryconstd": ">>): Promise<void> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      const updateData = {\r\n        ...data,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      await updateDoc(docRef, updateData);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la mise √† jour dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Supprime un document\r\n   */\r\n  async delete(id: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la suppression dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Liste tous les documents avec options de requ√™te\r\n   *",
    "promisevoidtryconstd1": ">>): Promise<void> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      const updateData = {\r\n        ...data,\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      await updateDoc(docRef, updateData);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la mise √† jour dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Supprime un document\r\n   */\r\n  async delete(id: string): Promise<void> {\r\n    try {\r\n      const docRef = doc(db, this.collectionName, id);\r\n      await deleteDoc(docRef);\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la suppression dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Liste tous les documents avec options de requ√™te\r\n   */\r\n  async list(options: QueryOptions = {}): Promise<T[]> {\r\n    try {\r\n      let q = collection(db, this.collectionName);\r\n      let queryRef: any = q;\r\n\r\n      // Appliquer les filtres\r\n      if (options.filters) {\r\n        for (const filter of options.filters) {\r\n          queryRef = query(queryRef, where(filter.field, filter.operator, filter.value));\r\n        }\r\n      }\r\n\r\n      // Appliquer l",
    "accesrefuseh2pclassn": ">Acc√®s refus√©</h2>\r\n                    <p className=",
    "actualiteslinkliuldi": ">Actualit√©s</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 2: Services */}\r\n          <div>\r\n            <h4 className=",
    "ajouterunnouvelutili": ">Ajouter un nouvel utilisateur<",
    "ajouterunnouvelutili1": ">Ajouter un nouvel utilisateur<",
    "ajouterunecouchedese": ">Ajouter une couche de s√©curit√© suppl√©mentaire<",
    "ajouterunecouchedese1": ">Ajouter une couche de s√©curit√© suppl√©mentaire<",
    "ajouterunecouchedese2": ">Ajouter une couche de s√©curit√© suppl√©mentaire</p>\r\n            </div>\r\n            <label className=",
    "alertesdesecuriteh4p": ">Alertes de s√©curit√©</h4>\r\n                <p className=",
    "annuleeoptionselectd": ">Annul√©e</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Orders Table */}\r\n        <div className=",
    "annuleesoptionselect": ">Annul√©es</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des commandes */}\r\n      <div className=",
    "approuvesppclassname": ">Approuv√©s</p>\r\n                <p className=",
    "approuvesppclassname1": ">Approuv√©s</p>\r\n                <p className=",
    "approuvesppclassname2": ">Approuv√©s</p>\r\n                <p className=",
    "arriveeppclassname": ">Arriv√©e</p>\r\n            <p className=",
    "aumoinsuncaracteresp": ">Au moins un caract√®re sp√©cial</p>\r\n            </div>\r\n            <label className=",
    "aucundocumenttrouveh": ">Aucun document trouv√©</h3>\r\n            <p className=",
    "aucundocumenttrouveh1": ">Aucun document trouv√©</h3>\r\n            <p className=",
    "aucunutilisateurtrou": ">Aucun utilisateur trouv√©.</span>\n        </div>\n        ) : (\n        <table className=",
    "authentificationadeu": ">Authentification √† deux facteurs</p>\r\n              <p className=",
    "authentificationadeu1": ">Authentification √† deux facteurs</p>\r\n            </div>\r\n            <label className=",
    "captchaactiveh4pclas": ">CAPTCHA activ√©</h4>\r\n              <p className=",
    "ceoptionselectdivqua": ">CE</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Quantit√© minimale */}\r\n          <div>\r\n            <label className=",
    "capacitedisponiblepp": ">Capacit√© disponible</p>\r\n            <p className=",
    "capacitetotaleppclas": ">Capacit√© totale</p>\r\n                <p className=",
    "capaciteslogistiques": ">Capacit√©s logistiques</h3>\r\n                            <div className=",
    "cataloguepersonnalis": ">Catalogue personnalis√©</span>\r\n                        </div>\r\n\r\n                        <div className=",
    "categorienontrouveeh": ">Cat√©gorie non trouv√©e</h1>\r\n          <p className=",
    "chargementdesdonnees": ">Chargement des donn√©es...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=",
    "configureespanbutton": ">Configur√©e</span>\r\n                        <button className=",
    "confirmeesppclassnam": ">Confirm√©es</p>\r\n              <p className=",
    "controledaccesetsurv": ">Contr√¥le d'acc√®s et surveillance</h3>\r\n        </div>\r\n\r\n        <div className=",
    "datededepartppclassn": ">Date de d√©part</p>\r\n            <p className=",
    "dernieresauvegardesp": ">Derni√®re sauvegarde</span>\r\n                                <span className=",
    "desmillionsdoffresad": ">Des millions d'offres adapt√©es aux besoins de votre entreprise</div>\r\n      </div>\r\n      {breadcrumb}\r\n      <div className=",
    "donneescollecteesh4p": ">Donn√©es collect√©es</h4>\r\n                      <p className=",
    "decouvrirlesproduits": ">D√©couvrir les produits</p>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Features Section */}\r\n            <div className=",
    "departppclassname": ">D√©part</p>\r\n            <p className=",
    "detectionautomatique": ">D√©tection automatique des attaques</p>\r\n            </div>\r\n            <label className=",
    "employesspanspanclas": ">Employ√©s</span>\r\n                                        <span className=",
    "exploreznoscategorie": ">Explorez nos cat√©gories</h2>\r\n        <div className=",
    "exportermesdonneesh4": ">Exporter mes donn√©es</h4>\r\n                      <p className=",
    "expeditionsous2448hp": ">Exp√©dition sous 24-48h partout en France</p>\n            </div>\n            <div className=",
    "expeditionsous2448hp1": ">Exp√©dition sous 24-48h partout en France</p>\n            </div>\n            <div className=",
    "expedieesppclassname": ">Exp√©di√©es</p>\r\n                <p className=",
    "expedieesppclassname1": ">Exp√©di√©es</p>\r\n                <p className=",
    "expedieesppclassname2": ">Exp√©di√©es</p>\r\n              <p className=",
    "experienceutilisateu": ">Exp√©rience utilisateur</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=",
    "fermeoptionselectdiv": ">Ferm√©</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=",
    "fermesppclassname": ">Ferm√©s</p>\r\n                <p className=",
    "fichiersuploadesuplo": ">Fichiers upload√©s ({uploadedFiles.length})</h3>\r\n              <div className=",
    "filtrespersonnalises": ">Filtres personnalis√©s</span>\r\n                        </div>\r\n\r\n                        <div className=",
    "fondeeenspanspanclas": ">Fond√©e en</span>\r\n                                        <span className=",
    "formatssupportesipun": ">Formats support√©s: IP unique (192.168.1.1) ou plage CIDR (192.168.1.0/24)</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=",
    "guideslinkliuldivcol": ">Guides</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 4: L√©gal */}\r\n          <div>\r\n            <h4 className=",
    "imagesuploadeesdivdi": ">Images upload√©es</div>\r\n                </div>\r\n                <div className=",
    "journaldexecutionspa": ">Journal d'ex√©cution :</span>\r\n                    </div>\r\n                    <pre className=",
    "livraisongratuitedes": ">Livraison gratuite d√®s 50‚Ç¨</span>\r\n                            </div>\r\n                            <div className=",
    "livresterlingoptions": ">Livre sterling (¬£)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Notifications am√©lior√©es */}\r\n              <Section icon={<Bell className=",
    "livreesppclassname": ">Livr√©es</p>\r\n                <p className=",
    "livreesppclassname1": ">Livr√©es</p>\r\n                <p className=",
    "legalh4ulclassname": ">L√©gal</h4>\r\n            <ul className=",
    "modificationsimporta": ">Modifications importantes</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('info', 'Alertes de profil d√©sactiv√©es')}\r\n                          className=",
    "modifierl": ">Modifier l",
    "modifierl1": ">Modifier l",
    "nonverifiesoptionsel": ">Non v√©rifi√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Reviews List */}\r\n        <div className=",
    "notificationsentemps": ">Notifications en temps r√©el</p>\r\n              </div>\r\n              <label className=",
    "pagenontrouveeh2pcla": ">Page non trouv√©e</h2>\n      <p className=",
    "paiementsecuriseh3pc": ">Paiement S√©curis√©</h3>\n              <p className=",
    "paiementsecuriseh3pc1": ">Paiement S√©curis√©</h3>\n              <p className=",
    "parametresh1pclassna": ">Param√®tres</h1>\r\n            <p className=",
    "parametresh1pclassna1": ">Param√®tres</h1>\r\n    <p className=",
    "partagerlesdonneesdu": ">Partager les donn√©es d'usage pour am√©liorer le service</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('success', 'Partage des statistiques activ√©')}\r\n                          className=",
    "plusde1000fournisseu": ">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© */}\n      <div className=",
    "plusde1000fournisseu1": ">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© */}\n      <div className=",
    "prioriteeleveeppclas": ">Priorit√© √©lev√©e</p>\r\n                <p className=",
    "prixestimeppclassnam": ">Prix estim√©</p>\r\n              <p className={`text-xl font-bold text-blue-600 dark:text-blue-400 ${priceAnimating ? 'price-animate' : ''\r\n                }`}>\r\n                {estimatedPrice.toLocaleString('fr-FR')} ‚Ç¨\r\n              </p>\r\n              <p className=",
    "produitcertifiespand": ">Produit certifi√©</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Sp√©cifications techniques */}\r\n                {product.specifications && (\r\n                    <div className=",
    "produitdequaliteprem": ">Produit de qualit√© premium</p>\r\n                </div>\r\n                <div className=",
    "produitnontrouveh1bu": ">Produit non trouv√©</h1>\r\n                    <button\r\n                        onClick={() => navigate('/products')}\r\n                        className=",
    "preparationppclassna": ">Pr√©paration</p>\r\n                <p className=",
    "previsualisationnond": ">Pr√©visualisation non disponible pour ce type de fichier.</p>\r\n                <Button\r\n                  onClick={() => window.open(previewUrl, '_blank')}\r\n                  className=",
    "pretsspanbuttonclass": ">Pr√™ts</span>\r\n                        <button className=",
    "quantitespandivclass": ">Quantit√©:</span>\r\n                                <div className=",
    "rapidespanbuttondivf": ">Rapide</span>\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Fonctionnalit√©s */}\r\n            <div className=",
    "rechercheavanceespan": ">Recherche avanc√©e</span>\r\n                        </div>\r\n\r\n                        <div className=",
    "recommandationsdesec": ">Recommandations de s√©curit√©</h4>\r\n            </div>\r\n            <ul className=",
    "recommande8caractere": ">Recommand√©: 8 caract√®res minimum</p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=",
    "recommandespanbutton": ">Recommand√©</span>\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createAdminOnly}\r\n                    disabled={isRunning}\r\n                    className=",
    "rejeteoptionselectdi": ">Rejet√©</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Moderation Items */}\r\n        <div className=",
    "rejetesoptionselectd": ">Rejet√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Liste des documents */}\r\n        <div className=",
    "rejetesoptionselectd1": ">Rejet√©s</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Liste des documents */}\r\n        <div className=",
    "rejetesppclassname": ">Rejet√©s</p>\r\n                <p className=",
    "restreindrelaccesace": ">Restreindre l'acc√®s √† certaines IP</p>\r\n            </div>\r\n            <label className=",
    "reinitialisationdesu": ">R√©initialisation des Utilisateurs</h2>\r\n            </div>\r\n\r\n            <div className=",
    "resultatsh3preclassn": ">R√©sultats :</h3>\r\n                    <pre className=",
    "resultatsh4preclassn": ">R√©sultats :</h4>\r\n                    <pre className=",
    "resultatsh4preclassn1": ">R√©sultats :</h4>\r\n                    <pre className=",
    "sansreponseppclassna": ">Sans r√©ponse</p>\r\n                <p className=",
    "scoredesecuriteh4div": ">Score de s√©curit√©</h4>\r\n                      <div className=",
    "sessionspluscourtesp": ">Sessions plus courtes pour les comptes administrateur (recommand√©: 60 minutes)</p>\r\n          </div>\r\n\r\n          <div className=",
    "specificationstechni2": ">Sp√©cifications techniques</h3>\r\n            <div className=",
    "statistiquesdesecuri": ">Statistiques de s√©curit√© (derni√®res 24h)</h3>\r\n        </div>\r\n\r\n        <div className=",
    "succesoptionselectse": ">Succ√®s</option>\r\n                            </select>\r\n\r\n                            <select\r\n                                value={filterPriority}\r\n                                onChange={(e) => setFilterPriority(e.target.value)}\r\n                                className=",
    "supprimerlecompte": ">Supprimer le compte<",
    "securiteducompteh3di": ">S√©curit√© du compte</h3>\r\n        <div className=",
    "securiterenforceeh3p": ">S√©curit√© renforc√©e</h3>\r\n                            <p className=",
    "selectionnerunecateg": ">S√©lectionner une cat√©gorie</option>\r\n                  {categories.map(category => (\r\n                    <option key={category} value={category}>{category}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=",
    "selectionnerunecateg1": ">S√©lectionner une cat√©gorie</option>\r\n                {categories.map(cat => (\r\n                  <option key={cat} value={cat}>{cat}</option>\r\n                ))}\r\n              </select>\r\n              {errors.category && (\r\n                <p className=",
    "tauxdereussitedivdiv": ">Taux de r√©ussite</div>\r\n                </div>\r\n                <div className=",
    "tentativesbloqueespp": ">Tentatives bloqu√©es</p>\r\n                <p className=",
    "testsdedebogagefireb": ">Tests de d√©bogage Firebase</h3>\r\n\r\n            <div className=",
    "totaldepensepdivdivf": ">Total d√©pens√©</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Footer */}\r\n                  <div className=",
    "touteslescategorieso": ">Toutes les cat√©gories</option>\r\n                                {categories.map(cat => (\r\n                                    <option key={cat} value={cat}>{cat}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=",
    "touteslescategorieso1": ">Toutes les cat√©gories</option>\r\n              {categories.map(cat => (\r\n                <option key={cat} value={cat}>{cat}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=",
    "transactionsprotegee": ">Transactions prot√©g√©es et garanties</p>\n            </div>\n            <div className=",
    "transactionsprotegee1": ">Transactions prot√©g√©es et garanties</p>\n            </div>\n            <div className=",
    "triavancespandivdivc": ">Tri avanc√©</span>\r\n                        </div>\r\n\r\n                        <div className=",
    "tresbonspanspanclass": ">Tr√®s bon</span>\r\n                        <span className=",
    "telechargementsppcla": ">T√©l√©chargements</p>\r\n                <p className=",
    "telechargementsppcla1": ">T√©l√©chargements</p>\r\n                <p className=",
    "telechargementsppcla2": ">T√©l√©chargements</p>\r\n                <p className=",
    "telephonealiuldivdiv": ">T√©l√©phone</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Section copyright simplifi√©e *",
    "telephonealiuldivdiv1": ">T√©l√©phone</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Section copyright simplifi√©e */}\r\n        <div className=",
    "votreprofilestvisibl": ">Votre profil est visible par les autres utilisateurs</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('info', 'Visibilit√© du profil modifi√©e')}\r\n                          className=",
    "verificationdelasess": ">V√©rification de la session...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=",
    "promisettryconstbatc": ">[]): Promise<T[]> {\r\n    try {\r\n      const batch = writeBatch(db);\r\n      const results: T[] = [];\r\n\r\n      for (const docData of documents) {\r\n        const docRef = doc(collection(db, this.collectionName));\r\n        const dataWithTimestamps = {\r\n          ...docData,\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        };\r\n        \r\n        batch.set(docRef, dataWithTimestamps);\r\n        results.push({\r\n          ...dataWithTimestamps,\r\n          id: docRef.id\r\n        } as T);\r\n      }\r\n\r\n      await batch.commit();\r\n      return results;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la cr√©ation en lot dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  ",
    "promisettryconstbatc1": ">[]): Promise<T[]> {\r\n    try {\r\n      const batch = writeBatch(db);\r\n      const results: T[] = [];\r\n\r\n      for (const docData of documents) {\r\n        const docRef = doc(collection(db, this.collectionName));\r\n        const dataWithTimestamps = {\r\n          ...docData,\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        };\r\n        \r\n        batch.set(docRef, dataWithTimestamps);\r\n        results.push({\r\n          ...dataWithTimestamps,\r\n          id: docRef.id\r\n        } as T);\r\n      }\r\n\r\n      await batch.commit();\r\n      return results;\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la cr√©ation en lot dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Suppression en lot\r\n   */\r\n  async deleteBatch(ids: string[]): Promise<void> {\r\n    try {\r\n      const batch = writeBatch(db);\r\n\r\n      for (const id of ids) {\r\n        const docRef = doc(db, this.collectionName, id);\r\n        batch.delete(docRef);\r\n      }\r\n\r\n      await batch.commit();\r\n    } catch (error) {\r\n      console.error(`Erreur lors de la suppression en lot dans ${this.collectionName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Utilitaire pour obtenir une valeur nested dans un objet\r\n   */\r\n  private getNestedValue(obj: any, path: string): any {\r\n    return path.split(",
    "availablecapacitycbm": ">{availableCapacity} CBM</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slider de s√©lection */}\r\n        <div className=",
    "errorsdescriptionpdi": ">{errors.description}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Prix et cat√©gorie */}\r\n          <div className=",
    "errorpdivdivnotifica": ">{error}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {notifications.length === 0 && !loading ? (\r\n            <div className=",
    "errorpdivdivnotifica1": ">{error}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {notifications.length === 0 && !loading ? (\r\n            <div className=",
    "filtereduserslengthu": ">{filteredUsers.length} utilisateur(s) trouv√©(s)</p>\n        </div>\n        <div className=",
    "productpricetofixed2": ">{product.price.toFixed(2)}‚Ç¨ / unit√©</p>\r\n                                <p className=",
    "tsuppliercategorieso": ">{t('supplier.categories.other')}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Capacit√© de production mensuelle */}\r\n                <div className=",
    "tsupplierregistratio1": ">{t('supplier.registration.validation')}</p>\r\n                    </div>\r\n                  </div>\r\n                )}                {/* Message personnalis√© pour les influenceurs */}\r\n                {selectedRole === 'influencer' && (\r\n                  <div className=",
    "divpaucunfichierdans": ">üìÅ</div>\r\n            <p>Aucun fichier dans cette cat√©gorie</p>\r\n          </div>\r\n        ) : (\r\n          <div className=",
    "debugauthh4divstrong": ">üîç Debug Auth</h4>\r\n            <div>\r\n                <strong>Loading:</strong> {loading ? 'Oui' : 'Non'}\r\n            </div>\r\n            <div>\r\n                <strong>User:</strong> {user ? `${user.name} (${user.role})` : 'Non connect√©'}\r\n            </div>\r\n            {user && (\r\n                <div>\r\n                    <strong>ID:</strong> {user.id}\r\n                </div>\r\n            )}\r\n            <div className=",
    "ajouteraudevis4": "Ajouter au devis",
    "ajouteraudevis5": "Ajouter au devis",
    "ajouteraudevis6": "Ajouter au devis",
    "ajouterfournisseur": "Ajouter fournisseur",
    "ajouterunarticle": "Ajouter un article",
    "ajouterunproduit1": "Ajouter un produit",
    "ajouterunproduit2": "Ajouter un produit",
    "ajouterunproduit3": "Ajouter un produit",
    "ajouterunproduit4": "Ajouter un produit",
    "ajouterunproduit5": "Ajouter un produit",
    "ajouteruntag": "Ajouter un tag...",
    "autonomieecouteurs": "Autonomie √©couteurs",
    "autonomieecouteurs1": "Autonomie √©couteurs",
    "bonjourjesouhaiterai": "Bonjour, je souhaiterais savoir si ma commande de smartphones sera bien livr√©e demain comme pr√©vu ?",
    "bonjourjesouhaiterai1": "Bonjour, je souhaiterais savoir si ma commande de smartphones sera bien livr√©e demain comme pr√©vu ?",
    "bonjourjesouhaiterai2": "Bonjour, je souhaiterais savoir si ma commande de smartphones sera bien livr√©e demain comme pr√©vu ?",
    "bonjourjesuisinteres": "Bonjour, je suis int√©ress√© par vos smartphones. Pouvez-vous me confirmer la disponibilit√© pour une commande de 100 unit√©s ?",
    "bonjourjesuisinteres1": "Bonjour, je suis int√©ress√© par vos smartphones. Pouvez-vous me confirmer la disponibilit√© pour une commande de 100 unit√©s ?",
    "bonjourjesuisinteres2": "Bonjour, je suis int√©ress√© par vos smartphones. Pouvez-vous me confirmer la disponibilit√© pour une commande de 100 unit√©s ?",
    "bureauergonomiquereg": "Bureau ergonomique r√©glable",
    "bureauergonomiquereg1": "Bureau ergonomique r√©glable",
    "bureauergonomiquereg2": "Bureau ergonomique r√©glable",
    "bureauergonomiquereg3": "Bureau ergonomique r√©glable",
    "ceproduitsembleetreu": "Ce produit semble √™tre une contrefa√ßon. Le prix est anormalement bas et les images ne correspondent pas √† un vrai iPhone.",
    "ceproduitsembleetreu1": "Ce produit semble √™tre une contrefa√ßon. Le prix est anormalement bas et les images ne correspondent pas √† un vrai iPhone.",
    "enregistrer": "Enregistrer",
    "enregistrerlesmodifi1": "Enregistrer les modifications",
    "essayezdemodifiervot": "Essayez de modifier votre recherche",
    "expeditiondansplusde": "Exp√©dition dans plus de 200 pays",
    "expeditiondansplusde1": "Exp√©dition dans plus de 200 pays",
    "idduproduitaajouterp": "ID du produit √† ajouter.\r\n   * @param quantity La quantit√© du produit √† ajouter.\r\n   * @param userId L",
    "idduproduitaajouterp1": "ID du produit √† ajouter.\r\n   * @param quantity La quantit√© du produit √† ajouter.\r\n   * @param userId L",
    "idduproduitaajouterp2": "ID du produit √† ajouter.\r\n   * @param quantity La quantit√© du produit √† ajouter.\r\n   * @param userId L",
    "impossibledesupprime": "Impossible de supprimer d√©finitivement le produit",
    "impossibledesupprime1": "Impossible de supprimer d√©finitivement le produit",
    "impossibledesupprime2": "Impossible de supprimer d√©finitivement le produit",
    "impossibledesupprime3": "Impossible de supprimer l\\",
    "impossibledesupprime4": "Impossible de supprimer le produit",
    "lenomdoitconteniraum": "Le nom doit contenir au moins 2 caract√®res",
    "lenomdoitconteniraum1": "Le nom doit contenir au moins 2 caract√®res",
    "lenomdoitconteniraum2": "Le nom doit contenir au moins 2 caract√®res",
    "lenomdoitconteniraum3": "Le nom doit contenir au moins 2 caract√®res",
    "lenomdoitconteniraum4": "Le nom doit contenir au moins 2 caract√®res",
    "lenomdoitconteniraum5": "Le nom doit contenir au moins 2 caract√®res",
    "lesmartphonefonction": "Le smartphone fonctionne bien mais la batterie se d√©charge tr√®s rapidement. Pas ce qui √©tait annonc√©.",
    "lesmartphonefonction1": "Le smartphone fonctionne bien mais la batterie se d√©charge tr√®s rapidement. Pas ce qui √©tait annonc√©.",
    "modifier2": "Modifier",
    "modifierleconteneur": "Modifier le conteneur",
    "modifierleproduit": "Modifier le produit",
    "nomprenom": "Nom Pr√©nom",
    "nomprenom1": "Nom Pr√©nom",
    "nomducontact": "Nom du contact",
    "nombredefollowerspou": "Nombre de followers pour chaque r√©seau",
    "nombredefollowerspou1": "Nombre de followers pour chaque r√©seau",
    "nomedoconteiner": "Nome do cont√™iner",
    "nomedoconteiner1": "Nome do cont√™iner",
    "nomeeobrigatrio": "Nome √© obrigat√≥rio",
    "nomeeobrigatrio1": "Nome √© obrigat√≥rio",
    "negociationdesprixen": "N√©gociation des prix en votre nom",
    "negociationdesprixen1": "N√©gociation des prix en votre nom",
    "paysetregiondeproduc": "Pays et r√©gion de production",
    "paysetregiondeproduc1": "Pays et r√©gion de production",
    "paysouregionmajorita": "Pays ou r√©gion majoritaire, √¢ge moyen",
    "paysouregionmajorita1": "Pays ou r√©gion majoritaire, √¢ge moyen",
    "paysregion": "Pays/R√©gion",
    "paysregion1": "Pays/R√©gion",
    "produitpotentielleme": "Produit potentiellement contrefait - iPhone 15 √† 50‚Ç¨",
    "produitpotentielleme1": "Produit potentiellement contrefait - iPhone 15 √† 50‚Ç¨",
    "rechercherparnomoude": "Rechercher par nom ou description...",
    "rechercherparnomdesc": "Rechercher par nom, description ou tags...",
    "sacadosprofessionnel": "Sac √† dos professionnel avec compartiment laptop 15.6\", port USB, mat√©riau imperm√©able et design ergonomique.",
    "smartphonehauteperfo": "Smartphone haute performance avec √©cran 6.7 pouces, processeur octa-core et appareil photo 108MP",
    "smartphonehauteperfo1": "Smartphone haute performance avec √©cran 6.7 pouces, processeur octa-core et appareil photo 108MP",
    "supporttelephone": "Support T√©l√©phone",
    "supporttelephone1": "Support T√©l√©phone",
    "supporttelephone2": "Support T√©l√©phone",
    "supprimer": "Supprimer",
    "supprimer1": "Supprimer",
    "supprimer2": "Supprimer",
    "supprimer3": "Supprimer",
    "supprimer4": "Supprimer",
    "supprimer5": "Supprimer",
    "supprimer6": "Supprimer",
    "supprimer7": "Supprimer",
    "supprimertouslesfich": "Supprimer tous les fichiers de cette cat√©gorie ?",
    "supprimertouslesfich1": "Supprimer tous les fichiers de cette cat√©gorie ?",
    "supprimertouslesfich2": "Supprimer tous les fichiers de cette cat√©gorie ?",
    "tressatisfaitedemona": "Tr√®s satisfaite de mon achat. Le smartphone correspond exactement √† la description et la livraison a √©t√© tr√®s rapide. Je recommande ce fournisseur.",
    "tressatisfaitedemona1": "Tr√®s satisfaite de mon achat. Le smartphone correspond exactement √† la description et la livraison a √©t√© tr√®s rapide. Je recommande ce fournisseur.",
    "telescopeastronomiqu": "T√©lescope astronomique 150mm",
    "telescopeastronomiqu1": "T√©lescope astronomique 150mm",
    "telescopeastronomiqu2": "T√©lescope astronomique 150mm",
    "telescopeastronomiqu3": "T√©lescope astronomique 150mm",
    "telephone4": "T√©l√©phone",
    "telephone5": "T√©l√©phone",
    "telephone6": "T√©l√©phone",
    "telephone7": "T√©l√©phone",
    "telephone8": "T√©l√©phone",
    "telephone9": "T√©l√©phone",
    "telephoneducontact": "T√©l√©phone du contact",
    "telephoneducontact1": "T√©l√©phone du contact",
    "telephoneducontact2": "T√©l√©phone du contact",
    "vouspouvezajouterjus": "Vous pouvez ajouter jusqu",
    "vouspouvezajouterjus1": "Vous pouvez ajouter jusqu'√† 8 images. Formats accept√©s: JPG, PNG, GIF. Taille max par image.",
    "classnamewfullpx3py21": "]\r\n                  });\r\n                }}\r\n                className=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"all\">Tous les types</option>\r\n                <option value=\"order\">Commandes</option>\r\n                <option value=\"payment\">Paiements</option>\r\n                <option value=\"shipment\">Exp√©ditions</option>\r\n                <option value=\"system\">Syst√®me</option>\r\n                <option value=\"info\">Informations</option>\r\n                <option value=\"warning\">Avertissements</option>\r\n                <option value=\"error\">Erreurs</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={clearFilters}\r\n                className=\"flex-1 px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\r\n              >\r\n                Effacer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Actions */}\r\n        {unreadCount > 0 && (\r\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-600\">\r\n            <button\r\n              onClick={handleMarkAllAsRead}\r\n              disabled={markingAllAsRead}\r\n              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {markingAllAsRead ? (\r\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <CheckCheck className=\"h-4 w-4\" />\r\n              )}\r\n              <span>Marquer tout comme lu</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Liste des notifications */}\r\n        <div\r\n          ref={scrollContainerRef}\r\n          className=\"flex-1 overflow-y-auto\"\r\n        >\r\n          {error && (\r\n            <div className=\"p-4 m-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n              <div className=\"flex items-center space-x-2 text-red-800 dark:text-red-300\">\r\n                <AlertCircle className=\"h-5 w-5\" />\r\n                <p className=\"text-sm\">{error}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {notifications.length === 0 && !loading ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full p-8 text-gray-500 dark:text-gray-400\">\r\n              <Bell className=\"h-12 w-12 mb-4 opacity-50\" />\r\n              <p className=\"text-lg font-medium mb-2\">Aucune notification</p>\r\n              <p className=\"text-sm text-center\">\r\n                Vous n",
    "classnamewfullpx3py22": "]\r\n                  });\r\n                }}\r\n                className=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"all\">Tous les types</option>\r\n                <option value=\"order\">Commandes</option>\r\n                <option value=\"payment\">Paiements</option>\r\n                <option value=\"shipment\">Exp√©ditions</option>\r\n                <option value=\"system\">Syst√®me</option>\r\n                <option value=\"info\">Informations</option>\r\n                <option value=\"warning\">Avertissements</option>\r\n                <option value=\"error\">Erreurs</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={clearFilters}\r\n                className=\"flex-1 px-3 py-2 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\r\n              >\r\n                Effacer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Actions */}\r\n        {unreadCount > 0 && (\r\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-600\">\r\n            <button\r\n              onClick={handleMarkAllAsRead}\r\n              disabled={markingAllAsRead}\r\n              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {markingAllAsRead ? (\r\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <CheckCheck className=\"h-4 w-4\" />\r\n              )}\r\n              <span>Marquer tout comme lu</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Liste des notifications */}\r\n        <div\r\n          ref={scrollContainerRef}\r\n          className=\"flex-1 overflow-y-auto\"\r\n        >\r\n          {error && (\r\n            <div className=\"p-4 m-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n              <div className=\"flex items-center space-x-2 text-red-800 dark:text-red-300\">\r\n                <AlertCircle className=\"h-5 w-5\" />\r\n                <p className=\"text-sm\">{error}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {notifications.length === 0 && !loading ? (\r\n            <div className=\"flex flex-col items-center justify-center h-full p-8 text-gray-500 dark:text-gray-400\">\r\n              <Bell className=\"h-12 w-12 mb-4 opacity-50\" />\r\n              <p className=\"text-lg font-medium mb-2\">Aucune notification</p>\r\n              <p className=\"text-sm text-center\">\r\n                Vous n",
    "fileindexprogresscon": "]\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}% upload√©`);\r\n        }\r\n      );\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => {\r\n        const result = results[index];\r\n        return {\r\n          id: `new-${Date.now()}-${index}`,\r\n          name: file.name,\r\n          type: metadata.type,\r\n          size: formatFileSize(file.size),\r\n          uploadDate: new Date().toISOString().split(",
    "fileindexprogresscon1": "]\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}% upload√©`);\r\n        }\r\n      );\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => {\r\n        const result = results[index];\r\n        return {\r\n          id: `new-${Date.now()}-${index}`,\r\n          name: file.name,\r\n          type: metadata.type,\r\n          size: formatFileSize(file.size),\r\n          uploadDate: new Date().toISOString().split(",
    "fileindexprogresscon2": "]\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}% upload√©`);\r\n        }\r\n      );\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => {\r\n        const result = results[index];\r\n        return {\r\n          id: `new-${Date.now()}-${index}`,\r\n          name: file.name,\r\n          type: metadata.type,\r\n          size: formatFileSize(file.size),\r\n          uploadDate: new Date().toISOString().split(",
    "forconstproductofadd": "]\r\n      }\r\n    ];\r\n    \r\n    for (const product of additionalProducts) {\r\n      await productService.addProduct(product);\r\n    }\r\n    \r\n    console.log(`‚úÖ ${additionalProducts.length} produits de test ajout√©s !`);\r\n    return { success: true, count: additionalProducts.length };\r\n    \r\n  } catch (error) {\r\n    console.error(",
    "forconstproductofadd1": "]\r\n      }\r\n    ];\r\n    \r\n    for (const product of additionalProducts) {\r\n      await productService.addProduct(product);\r\n    }\r\n    \r\n    console.log(`‚úÖ ${additionalProducts.length} produits de test ajout√©s !`);\r\n    return { success: true, count: additionalProducts.length };\r\n    \r\n  } catch (error) {\r\n    console.error(",
    "forconstproductofadd2": "]\r\n      }\r\n    ];\r\n    \r\n    for (const product of additionalProducts) {\r\n      await productService.addProduct(product);\r\n    }\r\n    \r\n    console.log(`‚úÖ ${additionalProducts.length} produits de test ajout√©s !`);\r\n    return { success: true, count: additionalProducts.length };\r\n    \r\n  } catch (error) {\r\n    console.error(",
    "afterabsoluteafterto": "] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderSecuritySettings = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">S√©curit√© du compte</h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n            <div>\r\n              <p className=\"font-medium text-gray-900 dark:text-white\">Authentification √† deux facteurs</p>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Ajouter une couche de s√©curit√© suppl√©mentaire</p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.security.twoFactorAuth}\r\n                onChange={(e) => handleInputChange(",
    "mapfilterbuttonkeyfi": "].map((filter) => (\r\n                        <button\r\n                            key={filter}\r\n                            className=\"px-4 py-2 bg-blue-50 dark:bg-blue-900/30 text-blue-600 dark:text-blue-400 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/50 transition-colors\"\r\n                        >\r\n                            {getStatusText(filter)}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid gap-6\">\r\n                {collaborations.map((collab) => (\r\n                    <div\r\n                        key={collab.id}\r\n                        className=\"bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-all duration-300\"\r\n                    >\r\n                        <div className=\"flex items-start justify-between mb-4\">\r\n                            <div>\r\n                                <div className=\"flex items-center gap-3 mb-2\">\r\n                                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                                        {collab.brand}\r\n                                    </h3>\r\n                                    <span className={`px-3 py-1 rounded-full text-sm font-medium flex items-center gap-1 ${getStatusColor(collab.status)}`}>\r\n                                        {getStatusIcon(collab.status)}\r\n                                        {getStatusText(collab.status)}\r\n                                    </span>\r\n                                </div>\r\n                                <p className=\"text-lg text-gray-700 dark:text-gray-300 font-medium\">\r\n                                    {collab.campaign}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                    {collab.budget.toLocaleString()}‚Ç¨\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                            {collab.description}\r\n                        </p>\r\n\r\n                        <div className=\"grid md:grid-cols-2 gap-6 mb-4\">\r\n                            <div>\r\n                                <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                                    P√©riode\r\n                                </h4>\r\n                                <div className=\"flex items-center gap-2 text-gray-600 dark:text-gray-400\">\r\n                                    <Calendar size={16} />\r\n                                    <span>\r\n                                        {new Date(collab.startDate).toLocaleDateString()} - {new Date(collab.endDate).toLocaleDateString()}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                                    Exigences\r\n                                </h4>\r\n                                <div className=\"space-y-1\">\r\n                                    {collab.requirements.map((req, index) => (\r\n                                        <div key={index} className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\r\n                                            <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\"></div>\r\n                                            {req}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                            <button className=\"flex-1 bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center gap-2\">\r\n                                <Eye size={16} />\r\n                                Voir d√©tails\r\n                            </button>\r\n                            {collab.status === ",
    "constproductspagerea": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    ",
    "constproductspagerea1": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    ",
    "constproductspagerea2": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    ",
    "constproductspagerea3": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Fonctions utilitaires\r\n    const toggleFavorite = (productId: string) => {\r\n        setFavorites(prev => {\r\n            const newFavorites = new Set(prev);\r\n            if (newFavorites.has(productId)) {\r\n                newFavorites.delete(productId);\r\n            } else {\r\n                newFavorites.add(productId);\r\n            }\r\n            return newFavorites;\r\n        });\r\n    };\r\n\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        const product = products.find(p => p.id === productId);\r\n        if (product && quantity >= product.moq) {\r\n            setQuantities(prev => ({ ...prev, [productId]: quantity }));\r\n        }\r\n    };\r\n\r\n    const getQuantity = (productId: string) => {\r\n        const product = products.find(p => p.id === productId);\r\n        return quantities[productId] || product?.moq || 0;\r\n    };\r\n\r\n    const calculateTotal = (product: ProductListItem, quantity: number) => {\r\n        let price = product.price * quantity;\r\n        if (product.discount && quantity >= product.discount.minQty) {\r\n            price = price * (1 - product.discount.percentage / 100);\r\n        }\r\n        return price;\r\n    };\r\n\r\n    const openQuickView = (product: ProductListItem) => {\r\n        setSelectedProduct(product);\r\n        setShowQuickView(true);\r\n        document.body.style.overflow = ",
    "constproductspagerea4": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n        stock: 50000,\r\n        tags: [",
    "constproductspagerea5": "];\r\n\r\nconst ProductsPage: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n        stock: 50000,\r\n        tags: [",
    "constproductspageb2b": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    ",
    "constproductspageb2b1": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    ",
    "constproductspageb2b2": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Fonctions utilitaires\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        const product = products.find(p => p.id === productId);\r\n        if (product && quantity >= product.moq) {\r\n            setQuantities(prev => ({ ...prev, [productId]: quantity }));\r\n        }\r\n    };\r\n\r\n    const getQuantity = (productId: string) => {\r\n        const product = products.find(p => p.id === productId);\r\n        return quantities[productId] || product?.moq || 0;\r\n    };\r\n\r\n    const calculateTotal = (product: ProductListItem, quantity: number) => {\r\n        let price = product.price * quantity;\r\n        if (product.discount && quantity >= product.discount.minQty) {\r\n            price = price * (1 - product.discount.percentage / 100);\r\n        }\r\n        return price;\r\n    };\r\n\r\n    const openQuickView = (product: ProductListItem) => {\r\n        setSelectedProduct(product);\r\n        setShowQuickView(true);\r\n        document.body.style.overflow = ",
    "constproductspageb2b3": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    ",
    "constproductspageb2b4": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    ",
    "constproductspageb2b5": "];\r\n\r\nconst ProductsPageB2B: React.FC = () => {\r\n    // R√©cup√©ration des produits depuis Firebase\r\n    const { products, loading, error } = useProducts();\r\n    const { filteredProducts, filters, updateFilters } = useProductFilters(products);\r\n\r\n    // Contextes pour favoris et devis\r\n    const { toggleFavorite, isFavorite } = useFavorites();\r\n    const { addToQuote, getItemQuantity } = useQuote();\r\n    const { showToast } = useToast();\r\n\r\n    // √âtats locaux\r\n    const [selectedProduct, setSelectedProduct] = useState<ProductListItem | null>(null);\r\n    const [showQuickView, setShowQuickView] = useState(false);\r\n    const [quantities, setQuantities] = useState<Record<string, number>>({});\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Fonctions utilitaires\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        const product = products.find(p => p.id === productId);\r\n        if (product && quantity >= product.moq) {\r\n            setQuantities(prev => ({ ...prev, [productId]: quantity }));\r\n        }\r\n    };\r\n\r\n    const getQuantity = (productId: string) => {\r\n        const product = products.find(p => p.id === productId);\r\n        return quantities[productId] || product?.moq || 0;\r\n    };\r\n\r\n    const calculateTotal = (product: ProductListItem, quantity: number) => {\r\n        let price = product.price * quantity;\r\n        if (product.discount && quantity >= product.discount.minQty) {\r\n            price = price * (1 - product.discount.percentage / 100);\r\n        }\r\n        return price;\r\n    };\r\n\r\n    const openQuickView = (product: ProductListItem) => {\r\n        setSelectedProduct(product);\r\n        setShowQuickView(true);\r\n        document.body.style.overflow = ",
    "divinformationsurles": "]}\r\n              />\r\n            </div>\r\n\r\n            {/* Information sur les formats accept√©s */}\r\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n              <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">\r\n                Formats accept√©s\r\n              </h4>\r\n              <ul className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\r\n                <li>‚Ä¢ Documents: PDF, DOC, DOCX, TXT</li>\r\n                <li>‚Ä¢ Images: JPG, JPEG, PNG</li>\r\n                <li>‚Ä¢ Taille maximum: 20 MB par fichier</li>\r\n                <li>‚Ä¢ Maximum 5 fichiers par upload</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Footer */}\r\n          <div className=\"px-6 py-4 bg-gray-50 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 flex justify-end space-x-3\">            <Button\r\n              onClick={onClose}\r\n              variant=\"outline\"\r\n              disabled={isUploading}\r\n            >\r\n              {t(",
    "divlistedesfichiersu": "]}\r\n            />\r\n          </div>\r\n\r\n          {/* Liste des fichiers upload√©s */}\r\n          {uploadedFiles.length > 0 && (\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Fichiers upload√©s ({uploadedFiles.length})</h3>\r\n              <div className=\"space-y-2\">\r\n                {uploadedFiles.map((url, index) => (\r\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <FileText className=\"w-5 h-5 text-blue-500\" />\r\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        {url.split(",
    "divdivstrongtypessup": "]}\r\n          </div>\r\n          <div>\r\n            <strong>Types support√©s :</strong> PDF, DOC, DOCX, TXT, JPG, PNG, XLSX\r\n          </div>\r\n          <div>\r\n            <strong>Taille max :</strong> 10MB par fichier (documents), 5MB (images)\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\r\n          <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n            <strong>Note :</strong> Actuellement en mode simulation. Les fichiers ne sont pas r√©ellement stock√©s. \r\n            Pour activer l",
    "setshowaddmodalfalse": "`);\r\n      }\r\n      \r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      console.error('Erreur lors de la sauvegarde:', err);\r\n      error('Erreur lors de la sauvegarde du produit');\r\n    }\r\n  };\r\n  const handleDeleteProduct = (productId: string) => {\r\n    if (confirm(t('supplier.products.deleteConfirm'))) {\r\n      setProductsList(prev => prev.filter(p => p.id !== productId));\r\n      success(t('supplier.products.deleteSuccess'));\r\n    }\r\n  };\r\n\r\n  const handleResetToDefault = () => {\r\n    if (confirm('√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.')) {\r\n      setProductsList(products);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      // R√©initialiser aussi le service global\r\n      productsService.resetToDefault();\r\n      success(t('supplier.products.resetSuccess'));\r\n    }\r\n  };\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=",
    "setshowaddmodalfalse1": "`);\r\n      }\r\n      \r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      console.error('Erreur lors de la sauvegarde:', err);\r\n      error(t('supplier.products.error.save'));\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = (productId: string) => {    if (confirm(t('supplier.products.confirm.delete'))) {\r\n      setProductsList(prev => prev.filter(p => p.id !== productId));\r\n      success(t('supplier.products.success.deleted'));\r\n    }\r\n  };\r\n\r\n  const handleResetToDefault = () => {    if (confirm(t('supplier.products.confirm.reset'))) {\r\n      setProductsList(products);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      // R√©initialiser aussi le service global\r\n      productsService.resetToDefault();\r\n      success(t('supplier.products.success.reset'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=",
    "elsecreerunproduitsi": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...(products[0].description as any),\r\n            fr: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : ['/api/placeholder/100/100'],\r\n          moq: productData.minOrder || 1,\r\n          price: {\r\n            cny: productData.price || 0,\r\n            unitCny: productData.price || 0\r\n          },\r\n          specifications: {\r\n            ...(products[0].specifications || {}),\r\n            brand: productData.brand || 'Marque inconnue',\r\n            origin: productData.origin || 'Origine inconnue',\r\n            material: productData.material || 'Mat√©riau non sp√©cifi√©',\r\n            modelNumber: productData.modelNumber || productData.sku || ''\r\n          }\r\n        };\r\n        \r\n        setProductsList(prev => [newProduct, ...prev]);\r\n        success(`${t('supplier.products.addSuccess')} ",
    "elsecreerunproduitsi1": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], // Copier toute la structure existante\r\n          id: `prod_${Date.now()}`,\r\n          name: productData.name,\r\n          category: productData.category,\r\n          description: {\r\n            ...(products[0].description as { fr?: string }),\r\n            fr: productData.description || `Description de ${productData.name}`\r\n          },\r\n          images: productData.images && productData.images.length > 0 \r\n            ? productData.images \r\n            : ['/api/placeholder/100/100'],\r\n          moq: productData.minOrder || 1,\r\n          price: {\r\n            cny: productData.price || 0,\r\n            unitCny: productData.price || 0\r\n          },\r\n          specifications: {\r\n            ...(products[0].specifications || {}),\r\n            brand: productData.brand || 'Marque inconnue',\r\n            origin: productData.origin || 'Origine inconnue',\r\n            material: productData.material || 'Mat√©riau non sp√©cifi√©',\r\n            modelNumber: productData.modelNumber || productData.sku || ''\r\n          }\r\n        };\r\n        \r\n        setProductsList(prev => [newProduct, ...prev]);\r\n        success(`${t('supplier.products.success.added')} ",
    "divlisteavecpaginati": "`}\r\n            </div>\r\n\r\n            {/* Liste avec pagination pour √©viter la virtualisation complexe */}\r\n            {filteredItems.length === 0 ? (\r\n                <div className=",
    "abonnementaudemontag": "abonnement au d√©montage\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  // Synchronise l‚ÄôURL et la s√©lection\r\n  useEffect(() => {\r\n    const match = location.pathname.match(",
    "acceptedepartagermes": "accepte de partager mes statistiques d√©taill√©es sur demande\",\n    \"mediaKit\": \"Kit m√©dia\",\n    \"message\": \"Message\",\n    \"messagePlaceholder\": \"Pr√©sentez-vous bri√®vement\",\n    \"socialMediaLinks\": \"Liens vers les r√©seaux sociaux\",\n    \"socialMediaLinksPlaceholder\": \"Instagram, TikTok, YouTube, etc.\",\n    \"followerCount\": \"Nombre de followers\",\n    \"followerCountPlaceholder\": \"Nombre de followers pour chaque r√©seau\",\n    \"category\": \"Cat√©gorie d",
    "accesetsurveillanceh": "acc√®s et surveillance</h3>\r\n        </div>\r\n\r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Liste blanche IP</h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Restreindre l",
    "actionnotificationac": "action */}\r\n            {notification.actionUrl && (\r\n              <div className=\"flex items-center text-xs text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-200\">\r\n                <ExternalLink className=\"h-3 w-3 mr-1\" />\r\n                <span>Voir d√©tails</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Badge de priorit√© */}\r\n          {notification.priority === ",
    "affairesmensuelsuppl": "affaires mensuel\",\n    \"supplier.dashboard.customerSatisfaction\": \"Satisfaction client\",\n    \"supplier.dashboard.viewAllProducts\": \"Voir tous les produits\",\n    \"supplier.dashboard.viewAnalytics\": \"Voir les analyses\",\n    \"supplier.dashboard.viewReviews\": \"Voir les avis\",\n    \"supplier.dashboard.importantAlerts\": \"Alertes importantes\",\n    \"supplier.dashboard.addProduct\": \"Ajouter un produit\",\n    \"supplier.dashboard.addProductDesc\": \"Cr√©er une nouvelle fiche produit\",\n    \"supplier.dashboard.messages\": \"Messages\",\n    \"supplier.dashboard.threeNewMessages\": \"3 nouveaux messages\",\n    \"supplier.dashboard.documents\": \"Documents\",\n    \"supplier.dashboard.manageDocuments\": \"G√©rer vos documents\",\n    \"supplier.dashboard.salesPerformance\": \"Performance des ventes\",\n    \"supplier.dashboard.revenue\": \"Chiffre d",
    "ajouterleproduit": "ajouter le produit",
    "approbationsupplierd": "approbation\",\n    \"supplier.documents.downloads\": \"T√©l√©chargements\",\n    \"supplier.documents.document\": \"Document\",\n    \"supplier.documents.type\": \"Type\",\n    \"supplier.documents.size\": \"Taille\",\n    \"supplier.documents.uploadDate\": \"Date d",
    "authentificationsecu": "authentification s√©curis√©\r\n                const currentUser = await secureAuthService.initialize();\r\n\r\n                if (mounted) {\r\n                    setUser(currentUser);\r\n                    setLoading(false);\r\n\r\n                    if (currentUser) {\r\n                        console.log(`‚úÖ Utilisateur connect√©: ${currentUser.name} (${currentUser.role})`);\r\n                    } else {\r\n                        console.log(",
    "authentificationsecu1": "authentification s√©curis√©\r\n                const currentUser = await secureAuthService.initialize();\r\n\r\n                if (mounted) {\r\n                    setUser(currentUser);\r\n                    setLoading(false);\r\n\r\n                    if (currentUser) {\r\n                        console.log(`‚úÖ Utilisateur connect√©: ${currentUser.name} (${currentUser.role})`);\r\n                    } else {\r\n                        console.log(",
    "authentificationadeu2": "authentification √† deux facteurs\r\n                        </p>\r\n                        <p className=\"text-xs text-green-500 dark:text-green-400 mt-1\">\r\n                          Activ√©e le 15 juin 2024\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\r\n                        <CheckCircle size={14} className=\"mr-1\" />\r\n                        S√©curis√©\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                    <div className=\"interactive-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700\">\r\n                      <div className=\"flex items-center gap-3 mb-3\">\r\n                        <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n                          <Smartphone size={16} className=\"text-blue-600 dark:text-blue-400\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium text-gray-900 dark:text-white\">Application mobile</h4>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Google Authenticator</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-xs text-green-600 dark:text-green-400 font-medium\">Configur√©e</span>\r\n                        <button className=\"text-xs px-3 py-1 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-full transition-colors\">\r\n                          Reconfigurer\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"interactive-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700\">\r\n                      <div className=\"flex items-center gap-3 mb-3\">\r\n                        <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n                          <Mail size={16} className=\"text-green-600 dark:text-green-400\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium text-gray-900 dark:text-white\">Codes de secours</h4>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">8 codes disponibles</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-xs text-blue-600 dark:text-blue-400 font-medium\">Pr√™ts</span>\r\n                        <button className=\"text-xs px-3 py-1 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900 dark:hover:bg-blue-800 text-blue-700 dark:text-blue-300 rounded-full transition-colors\">\r\n                          Voir les codes\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex gap-3\">\r\n                    <button\r\n                      onClick={() => showNotification(",
    "autonomieexceptionne": "autonomie exceptionnelle de 6h par √©couteur (24h avec le bo√Ætier) vous accompagne toute la journ√©e.\r\n\r\nLe design ergonomique assure un confort optimal m√™me lors d",
    "autonomieexceptionne1": "autonomie exceptionnelle de 6h par √©couteur (24h avec le bo√Ætier) vous accompagne toute la journ√©e.\r\n\r\nLe design ergonomique assure un confort optimal m√™me lors d",
    "contacttechnomaxcom": "contact@technomax.com",
    "dashboardnomessages": "dashboard.noMessages",
    "editprofile": "edit_profile",
    "entreeifsuppliercons": "entr√©e\r\n        if (supplier) {\r\n            const timer = setTimeout(() => setIsLoaded(true), 100);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [supplier]);\r\n\r\n    if (!supplier) {\r\n        return (\r\n            <div className=",
    "estlacartepardefaute": "est la carte par d√©faut, enlever le statut des autres\r\n        if (newCard.isDefault) {\r\n            cards.forEach(card => {\r\n                if (card.supplierId === newCard.supplierId) {\r\n                    card.isDefault = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        cards.push(newCard);\r\n        this.saveToStorage(cards);\r\n\r\n        return newCard;\r\n    }\r\n\r\n    // Mettre √† jour une carte existante\r\n    async updateCard(cardId: string, updates: Partial<SavedBusinessCard>): Promise<SavedBusinessCard | null> {\r\n        const cards = this.getStoredCards();\r\n        const cardIndex = cards.findIndex(card => card.id === cardId);\r\n\r\n        if (cardIndex === -1) {\r\n            return null;\r\n        }\r\n\r\n        const updatedCard = {\r\n            ...cards[cardIndex],\r\n            ...updates,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        ",
    "estlacartepardefaute1": "est la carte par d√©faut, enlever le statut des autres\r\n        if (newCard.isDefault) {\r\n            cards.forEach(card => {\r\n                if (card.supplierId === newCard.supplierId) {\r\n                    card.isDefault = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        cards.push(newCard);\r\n        this.saveToStorage(cards);\r\n\r\n        return newCard;\r\n    }\r\n\r\n    // Mettre √† jour une carte existante\r\n    async updateCard(cardId: string, updates: Partial<SavedBusinessCard>): Promise<SavedBusinessCard | null> {\r\n        const cards = this.getStoredCards();\r\n        const cardIndex = cards.findIndex(card => card.id === cardId);\r\n\r\n        if (cardIndex === -1) {\r\n            return null;\r\n        }\r\n\r\n        const updatedCard = {\r\n            ...cards[cardIndex],\r\n            ...updates,\r\n            updatedAt: new Date()\r\n        };\r\n\r\n        // Si c",
    "estmaintenantlacarte": "est maintenant la carte par d√©faut, enlever le statut des autres\r\n        if (updates.isDefault && updatedCard.isDefault) {\r\n            cards.forEach((card, index) => {\r\n                if (index !== cardIndex && card.supplierId === updatedCard.supplierId) {\r\n                    card.isDefault = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        cards[cardIndex] = updatedCard;\r\n        this.saveToStorage(cards);\r\n\r\n        return updatedCard;\r\n    }\r\n\r\n    // Supprimer une carte\r\n    async deleteCard(cardId: string): Promise<boolean> {\r\n        const cards = this.getStoredCards();\r\n        const initialLength = cards.length;\r\n        const filteredCards = cards.filter(card => card.id !== cardId);\r\n\r\n        if (filteredCards.length < initialLength) {\r\n            this.saveToStorage(filteredCards);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    ",
    "estmaintenantlacarte1": "est maintenant la carte par d√©faut, enlever le statut des autres\r\n        if (updates.isDefault && updatedCard.isDefault) {\r\n            cards.forEach((card, index) => {\r\n                if (index !== cardIndex && card.supplierId === updatedCard.supplierId) {\r\n                    card.isDefault = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        cards[cardIndex] = updatedCard;\r\n        this.saveToStorage(cards);\r\n\r\n        return updatedCard;\r\n    }\r\n\r\n    // Supprimer une carte\r\n    async deleteCard(cardId: string): Promise<boolean> {\r\n        const cards = this.getStoredCards();\r\n        const initialLength = cards.length;\r\n        const filteredCards = cards.filter(card => card.id !== cardId);\r\n\r\n        if (filteredCards.length < initialLength) {\r\n            this.saveToStorage(filteredCards);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // Dupliquer une carte\r\n    async duplicateCard(cardId: string, newName: string): Promise<SavedBusinessCard | null> {\r\n        const originalCard = await this.getCard(cardId);\r\n        if (!originalCard) {\r\n            return null;\r\n        }\r\n\r\n        return this.saveCard({\r\n            name: newName,\r\n            data: { ...originalCard.data },\r\n            supplierId: originalCard.supplierId,\r\n            isDefault: false,\r\n            isPublic: originalCard.isPublic,\r\n            tags: [...originalCard.tags]\r\n        });\r\n    }\r\n\r\n    // Marquer une carte comme t√©l√©charg√©e\r\n    async incrementDownloads(cardId: string): Promise<void> {\r\n        const cards = this.getStoredCards();\r\n        const card = cards.find(c => c.id === cardId);\r\n        if (card) {\r\n            card.downloads += 1;\r\n            this.saveToStorage(cards);\r\n        }\r\n    }\r\n\r\n    // Marquer une carte comme partag√©e\r\n    async incrementShares(cardId: string): Promise<void> {\r\n        const cards = this.getStoredCards();\r\n        const card = cards.find(c => c.id === cardId);\r\n        if (card) {\r\n            card.shares += 1;\r\n            this.saveToStorage(cards);\r\n        }\r\n    }\r\n\r\n    // Obtenir la carte par d√©faut d",
    "estpasautorisereturn": "est pas autoris√©`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleFileSelect = async (files: FileList) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    // V√©rifier le nombre maximum de fichiers\r\n    if (uploadFiles.length + fileArray.length > maxFiles) {\r\n      alert(`Vous ne pouvez t√©l√©charger que ${maxFiles} fichiers au maximum`);\r\n      return;\r\n    }\r\n\r\n    ",
    "estpasautorisereturn1": "est pas autoris√©`;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleFileSelect = async (files: FileList) => {\r\n    const fileArray = Array.from(files);\r\n    \r\n    // V√©rifier le nombre maximum de fichiers\r\n    if (uploadFiles.length + fileArray.length > maxFiles) {\r\n      alert(`Vous ne pouvez t√©l√©charger que ${maxFiles} fichiers au maximum`);\r\n      return;\r\n    }\r\n\r\n    // Valider chaque fichier\r\n    const validationErrors: string[] = [];\r\n    const validFiles: File[] = [];\r\n\r\n    for (const file of fileArray) {\r\n      const error = validateFile(file);\r\n      if (error) {\r\n        validationErrors.push(error);\r\n      } else {\r\n        validFiles.push(file);\r\n      }\r\n    }\r\n\r\n    if (validationErrors.length > 0) {\r\n      alert(validationErrors.join(",
    "estunfichieruploadei": "est un fichier upload√©\r\n        if (document.url) {\r\n          await uploadService.deleteFile(document.url);\r\n        }\r\n        \r\n        ",
    "estunfichieruploadei1": "est un fichier upload√©\r\n        if (document.url) {\r\n          await uploadService.deleteFile(document.url);\r\n        }\r\n        \r\n        // Retirer de la liste locale\r\n        setDocuments(prev => prev.filter(doc => doc.id !== document.id));\r\n        \r\n        alert(",
    "exportbuttondivdivcl": "export\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"interactive-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 text-center\">\r\n                      <div className=\"p-3 bg-orange-100 dark:bg-orange-900 rounded-full w-fit mx-auto mb-3\">\r\n                        <Eye size={20} className=\"text-orange-600 dark:text-orange-400\" />\r\n                      </div>\r\n                      <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Donn√©es collect√©es</h4>\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-3\">\r\n                        Voir quelles donn√©es nous stockons\r\n                      </p>\r\n                      <button\r\n                        onClick={() => showNotification(",
    "executionspandivprec": "ex√©cution :</span>\r\n                    </div>\r\n                    <pre className=\"whitespace-pre-wrap overflow-x-auto\">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats du syst√®me ultime */}\r\n            {ultimateResult && ultimateResult.success && ultimateResult.accounts && (\r\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                        <CheckCircle className=\"h-6 w-6 text-green-500 mt-0.5\" />\r\n                        <div className=\"flex-1\">\r\n                            <h3 className=\"font-bold text-green-800 mb-3 flex items-center gap-2\">\r\n                                üéâ Syst√®me configur√© avec succ√®s !\r\n                                <span className=\"text-sm bg-green-100 px-2 py-1 rounded-full\">\r\n                                    {ultimateResult.accounts.length} comptes\r\n                                </span>\r\n                            </h3>\r\n\r\n                            <div className=\"grid gap-3\">\r\n                                {ultimateResult.accounts.map((account: any, index: number) => (\r\n                                    <div key={index} className=\"bg-white rounded-lg p-4 border border-green-200\">\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-3\">\r\n                                            <div>\r\n                                                <div className=\"flex items-center gap-2 mb-1\">\r\n                                                    {account.role === ",
    "imageprincipalemoqpr": "image principale\r\n            moq: product.moq,\r\n            category: product.category,\r\n            supplier: {\r\n                name: product.supplier.name,\r\n                location: product.supplier.location,\r\n                rating: product.supplier.rating,\r\n                verified: product.supplier.verified\r\n            },\r\n            variants: product.variants?.map(v => v.name) || [],\r\n            stock: product.stock || 0,\r\n            tags: product.tags || [],\r\n            discount: product.discount\r\n        };\r\n\r\n        addToQuote(productForQuote, quantity, selectedVariants);\r\n\r\n        // Notification de succ√®s\r\n        showToast(`${product.name} ajout√© au devis (${quantity} unit√©s)`, ",
    "imageprincipalemoqpr1": "image principale\r\n            moq: product.moq,\r\n            category: product.category,\r\n            supplier: {\r\n                name: product.supplier.name,\r\n                location: product.supplier.location,\r\n                rating: product.supplier.rating,\r\n                verified: product.supplier.verified\r\n            },\r\n            variants: product.variants?.map(v => v.name) || [],\r\n            stock: product.stock || 0,\r\n            tags: product.tags || [],\r\n            discount: product.discount\r\n        };\r\n\r\n        addToQuote(productForQuote, quantity, selectedVariants);\r\n\r\n        // Notification de succ√®s\r\n        showToast(`${product.name} ajout√© au devis (${quantity} unit√©s)`, ",
    "imageprincipalesuppl": "image principale\r\n    supplier: {\r\n        name: string;\r\n        location: string;\r\n        rating: number;\r\n        verified: boolean;\r\n    };\r\n    description: string;\r\n    variants: string[]; // Noms simplifi√©s des variantes\r\n    stock: number;\r\n    tags: string[];\r\n    discount?: {\r\n        minQty: number;\r\n        percentage: number;\r\n    };\r\n}\r\n\r\nconst PRODUCTS_COLLECTION = ",
    "imageuploadeeconstup": "image upload√©e\r\n          const uploadedUrl = `https://example.com/uploads/${uploadImage.file?.name}`;\r\n          \r\n          setImages(prev => prev.map(img => \r\n            img.id === uploadImage.id \r\n              ? { ...img, progress: 100, status: ",
    "imagesh2imageuploado": "images\r\n            </h2>\r\n            <ImageUpload\r\n              onUpload={handleImageUpload}\r\n              maxImages={8}\r\n              maxSizePerImage={5}\r\n              existingImages={uploadedImages}\r\n              onRemoveExisting={handleRemoveImage}\r\n            />\r\n          </div>\r\n\r\n          {/* Statistiques */}\r\n          {uploadedImages.length > 0 && (\r\n            <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Statistiques</h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                    {uploadedImages.length}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-600 dark:text-blue-400\">Images upload√©es</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\r\n                    100%\r\n                  </div>\r\n                  <div className=\"text-sm text-green-600 dark:text-green-400\">Taux de r√©ussite</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\r\n                    5MB\r\n                  </div>\r\n                  <div className=\"text-sm text-purple-600 dark:text-purple-400\">Taille max</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Informations techniques */}\r\n      <div className=\"mt-8 bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\r\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\r\n          <Package className=\"w-5 h-5\" />\r\n          Informations techniques\r\n        </h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <strong>Mode actuel :</strong> {uploadService[",
    "importequelbureauout": "importe quel bureau ou table de chevet.\r\n\r\nLes LED indicatrices informent du statut de charge en temps r√©el, tandis que les protections int√©gr√©es pr√©viennent la surchauffe et les surtensions. Compatible avec iPhone, Samsung Galaxy, et tous les appareils Qi.\r\n\r\nDesign moderne et √©pur√©, parfait pour les environnements professionnels ou domestiques haut de gamme.`,\r\n        price: 1.80,\r\n        moq: 150,\r\n        category: ",
    "importequelbureauout1": "importe quel bureau ou table de chevet.\r\n\r\nLes LED indicatrices informent du statut de charge en temps r√©el, tandis que les protections int√©gr√©es pr√©viennent la surchauffe et les surtensions. Compatible avec iPhone, Samsung Galaxy, et tous les appareils Qi.\r\n\r\nDesign moderne et √©pur√©, parfait pour les environnements professionnels ou domestiques haut de gamme.`,\r\n        price: 1.80,\r\n        moq: 150,\r\n        category: ",
    "inscrirelinkdivplace": "inscrire\r\n                            </Link>\r\n                        </div>\r\n\r\n                        {/* Placeholder for future search */}\r\n                        <div className=\"max-w-2xl mx-auto relative\">\r\n                            <div className=\"relative\">\r\n                                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-6 h-6\" />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"üöß Nouvelle interface en cours de d√©veloppement...\"\r\n                                    disabled\r\n                                    className=\"w-full pl-12 pr-4 py-4 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-2xl text-lg text-gray-500 dark:text-gray-400 shadow-lg transition-all duration-300 cursor-not-allowed\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Stats Section */}\r\n            <div className=\"bg-white dark:bg-gray-800 shadow-xl border-y border-gray-200 dark:border-gray-700\">\r\n                <div className=\"container mx-auto px-4 py-12\">\r\n                    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\r\n                        {stats.map((stat, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className={`text-center transition-all duration-500 ${visibleCards > index ? ",
    "interetlabeldivclass": "int√©r√™t\r\n                            </label>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\r\n                                {productCategories.map(product => (\r\n                                    <label key={product} className=\"inline-flex items-center\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={formData.interestedProducts.includes(product)}\r\n                                            onChange={() => handleProductSelect(product)}\r\n                                            className=\"h-4 w-4 text-blue-600 rounded\"\r\n                                        />\r\n                                        <span className=\"ml-2 text-sm\">{product}</span>\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                Notes\r\n                            </label>\r\n                            <textarea\r\n                                name=\"notes\"\r\n                                value={formData.notes}\r\n                                onChange={handleChange}\r\n                                rows={3}\r\n                                className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                                placeholder=\"Notes suppl√©mentaires...\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                onClick={onClose}\r\n                            >\r\n                                Annuler\r\n                            </Button>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                disabled={loading}\r\n                            >\r\n                                {loading ? ",
    "suppliersettingscont": "supplier.settings.contactName",
    "suppliersettingscont1": "supplier.settings.contactPhone",
    "unfournisseurasyncge": "un fournisseur\r\n    async getPublicCards(supplierId: string): Promise<SavedBusinessCard[]> {\r\n        const cards = await this.getSupplierCards(supplierId);\r\n        return cards.filter(card => card.isPublic);\r\n    }\r\n\r\n    // M√©thodes priv√©es\r\n    private getStoredCards(): SavedBusinessCard[] {\r\n        try {\r\n            const stored = localStorage.getItem(this.storageKey);\r\n            if (!stored) return this.getInitialCards();\r\n\r\n            const cards = JSON.parse(stored);\r\n            ",
    "unfournisseurasyncge1": "un fournisseur\r\n    async getPublicCards(supplierId: string): Promise<SavedBusinessCard[]> {\r\n        const cards = await this.getSupplierCards(supplierId);\r\n        return cards.filter(card => card.isPublic);\r\n    }\r\n\r\n    // M√©thodes priv√©es\r\n    private getStoredCards(): SavedBusinessCard[] {\r\n        try {\r\n            const stored = localStorage.getItem(this.storageKey);\r\n            if (!stored) return this.getInitialCards();\r\n\r\n            const cards = JSON.parse(stored);\r\n            // Convertir les dates string en objets Date\r\n            return cards.map((card: any) => ({\r\n                ...card,\r\n                createdAt: new Date(card.createdAt),\r\n                updatedAt: new Date(card.updatedAt)\r\n            }));\r\n        } catch {\r\n            return this.getInitialCards();\r\n        }\r\n    }\r\n\r\n    private saveToStorage(cards: SavedBusinessCard[]): void {\r\n        try {\r\n            localStorage.setItem(this.storageKey, JSON.stringify(cards));\r\n        } catch (error) {\r\n            console.error(",
    "unfournisseurasyncge2": "un fournisseur\r\n    async getSupplierCards(supplierId: string): Promise<SavedBusinessCard[]> {\r\n        const cards = this.getStoredCards();\r\n        return cards.filter(card => card.supplierId === supplierId);\r\n    }\r\n\r\n    // Obtenir une carte sp√©cifique\r\n    async getCard(cardId: string): Promise<SavedBusinessCard | null> {\r\n        const cards = this.getStoredCards();\r\n        return cards.find(card => card.id === cardId) || null;\r\n    }\r\n\r\n    ",
    "unfournisseurasyncge3": "un fournisseur\r\n    async getSupplierCards(supplierId: string): Promise<SavedBusinessCard[]> {\r\n        const cards = this.getStoredCards();\r\n        return cards.filter(card => card.supplierId === supplierId);\r\n    }\r\n\r\n    // Obtenir une carte sp√©cifique\r\n    async getCard(cardId: string): Promise<SavedBusinessCard | null> {\r\n        const cards = this.getStoredCards();\r\n        return cards.find(card => card.id === cardId) || null;\r\n    }\r\n\r\n    // Sauvegarder une nouvelle carte\r\n    async saveCard(cardData: Omit<SavedBusinessCard, ",
    "unecranamoledhdde14p": "un √©cran AMOLED HD de 1.4 pouces, elle offre une clart√© exceptionnelle m√™me en plein soleil. Le syst√®me GPS int√©gr√© permet un suivi pr√©cis de vos activit√©s sportives, tandis que le capteur de fr√©quence cardiaque surveille votre sant√© 24h/24.\r\n\r\nAvec une autonomie exceptionnelle de 7 jours en utilisation normale et une certification d",
    "unecrandynamicamoled": "un √©cran Dynamic AMOLED 2X de 6.1 pouces, ce smartphone offre une exp√©rience visuelle immersive avec des couleurs vives et des d√©tails nets.",
    "unecrandynamicamoled1": "un √©cran Dynamic AMOLED 2X de 6.1 pouces, ce smartphone offre une exp√©rience visuelle immersive avec des couleurs vives et des d√©tails nets.",
    "uploadawaitnewpromis": "upload\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => ({\r\n        id: `new-${Date.now()}-${index}`,\r\n        name: file.name,\r\n        type: metadata.type,\r\n        size: formatFileSize(file.size),\r\n        uploadDate: new Date().toISOString().split(",
    "usineproductmodalcat": "usine\",\n    \"product.modal.category\": \"Cat√©gorie\",\n    \"product.modal.selectCategory\": \"S√©lectionnez une cat√©gorie\",\n    \"product.modal.minOrder\": \"Commande minimum\",\n    \"product.modal.minOrderPlaceholder\": \"Quantit√© minimum de commande\",\n    \"product.modal.stockAvailable\": \"Stock disponible\",\n    \"product.modal.tags\": \"Tags\",\n    \"product.modal.addTag\": \"Ajouter un tag...\",\n    \"product.modal.specifications\": \"Sp√©cifications techniques\",\n    \"product.modal.brand\": \"Marque\",\n    \"product.modal.brandPlaceholder\": \"Ex. Apple, Samsung...\",\n    \"product.modal.origin\": \"Origine\",\n    \"product.modal.originPlaceholder\": \"Ex. Chine, France...\",\n    \"product.modal.material\": \"Mat√©riau\",\n    \"product.modal.materialPlaceholder\": \"Ex. Plastique, M√©tal...\",\n    \"product.modal.modelNumber\": \"Num√©ro de mod√®le\",\n    \"product.modal.modelNumberPlaceholder\": \"Ex. iPHB-128\",\n    \"product.modal.images\": \"Images du produit\",\n    \"product.modal.dropImages\": \"D√©posez vos images ici\",\n    \"product.modal.selectImages\": \"ou cliquez pour s√©lectionner des images\",\n    \"product.modal.supportedFormats\": \"Formats accept√©s: JPG, JPEG, PNG, GIF | Taille max: 5MB par image\",\n    \"product.modal.maxImages\": \"Vous pouvez ajouter jusqu",
    "utilisateuravecfireb": "utilisateur avec Firebase Auth COMPLET\r\n * qui PR√âSERVE la session admin\r\n */\r\nclass AdminUserCreationWithAuthService {\r\n    private collectionName = ",
    "utilisateursprivatei": "utilisateurs\r\n     */\r\n    private initializeSecondaryApp() {\r\n        if (!this.secondaryApp) {\r\n            // Cr√©er une instance s√©par√©e avec un nom unique\r\n            this.secondaryApp = initializeApp(firebaseConfig, `userCreationApp_${Date.now()}`);\r\n            this.secondaryAuth = getAuth(this.secondaryApp);\r\n            this.secondaryDb = getFirestore(this.secondaryApp);\r\n\r\n            console.log(",
    "utilisationppclassna": "utilisation</p>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">Partager les donn√©es d",
    "ispopulardivclassnam": "}\n      `}\n    >\n      {isPopular && (\n        <div className=\"bg-blue-500 text-white text-center py-1 font-medium\">\n          Recommand√©\n        </div>\n      )}\n      \n      {isCurrentPlan && (\n        <div className=\"bg-green-100 text-green-800 text-center py-1 font-medium\">\n          Votre forfait actuel\n        </div>\n      )}\n      \n      <div className=\"p-6\">\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">{name}</h3>\n        \n        <div className=\"mb-6\">\n          <span className=\"text-4xl font-bold text-gray-900 dark:text-gray-100\">{currencySymbol}{price}</span>\n          {price > 0 && <span className=\"text-gray-500 ml-2\">/mois</span>}\n        </div>\n        \n        <ul className=\"space-y-3 mb-8\">\n          {features.map((feature, index) => (\n            <li key={index} className=\"flex items-start\">\n              <Check className=\"h-5 w-5 text-green-500 mr-2 flex-shrink-0\" />\n              <span className=\"text-gray-600 text-sm\">{feature}</span>\n            </li>\n          ))}\n        </ul>\n        \n        <Button\n          onClick={() => onSelectPlan(id)}\n          variant={isCurrentPlan ? ",
    "buttondivdivdivdivde": "}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Description d√©taill√©e */}\r\n                <div className=\"mt-16 bg-white dark:bg-gray-800 rounded-2xl p-8 border border-gray-200 dark:border-gray-700\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\r\n                        Description d√©taill√©e\r\n                    </h2>\r\n                    <div className=\"prose dark:prose-invert max-w-none\">\r\n                        {product.longDescription.split(",
    "buttondivclassnamegr": "}\r\n                            </button>\r\n\r\n                            <div className=\"grid grid-cols-2 gap-3\">\r\n                                <button\r\n                                    onClick={() => setShowContactForm(true)}\r\n                                    className=\"bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-3 rounded-xl font-semibold border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 transition-all duration-300 flex items-center justify-center gap-2\"\r\n                                >\r\n                                    <MessageCircle size={18} />\r\n                                    Contacter\r\n                                </button>\r\n\r\n                                <button\r\n                                    onClick={() => {\r\n                                        toggleFavorite(product.id!);\r\n                                        const isFav = isFavorite(product.id!);\r\n                                        showToast(\r\n                                            isFav ? `${product.name} retir√© des favoris` : `${product.name} ajout√© aux favoris`,\r\n                                            ",
    "pdivdivdivclassnamef": "}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={loading}\r\n              className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition-colors\"\r\n              title=\"Rafra√Æchir\"\r\n            >\r\n              <RotateCcw className={`h-4 w-4 ${loading ? ",
    "pdivdivdivclassnamef1": "}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={handleRefresh}\r\n              disabled={loading}\r\n              className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition-colors\"\r\n              title=\"Rafra√Æchir\"\r\n            >\r\n              <RotateCcw className={`h-4 w-4 ${loading ? ",
    "h3formonsubmithandle": "}\r\n            </h3>\r\n            \r\n            <form onSubmit={handleSubmitForm} className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Nom du conteneur\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Lieu de d√©part\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.departureLocation}\r\n                    onChange={(e) => setFormData({ ...formData, departureLocation: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Lieu d",
    "returnadminlayoutdiv": "}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Gestion des Fournisseurs\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              G√©rez tous les fournisseurs de la plateforme\r\n            </p>\r\n          </div>\r\n          <Button onClick={() => console.log(",
    "altproductnameclassn": "} \r\n          alt={productName} \r\n          className=\"absolute inset-0 w-full h-full object-cover transform hover:scale-105 transition-transform duration-300\"\r\n        />\r\n        \r\n        {/* Badges */}\r\n        <div className=\"absolute top-2 left-2 flex flex-col gap-1\">\r\n          {product.isNew && (\r\n            <span className=\"bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n              NOUVEAU\r\n            </span>\r\n          )}\r\n          {product.isPopular && (\r\n            <span className=\"bg-orange-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n              POPULAIRE\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"absolute top-2 right-2 flex flex-col gap-1\">\r\n          {product.certifiedCE && (\r\n            <span className=\"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n              CE\r\n            </span>\r\n          )}\r\n          {product.discount && product.discount > 0 && (\r\n            <span className=\"bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n              -{product.discount}%\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"p-4\">\r\n        <div className=\"flex flex-col h-full\">\r\n          {/* Marque */}\r\n          {product.brand && (\r\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 font-medium mb-1\">\r\n              {product.brand}\r\n            </div>\r\n          )}\r\n          \r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors font-display\">\r\n            {productName}\r\n          </h3>\r\n          \r\n          <p className=\"text-sm text-gray-600 mb-3 line-clamp-2 flex-grow font-reading text-readable\">\r\n            {productDescription}\r\n          </p>\r\n          \r\n          {/* Fonctionnalit√©s principales */}\r\n          {product.featured && product.featured.length > 0 && (\r\n            <div className=\"mb-3\">\r\n              <div className=\"flex flex-wrap gap-1\">\r\n                {product.featured.slice(0, 3).map((feature, index) => (\r\n                  <span \r\n                    key={index}\r\n                    className=\"text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 px-2 py-1 rounded-full\"\r\n                  >\r\n                    {feature}\r\n                  </span>\r\n                ))}\r\n                {product.featured.length > 3 && (\r\n                  <span className=\"text-xs text-gray-500\">\r\n                    +{product.featured.length - 3}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n              <span>MOQ: {product.moq} unit√©s</span>\r\n              <span className=\"px-2 py-1 bg-gray-100 rounded-full text-xs\">\r\n                {product.category}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"border-t pt-2 mt-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <div className=\"text-xs text-gray-500 font-reading\">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {product.discount && product.discount > 0 ? (\r\n                      <>\r\n                        <div className=\"text-lg font-bold text-red-600 font-display\">\r\n                          {formatPrice(discountedPrice, currency)}\r\n                        </div>\r\n                        <div className=\"text-sm line-through text-gray-400 font-display\">\r\n                          {formatPrice(priceConverted, currency)}\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <div className=\"text-lg font-bold text-blue-700 font-display\">\r\n                        {formatPrice(priceConverted, currency)}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500 font-reading\">\r\n                    pour {product.moq} unit√©s\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-xs text-gray-500 mb-1 font-reading\">\r\n                    Fournisseur\r\n                  </div>\r\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100 font-display\">\r\n                    {product.supplier.name}\r\n                  </div>\r\n                  <div className=\"flex items-center mt-1\">\r\n                    <div className=\"flex text-yellow-400 text-xs\">\r\n                      {",
    "altproductnameclassn1": "} \r\n          alt={productName} \r\n          className=\"absolute inset-0 w-full h-full object-cover transform hover:scale-105 transition-transform duration-300\"\r\n        />\r\n        {product.certifiedCE && (\r\n          <span className=\"absolute top-2 right-2 bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full\">\r\n            CE\r\n          </span>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"p-4\">\r\n        <div className=\"flex flex-col h-full\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors\">\r\n            {productName}\r\n          </h3>\r\n          \r\n          <p className=\"text-sm text-gray-600 mb-3 line-clamp-2 flex-grow\">\r\n            {productDescription}\r\n          </p>\r\n          \r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n              <span>MOQ: {product.moq} unit√©s</span>\r\n              <span className=\"px-2 py-1 bg-gray-100 rounded-full text-xs\">\r\n                {product.category}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"border-t pt-2 mt-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  </div>\r\n                  <div className=\"text-lg font-bold text-blue-700\">\r\n                    {formatPrice(priceConverted, currency)}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">\r\n                    pour {product.moq} unit√©s\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-xs text-gray-500 mb-1\">\r\n                    Fournisseur\r\n                  </div>\r\n                  <div className=\"text-sm font-medium text-gray-900\">\r\n                    {product.supplier.name}\r\n                  </div>\r\n                  <div className=\"flex items-center mt-1\">\r\n                    <div className=\"flex text-yellow-400 text-xs\">\r\n                      {",
    "buttonbuttononclicko": "} />\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            onClick={() => openQuickView(product)}\r\n                                            className=\"p-2 bg-white text-gray-600 rounded-full hover:bg-blue-50 hover:text-blue-500 transition-all duration-300\"\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=\"absolute top-4 left-4 bg-red-500 text-white px-2 py-1 rounded-full text-xs font-semibold\">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=\"absolute bottom-4 left-4 bg-green-500 text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center gap-1\">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=\"p-6\">\r\n                                    {/* Titre et prix */}\r\n                                    <div className=\"mb-4\">\r\n                                        <Link\r\n                                            to={`/product/${product.id}`}\r\n                                            className=\"block hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                                        >\r\n                                            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\">\r\n                                                {product.name}\r\n                                            </h3>\r\n                                        </Link>\r\n\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                                {product.price.toFixed(2)}‚Ç¨\r\n                                            </div>\r\n                                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur */}\r\n                                    <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {product.supplier.name}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2 mt-1\">\r\n                                            <MapPin size={12} className=\"text-gray-400\" />\r\n                                            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                                {product.supplier.location}\r\n                                            </span>\r\n                                            <div className=\"flex items-center gap-1 ml-auto\">\r\n                                                <Star size={12} className=\"text-yellow-400 fill-current\" />\r\n                                                <span className=\"text-xs text-gray-600 dark:text-gray-300\">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=\"mb-4\">\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id!, Math.max(product.moq, quantity - 10))}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Minus size={16} />\r\n                                            </button>\r\n\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={quantity}\r\n                                                onChange={(e) => updateQuantity(product.id!, Math.max(product.moq, Number(e.target.value)))}\r\n                                                min={product.moq}\r\n                                                className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-medium\"\r\n                                            />\r\n\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id!, quantity + 10)}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Plus size={16} />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Prix total */}\r\n                                    <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total</span>\r\n                                            <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\r\n                                                {total.toFixed(2)}‚Ç¨\r\n                                            </div>\r\n                                        </div>\r\n                                        {hasDiscount && (\r\n                                            <div className=\"text-xs text-green-600 dark:text-green-400 mt-1\">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d",
    "buttonbuttononclicko1": "} />\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            onClick={() => openQuickView(product)}\r\n                                            className=\"p-2 bg-white text-gray-600 rounded-full hover:bg-blue-50 hover:text-blue-500 transition-all duration-300\"\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=\"absolute top-4 left-4 bg-red-500 text-white px-2 py-1 rounded-full text-xs font-semibold\">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=\"absolute bottom-4 left-4 bg-green-500 text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center gap-1\">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=\"p-6\">\r\n                                    {/* Titre et prix */}\r\n                                    <div className=\"mb-4\">\r\n                                        <Link\r\n                                            to={`/product/${product.id}`}\r\n                                            className=\"block hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                                        >\r\n                                            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\">\r\n                                                {product.name}\r\n                                            </h3>\r\n                                        </Link>\r\n\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                                {product.price.toFixed(2)}‚Ç¨\r\n                                            </div>\r\n                                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur */}\r\n                                    <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {product.supplier.name}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2 mt-1\">\r\n                                            <MapPin size={12} className=\"text-gray-400\" />\r\n                                            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                                {product.supplier.location}\r\n                                            </span>\r\n                                            <div className=\"flex items-center gap-1 ml-auto\">\r\n                                                <Star size={12} className=\"text-yellow-400 fill-current\" />\r\n                                                <span className=\"text-xs text-gray-600 dark:text-gray-300\">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=\"mb-4\">\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id!, Math.max(product.moq, quantity - 10))}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Minus size={16} />\r\n                                            </button>\r\n\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={quantity}\r\n                                                onChange={(e) => updateQuantity(product.id!, Math.max(product.moq, Number(e.target.value)))}\r\n                                                min={product.moq}\r\n                                                className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-medium\"\r\n                                            />\r\n\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id!, quantity + 10)}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Plus size={16} />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Prix total */}\r\n                                    <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total</span>\r\n                                            <div className=\"text-lg font-bold text-blue-600 dark:text-blue-400\">\r\n                                                {total.toFixed(2)}‚Ç¨\r\n                                            </div>\r\n                                        </div>\r\n                                        {hasDiscount && (\r\n                                            <div className=\"text-xs text-green-600 dark:text-green-400 mt-1\">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d",
    "buttonbuttononclicko2": "} />\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            onClick={() => openQuickView(product)}\r\n                                            className=\"p-2 bg-white text-gray-600 rounded-full hover:bg-blue-50 hover:text-blue-500 transition-all duration-300\"\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction */}\r\n                                    {hasDiscount && (\r\n                                        <div className=\"absolute top-4 left-4 bg-red-500 text-white px-2 py-1 rounded-full text-xs font-semibold\">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© */}\r\n                                    {product.supplier.verified && (\r\n                                        <div className=\"absolute bottom-4 left-4 bg-green-500 text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center gap-1\">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Contenu de la carte */}\r\n                                <div className=\"p-6\">\r\n                                    {/* Titre et prix */}\r\n                                    <div className=\"mb-4\">\r\n                                        <Link\r\n                                            to={`/product/${product.id}`}\r\n                                            className=\"block hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                                        >\r\n                                            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\">\r\n                                                {product.name}\r\n                                            </h3>\r\n                                        </Link>\r\n\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                                {product.price.toFixed(2)}‚Ç¨\r\n                                            </div>\r\n                                            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur */}\r\n                                    <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {product.supplier.name}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2 mt-1\">\r\n                                            <MapPin size={12} className=\"text-gray-400\" />\r\n                                            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                                                {product.supplier.location}\r\n                                            </span>\r\n                                            <div className=\"flex items-center gap-1 ml-auto\">\r\n                                                <Star size={12} className=\"text-yellow-400 fill-current\" />\r\n                                                <span className=\"text-xs text-gray-600 dark:text-gray-300\">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© */}\r\n                                    <div className=\"mb-4\">\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Quantit√©\r\n                                        </label>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id, Math.max(product.moq, quantity - 10))}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Minus size={16} />\r\n                                            </button>\r\n\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={quantity}\r\n                                                onChange={(e) => updateQuantity(product.id, Math.max(product.moq, Number(e.target.value)))}\r\n                                                min={product.moq}\r\n                                                className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-center focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-medium\"\r\n                                            />\r\n\r\n                                            <button\r\n                                                onClick={() => updateQuantity(product.id, quantity + 10)}\r\n                                                className=\"p-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-gray-700 dark:text-gray-300\"\r\n                                            >\r\n                                                <Plus size={16} />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Prix total */}\r\n                                    <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">Prix total</div>\r\n                                        <div className=\"text-xl font-bold text-blue-600 dark:text-blue-400\">\r\n                                            {total.toFixed(2)}‚Ç¨\r\n                                        </div>\r\n                                        {hasDiscount && (\r\n                                            <div className=\"text-xs text-green-600 dark:text-green-400\">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Boutons d",
    "blockpx4py2textsmtex6": "} block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\n                    >\n                      {name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s *",
    "blockpx4py2textsmtex7": "} block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\n                    >\n                      {name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s *",
    "blockpx4py2textsmtex8": "} block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600`}\n                    >\n                      {name}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Notifications - Affich√© uniquement pour les utilisateurs connect√©s */}\n            {user && (\n              <>\n                <div\n                  className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer relative\"\n                  onClick={toggleNotificationCenter}\n                >\n                  <Bell className=\"h-5 w-5\" />\n                  {unreadCount > 0 && (\n                    <span className=\"bg-orange-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center font-bold animate-pulse absolute -top-2 -right-2\">\n                      {unreadCount > 99 ? ",
    "finallysetloadingfal": "}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n            <h3 className=\"text-lg font-semibold mb-4\">Tests de d√©bogage Firebase</h3>\r\n\r\n            <div className=\"flex gap-2 mb-4\">\r\n                <Button\r\n                    onClick={testFirebaseConnection}\r\n                    disabled={loading}\r\n                    variant=\"outline\"\r\n                >\r\n                    {loading ? ",
    "systemecompletspancl": "}`} />\r\n                    Syst√®me Complet\r\n                    <span className=",
    "systemecompletspancl1": "}`} />\r\n                    Syst√®me Complet\r\n                    <span className=\"text-xs bg-white/20 px-2 py-1 rounded-full\">Recommand√©</span>\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createAdminOnly}\r\n                    disabled={isRunning}\r\n                    className=\"flex items-center gap-3 bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white py-3 px-6 rounded-lg font-semibold shadow-lg transform transition-all duration-200 hover:scale-105\"\r\n                >\r\n                    <Crown className=\"h-5 w-5\" />\r\n                    Admin Seulement\r\n                    <span className=\"text-xs bg-white/20 px-2 py-1 rounded-full\">Rapide</span>\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Fonctionnalit√©s */}\r\n            <div className=\"bg-white/70 rounded-lg p-4 mb-6\">\r\n                <h3 className=\"font-semibold text-gray-800 mb-3 flex items-center gap-2\">\r\n                    <Zap className=\"h-4 w-4 text-yellow-500\" />\r\n                    Le syst√®me complet configure automatiquement :\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                        <span>2 comptes administrateur</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                        <span>Compte fournisseur test</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                        <span>Compte client test</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                        <span>Synchronisation Firebase</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats */}\r\n            {results && (\r\n                <div className=\"bg-gray-900 text-green-400 rounded-lg p-4 mb-6 font-mono text-sm\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                        <RefreshCw className={`h-4 w-4 ${isRunning ? ",
    "datacontactpersonh2p": "}`}>\r\n                        {data.contactPerson}\r\n                    </h2>\r\n                    <p className={`opacity-80 ${getFontSize()}`}>\r\n                        {data.position}\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Contact Info *",
    "footercompactstyleli": "}`}>\r\n        {/* Footer compact - Style LinkedIn/GitHub */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-5 gap-8 mb-8\">\r\n\r\n          {/* Colonne 1: Entreprise */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-white mb-4 font-display\">Chine ton usine</h4>\r\n            <ul className=\"space-y-2\">\r\n              <li><Link to=\"/about\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">√Ä propos</Link></li>\r\n              <li><Link to=\"/careers\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Carri√®res</Link></li>\r\n              <li><Link to=\"/news\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Actualit√©s</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 2: Services */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-white mb-4 font-display\">Solutions</h4>\r\n            <ul className=\"space-y-2\">\r\n              <li><Link to=\"/sourcing\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Sourcing</Link></li>\r\n              <li><Link to=\"/quality\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Qualit√©</Link></li>\r\n              <li><Link to=\"/logistics\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Logistique</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 3: Ressources */}\r\n          <div>\r\n            <h4 className=\"text-lg font-semibold text-white mb-4 font-display\">Ressources</h4>\r\n            <ul className=\"space-y-2\">\r\n              <li><Link to=\"/help\" className=\"text-orange-100 dark:text-gray-300 hover:text-white transition-colors text-sm\">Centre d",
    "ecouteurssansfilavec": "√âcouteurs sans fil avec r√©duction de bruit active et autonomie 24h.",
    "ecouteurssansfilavec1": "√âcouteurs sans fil avec r√©duction de bruit active et autonomie 24h.",
    "ecouteurssansfilavec2": "√âcouteurs sans fil avec r√©duction de bruit active et autonomie de 30h",
    "ecouteurssansfilavec3": "√âcouteurs sans fil avec r√©duction de bruit active et autonomie de 30h",
    "ecouteurstruewireles": "√âcouteurs true wireless avec r√©duction de bruit active, bo√Ætier de charge rapide et autonomie 24h. Qualit√© audio HD.",
    "ecouteurstruewireles1": "√âcouteurs true wireless avec r√©duction de bruit active, bo√Ætier de charge rapide et autonomie 24h. Qualit√© audio HD.",
    "etesvoussurdevouloir6": "√ätes-vous s√ªr de vouloir supprimer ce conteneur ?",
    "etesvoussurdevouloir7": "√ätes-vous s√ªr de vouloir supprimer ce conteneur ?",
    "etesvoussurdevouloir8": "√ätes-vous s√ªr de vouloir supprimer ce conteneur ?",
    "etesvoussurdevouloir9": "√ätes-vous s√ªr de vouloir supprimer ce document ?",
    "etesvoussurdevouloir10": "√ätes-vous s√ªr de vouloir supprimer ce document ?",
    "etesvoussurdevouloir11": "√ätes-vous s√ªr de vouloir supprimer ce document ?",
    "etesvoussurdevouloir12": "√ätes-vous s√ªr de vouloir supprimer ce fichier ?",
    "etesvoussurdevouloir13": "√ätes-vous s√ªr de vouloir supprimer ce fichier ?",
    "etesvoussurdevouloir14": "√ätes-vous s√ªr de vouloir supprimer ce fichier ?",
    "etesvoussurdevouloir15": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir16": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir17": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir18": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir19": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir20": "√ätes-vous s√ªr de vouloir supprimer ce produit ?",
    "etesvoussurdevouloir21": "√ätes-vous s√ªr de vouloir supprimer cette carte ?",
    "etesvoussurdevouloir22": "√ätes-vous s√ªr de vouloir supprimer cette carte ?",
    "editionmobilesdivcla": "√©dition mobiles */}\r\n                <div className=\"flex sm:hidden justify-center gap-3 mt-6\">\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={handleSaveProfile}\r\n                        className=\"flex-1 flex items-center justify-center px-4 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-all duration-200 hover-lift\"\r\n                      >\r\n                        <Save size={16} className=\"mr-2\" />\r\n                        Sauvegarder\r\n                      </button>\r\n                      <button\r\n                        onClick={handleCancelEdit}\r\n                        className=\"flex-1 flex items-center justify-center px-4 py-3 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-all duration-200 hover-lift\"\r\n                      >\r\n                        <X size={16} className=\"mr-2\" />\r\n                        Annuler\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button\r\n                      onClick={() => setIsEditing(true)}\r\n                      className=\"flex items-center justify-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-all duration-200 hover-lift\"\r\n                    >\r\n                      <Edit3 size={16} className=\"mr-2\" />\r\n                      Modifier\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Statistiques du profil */}\r\n              <Section icon={<Package className=\"w-5 h-5\" />} title=\"Statistiques du compte\">\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\r\n                  {[\r\n                    { label: ",
    "elementexistantsetit": "√©l√©ment existant\r\n            setItems(prev => prev.map((item, index) =>\r\n                index === existingItemIndex\r\n                    ? {\r\n                        ...item,\r\n                        quantity,\r\n                        variants,\r\n                        unitPrice,\r\n                        totalPrice,\r\n                        addedAt: new Date()\r\n                    }\r\n                    : item\r\n            ));\r\n        } else {\r\n            // Ajouter un nouvel √©l√©ment\r\n            const newItem: QuoteItem = {\r\n                productId: product.id!,\r\n                product,\r\n                quantity,\r\n                variants,\r\n                unitPrice,\r\n                totalPrice,\r\n                addedAt: new Date()\r\n            };\r\n            setItems(prev => [...prev, newItem]);\r\n        }\r\n    };\r\n\r\n    const removeFromQuote = (productId: string) => {\r\n        setItems(prev => prev.filter(item => item.productId !== productId));\r\n    };\r\n\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, quantity, item.variants);\r\n                return {\r\n                    ...item,\r\n                    quantity,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const updateVariants = (productId: string, variants: Record<string, string>) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, item.quantity, variants);\r\n                return {\r\n                    ...item,\r\n                    variants,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const getItemQuantity = (productId: string) => {\r\n        const item = items.find(item => item.productId === productId);\r\n        return item ? item.quantity : 0;\r\n    };\r\n\r\n    const getTotalItems = () => {\r\n        return items.reduce((total, item) => total + item.quantity, 0);\r\n    };\r\n\r\n    const getTotalPrice = () => {\r\n        return items.reduce((total, item) => total + item.totalPrice, 0);\r\n    };\r\n\r\n    const clearQuote = () => {\r\n        setItems([]);\r\n    };\r\n\r\n    const isInQuote = (productId: string) => {\r\n        return items.some(item => item.productId === productId);\r\n    };\r\n\r\n    const value: QuoteContextType = {\r\n        items,\r\n        addToQuote,\r\n        removeFromQuote,\r\n        updateQuantity,\r\n        updateVariants,\r\n        getItemQuantity,\r\n        getTotalItems,\r\n        getTotalPrice,\r\n        clearQuote,\r\n        isInQuote\r\n    };\r\n\r\n    return (\r\n        <QuoteContext.Provider value={value}>\r\n            {children}\r\n        <",
    "elementexistantsetit1": "√©l√©ment existant\r\n            setItems(prev => prev.map((item, index) =>\r\n                index === existingItemIndex\r\n                    ? {\r\n                        ...item,\r\n                        quantity,\r\n                        variants,\r\n                        unitPrice,\r\n                        totalPrice,\r\n                        addedAt: new Date()\r\n                    }\r\n                    : item\r\n            ));\r\n        } else {\r\n            // Ajouter un nouvel √©l√©ment\r\n            const newItem: QuoteItem = {\r\n                productId: product.id!,\r\n                product,\r\n                quantity,\r\n                variants,\r\n                unitPrice,\r\n                totalPrice,\r\n                addedAt: new Date()\r\n            };\r\n            setItems(prev => [...prev, newItem]);\r\n        }\r\n    };\r\n\r\n    const removeFromQuote = (productId: string) => {\r\n        setItems(prev => prev.filter(item => item.productId !== productId));\r\n    };\r\n\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, quantity, item.variants);\r\n                return {\r\n                    ...item,\r\n                    quantity,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const updateVariants = (productId: string, variants: Record<string, string>) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, item.quantity, variants);\r\n                return {\r\n                    ...item,\r\n                    variants,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const getItemQuantity = (productId: string) => {\r\n        const item = items.find(item => item.productId === productId);\r\n        return item ? item.quantity : 0;\r\n    };\r\n\r\n    const getTotalItems = () => {\r\n        return items.reduce((total, item) => total + item.quantity, 0);\r\n    };\r\n\r\n    const getTotalPrice = () => {\r\n        return items.reduce((total, item) => total + item.totalPrice, 0);\r\n    };\r\n\r\n    const clearQuote = () => {\r\n        setItems([]);\r\n    };\r\n\r\n    const isInQuote = (productId: string) => {\r\n        return items.some(item => item.productId === productId);\r\n    };\r\n\r\n    const value: QuoteContextType = {\r\n        items,\r\n        addToQuote,\r\n        removeFromQuote,\r\n        updateQuantity,\r\n        updateVariants,\r\n        getItemQuantity,\r\n        getTotalItems,\r\n        getTotalPrice,\r\n        clearQuote,\r\n        isInQuote\r\n    };\r\n\r\n    return (\r\n        <QuoteContext.Provider value={value}>\r\n            {children}\r\n        <",
    "elementexistantsetit2": "√©l√©ment existant\r\n            setItems(prev => prev.map((item, index) =>\r\n                index === existingItemIndex\r\n                    ? {\r\n                        ...item,\r\n                        quantity,\r\n                        variants,\r\n                        unitPrice,\r\n                        totalPrice,\r\n                        addedAt: new Date()\r\n                    }\r\n                    : item\r\n            ));\r\n        } else {\r\n            // Ajouter un nouvel √©l√©ment\r\n            const newItem: QuoteItem = {\r\n                productId: product.id!,\r\n                product,\r\n                quantity,\r\n                variants,\r\n                unitPrice,\r\n                totalPrice,\r\n                addedAt: new Date()\r\n            };\r\n            setItems(prev => [...prev, newItem]);\r\n        }\r\n    };\r\n\r\n    const removeFromQuote = (productId: string) => {\r\n        setItems(prev => prev.filter(item => item.productId !== productId));\r\n    };\r\n\r\n    const updateQuantity = (productId: string, quantity: number) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, quantity, item.variants);\r\n                return {\r\n                    ...item,\r\n                    quantity,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const updateVariants = (productId: string, variants: Record<string, string>) => {\r\n        setItems(prev => prev.map(item => {\r\n            if (item.productId === productId) {\r\n                const { unitPrice, totalPrice } = calculateItemPrice(item.product, item.quantity, variants);\r\n                return {\r\n                    ...item,\r\n                    variants,\r\n                    unitPrice,\r\n                    totalPrice\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const getItemQuantity = (productId: string) => {\r\n        const item = items.find(item => item.productId === productId);\r\n        return item ? item.quantity : 0;\r\n    };\r\n\r\n    const getTotalItems = () => {\r\n        return items.reduce((total, item) => total + item.quantity, 0);\r\n    };\r\n\r\n    const getTotalPrice = () => {\r\n        return items.reduce((total, item) => total + item.totalPrice, 0);\r\n    };\r\n\r\n    const clearQuote = () => {\r\n        setItems([]);\r\n    };\r\n\r\n    const isInQuote = (productId: string) => {\r\n        return items.some(item => item.productId === productId);\r\n    };\r\n\r\n    const value: QuoteContextType = {\r\n        items,\r\n        addToQuote,\r\n        removeFromQuote,\r\n        updateQuantity,\r\n        updateVariants,\r\n        getItemQuantity,\r\n        getTotalItems,\r\n        getTotalPrice,\r\n        clearQuote,\r\n        isInQuote\r\n    };\r\n\r\n    return (\r\n        <QuoteContext.Provider value={value}>\r\n            {children}\r\n        </QuoteContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useQuote = () => {\r\n    const context = useContext(QuoteContext);\r\n    if (!context) {\r\n        throw new Error(",
    "equipementselectroni": "√©quipements √©lectroniques de haute qualit√© depuis plus de 15 ans. Nous nous sp√©cialisons dans les smartphones, ordinateurs portables et accessoires technologiques avec une expertise reconnue mondialement.",
    "equipementselectroni1": "√©quipements √©lectroniques de haute qualit√© depuis plus de 15 ans. Nous nous sp√©cialisons dans les smartphones, ordinateurs portables et accessoires technologiques avec une expertise reconnue mondialement.",
    "aucunutilisateurasup": "‚ÑπÔ∏è Aucun utilisateur √† supprimer\\n",
    "attentioncetteaction": "‚ö†Ô∏è ATTENTION : Cette action va supprimer TOUS les utilisateurs existants et en cr√©er de nouveaux. √ätes-vous s√ªr ?"
  },
  "auth": {
    "labeltconfirmpasswor": "\n                  label={t('confirmPassword')}\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required\n                  placeholder={t('passwordPlaceholder')}\n                  minLength={6}\n                  disabled={isLoading}\n                />\n              </div>\n            )}\n\n            {/* Champs sp√©cifiques pour les influenceurs/sourceurs */}\n            {role === 'influencer' && (\n              <div className=",
    "whitespacenowrappy4p": "\n                  } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n                >\n                  Utilisateurs\n                </button>\n              </nav>\n            </div>\n            \n            {renderContent()}\n          </div>\n        </div>\n      </main>\n\n      {/* Add User Modal */}\n      {showAddUserModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Ajouter un nouvel utilisateur</h2>\n            {error && <div className=\"mb-4 text-red-600 text-sm\">{error}</div>}\n            {success && <div className=\"mb-4 text-green-600 text-sm\">{success}</div>}\n            <form onSubmit={handleAddUser} className=\"space-y-4\">\n                    <Input\n                label=\"Email\"\n                      type=\"email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      required\n                    />\n                    <Input\n                label=\"Mot de passe\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                minLength={6}\n                    />\n                    <Input\n                label=\"Nom\"\n                      type=\"text\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                required\n                    />\n                    <Select\n                      label=\"R√¥le\"\n                      value={role}\n                      onChange={(e) => setRole(e.target.value as ",
    "labeltemailvalueemai": "\n              label={t('email')}\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder={t('emailPlaceholder')}\n              disabled={isLoading}\n            />\n\n            <Select\n              label={t('accountType')}\n              value={role}\n              onChange={(e) => setRole(e.target.value as UserRole)}\n              options={[\n                { value: 'customer', label: t('role.customer') },\n                { value: 'supplier', label: t('role.supplier') },\n                { value: 'influencer', label: t('role.influencer') } // Influenceur affich√© mais pas sourceur\n              ]}\n              disabled={isLoading}\n            />\n\n            <div className=",
    "logoutsize16deconnex": "\r\n                                >\r\n                                    <LogOut size={16} />\r\n                                    D√©connexion\r\n                                <",
    "logoutsize16deconnex1": "\r\n                                >\r\n                                    <LogOut size={16} />\r\n                                    D√©connexion\r\n                                <",
    "motdepasseoubliebutt": "\r\n                            >\r\n                                Mot de passe oubli√© ?\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Informations de s√©curit√© *",
    "motdepasseoubliebutt1": "\r\n                            >\r\n                                Mot de passe oubli√© ?\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Informations de s√©curit√© *",
    "motdepasseoubliebutt2": "\r\n                            >\r\n                                Mot de passe oubli√© ?\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Informations de s√©curit√© */}\r\n                <div className=",
    "keyroundsize16mettre": "\r\n                    >\r\n                      <KeyRound size={16} />\r\n                      Mettre √† jour le mot de passe\r\n                    <",
    "keyroundsize16mettre1": "\r\n                    >\r\n                      <KeyRound size={16} />\r\n                      Mettre √† jour le mot de passe\r\n                    </button>\r\n                    <button className=",
    "consoleloguserdataem": "\r\n                    });\r\n                    console.log(`‚ùå ${userData.email}: ${result.error}`);\r\n                }\r\n\r\n                // Pause entre les cr√©ations pour √©viter la surcharge\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            } catch (error: any) {\r\n                failed.push({\r\n                    email: userData.email,\r\n                    error: error.message || ",
    "consoleloguserdataem1": "\r\n                    });\r\n                    console.log(`‚ùå ${userData.email}: ${result.error}`);\r\n                }\r\n\r\n                // Pause entre les cr√©ations pour √©viter la surcharge\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            } catch (error: any) {\r\n                failed.push({\r\n                    email: userData.email,\r\n                    error: error.message || ",
    "divlabeldivdivclassn": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">CAPTCHA activ√©</h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Apr√®s √©checs de connexion</p>\r\n            </div>\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.captchaEnabled}\r\n                onChange={(e) => updateSetting(",
    "divlabeldivdivclassn1": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Symboles requis</h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Au moins un caract√®re sp√©cial</p>\r\n            </div>\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.passwordRequireSymbols}\r\n                onChange={(e) => updateSetting(",
    "seconnectercommeadmi": "\r\n                >\r\n                    Se connecter comme Admin\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createTestUser}\r\n                    disabled={loading || !auth.currentUser}\r\n                >\r\n                    Cr√©er utilisateur test\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={logoutAdmin}\r\n                    disabled={loading}\r\n                    variant=",
    "loadingtesttestconne": "\r\n                >\r\n                    {loading ? 'Test...' : 'Test Connexion'}\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={testCreateUser}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? 'Cr√©ation...' : 'Test Cr√©ation'}\r\n                </Button>\r\n            </div>\r\n\r\n            {result && (\r\n                <div className=",
    "stylebackgroundnoneb": "\r\n                style={{ background: 'none', border: 'none', cursor: 'pointer' }}\r\n              >\r\n                {t('registerNow', 'Cr√©er un compte')}\r\n              </button>\r\n            ) : (\r\n              <button \r\n                type=",
    "constresultawaitthis": "\r\n                }\r\n            }\r\n        ];\r\n\r\n        const result = await this.createProductionUsersBatch(essentialUsers);\r\n\r\n        // Cr√©er la liste des identifiants pour affichage\r\n        const credentials = essentialUsers.map(user => ({\r\n            email: user.email,\r\n            password: user.password,\r\n            role: user.role,\r\n            name: user.name\r\n        }));\r\n\r\n        return {\r\n            ...result,\r\n            credentials\r\n        };\r\n    }\r\n\r\n    ",
    "constresultawaitthis1": "\r\n                }\r\n            }\r\n        ];\r\n\r\n        const result = await this.createProductionUsersBatch(essentialUsers);\r\n\r\n        // Cr√©er la liste des identifiants pour affichage\r\n        const credentials = essentialUsers.map(user => ({\r\n            email: user.email,\r\n            password: user.password,\r\n            role: user.role,\r\n            name: user.name\r\n        }));\r\n\r\n        return {\r\n            ...result,\r\n            credentials\r\n        };\r\n    }\r\n\r\n    ",
    "constresultawaitthis2": "\r\n                }\r\n            }\r\n        ];\r\n\r\n        const result = await this.createProductionUsersBatch(essentialUsers);\r\n\r\n        // Cr√©er la liste des identifiants pour affichage\r\n        const credentials = essentialUsers.map(user => ({\r\n            email: user.email,\r\n            password: user.password,\r\n            role: user.role,\r\n            name: user.name\r\n        }));\r\n\r\n        return {\r\n            ...result,\r\n            credentials\r\n        };\r\n    }\r\n\r\n    /**\r\n     * S",
    "consoleerrorerreurcr": "\r\n                });\r\n                console.error(`üí• Erreur critique ${userData.email}:`, error);\r\n            }\r\n        }\r\n\r\n        // G√©n√©rer le r√©sum√©\r\n        const summary = await this.getUsersSummary();\r\n\r\n        console.log(`\\nüìä === R√âSUM√â CR√âATION BATCH ===`);\r\n        console.log(`‚úÖ Cr√©√©s: ${created.length}`);\r\n        console.log(`‚ùå √âchecs: ${failed.length}`);\r\n        console.log(`üìà Total syst√®me: ${summary.total} utilisateurs`);\r\n\r\n        return {\r\n            success: failed.length === 0,\r\n            created,\r\n            failed,\r\n            summary\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Cr√©er les utilisateurs essentiels pour la production\r\n     *",
    "consoleerrorerreurcr1": "\r\n                });\r\n                console.error(`üí• Erreur critique ${userData.email}:`, error);\r\n            }\r\n        }\r\n\r\n        // G√©n√©rer le r√©sum√©\r\n        const summary = await this.getUsersSummary();\r\n\r\n        console.log(`\\nüìä === R√âSUM√â CR√âATION BATCH ===`);\r\n        console.log(`‚úÖ Cr√©√©s: ${created.length}`);\r\n        console.log(`‚ùå √âchecs: ${failed.length}`);\r\n        console.log(`üìà Total syst√®me: ${summary.total} utilisateurs`);\r\n\r\n        return {\r\n            success: failed.length === 0,\r\n            created,\r\n            failed,\r\n            summary\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Cr√©er les utilisateurs essentiels pour la production\r\n     *",
    "consoleerrorerreurcr2": "\r\n                });\r\n                console.error(`üí• Erreur critique ${userData.email}:`, error);\r\n            }\r\n        }\r\n\r\n        // G√©n√©rer le r√©sum√©\r\n        const summary = await this.getUsersSummary();\r\n\r\n        console.log(`\\nüìä === R√âSUM√â CR√âATION BATCH ===`);\r\n        console.log(`‚úÖ Cr√©√©s: ${created.length}`);\r\n        console.log(`‚ùå √âchecs: ${failed.length}`);\r\n        console.log(`üìà Total syst√®me: ${summary.total} utilisateurs`);\r\n\r\n        return {\r\n            success: failed.length === 0,\r\n            created,\r\n            failed,\r\n            summary\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Cr√©er les utilisateurs essentiels pour la production\r\n     */\r\n    public async createEssentialProductionUsers(): Promise<{\r\n        success: boolean;\r\n        created: User[];\r\n        failed: Array<{ email: string; error: string }>;\r\n        credentials: Array<{ email: string; password: string; role: string; name: string }>;\r\n    }> {\r\n        console.log(",
    "4genererunuiduniquep": "\r\n                };\r\n            }\r\n\r\n            // 4. G√©n√©rer un UID unique pour le nouvel utilisateur\r\n            const uid = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // 5. Cr√©er le document utilisateur dans Firestore SEULEMENT\r\n            const userDoc: any = {\r\n                id: uid,\r\n                email: userData.email,\r\n                name: userData.name,\r\n                role: userData.role,\r\n                isActive: userData.isActive ?? true,\r\n                language: ",
    "4genererunuiduniquep1": "\r\n                };\r\n            }\r\n\r\n            // 4. G√©n√©rer un UID unique pour le nouvel utilisateur\r\n            const uid = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // 5. Cr√©er le document utilisateur dans Firestore SEULEMENT\r\n            const userDoc: any = {\r\n                id: uid,\r\n                email: userData.email,\r\n                name: userData.name,\r\n                role: userData.role,\r\n                isActive: userData.isActive ?? true,\r\n                language: ",
    "4genererunuiduniquep2": "\r\n                };\r\n            }\r\n\r\n            // 4. G√©n√©rer un UID unique pour le nouvel utilisateur\r\n            const uid = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // 5. Cr√©er le document utilisateur dans Firestore SEULEMENT\r\n            const userDoc: any = {\r\n                id: uid,\r\n                email: userData.email,\r\n                name: userData.name,\r\n                role: userData.role,\r\n                isActive: userData.isActive ?? true,\r\n                language: ",
    "5mettreajourladernie": "\r\n                };\r\n            }\r\n\r\n            // 5. Mettre √† jour la derni√®re connexion\r\n            await this.updateLastLogin(user.id);\r\n\r\n            // 6. D√©terminer la redirection selon le r√¥le\r\n            const redirectTo = this.determineRedirection(user.role);\r\n\r\n            this.currentUser = user;\r\n            this.startSessionMonitoring();\r\n\r\n            console.log(`üéâ Connexion r√©ussie: ${user.name} ‚Üí ${redirectTo}`);\r\n\r\n            return {\r\n                success: true,\r\n                user,\r\n                redirectTo\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "5mettreajourladernie1": "\r\n                };\r\n            }\r\n\r\n            // 5. Mettre √† jour la derni√®re connexion\r\n            await this.updateLastLogin(user.id);\r\n\r\n            // 6. D√©terminer la redirection selon le r√¥le\r\n            const redirectTo = this.determineRedirection(user.role);\r\n\r\n            this.currentUser = user;\r\n            this.startSessionMonitoring();\r\n\r\n            console.log(`üéâ Connexion r√©ussie: ${user.name} ‚Üí ${redirectTo}`);\r\n\r\n            return {\r\n                success: true,\r\n                user,\r\n                redirectTo\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "5mettreajourladernie2": "\r\n                };\r\n            }\r\n\r\n            // 5. Mettre √† jour la derni√®re connexion\r\n            await this.updateLastLogin(user.id);\r\n\r\n            // 6. D√©terminer la redirection selon le r√¥le\r\n            const redirectTo = this.determineRedirection(user.role);\r\n\r\n            this.currentUser = user;\r\n            this.startSessionMonitoring();\r\n\r\n            console.log(`üéâ Connexion r√©ussie: ${user.name} ‚Üí ${redirectTo}`);\r\n\r\n            return {\r\n                success: true,\r\n                user,\r\n                redirectTo\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "verificationdumotdep": "\r\n                };\r\n            }\r\n\r\n            // V√©rification du mot de passe\r\n            if (!userData.password || userData.password.length < 6) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "verificationdumotdep1": "\r\n                };\r\n            }\r\n\r\n            // V√©rification du mot de passe\r\n            if (!userData.password || userData.password.length < 6) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "classnameauthsubmitb": "\r\n              className={`auth-submit-btn ${isLoading ? 'auth-loading' : ''}`}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading \r\n                ? (isLoginMode ? t('loggingIn', 'Connexion...') : t('creatingAccount', 'Cr√©ation...'))\r\n                : (isLoginMode ? t('loginButton', 'Se connecter') : t('createMyAccount', 'Cr√©er mon compte'))\r\n              }\r\n            </button>\r\n          </form>\r\n\r\n          <div className=",
    "checkedsettingsemail": "\r\n            checked={settings.emailNotifications}\r\n            onChange={(e) => updateSetting(",
    "propsoptionsmapoptio": "\r\n            {...props}\r\n        >\r\n            {options.map((option: any) => (\r\n                <option key={option.value} value={option.value}>{option.label}</option>\r\n            ))}\r\n        </select>\r\n    </div>\r\n);\r\n\r\ninterface EditProspectModalProps {\r\n    prospect: Company;\r\n    onClose: () => void;\r\n    onUpdate: (prospect: Company) => void;\r\n}\r\n\r\nconst EditProspectModal: React.FC<EditProspectModalProps> = memo(({\r\n    prospect,\r\n    onClose,\r\n    onUpdate\r\n}) => {\r\n    const companyMutation = useOptimizedMutation('companies');\r\n    const profileMutation = useOptimizedMutation('company_profiles');\r\n\r\n    const { data: profiles } = useOptimizedQuery<CompanyProfile>('company_profiles', {\r\n        filter: { company_id: prospect.id },\r\n        limit: 1,\r\n        select: '*',\r\n        cacheKey: `profile-${prospect.id}`\r\n    });\r\n\r\n    const profile = useMemo(() => profiles?.[0], [profiles]);\r\n\r\n    const [formData, setFormData] = React.useState(() => ({\r\n        // Informations de base\r\n        name: prospect.name || '',\r\n        country: prospect.country || '',\r\n        email: prospect.email || '',\r\n        phone: prospect.phone || '',\r\n        contactPerson: prospect.contact_person || '',\r\n\r\n        // Informations d√©taill√©es du profil\r\n        monthlySalesVolume: profile?.monthly_sales_volume || '',\r\n        hasMerchandising: profile?.has_merchandising || false,\r\n        isTopImporter: profile?.is_top_importer || false,\r\n        hasWarehouses: profile?.has_warehouses || false,\r\n        warehouseCount: profile?.warehouse_count?.toString() || '',\r\n        hasLogisticsVehicles: profile?.has_logistics_vehicles || false,\r\n        vehicleCount: profile?.vehicle_count?.toString() || '',\r\n        preferredCurrency: prospect.preferred_currency || 'EUR',\r\n        interestedProducts: prospect.interested_products || [],\r\n        businessType: profile?.business_type || '',\r\n        website: prospect.website || '',\r\n        notes: profile?.notes || ''\r\n    }));\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    // M√©morisation des handlers\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        const { name, value, type } = e.target;\r\n        const checked = (e.target as HTMLInputElement).checked;\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === 'checkbox' ? checked : value\r\n        }));\r\n    }, []);\r\n\r\n    const handleProductSelect = useCallback((product: string) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            interestedProducts: prev.interestedProducts.includes(product)\r\n                ? prev.interestedProducts.filter(p => p !== product)\r\n                : [...prev.interestedProducts, product]\r\n        }));\r\n    }, []);\r\n\r\n    // Optimistic update pour les mutations\r\n    const optimisticUpdateCompany = useCallback((data: Partial<Company>) => {\r\n        onUpdate({ ...prospect, ...data });\r\n    }, [prospect, onUpdate]);\r\n\r\n    const handleSubmit = useCallback(async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Donn√©es de l'entreprise\r\n            const companyData = {\r\n                name: formData.name,\r\n                country: formData.country,\r\n                email: formData.email,\r\n                phone: formData.phone,\r\n                contact_person: formData.contactPerson,\r\n                preferred_currency: formData.preferredCurrency,\r\n                interested_products: formData.interestedProducts,\r\n                website: formData.website,\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            // Donn√©es du profil\r\n            const profileData = {\r\n                monthly_sales_volume: formData.monthlySalesVolume,\r\n                has_merchandising: formData.hasMerchandising,\r\n                is_top_importer: formData.isTopImporter,\r\n                has_warehouses: formData.hasWarehouses,\r\n                warehouse_count: formData.hasWarehouses ? parseInt(formData.warehouseCount) || 0 : null,\r\n                has_logistics_vehicles: formData.hasLogisticsVehicles,\r\n                vehicle_count: formData.hasLogisticsVehicles ? parseInt(formData.vehicleCount) || 0 : null,\r\n                business_type: formData.businessType,\r\n                notes: formData.notes,\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            // Mise √† jour de l'entreprise avec optimistic update\r\n            await companyMutation.update(\r\n                prospect.id,\r\n                companyData,\r\n                optimisticUpdateCompany\r\n            );\r\n\r\n            // Mise √† jour du profil\r\n            if (profile) {\r\n                await profileMutation.update(profile.id, profileData);\r\n            } else {\r\n                await profileMutation.insert({\r\n                    ...profileData,\r\n                    company_id: prospect.id,\r\n                    created_at: new Date().toISOString()\r\n                });\r\n            }\r\n\r\n            onClose();\r\n        } catch (err) {\r\n            console.error('Erreur lors de la mise √† jour:', err);\r\n            setError('Erreur lors de la mise √† jour du prospect');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [\r\n        formData,\r\n        prospect.id,\r\n        profile,\r\n        companyMutation,\r\n        profileMutation,\r\n        optimisticUpdateCompany,\r\n        onClose\r\n    ]);\r\n\r\n    // M√©morisation des options\r\n    const currencyOptions = useMemo(() => [\r\n        { value: 'EUR', label: 'Euro (‚Ç¨)' },\r\n        { value: 'USD', label: 'Dollar ($)' },\r\n        { value: 'GBP', label: 'Livre Sterling (¬£)' },\r\n        { value: 'DZD', label: 'Dinar Alg√©rien (DA)' }\r\n    ], []);\r\n\r\n    const businessTypeOptions = useMemo(() => [\r\n        { value: 'importer', label: 'Importateur' },\r\n        { value: 'distributor', label: 'Distributeur' },\r\n        { value: 'retailer', label: 'D√©taillant' },\r\n        { value: 'wholesaler', label: 'Grossiste' }\r\n    ], []);\r\n\r\n    const productCategories = useMemo(() => [\r\n        '√âpices et condiments',\r\n        'Huiles et vinaigres',\r\n        'Conserves',\r\n        'Produits secs',\r\n        'Boissons',\r\n        'Confiserie',\r\n        'Produits bio',\r\n        '√âquipements culinaires'\r\n    ], []);\r\n\r\n    return (\r\n        <div className=",
    "constcreatedaccounts": "\r\n            }\r\n        ];\r\n\r\n        const createdAccounts: Array<{ email: string; password: string; uid: string }> = [];\r\n        const errors: string[] = [];\r\n\r\n        for (const adminData of testAdmins) {\r\n            try {\r\n                const result = await this.createNewAdminAccount(adminData);\r\n\r\n                if (result.success && result.uid) {\r\n                    createdAccounts.push({\r\n                        email: adminData.email,\r\n                        password: adminData.password,\r\n                        uid: result.uid\r\n                    });\r\n                    console.log(`‚úÖ Compte cr√©√©: ${adminData.email}`);\r\n                } else {\r\n                    errors.push(`${adminData.email}: ${result.message}`);\r\n                    console.log(`‚ùå √âchec: ${adminData.email} - ${result.message}`);\r\n                }\r\n            } catch (error: any) {\r\n                errors.push(`${adminData.email}: ${error.message}`);\r\n                console.log(`üí• Erreur: ${adminData.email} - ${error.message}`);\r\n            }\r\n        }\r\n\r\n        if (createdAccounts.length > 0) {\r\n            return {\r\n                success: true,\r\n                message: `${createdAccounts.length} compte(s) admin cr√©√©(s) avec succ√®s${errors.length > 0 ? ` (${errors.length} erreur(s))` : ",
    "constcreatedaccounts1": "\r\n            }\r\n        ];\r\n\r\n        const createdAccounts: Array<{ email: string; password: string; uid: string }> = [];\r\n        const errors: string[] = [];\r\n\r\n        for (const adminData of testAdmins) {\r\n            try {\r\n                const result = await this.createNewAdminAccount(adminData);\r\n\r\n                if (result.success && result.uid) {\r\n                    createdAccounts.push({\r\n                        email: adminData.email,\r\n                        password: adminData.password,\r\n                        uid: result.uid\r\n                    });\r\n                    console.log(`‚úÖ Compte cr√©√©: ${adminData.email}`);\r\n                } else {\r\n                    errors.push(`${adminData.email}: ${result.message}`);\r\n                    console.log(`‚ùå √âchec: ${adminData.email} - ${result.message}`);\r\n                }\r\n            } catch (error: any) {\r\n                errors.push(`${adminData.email}: ${error.message}`);\r\n                console.log(`üí• Erreur: ${adminData.email} - ${error.message}`);\r\n            }\r\n        }\r\n\r\n        if (createdAccounts.length > 0) {\r\n            return {\r\n                success: true,\r\n                message: `${createdAccounts.length} compte(s) admin cr√©√©(s) avec succ√®s${errors.length > 0 ? ` (${errors.length} erreur(s))` : ",
    "ifresultsuccesssetre": "\r\n            });\r\n\r\n            if (result.success) {\r\n                setResult(`‚úÖ Utilisateur test cr√©√©: ${testUserEmail}\r\nUID: ${result.user?.uid}`);\r\n            } else {\r\n                setResult(`‚ùå Erreur cr√©ation: ${result.error}`);\r\n            }\r\n        } catch (error: any) {\r\n            console.error(",
    "ifresultsuccesssetre1": "\r\n            });\r\n\r\n            if (result.success) {\r\n                setResult(`‚úÖ Utilisateur test cr√©√©: ${testUserEmail}\r\nUID: ${result.user?.uid}`);\r\n            } else {\r\n                setResult(`‚ùå Erreur cr√©ation: ${result.error}`);\r\n            }\r\n        } catch (error: any) {\r\n            console.error(",
    "spanclassnameinlineb": "\r\n            }`}>\r\n            <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${settings.emailNotifications ? ",
    "divclassnamerelative": "\r\n          />\r\n          <div className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${settings.emailNotifications ? ",
    "returnnavigatetorole": "\r\n        };\r\n\r\n        return <Navigate to={roleRedirects[user.role]} replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n}\r\n\r\nfunction AppRoutes() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/products\" element={<ProductsPageB2B />} />\r\n            <Route path=\"/products-test\" element={<ProductsList />} />\r\n            <Route path=\"/product/:id\" element={<ProductDetailPageB2B />} />\r\n            <Route path=\"/product-detail/:id\" element={<ProductDetailPage />} />\r\n            <Route path=\"/supplier/:supplierId\" element={<SupplierProfilePage />} />\r\n            <Route path=\"/product-old/:id\" element={<ProductPage />} />\r\n            <Route path=\"/category/:categoryId\" element={<CategoryPage />} />\r\n\r\n            <Route path=\"/login\" element={<LoginRoute><UniversalLoginPage /></LoginRoute>} />\r\n            <Route path=\"/register\" element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n            {/* Redirection pour /auth vers /login pour √©viter la confusion */}\r\n            <Route path=\"/auth\" element={<Navigate to=\"/login\" replace />} />\r\n\r\n            {/* Routes d",
    "tryconstresultawaitt": "\r\n        };\r\n\r\n        try {\r\n            const result = await this.createNewAdminAccount(defaultAdmin);\r\n\r\n            if (result.success) {\r\n                return {\r\n                    success: true,\r\n                    message: result.message,\r\n                    credentials: {\r\n                        email: defaultAdmin.email,\r\n                        password: defaultAdmin.password\r\n                    },\r\n                    uid: result.uid\r\n                };\r\n            } else {\r\n                return {\r\n                    success: false,\r\n                    message: result.message\r\n                };\r\n            }\r\n        } catch (error: any) {\r\n            return {\r\n                success: false,\r\n                message: `Erreur lors de la cr√©ation du compte par d√©faut: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er plusieurs comptes admin de test\r\n     *",
    "tryconstresultawaitt1": "\r\n        };\r\n\r\n        try {\r\n            const result = await this.createNewAdminAccount(defaultAdmin);\r\n\r\n            if (result.success) {\r\n                return {\r\n                    success: true,\r\n                    message: result.message,\r\n                    credentials: {\r\n                        email: defaultAdmin.email,\r\n                        password: defaultAdmin.password\r\n                    },\r\n                    uid: result.uid\r\n                };\r\n            } else {\r\n                return {\r\n                    success: false,\r\n                    message: result.message\r\n                };\r\n            }\r\n        } catch (error: any) {\r\n            return {\r\n                success: false,\r\n                message: `Erreur lors de la cr√©ation du compte par d√©faut: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er plusieurs comptes admin de test\r\n     *",
    "tryconstresultawaitt2": "\r\n        };\r\n\r\n        try {\r\n            const result = await this.createNewAdminAccount(defaultAdmin);\r\n\r\n            if (result.success) {\r\n                return {\r\n                    success: true,\r\n                    message: result.message,\r\n                    credentials: {\r\n                        email: defaultAdmin.email,\r\n                        password: defaultAdmin.password\r\n                    },\r\n                    uid: result.uid\r\n                };\r\n            } else {\r\n                return {\r\n                    success: false,\r\n                    message: result.message\r\n                };\r\n            }\r\n        } catch (error: any) {\r\n            return {\r\n                success: false,\r\n                message: `Erreur lors de la cr√©ation du compte par d√©faut: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er plusieurs comptes admin de test\r\n     */\r\n    static async createTestAdminAccounts(): Promise<{\r\n        success: boolean;\r\n        message: string;\r\n        createdAccounts?: Array<{ email: string; password: string; uid: string }>;\r\n    }> {\r\n        const testAdmins: CreateAdminUserData[] = [\r\n            {\r\n                email: ",
    "constisadminemailema": "\r\n  ];\r\n  const isAdminEmail = (emailToCheck: string) => {\r\n    return adminEmails.includes(emailToCheck.toLowerCase().trim());\r\n  };\r\n\r\n  // Gestion des r√©seaux sociaux\r\n  const handleNetworkSelection = (networks: SocialNetwork[]) => {\r\n    setSelectedNetworks(networks);\r\n    if (networks.length > 0) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      setSocialMediaLinksList([]);\r\n      setSocialMediaLinks(",
    "constisadminemailema1": "\r\n  ];\r\n  const isAdminEmail = (emailToCheck: string) => {\r\n    return adminEmails.includes(emailToCheck.toLowerCase().trim());\r\n  };\r\n\r\n  // Gestion des r√©seaux sociaux\r\n  const handleNetworkSelection = (networks: SocialNetwork[]) => {\r\n    setSelectedNetworks(networks);\r\n    if (networks.length > 0) {\r\n      setIsModalOpen(true);\r\n    } else {\r\n      setSocialMediaLinksList([]);\r\n      setSocialMediaLinks(",
    "notificationsemailor": "\r\n  },\r\n  notifications: {\r\n    emailOrders: true,\r\n    emailMessages: true,\r\n    emailReviews: true,\r\n    emailMarketing: false,\r\n    pushOrders: true,\r\n    pushMessages: true,\r\n    pushReviews: false\r\n  },\r\n  security: {\r\n    twoFactorAuth: true,\r\n    passwordExpiry: 90,\r\n    sessionTimeout: 30\r\n  },\r\n  billing: {\r\n    companyName: ",
    "exportinterfacecreat": "\r\n};\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface AdminUser extends User {\r\n    uid: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    isActive: boolean;\r\n    lastLogin?: string;\r\n}\r\n\r\n/**\r\n * Service de cr√©ation d",
    "seconnecterbuttonmot": " />\r\n                                    Se connecter\r\n                                </>\r\n                            )}\r\n                        </button>\r\n\r\n                        {/* Mot de passe oubli√© *",
    "seconnecterbuttonmot1": " />\r\n                                    Se connecter\r\n                                </>\r\n                            )}\r\n                        </button>\r\n\r\n                        {/* Mot de passe oubli√© */}\r\n                        <div className=",
    "confirmerlenouveaumo": " />\r\n                          Confirmer le nouveau mot de passe\r\n                        <",
    "nouveaumotdepasse": " />\r\n                          Nouveau mot de passe\r\n                        <",
    "spancompanycountrysp": " />\r\n                    <span>{company.country}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\nCompanyItem.displayName = 'CompanyItem';\r\n\r\n// Composant principal optimis√©\r\nconst OptimizedCompaniesPage: React.FC = memo(() => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'inactive'>('all');\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Requ√™te optimis√©e avec cache intelligent\r\n    const { data: allCompanies, loading, isStale } = useOptimizedQuery<Company>('companies', {\r\n        select: 'id, name, email, phone, country, logo, status, created_at',\r\n        orderBy: { column: 'created_at', ascending: false },\r\n        cacheKey: 'companies-list',\r\n        cacheTTL: 300000, // 5 minutes\r\n        enableRealtime: true\r\n    });\r\n\r\n    // Recherche avec debounce pour √©viter trop de requ√™tes\r\n    const { data: searchResults } = useDebouncedSearch<Company>(\r\n        'companies',\r\n        searchTerm,\r\n        ['name', 'email', 'country'],\r\n        300, // 300ms delay\r\n        {\r\n            select: 'id, name, email, phone, country, logo, status, created_at',\r\n            cacheKey: `companies-search-${searchTerm}`,\r\n            cacheTTL: 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n\r\n    // Filtrage m√©moris√© pour √©viter les recalculs inutiles\r\n    const filteredCompanies = useMemo(() => {\r\n        let companies = searchTerm ? searchResults : allCompanies;\r\n\r\n        if (!companies) return [];\r\n\r\n        if (statusFilter !== 'all') {\r\n            companies = companies.filter(company => company.status === statusFilter);\r\n        }\r\n\r\n        return companies;\r\n    }, [allCompanies, searchResults, searchTerm, statusFilter]);\r\n\r\n    // Statistiques m√©moris√©es\r\n    const stats = useMemo(() => {\r\n        const total = filteredCompanies.length;\r\n        const active = filteredCompanies.filter(c => c.status === 'active').length;\r\n        const inactive = total - active;\r\n\r\n        return { total, active, inactive };\r\n    }, [filteredCompanies]);\r\n\r\n    // Rendu des items pour la liste virtualis√©e\r\n    const renderCompanyItem = ({ index, data }: { index: number; data: Company[] }) => (\r\n        <CompanyItem company={data[index]} />\r\n    );\r\n\r\n    // Composant de filtres\r\n    const FilterComponent = memo(() => (\r\n        <div className=",
    "passwordtrimmotdepas": " : password.trim(), // Mot de passe temporaire pour les fournisseurs, sourceurs et influenceurs\n        name.trim(), \n        role\n      );\n      \n      if (registerError) {\n        throw new Error(registerError);\n      }\n      \n      if (user) {\n        switch (user.role) {\n          case ",
    "selectedroleconnexio": " : selectedRole;\n\n      // Connexion de d√©monstration bas√©e sur le r√¥le d√©termin√©\n      ",
    "selectedroleconnexio1": " : selectedRole;\n\n      // Connexion de d√©monstration bas√©e sur le r√¥le d√©termin√©\n      // Pour simplifier, nous utiliserons une connexion fictive\n      const demoUser = {\n        id: `demo_${userRole}_${Date.now()}`,\n        email: email.trim(),\n        name: `Utilisateur ${userRole}`,\n        role: userRole as ",
    "selectedroleconnexio2": " : selectedRole;\n\n      // Connexion de d√©monstration bas√©e sur le r√¥le d√©termin√©\n      // Pour simplifier, nous utiliserons une connexion fictive\n      const demoUser = {\n        id: `demo_${userRole}_${Date.now()}`,\n        email: email.trim(),\n        name: `Utilisateur ${userRole}`,\n        role: userRole as ",
    "selectedroleconnexio3": " : selectedRole;\n      \n      // Connexion Google simplifi√©e avec le r√¥le d√©termin√©\n      const demoUser = {\n        id: `google_${userRole}_${Date.now()}`,\n        email: ",
    "selectedroleconnexio4": " : selectedRole;\n      \n      // Connexion Google simplifi√©e avec le r√¥le d√©termin√©\n      const demoUser = {\n        id: `google_${userRole}_${Date.now()}`,\n        email: ",
    "selectedroleconnexio5": " : selectedRole;\n      \n      // Connexion Google simplifi√©e avec le r√¥le d√©termin√©\n      const demoUser = {\n        id: `google_${userRole}_${Date.now()}`,\n        email: ",
    "hdautonomie7jourseta": " HD',\r\n            'Autonomie': '7 jours',\r\n            '√âtanch√©it√©': 'IP68',\r\n            'Connectivit√©': 'Bluetooth 5.0, WiFi',\r\n            'Capteurs': 'Cardiaque, GPS, Acc√©l√©rom√®tre',\r\n            'Compatibilit√©': 'iOS 12+, Android 6.0+',\r\n            'Mat√©riau': 'Alliage d\\'aluminium',\r\n            'Poids': '45g'\r\n        },\r\n        discount: {\r\n            minQty: 500,\r\n            percentage: 15\r\n        }\r\n    },\r\n    {\r\n        name: 'Lunettes de Soleil Premium UV400',\r\n        description: 'Lunettes de soleil polaris√©es avec protection UV400 et monture en alliage l√©ger.',\r\n        longDescription: `Ces lunettes de soleil premium offrent une protection optimale contre les rayons UV tout en conservant un style moderne et √©l√©gant.\r\n\r\nFabriqu√©es avec des verres polaris√©s haute qualit√©, elles r√©duisent efficacement l'√©blouissement et am√©liorent le contraste pour une vision claire en toutes circonstances. La monture en alliage ultra-l√©ger garantit un confort de port exceptionnel m√™me lors d'utilisations prolong√©es.\r\n\r\nLe design intemporel s'adapte √† tous les styles, que ce soit pour un usage professionnel ou d√©contract√©. Ces lunettes sont parfaites pour la revente en boutiques d'optique, magasins de mode ou sites e-commerce.`,\r\n        price: 0.50,\r\n        moq: 200,\r\n        category: 'Mode',\r\n        images: [\r\n            {\r\n                id: '1',\r\n                url: 'https://images.unsplash.com/photo-1572635196237-14b3f281503f?w=800&h=800&fit=crop',\r\n                alt: 'Lunettes de soleil noires'\r\n            },\r\n            {\r\n                id: '2',\r\n                url: 'https://images.unsplash.com/photo-1577803645773-f96470509666?w=800&h=800&fit=crop',\r\n                alt: 'Lunettes de soleil port√©es'\r\n            },\r\n            {\r\n                id: '3',\r\n                url: 'https://images.unsplash.com/photo-1511499767150-a48a237f0083?w=800&h=800&fit=crop',\r\n                alt: 'Collection de lunettes'\r\n            }\r\n        ],\r\n        variants: [\r\n            { id: '1', name: 'Noir', type: 'color', value: '#000000', available: true },\r\n            { id: '2', name: 'Marron', type: 'color', value: '#8B4513', available: true },\r\n            { id: '3', name: 'Bleu', type: 'color', value: '#4169E1', available: true },\r\n            { id: '4', name: 'Standard', type: 'size', value: 'Standard', available: true },\r\n            { id: '5', name: 'Large', type: 'size', value: 'Large', available: true, price: 0.10 }\r\n        ],\r\n        supplier: {\r\n            id: 'sup2',\r\n            name: 'Fashion Forward Co',\r\n            location: 'Guangzhou, Chine',\r\n            rating: 4.6,\r\n            verified: true,\r\n            responseTime: '< 4h',\r\n            avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop'\r\n        },\r\n        stock: 25000,\r\n        tags: ['UV400', 'Polaris√©', 'Mode', 'L√©ger', 'Unisexe'],\r\n        deliveryTime: {\r\n            min: 5,\r\n            max: 12,\r\n            unit: 'days'\r\n        },\r\n        specifications: {\r\n            'Protection': 'UV400',\r\n            'Verres': 'Polaris√©s anti-reflet',\r\n            'Monture': 'Alliage ultra-l√©ger',\r\n            'Poids': '25g',\r\n            'Largeur': '145mm',\r\n            'Hauteur': '50mm',\r\n            'Pont': '18mm'\r\n        },\r\n        discount: {\r\n            minQty: 1000,\r\n            percentage: 20\r\n        }\r\n    },\r\n    {\r\n        name: '√âcouteurs Bluetooth 5.0 TWS Pro',\r\n        description: '√âcouteurs sans fil avec r√©duction de bruit active et autonomie 24h.',\r\n        longDescription: `Ces √©couteurs True Wireless offrent une exp√©rience audio exceptionnelle avec leur technologie de r√©duction de bruit active et leur qualit√© sonore premium.\r\n\r\n√âquip√©s de la derni√®re puce Bluetooth 5.0, ils garantissent une connexion stable et une latence minimale. L'autonomie exceptionnelle de 6h par √©couteur (24h avec le bo√Ætier) vous accompagne toute la journ√©e.\r\n\r\nLe design ergonomique assure un confort optimal m√™me lors d'utilisations prolong√©es. R√©sistants √† l'eau IPX7, ils sont parfaits pour le sport et les activit√©s en ext√©rieur. Compatible avec tous les appareils Bluetooth.`,\r\n        price: 2.30,\r\n        moq: 120,\r\n        category: '√âlectronique',\r\n        images: [\r\n            {\r\n                id: '1',\r\n                url: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800&h=800&fit=crop',\r\n                alt: '√âcouteurs Bluetooth dans leur bo√Ætier'\r\n            },\r\n            {\r\n                id: '2',\r\n                url: 'https://images.unsplash.com/photo-1590658268037-6bf12165a8df?w=800&h=800&fit=crop',\r\n                alt: '√âcouteurs en cours d\\'utilisation'\r\n            },\r\n            {\r\n                id: '3',\r\n                url: 'https://images.unsplash.com/photo-1608156639585-b3a35e2d4fb7?w=800&h=800&fit=crop',\r\n                alt: 'Bo√Ætier de charge ouvert'\r\n            }\r\n        ],\r\n        variants: [\r\n            { id: '1', name: 'Noir', type: 'color', value: '#000000', available: true },\r\n            { id: '2', name: 'Blanc', type: 'color', value: '#FFFFFF', available: true },\r\n            { id: '3', name: 'Bleu', type: 'color', value: '#4169E1', available: true }\r\n        ],\r\n        supplier: {\r\n            id: 'sup3',\r\n            name: 'AudioTech Solutions',\r\n            location: 'Shenzhen, Chine',\r\n            rating: 4.7,\r\n            verified: true,\r\n            responseTime: '< 1h',\r\n            avatar: 'https://images.unsplash.com/photo-1590650153855-d9e808231d41?w=100&h=100&fit=crop'\r\n        },\r\n        stock: 18000,\r\n        tags: ['Bluetooth 5.0', 'TWS', 'R√©duction bruit', 'IPX7', 'Sport'],\r\n        deliveryTime: {\r\n            min: 10,\r\n            max: 18,\r\n            unit: 'days'\r\n        },\r\n        specifications: {\r\n            'Bluetooth': '5.0',\r\n            'Autonomie √©couteurs': '6h',\r\n            'Autonomie totale': '24h',\r\n            'R√©duction de bruit': 'ANC active',\r\n            'R√©sistance': 'IPX7',\r\n            'Pilotes': '13mm graph√®ne',\r\n            'Poids': '5g par √©couteur'\r\n        }\r\n    },\r\n    {\r\n        name: 'Sac √† Dos Ordinateur Business',\r\n        description: 'Sac √† dos professionnel avec compartiment laptop 15.6",
    "asuserroleisactivetr": " as UserRole,\r\n                    isActive: true\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asuserroleisactivetr1": " as UserRole,\r\n                    isActive: true\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asuserroleisactivetr2": " as UserRole,\r\n                    isActive: true\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asconstletcreatedcou": " as const\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asconstletcreatedcou1": " as const\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asconstletcreatedcou2": " as const\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    const result = await this.createUser(user);\r\n                    if (result.success) {\r\n                        createdCount++;\r\n                        console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                    } else {\r\n                        console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, result.error);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "asconstcreatedatnewd": " as const,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide les donn√©es de connexion\r\n   * @param data - L",
    "asconstcreatedatnewd1": " as const,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide les donn√©es de connexion\r\n   * @param data - L",
    "asconstcreatedatnewd2": " as const,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide les donn√©es de connexion\r\n   * @param data - L",
    "elementloginrouteuni": " element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n            {/* Redirection pour /auth vers /login pour √©viter la confusion *",
    "elementloginrouteuni1": " element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n            {/* Redirection pour /auth vers /login pour √©viter la confusion */}\r\n            <Route path=",
    "elementloginrouteuni2": " element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n      {/* Redirection pour /auth vers /login pour √©viter la confusion *",
    "elementloginrouteuni3": " element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n      {/* Redirection pour /auth vers /login pour √©viter la confusion */}\r\n      <Route path=",
    "onsubmithandlesubmit": " onSubmit={handleSubmit}>\n            {/* S√©lecteur de r√¥le - cach√© pour les administrateurs */}\n            {!isAdminEmail(email) && (\n              <div>\n                <label htmlFor=",
    "classnamewfullsmw40b": " },\n            ]}\n            className=\"w-full sm:w-40\"\n          />\n          <Button onClick={() => setShowAddUserModal(true)} variant=\"primary\" className=\"flex items-center justify-center\">\n            <Plus className=\"h-5 w-5 mr-2\" />\n            Ajouter un utilisateur\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        {loading ? (\n          <div className=\"flex justify-center items-center py-10\">\n            <span className=\"text-gray-500\">Chargement des utilisateurs...</span>\n        </div>\n        ) : filteredUsers.length === 0 ? (\n          <div className=\"flex justify-center items-center py-10\">\n            <span className=\"text-gray-500\">Aucun utilisateur trouv√©.</span>\n        </div>\n        ) : (\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">R√¥le</th>\n                <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredUsers.map((user) => (\n                <tr key={user.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">{user.email}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{user.name}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 capitalize\">{user.role}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button onClick={() => openEditModal(user)} className=\"text-blue-600 hover:text-blue-900 mr-4\">\n                        <Pencil className=\"h-5 w-5\" />\n                      </button>\n                    <button onClick={() => openDeleteConfirm(user)} className=\"text-red-600 hover:text-red-900\">\n                          <Trash2 className=\"h-5 w-5\" />\n                        </button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        )}\n      </div>\n\n      {/* Add User Modal */}\n      {showAddUserModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-4\">Ajouter un nouvel utilisateur</h2>\n            {error && <div className=\"mb-4 text-red-600 text-sm\">{error}</div>}\n            {success && <div className=\"mb-4 text-green-600 text-sm\">{success}</div>}\n            <form onSubmit={handleAddUser} className=\"space-y-4\">\n              <Input\n                label=\"Email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              <Input\n                label=\"Mot de passe\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={6}\n              />\n              <Input\n                label=\"Nom\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n              <Select\n                label=\"R√¥le\"\n                value={role}\n                onChange={(e) => setRole(e.target.value as ",
    "genereruniduniquecon": " };\r\n            }\r\n\r\n            // G√©n√©rer un ID unique\r\n            const uid = `ultrasafe_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n            const now = new Date().toISOString();\r\n\r\n            // Document utilisateur minimal\r\n            const userDoc = {\r\n                id: uid,\r\n                email: userData.email,\r\n                name: userData.name,\r\n                role: userData.role,\r\n                isActive: userData.isActive ?? true,\r\n                language: ",
    "genereruniduniquecon1": " };\r\n            }\r\n\r\n            // G√©n√©rer un ID unique\r\n            const uid = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n            const now = new Date().toISOString();\r\n\r\n            // Cr√©er le document utilisateur complet\r\n            const userDocument: SavedUser = {\r\n                uid: uid,\r\n                id: uid,\r\n                email: userData.email.trim(),\r\n                name: userData.name.trim(),\r\n                role: userData.role,\r\n                isActive: userData.isActive ?? true,\r\n                language: ",
    "returnisvalidtrueobt": " };\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Obtient le r√¥le par d√©faut du syst√®me\r\n   * @returns Le r√¥le par d√©faut\r\n   */\r\n  static getDefaultRole(): UserRole {\r\n    return this.DEFAULT_ROLE;\r\n  }\r\n\r\n  /**\r\n   * Obtient la liste des emails d",
    "divdivdivclassnamemt": " }}></div>\r\n                        </div>\r\n                        <div className=\"mt-2 text-xs text-gray-500 space-y-1\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <CheckCircle size={12} className=\"text-green-500\" />\r\n                            <span>Au moins 8 caract√®res</span>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <X size={12} className=\"text-red-500\" />\r\n                            <span>Contient au moins une majuscule</span>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <CheckCircle size={12} className=\"text-green-500\" />\r\n                            <span>Contient au moins un chiffre</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"stagger-item\">\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <CheckCircle size={16} className=\"text-green-500\" />\r\n                          Confirmer le nouveau mot de passe\r\n                        </div>\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white hover-glow transition-all duration-200\"\r\n                        placeholder=\"Confirmez votre nouveau mot de passe\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col sm:flex-row gap-3\">\r\n                    <button\r\n                      onClick={() => showNotification(",
    "buttonformboutonsdec": ")\r\n              }            </button>\r\n          </form>          {/* Boutons de connexion Google *",
    "tryconstusercredenti": ") {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Cr√©er le document utilisateur dans Firestore\n      const userData: User = {\n        id: userCredential.user.uid,\n        email: email,\n        name: name,\n        role: role,\n        language: ",
    "tryconstusercredenti1": ") {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Cr√©er le document utilisateur dans Firestore\n      const userData: User = {\n        id: userCredential.user.uid,\n        email: email,\n        name: name,\n        role: role,\n        language: ",
    "tryconstusercredenti2": ") {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Cr√©er le document utilisateur dans Firestore\n      const userData: User = {\n        id: userCredential.user.uid,\n        email: email,\n        name: name,\n        role: role,\n        language: ",
    "cleanupfnconstlogina": ") {\r\n                        cleanupFn();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const login = async (email: string, password: string) => {\r\n        console.log(`üîê Tentative de connexion: ${email}`);\r\n\r\n        try {\r\n            const result = await secureAuthService.secureLogin(email, password);\r\n\r\n            if (result.success && result.user) {\r\n                setUser(result.user);\r\n                console.log(`‚úÖ Connexion r√©ussie: ${result.user.name}`);\r\n            } else {\r\n                console.log(`‚ùå Connexion √©chou√©e: ${result.error}`);\r\n            }\r\n\r\n            return result;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "cleanupfnconstlogina1": ") {\r\n                        cleanupFn();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const login = async (email: string, password: string) => {\r\n        console.log(`üîê Tentative de connexion: ${email}`);\r\n\r\n        try {\r\n            const result = await secureAuthService.secureLogin(email, password);\r\n\r\n            if (result.success && result.user) {\r\n                setUser(result.user);\r\n                console.log(`‚úÖ Connexion r√©ussie: ${result.user.name}`);\r\n            } else {\r\n                console.log(`‚ùå Connexion √©chou√©e: ${result.error}`);\r\n            }\r\n\r\n            return result;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "cleanupfnconstlogina2": ") {\r\n                        cleanupFn();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const login = async (email: string, password: string) => {\r\n        console.log(`üîê Tentative de connexion: ${email}`);\r\n\r\n        try {\r\n            const result = await secureAuthService.secureLogin(email, password);\r\n\r\n            if (result.success && result.user) {\r\n                setUser(result.user);\r\n                console.log(`‚úÖ Connexion r√©ussie: ${result.user.name}`);\r\n            } else {\r\n                console.log(`‚ùå Connexion √©chou√©e: ${result.error}`);\r\n            }\r\n\r\n            return result;\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "setisloginmodetruelo": ") {\r\n      setIsLoginMode(true);\r\n    }\r\n  }, [location.pathname]);\r\n  // √âtats sp√©cifiques aux influenceurs\r\n  const [socialMediaLinks, setSocialMediaLinks] = useState(",
    "setisloginmodetruelo1": ") {\r\n      setIsLoginMode(true);\r\n    }\r\n  }, [location.pathname]);\r\n  // √âtats sp√©cifiques aux influenceurs\r\n  const [socialMediaLinks, setSocialMediaLinks] = useState(",
    "createdaccountspusha": ")) {\r\n                            createdAccounts.push({\r\n                                ...accountData,\r\n                                success: true,\r\n                                existing: true\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // Pause entre les cr√©ations\r\n                    await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n                } catch (error: any) {\r\n                    setResults(prev => prev + `‚ùå Erreur ${accountData.email}: ${error.message}\\n`);\r\n                }\r\n            }\r\n\r\n            setResults(prev => prev + `\\nüéâ Syst√®me configur√© avec succ√®s !\\n`);\r\n            setResults(prev => prev + `‚úÖ ${createdCount} nouveaux comptes cr√©√©s\\n`);\r\n            setResults(prev => prev + `üìä ${createdAccounts.length} comptes disponibles au total\\n`);\r\n\r\n            setUltimateResult({\r\n                success: true,\r\n                createdCount,\r\n                accounts: createdAccounts\r\n            });\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n            setUltimateResult({\r\n                success: false,\r\n                error: error.message\r\n            });\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    const createAdminOnly = async () => {\r\n        setIsRunning(true);\r\n        setResults(",
    "createdaccountspusha1": ")) {\r\n                            createdAccounts.push({\r\n                                ...accountData,\r\n                                success: true,\r\n                                existing: true\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // Pause entre les cr√©ations\r\n                    await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n                } catch (error: any) {\r\n                    setResults(prev => prev + `‚ùå Erreur ${accountData.email}: ${error.message}\\n`);\r\n                }\r\n            }\r\n\r\n            setResults(prev => prev + `\\nüéâ Syst√®me configur√© avec succ√®s !\\n`);\r\n            setResults(prev => prev + `‚úÖ ${createdCount} nouveaux comptes cr√©√©s\\n`);\r\n            setResults(prev => prev + `üìä ${createdAccounts.length} comptes disponibles au total\\n`);\r\n\r\n            setUltimateResult({\r\n                success: true,\r\n                createdCount,\r\n                accounts: createdAccounts\r\n            });\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n            setUltimateResult({\r\n                success: false,\r\n                error: error.message\r\n            });\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    const createAdminOnly = async () => {\r\n        setIsRunning(true);\r\n        setResults(",
    "createdaccountspusha2": ")) {\r\n                            createdAccounts.push({\r\n                                ...accountData,\r\n                                success: true,\r\n                                existing: true\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    // Pause entre les cr√©ations\r\n                    await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n                } catch (error: any) {\r\n                    setResults(prev => prev + `‚ùå Erreur ${accountData.email}: ${error.message}\\n`);\r\n                }\r\n            }\r\n\r\n            setResults(prev => prev + `\\nüéâ Syst√®me configur√© avec succ√®s !\\n`);\r\n            setResults(prev => prev + `‚úÖ ${createdCount} nouveaux comptes cr√©√©s\\n`);\r\n            setResults(prev => prev + `üìä ${createdAccounts.length} comptes disponibles au total\\n`);\r\n\r\n            setUltimateResult({\r\n                success: true,\r\n                createdCount,\r\n                accounts: createdAccounts\r\n            });\r\n\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `\\nüí• Erreur: ${error.message}\\n`);\r\n            setUltimateResult({\r\n                success: false,\r\n                error: error.message\r\n            });\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    const createAdminOnly = async () => {\r\n        setIsRunning(true);\r\n        setResults(",
    "setresultsprevprevle": ")) {\r\n                    setResults(prev => prev + `üí° Le compte admin existe d√©j√† !\\n`);\r\n                    setResults(prev => prev + `üìß Essayez: admin@chinetonusine.com\\n`);\r\n                    setResults(prev => prev + `üîë Mot de passe: Admin123!\\n`);\r\n                }\r\n            }\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `‚ùå Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=",
    "setresultsprevprevle1": ")) {\r\n                    setResults(prev => prev + `üí° Le compte admin existe d√©j√† !\\n`);\r\n                    setResults(prev => prev + `üìß Essayez: admin@chinetonusine.com\\n`);\r\n                    setResults(prev => prev + `üîë Mot de passe: Admin123!\\n`);\r\n                }\r\n            }\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `‚ùå Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=",
    "setresultsprevprevle2": ")) {\r\n                    setResults(prev => prev + `üí° Le compte admin existe d√©j√† !\\n`);\r\n                    setResults(prev => prev + `üìß Essayez: admin@chinetonusine.com\\n`);\r\n                    setResults(prev => prev + `üîë Mot de passe: Admin123!\\n`);\r\n                }\r\n            }\r\n        } catch (error: any) {\r\n            setResults(prev => prev + `‚ùå Erreur: ${error.message}\\n`);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gradient-to-br from-blue-50 to-purple-50 rounded-xl shadow-lg p-6 mb-6 border border-blue-200\">\r\n            <div className=\"flex items-center gap-3 mb-6\">\r\n                <Sparkles className=\"h-8 w-8 text-purple-500\" />\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n                        Syst√®me Ultime d",
    "consolelogutilisateu": ")) {\r\n            console.log(`‚ÑπÔ∏è Utilisateur ${testUser.email} existe d√©j√†`);\r\n            results.push({ email: testUser.email, success: true });\r\n          } else {\r\n            console.error(`‚ùå Erreur pour ${testUser.email}:`, result.error);\r\n            results.push({ email: testUser.email, success: false, error: result.error });\r\n          }\r\n        } else {\r\n          console.log(`‚úÖ Utilisateur ${testUser.email} cr√©√© avec succ√®s`);\r\n          results.push({ email: testUser.email, success: true });\r\n          \r\n          // Mettre √† jour les informations suppl√©mentaires si n√©cessaire\r\n          if (testUser.company && result.user) {\r\n            await firebaseAuthService.updateUser(result.user.id, {\r\n              company: testUser.company\r\n            });\r\n          }\r\n        }\r\n        \r\n        ",
    "consolelogutilisateu1": ")) {\r\n            console.log(`‚ÑπÔ∏è Utilisateur ${testUser.email} existe d√©j√†`);\r\n            results.push({ email: testUser.email, success: true });\r\n          } else {\r\n            console.error(`‚ùå Erreur pour ${testUser.email}:`, result.error);\r\n            results.push({ email: testUser.email, success: false, error: result.error });\r\n          }\r\n        } else {\r\n          console.log(`‚úÖ Utilisateur ${testUser.email} cr√©√© avec succ√®s`);\r\n          results.push({ email: testUser.email, success: true });\r\n          \r\n          // Mettre √† jour les informations suppl√©mentaires si n√©cessaire\r\n          if (testUser.company && result.user) {\r\n            await firebaseAuthService.updateUser(result.user.id, {\r\n              company: testUser.company\r\n            });\r\n          }\r\n        }\r\n        \r\n        // Petit d√©lai pour √©viter de surcharger Firebase\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        \r\n      } catch (error) {\r\n        console.error(`‚ùå Erreur inattendue pour ${testUser.email}:`, error);\r\n        results.push({ \r\n          email: testUser.email, \r\n          success: false, \r\n          error: error instanceof Error ? error.message : ",
    "consolelogutilisateu2": ")) {\r\n            console.log(`‚ÑπÔ∏è Utilisateur ${testUser.email} existe d√©j√†`);\r\n            results.push({ email: testUser.email, success: true });\r\n          } else {\r\n            console.error(`‚ùå Erreur pour ${testUser.email}:`, result.error);\r\n            results.push({ email: testUser.email, success: false, error: result.error });\r\n          }\r\n        } else {\r\n          console.log(`‚úÖ Utilisateur ${testUser.email} cr√©√© avec succ√®s`);\r\n          results.push({ email: testUser.email, success: true });\r\n          \r\n          // Mettre √† jour les informations suppl√©mentaires si n√©cessaire\r\n          if (testUser.company && result.user) {\r\n            await firebaseAuthService.updateUser(result.user.id, {\r\n              company: testUser.company\r\n            });\r\n          }\r\n        }\r\n        \r\n        // Petit d√©lai pour √©viter de surcharger Firebase\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        \r\n      } catch (error) {\r\n        console.error(`‚ùå Erreur inattendue pour ${testUser.email}:`, error);\r\n        results.push({ \r\n          email: testUser.email, \r\n          success: false, \r\n          error: error instanceof Error ? error.message : ",
    "determinerleroleauto": "));\n      }\n\n      // D√©terminer le r√¥le automatiquement pour les admins\n      const userRole = isAdminEmail(email) ? ",
    "determinerleroleauto1": "));\n      }\n\n      // D√©terminer le r√¥le automatiquement pour les admins\n      const userRole = isAdminEmail(email) ? ",
    "pourlesfournisseurss": "));\n      }\n\n      // Pour les fournisseurs, sourceurs, et influenceurs, on ne valide pas le mot de passe car l",
    "forconstuserdataofes": "));\r\n\r\n        for (const userData of essentials) {\r\n            try {\r\n                const result = await AdminCreationService.createNewAdminAccount({\r\n                    email: userData.email,\r\n                    password: userData.password,\r\n                    name: userData.name\r\n                });\r\n\r\n                if (result.success) {\r\n                    setResults(prev => prev + `‚úÖ ${userData.email} cr√©√©\\n`);\r\n                    setCreatedAccounts(prev => [...prev, userData]);\r\n                } else {\r\n                    setResults(prev => prev + `‚ö†Ô∏è ${userData.email}: ${result.message}\\n`);\r\n                }\r\n            } catch (error: any) {\r\n                setResults(prev => prev + `‚ùå ${userData.email}: ${error.message}\\n`);\r\n            }\r\n        }\r\n\r\n        setResults(prev => prev + ",
    "forconstuserdataofes1": "));\r\n\r\n        for (const userData of essentials) {\r\n            try {\r\n                const result = await AdminCreationService.createNewAdminAccount({\r\n                    email: userData.email,\r\n                    password: userData.password,\r\n                    name: userData.name\r\n                });\r\n\r\n                if (result.success) {\r\n                    setResults(prev => prev + `‚úÖ ${userData.email} cr√©√©\\n`);\r\n                    setCreatedAccounts(prev => [...prev, userData]);\r\n                } else {\r\n                    setResults(prev => prev + `‚ö†Ô∏è ${userData.email}: ${result.message}\\n`);\r\n                }\r\n            } catch (error: any) {\r\n                setResults(prev => prev + `‚ùå ${userData.email}: ${error.message}\\n`);\r\n            }\r\n        }\r\n\r\n        setResults(prev => prev + ",
    "functionloginroutech": "));\r\n\r\nfunction LoginRoute({ children }: { children: React.ReactNode }) {\r\n    const { user, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n                <LoadingSpinner size=\"lg\" message=\"V√©rification de la session...\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (user) {\r\n        const roleRedirects = {\r\n            admin: ",
    "functionloginroutech1": "));\r\n\r\nfunction LoginRoute({ children }: { children: React.ReactNode }) {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <LoadingSpinner size=\"lg\" message=\"V√©rification de la session...\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (user) {\r\n    const roleRedirects = {\r\n      admin: ",
    "connexionuniverselle": "));\r\n      }\r\n\r\n      // Connexion universelle : admin si email admin, sinon r√¥le par d√©faut\r\n      const userRole = isAdminEmail(email) ? ",
    "connexionuniverselle1": "));\r\n      }\r\n\r\n      // Connexion universelle : admin si email admin, sinon r√¥le par d√©faut\r\n      const userRole = isAdminEmail(email) ? ",
    "connexionuniverselle2": "));\r\n      }\r\n\r\n      // Connexion universelle : admin si email admin, sinon r√¥le par d√©faut\r\n      const userRole = isAdminEmail(email) ? ",
    "determinationautomat": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "determinationautomat1": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "determinationautomat2": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "determinationautomat3": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "determinationautomat4": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "determinationautomat5": "));\r\n      }\r\n\r\n      // D√©termination automatique du r√¥le\r\n      const userRole = UniversalAuthService.determineUserRole(email);\r\n\r\n      // Cr√©ation d",
    "finallysetisloadingf": "));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© */}\r\n      <div className=\"auth-animated-background\">\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n      </div>\r\n\r\n      {/* Carte principale */}\r\n      <div className=\"auth-card\">\r\n        {/* Colonne visuelle */}\r\n        <div className=\"auth-visual-column\">\r\n          <div className=\"auth-visual-content\">\r\n            <h1 className=\"auth-visual-title\">\r\n              {isLoginMode ? t(",
    "finallysetisloadingf1": "));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© spectaculaire avec tous les effets */}\r\n      <div className=\"auth-animated-background\">\r\n        {/* Particules flottantes am√©lior√©es */}\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        \r\n        {/* Particules de lumi√®re */}\r\n        <div className=\"light-particle\"></div>\r\n        <div className=\"light-particle\"></div>\r\n        <div className=\"light-particle\"></div>\r\n        \r\n        {/* Orbes lumineuses */}\r\n        <div className=\"light-orb\"></div>\r\n        <div className=\"light-orb\"></div>\r\n        <div className=\"light-orb\"></div>\r\n        <div className=\"light-orb\"></div>\r\n        \r\n        {/* Ondulations */}\r\n        <div className=\"ripple-effect\"></div>\r\n        <div className=\"ripple-effect\"></div>\r\n        <div className=\"ripple-effect\"></div>\r\n        \r\n        {/* Pulsations √©nerg√©tiques */}\r\n        <div className=\"energy-pulse\"></div>\r\n        <div className=\"energy-pulse\"></div>\r\n        <div className=\"energy-pulse\"></div>\r\n        \r\n        {/* Forme morphique */}\r\n        <div className=\"morphing-shape\"></div>\r\n      </div>      {/* Carte principale avec effet glassmorphism */}\r\n      <div className=\"auth-card auth-card-glassmorphism auth-spectacular-entrance\">\r\n        {/* Colonne visuelle */}\r\n        <div className=\"auth-visual-column auth-visual-spectacular\">\r\n          <div className=\"auth-visual-content\">\r\n            <h2 className=\"auth-visual-title typing-animation\">\r\n              {isLoginMode ? t(",
    "filteripiptrimrows4p": ").filter(ip => ip.trim()))}\r\n                rows={4}\r\n                placeholder=\"192.168.1.0/24&#10;10.0.0.0/8&#10;172.16.0.0/12\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white font-mono text-sm\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">Formats support√©s: IP unique (192.168.1.1) ou plage CIDR (192.168.1.0/24)</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">SSL/HTTPS requis</h4>\r\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">Forcer les connexions s√©curis√©es</p>\r\n              </div>\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings.sslRequired}\r\n                  onChange={(e) => updateSetting(",
    "lengthpdivdivdivdivc": ").length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <DollarSign className=\"h-8 w-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Revenus</p>\r\n                <p className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                  {formatPrice(getTotalRevenue())}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par num√©ro, client ou fournisseur...\"\r\n                  value={searchTerm}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={statusFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setStatusFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les statuts</option>\r\n                <option value=\"pending\">En attente</option>\r\n                <option value=\"confirmed\">Confirm√©e</option>\r\n                <option value=\"shipped\">Exp√©di√©e</option>\r\n                <option value=\"delivered\">Livr√©e</option>\r\n                <option value=\"cancelled\">Annul√©e</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Orders Table */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {loading ? (\r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Commande\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Client\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Fournisseur\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Produits\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Montant\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Statut\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredOrders.map((order) => (\r\n                    <tr key={order.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {order.orderNumber}\r\n                        </div>\r\n                        {order.notes && (\r\n                          <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                            {order.notes}\r\n                          </div>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {order.customerName}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {order.customerEmail}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-white\">\r\n                          {order.supplierName}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-900 dark:text-white\">\r\n                          {order.products.length} produit{order.products.length > 1 ? ",
    "toisostringletcreate": ").toISOString()\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    await setDoc(doc(db, this.collectionName, user.id), user);\r\n                    createdCount++;\r\n                    console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error) {\r\n            console.error(",
    "toisostringletcreate1": ").toISOString()\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    await setDoc(doc(db, this.collectionName, user.id), user);\r\n                    createdCount++;\r\n                    console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error) {\r\n            console.error(",
    "toisostringletcreate2": ").toISOString()\r\n                }\r\n            ];\r\n\r\n            let createdCount = 0;\r\n            for (const user of testUsers) {\r\n                try {\r\n                    await setDoc(doc(db, this.collectionName, user.id), user);\r\n                    createdCount++;\r\n                    console.log(`‚úÖ Utilisateur de test cr√©√©: ${user.email}`);\r\n                } catch (error) {\r\n                    console.error(`‚ùå Erreur lors de la cr√©ation de ${user.email}:`, error);\r\n                }\r\n            }\r\n\r\n            console.log(`‚úÖ ${createdCount} utilisateurs de test cr√©√©s`);\r\n            return { success: true, count: createdCount };\r\n\r\n        } catch (error) {\r\n            console.error(",
    "desactivecauseleserr": ");\n\n        // üö® D√âSACTIV√â - cause les erreurs Auth et d√©connexions\n        // Initialiser la base de donn√©es avec les utilisateurs et donn√©es de test\n        try {\n          ",
    "desactivecauseleserr1": ");\n\n        // üö® D√âSACTIV√â - cause les erreurs Auth et d√©connexions\n        // Initialiser la base de donn√©es avec les utilisateurs et donn√©es de test\n        try {\n          ",
    "desactivecauseleserr2": ");\n\n        // üö® D√âSACTIV√â - cause les erreurs Auth et d√©connexions\n        // Initialiser la base de donn√©es avec les utilisateurs et donn√©es de test\n        try {\n          // await initializationService.initializeDatabase();\n          // initializationService.displayTestCredentials();\n          console.log(",
    "finallysetloadingfal": ");\n              } finally {\n                setLoading(false);\n              }\n            }} className=\"space-y-4\">\n              <Input\n                label=\"Email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={true} // Email should not be editable\n              />\n              <Input\n                label=\"Nom\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n              <Select\n                label=\"R√¥le\"\n                value={role}\n                onChange={(e) => setRole(e.target.value as ",
    "finallysetloadingfal1": ");\n              } finally {\n                setLoading(false);\n              }\n            }} className=\"space-y-4\">\n              <Input\n                label=\"Email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={true} // Email should not be editable\n              />\n              <Input\n                label=\"Nom\"\n                type=\"text\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n              <Select\n                label=\"R√¥le\"\n                value={role}\n                onChange={(e) => setRole(e.target.value as ",
    "setisloadingtruetryd": ");\n    setIsLoading(true);\n    try {\n      // D√©terminer le r√¥le pour Google Sign-In aussi\n      const userRole = isAdminEmail(",
    "setisloadingtruetryd1": ");\n    setIsLoading(true);\n    try {\n      // D√©terminer le r√¥le pour Google Sign-In aussi\n      const userRole = isAdminEmail(",
    "setloadingtruetryawa": ");\n    setLoading(true);\n\n    try {\n      await userService.createUser(email, password, name, role);\n      setSuccess(`Utilisateur ${email} cr√©√© avec succ√®s`);\n      setShowAddUserModal(false);\n      resetForm();\n      loadUsers();\n    } catch (err: unknown) {\n      console.error(",
    "setloadingtruetryawa1": ");\n    setLoading(true);\n\n    try {\n      await userService.createUser(email, password, name, role);\n      setSuccess(`Utilisateur ${email} cr√©√© avec succ√®s`);\n      setShowAddUserModal(false);\n      resetForm();\n      loadUsers();\n    } catch (err: unknown) {\n      console.error(",
    "setloadingtruetryawa2": ");\n    setLoading(true);\n\n    try {\n      await userService.deleteUser(selectedUser.id);\n      setSuccess(`Utilisateur ${selectedUser.email} supprim√© avec succ√®s`);\n      setShowDeleteConfirm(false);\n      setSelectedUser(null);\n      loadUsers();\n    } catch (err: unknown) {\n      console.error(",
    "setloadingtruetryawa3": ");\n    setLoading(true);\n\n    try {\n      await userService.deleteUser(selectedUser.id);\n      setSuccess(`Utilisateur ${selectedUser.email} supprim√© avec succ√®s`);\n      setShowDeleteConfirm(false);\n      setSelectedUser(null);\n      loadUsers();\n    } catch (err: unknown) {\n      console.error(",
    "constopeneditmodalus": ");\n  };\n\n  const openEditModal = (user: User) => {\n    setSelectedUser(user);\n    setEmail(user.email);\n    setName(user.name);\n    setRole(user.role);\n    setShowEditUserModal(true);\n  };\n\n  const openDeleteConfirm = (user: User) => {\n    setSelectedUser(user);\n    setShowDeleteConfirm(true);\n  };\n\n  const renderOverview = () => (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <Users className=\"h-8 w-8 text-blue-500\" />\n          <div className=\"ml-4\">\n            <p className=\"text-sm font-medium text-gray-500\">Utilisateurs totaux</p>\n            <p className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">{stats.totalUsers}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <Users className=\"h-8 w-8 text-green-500\" />\n          <div className=\"ml-4\">\n            <p className=\"text-sm font-medium text-gray-500\">Fournisseurs</p>\n            <p className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">{stats.totalSuppliers}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <Users className=\"h-8 w-8 text-orange-500\" />\n          <div className=\"ml-4\">\n            <p className=\"text-sm font-medium text-gray-500\">Clients</p>\n            <p className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">{stats.totalCustomers}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex items-center\">\n          <Users className=\"h-8 w-8 text-red-500\" />\n          <div className=\"ml-4\">\n            <p className=\"text-sm font-medium text-gray-500\">Administrateurs</p>\n            <p className=\"text-2xl font-semibold text-gray-900 dark:text-gray-100\">{stats.totalAdmins}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderUsers = () => (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n      <div className=\"px-4 py-5 sm:px-6 flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">Gestion des utilisateurs</h3>\n          <p className=\"text-sm text-gray-500 mt-1\">{filteredUsers.length} utilisateur(s) trouv√©(s)</p>\n        </div>\n        <div className=\"mt-4 sm:mt-0 flex flex-col sm:flex-row gap-4\">\n            <Input\n              type=\"text\"\n            placeholder=\"Rechercher par email ou nom...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full sm:w-64\"\n            leftIcon={<Search className=\"h-5 w-5 text-gray-400\" />}\n            />\n            <Select\n              value={roleFilter}\n              onChange={(e) => setRoleFilter(e.target.value)}\n              options={[\n                { value: ",
    "creerdirectementlesc": ");\r\n\r\n            // Cr√©er directement les comptes essentiels via le service\r\n            const accounts = [\r\n                {\r\n                    email: ",
    "siunmotdepasseestfou": ");\r\n\r\n            // Si un mot de passe est fourni, tenter la connexion\r\n            if (password) {\r\n                try {\r\n                    await signInWithEmailAndPassword(auth, this.ADMIN_EMAIL, password);\r\n                    console.log(",
    "constnewaccountsuser": ");\r\n\r\n        const newAccounts: UserAccount[] = [];\r\n\r\n        for (const userData of defaultUsers) {\r\n            try {\r\n                setResults(prev => prev + `üë§ Cr√©ation: ${userData.email} (${userData.role})\\n`);\r\n\r\n                const result = await AdminCreationService.createNewAdminAccount({\r\n                    email: userData.email,\r\n                    password: userData.password,\r\n                    name: userData.name\r\n                });\r\n\r\n                if (result.success) {\r\n                    setResults(prev => prev + `‚úÖ ${userData.email} cr√©√© avec succ√®s\\n`);\r\n                    newAccounts.push(userData);\r\n                } else {\r\n                    setResults(prev => prev + `‚ö†Ô∏è ${userData.email}: ${result.message}\\n`);\r\n                }\r\n\r\n                // Pause entre les cr√©ations\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            } catch (error: any) {\r\n                setResults(prev => prev + `‚ùå Erreur pour ${userData.email}: ${error.message}\\n`);\r\n            }\r\n        }\r\n\r\n        setCreatedAccounts(newAccounts);\r\n        setResults(prev => prev + `\\n‚úÖ ${newAccounts.length} utilisateur(s) cr√©√©(s) avec succ√®s\\n`);\r\n\r\n        setIsCreating(false);\r\n        return newAccounts;\r\n    };\r\n\r\n    const handleFullReset = async () => {\r\n        if (!confirm(",
    "constnewaccountsuser1": ");\r\n\r\n        const newAccounts: UserAccount[] = [];\r\n\r\n        for (const userData of defaultUsers) {\r\n            try {\r\n                setResults(prev => prev + `üë§ Cr√©ation: ${userData.email} (${userData.role})\\n`);\r\n\r\n                const result = await AdminCreationService.createNewAdminAccount({\r\n                    email: userData.email,\r\n                    password: userData.password,\r\n                    name: userData.name\r\n                });\r\n\r\n                if (result.success) {\r\n                    setResults(prev => prev + `‚úÖ ${userData.email} cr√©√© avec succ√®s\\n`);\r\n                    newAccounts.push(userData);\r\n                } else {\r\n                    setResults(prev => prev + `‚ö†Ô∏è ${userData.email}: ${result.message}\\n`);\r\n                }\r\n\r\n                // Pause entre les cr√©ations\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n            } catch (error: any) {\r\n                setResults(prev => prev + `‚ùå Erreur pour ${userData.email}: ${error.message}\\n`);\r\n            }\r\n        }\r\n\r\n        setCreatedAccounts(newAccounts);\r\n        setResults(prev => prev + `\\n‚úÖ ${newAccounts.length} utilisateur(s) cr√©√©(s) avec succ√®s\\n`);\r\n\r\n        setIsCreating(false);\r\n        return newAccounts;\r\n    };\r\n\r\n    const handleFullReset = async () => {\r\n        if (!confirm(",
    "returnuseriduserrefi": ");\r\n\r\n        return {\r\n            userId: userRef.id,\r\n            profileId: profileRef.id,\r\n            credentials: {\r\n                email: ",
    "tryrechercherparemai": ");\r\n\r\n        try {\r\n            // Rechercher par email\r\n            const users = await adminUserServiceFixed.getAllUsers();\r\n            const adminUser = users.find(user => user.email === this.adminEmail);\r\n\r\n            if (adminUser) {\r\n                console.log(`‚úÖ Utilisateur trouv√© en Firestore:`);\r\n                console.log(`   UID: ${adminUser.uid}`);\r\n                console.log(`   Email: ${adminUser.email}`);\r\n                console.log(`   Nom: ${adminUser.name}`);\r\n                console.log(`   R√¥le: ${adminUser.role}`);\r\n                console.log(`   Actif: ${adminUser.isActive}`);\r\n                console.log(`   Derni√®re connexion: ${adminUser.lastLogin || ",
    "tryconstresultawaita": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createDefaultAdminAccount();\r\n\r\n            if (result.success && result.credentials) {\r\n                setResults(`‚úÖ Compte admin par d√©faut cr√©√© avec succ√®s!\r\n\r\nüìß Email: ${result.credentials.email}\r\nüîë Mot de passe: ${result.credentials.password}\r\nüÜî UID: ${result.uid || ",
    "tryconstresultawaita1": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createDefaultAdminAccount();\r\n\r\n            if (result.success && result.credentials) {\r\n                setResults(`‚úÖ Compte admin par d√©faut cr√©√© avec succ√®s!\r\n\r\nüìß Email: ${result.credentials.email}\r\nüîë Mot de passe: ${result.credentials.password}\r\nüÜî UID: ${result.uid || ",
    "tryconstresultawaita2": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createDefaultAdminAccount();\r\n\r\n            if (result.success && result.credentials) {\r\n                setResults(prev => prev + `‚úÖ Admin cr√©√© avec succ√®s !\\n`);\r\n                setResults(prev => prev + `üìß Email: ${result.credentials.email}\\n`);\r\n                setResults(prev => prev + `üîë Mot de passe: ${result.credentials.password}\\n`);\r\n\r\n                setUltimateResult({\r\n                    success: true,\r\n                    createdCount: 1,\r\n                    accounts: [{\r\n                        email: result.credentials.email,\r\n                        password: result.credentials.password,\r\n                        name: ",
    "tryconstresultawaita3": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createDefaultAdminAccount();\r\n\r\n            if (result.success && result.credentials) {\r\n                setResults(prev => prev + `‚úÖ Admin cr√©√© avec succ√®s !\\n`);\r\n                setResults(prev => prev + `üìß Email: ${result.credentials.email}\\n`);\r\n                setResults(prev => prev + `üîë Mot de passe: ${result.credentials.password}\\n`);\r\n\r\n                setUltimateResult({\r\n                    success: true,\r\n                    createdCount: 1,\r\n                    accounts: [{\r\n                        email: result.credentials.email,\r\n                        password: result.credentials.password,\r\n                        name: ",
    "tryconstresultawaita4": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createNewAdminAccount(formData);\r\n\r\n            if (result.success) {\r\n                setResults(`‚úÖ Succ√®s: ${result.message}\r\n                \r\nüìß Email: ${formData.email}\r\nüîë Mot de passe: ${formData.password}\r\nüÜî UID: ${result.uid || ",
    "tryconstresultawaita5": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createNewAdminAccount(formData);\r\n\r\n            if (result.success) {\r\n                setResults(`‚úÖ Succ√®s: ${result.message}\r\n                \r\nüìß Email: ${formData.email}\r\nüîë Mot de passe: ${formData.password}\r\nüÜî UID: ${result.uid || ",
    "tryconstresultawaita6": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createTestAdminAccounts();\r\n\r\n            if (result.success && result.createdAccounts) {\r\n                let message = `‚úÖ ${result.createdAccounts.length} compte(s) admin cr√©√©(s):\r\n\r\n`;\r\n                result.createdAccounts.forEach((account, index) => {\r\n                    message += `${index + 1}. üìß ${account.email}\r\n   üîë Mot de passe: ${account.password}\r\n   üÜî UID: ${account.uid}\r\n\r\n`;\r\n                });\r\n\r\n                message += `üéØ Instructions:\r\n1. Choisissez un compte ci-dessus\r\n2. D√©connectez-vous\r\n3. Connectez-vous avec l",
    "tryconstresultawaita7": ");\r\n\r\n        try {\r\n            const result = await AdminCreationService.createTestAdminAccounts();\r\n\r\n            if (result.success && result.createdAccounts) {\r\n                let message = `‚úÖ ${result.createdAccounts.length} compte(s) admin cr√©√©(s):\r\n\r\n`;\r\n                result.createdAccounts.forEach((account, index) => {\r\n                    message += `${index + 1}. üìß ${account.email}\r\n   üîë Mot de passe: ${account.password}\r\n   üÜî UID: ${account.uid}\r\n\r\n`;\r\n                });\r\n\r\n                message += `üéØ Instructions:\r\n1. Choisissez un compte ci-dessus\r\n2. D√©connectez-vous\r\n3. Connectez-vous avec l",
    "tryconstresultawaitl": ");\r\n\r\n        try {\r\n            const result = await login(formData.email, formData.password);\r\n\r\n            if (result.success && result.user) {\r\n                setSuccess(`Connexion r√©ussie ! Redirection vers ${result.user.role}...`);\r\n\r\n                ",
    "tryconstresultawaitl1": ");\r\n\r\n        try {\r\n            const result = await login(formData.email, formData.password);\r\n\r\n            if (result.success && result.user) {\r\n                setSuccess(`Connexion r√©ussie ! Redirection vers ${result.user.role}...`);\r\n\r\n                // Redirection automatique apr√®s un court d√©lai\r\n                setTimeout(() => {\r\n                    window.location.href = result.redirectTo || getRedirectPath(result.user!.role);\r\n                }, 1500);\r\n\r\n            } else {\r\n                setError(result.error || ",
    "tryconstresultawaitl2": ");\r\n\r\n        try {\r\n            const result = await login(formData.email, formData.password);\r\n\r\n            if (result.success && result.user) {\r\n                setSuccess(`Connexion r√©ussie ! Redirection vers ${result.user.role}...`);\r\n\r\n                // Redirection automatique apr√®s un court d√©lai\r\n                setTimeout(() => {\r\n                    window.location.href = result.redirectTo || getRedirectPath(result.user!.role);\r\n                }, 1500);\r\n\r\n            } else {\r\n                setError(result.error || ",
    "tryconstusersawaitad": ");\r\n\r\n        try {\r\n            const users = await adminUserServiceFixed.getAllUsers();\r\n            const adminUser = users.find(user => user.email === this.adminEmail);\r\n\r\n            if (adminUser) {\r\n                // Mettre √† jour le r√¥le si n√©cessaire\r\n                if (adminUser.role !== ",
    "tryconstusersawaitad1": ");\r\n\r\n        try {\r\n            const users = await adminUserServiceFixed.getAllUsers();\r\n            const adminUser = users.find(user => user.email === this.adminEmail);\r\n\r\n            if (adminUser) {\r\n                // Mettre √† jour le r√¥le si n√©cessaire\r\n                if (adminUser.role !== ",
    "ajouteralalistelocal": ");\r\n\r\n      // Ajouter √† la liste locale sans rechargement\r\n      const newUser: AdminUser = {\r\n        uid: userDocument.uid,\r\n        email: userDocument.email,\r\n        name: userDocument.name,\r\n        role: userDocument.role,\r\n        createdAt: new Date(userDocument.createdAt),\r\n        isActive: userDocument.isActive,\r\n      };\r\n\r\n      setUsers(prevUsers => [newUser, ...prevUsers]);\r\n\r\n      ",
    "ajouteralalistelocal1": ");\r\n\r\n      // Ajouter √† la liste locale sans rechargement\r\n      const newUser: AdminUser = {\r\n        uid: userDocument.uid,\r\n        email: userDocument.email,\r\n        name: userDocument.name,\r\n        role: userDocument.role,\r\n        createdAt: new Date(userDocument.createdAt),\r\n        isActive: userDocument.isActive,\r\n      };\r\n\r\n      setUsers(prevUsers => [newUser, ...prevUsers]);\r\n\r\n      ",
    "ajouteralalistelocal2": ");\r\n\r\n      // Ajouter √† la liste locale sans rechargement\r\n      const newUser: AdminUser = {\r\n        uid: userDocument.uid,\r\n        email: userDocument.email,\r\n        name: userDocument.name,\r\n        role: userDocument.role,\r\n        createdAt: new Date(userDocument.createdAt),\r\n        isActive: userDocument.isActive,\r\n      };\r\n\r\n      setUsers(prevUsers => [newUser, ...prevUsers]);\r\n\r\n      // Fermer le modal\r\n      setIsCreateModalOpen(false);\r\n\r\n      console.log(",
    "nepasafficherlefoote": ");\r\n\r\n  // Ne pas afficher le Footer sur les routes admin car AdminLayout g√®re son propre Footer\r\n  if (isAdminRoute) {\r\n    return null;\r\n  }\r\n\r\n  return <Footer />;\r\n}\r\n\r\nfunction AppRoutes() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<HomePage />} />\r\n      <Route path=\"/products\" element={<ProductsPageB2B />} />\r\n      <Route path=\"/products-test\" element={<ProductsList />} />\r\n      <Route path=\"/product/:id\" element={<ProductDetailPageB2B />} />\r\n      <Route path=\"/product-detail/:id\" element={<ProductDetailPage />} />\r\n      <Route path=\"/supplier/:supplierId\" element={<SupplierProfilePage />} />\r\n      <Route path=\"/product-old/:id\" element={<ProductPage />} />\r\n      <Route path=\"/category/:categoryId\" element={<CategoryPage />} />\r\n\r\n      <Route path=\"/login\" element={<LoginRoute><UniversalLoginPage /></LoginRoute>} />\r\n      <Route path=\"/register\" element={<LoginRoute><UniversalRegisterPage /></LoginRoute>} />\r\n\r\n      {/* Redirection pour /auth vers /login pour √©viter la confusion */}\r\n      <Route path=\"/auth\" element={<Navigate to=\"/login\" replace />} />\r\n\r\n      {/* Routes d",
    "thiscurrentusernullt": ");\r\n                    this.currentUser = null;\r\n                    this.stopSessionMonitoring();\r\n                    resolve(null);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Connexion s√©curis√©e avec validation des r√¥les\r\n     */\r\n    public async secureLogin(email: string, password: string): Promise<LoginResult> {\r\n        console.log(`üîê Tentative de connexion: ${email}`);\r\n\r\n        try {\r\n            // 1. Validation des entr√©es\r\n            const validation = this.validateLoginInput(email, password);\r\n            if (!validation.valid) {\r\n                return { success: false, error: validation.error };\r\n            }\r\n\r\n            // 2. Authentification Firebase\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            const firebaseUser = userCredential.user;\r\n\r\n            console.log(`‚úÖ Authentification Firebase r√©ussie: ${firebaseUser.uid}`);\r\n\r\n            // 3. Charger le profil utilisateur depuis Firestore\r\n            const user = await this.loadUserProfile(firebaseUser);\r\n            if (!user) {\r\n                await signOut(auth); ",
    "catcherroranyreturns": ");\r\n                } catch (error: any) {\r\n                    return {\r\n                        success: false,\r\n                        message: `Erreur de connexion: ${error.message}`\r\n                    };\r\n                }\r\n            }\r\n\r\n            const currentUser = auth.currentUser;\r\n            if (!currentUser || currentUser.email !== this.ADMIN_EMAIL) {\r\n                return {\r\n                    success: false,\r\n                    message: ",
    "returnsetisrunningtr": ");\r\n            return;\r\n        }\r\n\r\n        setIsRunning(true);\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            setResults(`‚úÖ Connexion r√©ussie: ${userCredential.user.email}`);\r\n\r\n            ",
    "returnsetisrunningtr1": ");\r\n            return;\r\n        }\r\n\r\n        setIsRunning(true);\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            setResults(`‚úÖ Connexion r√©ussie: ${userCredential.user.email}`);\r\n\r\n            // Attendre un peu puis relancer le diagnostic\r\n            setTimeout(async () => {\r\n                await runDiagnostic();\r\n            }, 1000);\r\n        } catch (error: any) {\r\n            setResults(`‚ùå Erreur de connexion: ${error.message}`);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    const quickFix = async () => {\r\n        setIsRunning(true);\r\n        try {\r\n            const diagnostic = new AdminRedirectionDiagnostic();\r\n            await diagnostic.runFullDiagnostic();\r\n            setResults(",
    "returnsetisrunningtr2": ");\r\n            return;\r\n        }\r\n\r\n        setIsRunning(true);\r\n        try {\r\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n            setResults(`‚úÖ Connexion r√©ussie: ${userCredential.user.email}`);\r\n\r\n            // Attendre un peu puis relancer le diagnostic\r\n            setTimeout(async () => {\r\n                await runDiagnostic();\r\n            }, 1000);\r\n        } catch (error: any) {\r\n            setResults(`‚ùå Erreur de connexion: ${error.message}`);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    const quickFix = async () => {\r\n        setIsRunning(true);\r\n        try {\r\n            const diagnostic = new AdminRedirectionDiagnostic();\r\n            await diagnostic.runFullDiagnostic();\r\n            setResults(",
    "returnsetloadingtrue": ");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            await signInWithEmailAndPassword(auth, adminEmail, adminPassword);\r\n            setResult(`‚úÖ Connexion admin r√©ussie: ${adminEmail}`);\r\n        } catch (error: any) {\r\n            console.error(",
    "returnsetloadingtrue1": ");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            await signInWithEmailAndPassword(auth, adminEmail, adminPassword);\r\n            setResult(`‚úÖ Connexion admin r√©ussie: ${adminEmail}`);\r\n        } catch (error: any) {\r\n            console.error(",
    "returnsetloadingtrue2": ");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            await signInWithEmailAndPassword(auth, adminEmail, adminPassword);\r\n            setResult(`‚úÖ Connexion admin r√©ussie: ${adminEmail}`);\r\n        } catch (error: any) {\r\n            console.error(",
    "returnsuccesstrueuse": ");\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                user: userProfile,\r\n                firebaseUid: firebaseUser.uid\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur cr√©ation ${userData.email}:`, error);\r\n\r\n            let errorMessage = ",
    "returnsuccesstrueuse1": ");\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                user: userProfile,\r\n                firebaseUid: firebaseUser.uid\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur cr√©ation ${userData.email}:`, error);\r\n\r\n            let errorMessage = ",
    "returnsuccesstrueuse2": ");\r\n            }\r\n\r\n            return {\r\n                success: true,\r\n                user: userProfile,\r\n                firebaseUid: firebaseUser.uid\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur cr√©ation ${userData.email}:`, error);\r\n\r\n            let errorMessage = ",
    "elsemettreajourlader": ");\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: currentUser.metadata.lastSignInTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(",
    "elsemettreajourlader1": ");\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: currentUser.metadata.lastSignInTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(",
    "elsemettreajourlader2": ");\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: currentUser.metadata.lastSignInTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(",
    "safetestusersforeach": ");\r\n        SAFE_TEST_USERS.forEach(user => {\r\n            console.log(`${user.role.toUpperCase()}: ${user.email} / ${user.password}`);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * R√©initialise le statut d",
    "safetestusersforeach1": ");\r\n        SAFE_TEST_USERS.forEach(user => {\r\n            console.log(`${user.role.toUpperCase()}: ${user.email} / ${user.password}`);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * R√©initialise le statut d",
    "verifiersiunemailexi": ");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     *",
    "verifiersiunemailexi1": ");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkIfEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            const { collection, getDocs, query, where } = await import(",
    "catcherroranysetresu": ");\r\n        } catch (error: any) {\r\n            setResult(`‚ùå Erreur d√©connexion: ${error.message}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const createTestUser = async () => {\r\n        if (!auth.currentUser) {\r\n            setResult(",
    "finallysetisloadingf2": ");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleForgotPassword = () => {\r\n        alert(`Pour r√©cup√©rer votre mot de passe, contactez l",
    "finallysetisloadingf3": ");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleForgotPassword = () => {\r\n        alert(`Pour r√©cup√©rer votre mot de passe, contactez l",
    "setisloadingtruetryv": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es de connexion\r\n      const validationResult = UniversalAuthService.validateLoginData({ email, password });\r\n      if (!validationResult.isValid) {\r\n        throw new Error(validationResult.error || t(",
    "setisloadingtruetryv1": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es de connexion\r\n      const validationResult = UniversalAuthService.validateLoginData({ email, password });\r\n      if (!validationResult.isValid) {\r\n        throw new Error(validationResult.error || t(",
    "setisloadingtruetryv2": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es de connexion\r\n      const validationResult = UniversalAuthService.validateLoginData({ email, password });\r\n      if (!validationResult.isValid) {\r\n        throw new Error(validationResult.error || t(",
    "setisloadingtruetryc": ");\r\n    setIsLoading(true);\r\n    try {\r\n      // Connexion universelle pour Google aussi\r\n      const userRole = isAdminEmail(",
    "constisloadingsetisl": ");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // R√¥le par d√©faut pour la connexion universelle\r\n  const DEFAULT_ROLE = ",
    "constisloadingsetisl1": ");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // R√¥le par d√©faut pour la connexion universelle\r\n  const DEFAULT_ROLE = ",
    "constisloadingsetisl2": ");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // R√¥le par d√©faut pour la connexion universelle\r\n  const DEFAULT_ROLE = ",
    "constisloadingsetisl3": ");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  // D√©tecter automatiquement le mode bas√© sur l",
    "constisloadingsetisl4": ");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  // D√©tecter automatiquement le mode bas√© sur l",
    "buttonbuttononclickl": ")}\n                </button>\n                <button\n                  onClick={logout}\n                  className=\"bg-red-500 text-white px-3 py-2 rounded-full text-xs font-semibold hover:bg-red-600 transition-all duration-300 transform hover:scale-105 shadow-lg\"\n                  title=\"D√©connexion compl√®te\"\n                >\n                  ‚úï\n                </button>\n              </div>\n            ) : (\n              <Link\n                to=\"/login\"\n                className=\"bg-white text-gray-800 px-6 py-2 rounded-full text-sm font-semibold hover:bg-orange-50 hover:text-orange-600 transition-all duration-300 transform hover:scale-105 shadow-lg font-display\"\n              >\n                {t(",
    "spandivdivdivclassna": ")}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-2\">\r\n                                    <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n                                </div>\r\n                                <p className=\"text-sm font-medium text-green-600\">Serveur en ligne</p>\r\n                                <p className=\"text-xs text-gray-500\">Toutes les connexions fonctionnent</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Gestion des sauvegardes */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\r\n                    <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                                Sauvegardes\r\n                            </h2>\r\n                            <Button\r\n                                onClick={createBackup}\r\n                                disabled={backupLoading}\r\n                                className=\"flex items-center gap-2\"\r\n                            >\r\n                                {backupLoading ? (\r\n                                    <>\r\n                                        <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n                                        Cr√©ation en cours...\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <Download className=\"w-4 h-4\" />\r\n                                        Cr√©er une sauvegarde\r\n                                    </>\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                            <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Nom du fichier\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Taille\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Date\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Type\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Statut\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {backups.map((backup) => (\r\n                                    <tr key={backup.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {backup.name}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                                            {backup.size}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                                            {backup.date.toLocaleString(",
    "valueconfirmpassword": ")}\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                    disabled={isLoading}\r\n                  />\r\n                  <div className=\"auth-input-icon\">\r\n                    <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}            {/* Champs sp√©cifiques pour les influenceurs */}\r\n            {!isLoginMode && selectedRole === ",
    "valuepasswordonchang": ")}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  disabled={isLoading}\r\n                />\r\n                <div className=\"auth-input-icon\">\r\n                  <svg width=\"20\" height=\"20\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M18,8h-1V6c0-2.76-2.24-5-5-5S7,3.24,7,6v2H6c-1.1,0-2,0.9-2,2v10c0,1.1,0.9,2,2,2h12c1.1,0,2-0.9,2-2V10 C20,8.9,19.1,8,18,8z M12,17c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S13.1,17,12,17z M15.1,8H8.9V6c0-1.71,1.39-3.1,3.1-3.1 s3.1,1.39,3.1,3.1V8z\"/>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* S√©lecteur de r√¥le */}\r\n            <div className=\"auth-form-group\">\r\n              <select\r\n                className=\"auth-input\"\r\n                value={selectedRole}\r\n                onChange={(e) => setSelectedRole(e.target.value)}\r\n                disabled={isLoading}\r\n              >\r\n                <option value=\"customer\">{t(",
    "pmessageinformatifsu": ")}\r\n            </p>\r\n            \r\n            {/* Message informatif sur la connexion universelle *",
    "pmessageinformatifsu1": ")}\r\n            </p>\r\n            \r\n            {/* Message informatif sur la connexion universelle */}\r\n            <div className=\"auth-info-badge\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-4 h-4 text-blue-300\">\r\n                  <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm text-blue-100\">\r\n                  üöÄ Acc√®s Simplifi√©\r\n                </span>\r\n              </div>\r\n              <p className=\"text-xs text-blue-200 mt-2\">\r\n                Plus besoin de choisir votre r√¥le. Connectez-vous directement avec vos identifiants.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"auth-visual-illustration\">\r\n              <div className=\"illustration-circle\"></div>\r\n              <div className=\"illustration-circle\"></div>\r\n              <div className=\"illustration-center\">\r\n                <div className=\"w-6 h-6 text-white\">\r\n                  <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Colonne formulaire */}\r\n        <div className=\"auth-form-column auth-form-spectacular\">\r\n          <div className=\"auth-form-header\">\r\n            <h1 className=\"auth-form-title\">{t(",
    "divdivclassnamemt1er": ")}</div>\n              <div className=\"mt-1\">{error}</div>\n            </div>\n          )}\n\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {/* S√©lecteur de r√¥le - cach√© pour les administrateurs */}\n            {!isAdminEmail(email) && (\n              <div>\n                <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  {t(",
    "optionselectdivmessa": ")}</option>\n                </select>\n              </div>\n            )}\n\n            {/* Message pour les administrateurs */}\n            {isAdminEmail(email) && (\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200 text-sm rounded-md p-4\">\n                <div className=\"font-medium\">üîê Connexion Administrateur</div>\n                <div className=\"mt-1\">Vous √™tes identifi√© comme administrateur. Aucune s√©lection de r√¥le n√©cessaire.</div>\n              </div>\n            )}\n\n            <Input\n              type=\"email\"\n              label={t(",
    "optionselectdivmessa1": ")}</option>}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Messages personnalis√©s pour inscription uniquement */}\r\n            {!isLoginMode && (\r\n              <>\r\n                {/* Message personnalis√© pour les fournisseurs *",
    "optionselectdivmessa2": ")}</option>}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Messages personnalis√©s pour inscription uniquement */}\r\n            {!isLoginMode && (\r\n              <>\r\n                {/* Message personnalis√© pour les fournisseurs *",
    "optionselectdivmessa3": ")}</option>}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Messages personnalis√©s pour inscription uniquement */}\r\n            {!isLoginMode && (\r\n              <>\r\n                {/* Message personnalis√© pour les fournisseurs */}\r\n                {selectedRole === ",
    "pdivdivmotdepassemas": ")}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}            {/* Mot de passe - masqu√© pour fournisseurs, sourceurs et influenceurs en mode inscription *",
    "pdivdivmotdepassemas1": ")}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}            {/* Mot de passe - masqu√© pour fournisseurs, sourceurs et influenceurs en mode inscription *",
    "pdivdivmotdepassemas2": ")}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}            {/* Mot de passe - masqu√© pour fournisseurs, sourceurs et influenceurs en mode inscription */}\r\n            {(isLoginMode || (selectedRole !== ",
    "spanlabeldivdivchamp": ")}</span>\r\n                  </label>                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Champs sp√©cifiques pour les fournisseurs */}\r\n            {!isLoginMode && selectedRole === ",
    "createdatcurrentuser": ",\r\n                    createdAt: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                    // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n                };\r\n\r\n                await setDoc(userDocRef, currentUserProfile);\r\n                console.log(",
    "createdatcurrentuser1": ",\r\n                    createdAt: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                    // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n                };\r\n\r\n                await setDoc(userDocRef, currentUserProfile);\r\n                console.log(",
    "createdatcurrentuser2": ",\r\n                    createdAt: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: currentUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                    // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n                };\r\n\r\n                await setDoc(userDocRef, currentUserProfile);\r\n                console.log(",
    "createdatfirebaseuse": ",\r\n                    createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString(),\r\n                    lastLogin: new Date().toISOString()\r\n                };\r\n\r\n                await setDoc(userDocRef, userProfile);\r\n                console.log(`‚úÖ Utilisateur synchronis√© dans Firestore: ${firebaseUser.email}`);\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n                console.log(`üîÑ Derni√®re connexion mise √† jour: ${firebaseUser.email}`);\r\n            }\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur synchronisation ${firebaseUser.email}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Obtenir un r√©sum√© des utilisateurs du syst√®me\r\n     *",
    "createdatfirebaseuse1": ",\r\n                    createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString(),\r\n                    lastLogin: new Date().toISOString()\r\n                };\r\n\r\n                await setDoc(userDocRef, userProfile);\r\n                console.log(`‚úÖ Utilisateur synchronis√© dans Firestore: ${firebaseUser.email}`);\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n                console.log(`üîÑ Derni√®re connexion mise √† jour: ${firebaseUser.email}`);\r\n            }\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur synchronisation ${firebaseUser.email}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Obtenir un r√©sum√© des utilisateurs du syst√®me\r\n     *",
    "createdatfirebaseuse2": ",\r\n                    createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updatedAt: new Date().toISOString(),\r\n                    created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                    updated_at: new Date().toISOString(),\r\n                    lastLogin: new Date().toISOString()\r\n                };\r\n\r\n                await setDoc(userDocRef, userProfile);\r\n                console.log(`‚úÖ Utilisateur synchronis√© dans Firestore: ${firebaseUser.email}`);\r\n            } else {\r\n                // Mettre √† jour la derni√®re connexion\r\n                await updateDoc(userDocRef, {\r\n                    lastLogin: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString()\r\n                });\r\n                console.log(`üîÑ Derni√®re connexion mise √† jour: ${firebaseUser.email}`);\r\n            }\r\n        } catch (error: any) {\r\n            console.error(`‚ùå Erreur synchronisation ${firebaseUser.email}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Obtenir un r√©sum√© des utilisateurs du syst√®me\r\n     */\r\n    public async getUsersSummary(): Promise<ProductionUserSummary> {\r\n        try {\r\n            const usersRef = collection(db, ",
    "createdatnowupdateda": ",\r\n                    createdAt: now,\r\n                    updatedAt: now,\r\n                    created_at: now,\r\n                    updated_at: now,\r\n                    // Mot de passe temporaire pour r√©f√©rence (production: Admin SDK)\r\n                    temporaryPassword: testUser.password,\r\n                    authType: ",
    "createdatnowupdateda1": ",\r\n                    createdAt: now,\r\n                    updatedAt: now,\r\n                    created_at: now,\r\n                    updated_at: now,\r\n                    // Mot de passe temporaire pour r√©f√©rence (production: Admin SDK)\r\n                    temporaryPassword: testUser.password,\r\n                    authType: ",
    "textutilisateurnewus": ",\r\n                    text: `Utilisateur ${newUser.email} cr√©√© avec succ√®s`\r\n                });\r\n\r\n                // R√©initialiser le formulaire\r\n                setNewUser({\r\n                    email: ",
    "textutilisateurnewus1": ",\r\n                    text: `Utilisateur ${newUser.email} cr√©√© avec succ√®s`\r\n                });\r\n\r\n                // R√©initialiser le formulaire\r\n                setNewUser({\r\n                    email: ",
    "createdatfirebaseuse3": ",\r\n                createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, firebaseUser.uid), userProfile);\r\n            console.log(",
    "createdatfirebaseuse4": ",\r\n                createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, firebaseUser.uid), userProfile);\r\n            console.log(",
    "createdatfirebaseuse5": ",\r\n                createdAt: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: firebaseUser.metadata.creationTime || new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // lastLogin: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, firebaseUser.uid), userProfile);\r\n            console.log(",
    "createdatnewdatetois": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, tempUID), userDoc);\r\n            console.log(",
    "createdatnewdatetois1": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, tempUID), userDoc);\r\n            console.log(",
    "createdatnewdatetois2": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, tempUID), userDoc);\r\n            console.log(",
    "createdatnewdatetois3": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, uid), userDoc);\r\n            console.log(",
    "createdatnewdatetois4": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, uid), userDoc);\r\n            console.log(",
    "createdatnewdatetois5": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString()\r\n                // last_login: undefined -> SUPPRIM√â car Firestore ne supporte pas undefined\r\n            };\r\n\r\n            await setDoc(doc(db, this.collectionName, uid), userDoc);\r\n            console.log(",
    "createdatuserdocexis": ",\r\n                createdAt: userDoc.exists() ? userDoc.data().createdAt : new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: userDoc.exists() ? userDoc.data().created_at : new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                lastLogin: new Date().toISOString()\r\n            };\r\n\r\n            if (userDoc.exists()) {\r\n                // Mettre √† jour l",
    "createdatuserdocexis1": ",\r\n                createdAt: userDoc.exists() ? userDoc.data().createdAt : new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: userDoc.exists() ? userDoc.data().created_at : new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                lastLogin: new Date().toISOString()\r\n            };\r\n\r\n            if (userDoc.exists()) {\r\n                // Mettre √† jour l",
    "texterreurerrormessa": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const downloadCredentials = () => {\r\n        const content = `\r\nIDENTIFIANTS CHINE TON USINE - PRODUCTION\r\n=====================================\r\n\r\nADMINISTRATEURS:\r\n‚Ä¢ admin@chinetonusine.com | ProductionAdmin2024!\r\n‚Ä¢ admin.backup@chinetonusine.com | BackupAdmin2024!\r\n‚Ä¢ support@chinetonusine.com | SupportTeam2024!\r\n\r\nLIENS:\r\n‚Ä¢ Connexion: ${window.location.origin}/login\r\n‚Ä¢ Admin: ${window.location.origin}/admin/dashboard\r\n\r\nS√âCURIT√â:\r\n‚Ä¢ Changez les mots de passe d√®s la premi√®re connexion\r\n‚Ä¢ Ne partagez jamais ces identifiants\r\n‚Ä¢ Surveillez les connexions suspectes\r\n\r\nDate de g√©n√©ration: ${new Date().toLocaleString()}\r\n`;\r\n\r\n        const blob = new Blob([content], { type: ",
    "texterreurerrormessa1": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const downloadCredentials = () => {\r\n        const content = `\r\nIDENTIFIANTS CHINE TON USINE - PRODUCTION\r\n=====================================\r\n\r\nADMINISTRATEURS:\r\n‚Ä¢ admin@chinetonusine.com | ProductionAdmin2024!\r\n‚Ä¢ admin.backup@chinetonusine.com | BackupAdmin2024!\r\n‚Ä¢ support@chinetonusine.com | SupportTeam2024!\r\n\r\nLIENS:\r\n‚Ä¢ Connexion: ${window.location.origin}/login\r\n‚Ä¢ Admin: ${window.location.origin}/admin/dashboard\r\n\r\nS√âCURIT√â:\r\n‚Ä¢ Changez les mots de passe d√®s la premi√®re connexion\r\n‚Ä¢ Ne partagez jamais ces identifiants\r\n‚Ä¢ Surveillez les connexions suspectes\r\n\r\nDate de g√©n√©ration: ${new Date().toLocaleString()}\r\n`;\r\n\r\n        const blob = new Blob([content], { type: ",
    "texterreurerrormessa2": ",\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const downloadCredentials = () => {\r\n        const content = `\r\nIDENTIFIANTS CHINE TON USINE - PRODUCTION\r\n=====================================\r\n\r\nADMINISTRATEURS:\r\n‚Ä¢ admin@chinetonusine.com | ProductionAdmin2024!\r\n‚Ä¢ admin.backup@chinetonusine.com | BackupAdmin2024!\r\n‚Ä¢ support@chinetonusine.com | SupportTeam2024!\r\n\r\nLIENS:\r\n‚Ä¢ Connexion: ${window.location.origin}/login\r\n‚Ä¢ Admin: ${window.location.origin}/admin/dashboard\r\n\r\nS√âCURIT√â:\r\n‚Ä¢ Changez les mots de passe d√®s la premi√®re connexion\r\n‚Ä¢ Ne partagez jamais ces identifiants\r\n‚Ä¢ Surveillez les connexions suspectes\r\n\r\nDate de g√©n√©ration: ${new Date().toLocaleString()}\r\n`;\r\n\r\n        const blob = new Blob([content], { type: ",
    "favoritesbrowsinghis": ",\r\n            favorites: [],\r\n            browsingHistory: [],\r\n            messages: [],\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n            last_login: new Date().toISOString(),\r\n            subscription: ",
    "createdatnowupdateda2": ",\r\n        createdAt: now,\r\n        updatedAt: now,\r\n        created_at: now,\r\n        updated_at: now,\r\n        // Note: mot de passe stock√© pour r√©f√©rence (en production, utiliser Admin SDK)\r\n        temporaryPassword: userData.password,\r\n        authType: ",
    "createdatnowupdateda3": ",\r\n        createdAt: now,\r\n        updatedAt: now,\r\n        created_at: now,\r\n        updated_at: now,\r\n        // Note: mot de passe stock√© pour r√©f√©rence (en production, utiliser Admin SDK)\r\n        temporaryPassword: userData.password,\r\n        authType: ",
    "longdescriptioncesec": ",\r\n        longDescription: `Ces √©couteurs True Wireless offrent une exp√©rience audio exceptionnelle avec leur technologie de r√©duction de bruit active et leur qualit√© sonore premium.\r\n\r\n√âquip√©s de la derni√®re puce Bluetooth 5.0, ils garantissent une connexion stable et une latence minimale. L",
    "phonesupplierdatacon": ",\r\n        phone: supplierData.contact.phone,\r\n        email: supplierData.contact.email,\r\n        website: supplierData.contact.website,\r\n        address: `${supplierData.location.address}, ${supplierData.location.city}, ${supplierData.location.country}`,\r\n        logo: supplierData.logo,\r\n        template: ",
    "specificationsconnex": ",\r\n        specifications: {\r\n          connexion: ",
    "contactemail": ",\r\n    contactEmail: ",
    "rolepardefautpourles": ", // R√¥le par d√©faut pour les nouvelles inscriptions Google\n          language: ",
    "rolepardefautpourles1": ", // R√¥le par d√©faut pour les nouvelles inscriptions Google\n          language: ",
    "jsonstringifydemouse": ", JSON.stringify(demoUser));\n      \n      // Simuler le login avec le contexte\n      await login(email.trim(), password.trim());\n\n      // Redirection bas√©e sur le r√¥le s√©lectionn√©\n      switch (selectedRole) {\n        case ",
    "jsonstringifydemouse1": ", JSON.stringify(demoUser));\n      \n      // Simuler le login avec le contexte\n      await login(email.trim(), password.trim());\n\n      // Redirection bas√©e sur le r√¥le s√©lectionn√©\n      switch (selectedRole) {\n        case ",
    "jsonstringifydemouse2": ", JSON.stringify(demoUser));\r\n\r\n      // Connexion avec le r√¥le d√©termin√©\r\n      await login(email, password);\r\n\r\n      ",
    "jsonstringifydemouse3": ", JSON.stringify(demoUser));\r\n\r\n      // Connexion avec le r√¥le d√©termin√©\r\n      await login(email, password);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "jsonstringifydemouse4": ", JSON.stringify(demoUser));\r\n\r\n      // Connexion avec le r√¥le d√©termin√©\r\n      await login(email, password);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "jsonstringifydemouse5": ", JSON.stringify(demoUser));\r\n\r\n      // Inscription avec le r√¥le d√©termin√©\r\n      await register(email, password, name, userRole);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "jsonstringifydemouse6": ", JSON.stringify(demoUser));\r\n\r\n      // Inscription avec le r√¥le d√©termin√©\r\n      await register(email, password, name, userRole);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "jsonstringifydemouse7": ", JSON.stringify(demoUser));\r\n\r\n      // Inscription avec le r√¥le d√©termin√©\r\n      await register(email, password, name, userRole);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "jsonstringifydemouse8": ", JSON.stringify(demoUser));\r\n\r\n      // Inscription avec le r√¥le d√©termin√©\r\n      await register(email, password, name, userRole);\r\n\r\n      // Redirection bas√©e sur le r√¥le\r\n      const redirectRoute = UniversalAuthService.getRedirectRoute(userRole);\r\n      navigate(redirectRoute);\r\n\r\n      console.log(",
    "currentuseremailcons": ", currentUser.email);\r\n\r\n                const currentUserProfile: AdminUser = {\r\n                    uid: currentUser.uid,\r\n                    id: currentUser.uid,\r\n                    email: currentUser.email || ",
    "currentuseremailsolu": ", currentUser.email);\r\n\r\n            // SOLUTION TEMPORAIRE: Cr√©er seulement dans Firestore\r\n            ",
    "etargetvalueplacehol": ", e.target.value)}\r\n                                placeholder=\"Minimum 6 caract√®res\"\r\n                                className={`pl-10 pr-10 ${errors.password ? ",
    "etargetvalueclassnam": ", e.target.value)}\r\n                            className=\"w-full px-3 py-2 pr-10 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                            placeholder=\"Minimum 6 caract√®res\"\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                            className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                        >\r\n                            {showPassword ? <EyeOff className=\"h-4 w-4 text-gray-400\" /> : <Eye className=\"h-4 w-4 text-gray-400\" />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Boutons d",
    "errorerrorspusherreu": ", error);\r\n            errors.push(`Erreur g√©n√©rale: ${error.message}`);\r\n\r\n            return {\r\n                success: false,\r\n                deletedCount,\r\n                errors\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un utilisateur complet (Firebase Auth + Firestore)\r\n     */\r\n    public async createProductionUser(userData: CreateProductionUserData): Promise<{\r\n        success: boolean;\r\n        user?: User;\r\n        firebaseUid?: string;\r\n        error?: string;\r\n    }> {\r\n        console.log(`üë§ Cr√©ation utilisateur production: ${userData.email} (${userData.role})`);\r\n\r\n        try {\r\n            // 1. Validation des donn√©es\r\n            const validation = this.validateUserData(userData);\r\n            if (!validation.valid) {\r\n                return { success: false, error: validation.error };\r\n            }\r\n\r\n            // 2. V√©rifier si l",
    "errorerrorspusherreu1": ", error);\r\n            errors.push(`Erreur g√©n√©rale: ${error.message}`);\r\n\r\n            return {\r\n                success: false,\r\n                deletedCount,\r\n                errors\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un utilisateur complet (Firebase Auth + Firestore)\r\n     */\r\n    public async createProductionUser(userData: CreateProductionUserData): Promise<{\r\n        success: boolean;\r\n        user?: User;\r\n        firebaseUid?: string;\r\n        error?: string;\r\n    }> {\r\n        console.log(`üë§ Cr√©ation utilisateur production: ${userData.email} (${userData.role})`);\r\n\r\n        try {\r\n            // 1. Validation des donn√©es\r\n            const validation = this.validateUserData(userData);\r\n            if (!validation.valid) {\r\n                return { success: false, error: validation.error };\r\n            }\r\n\r\n            // 2. V√©rifier si l",
    "errorreturnsuccessfa": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.formatAuthError(error)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D√©connexion s√©curis√©e\r\n     *",
    "errorreturnsuccessfa1": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.formatAuthError(error)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D√©connexion s√©curis√©e\r\n     *",
    "errorreturnsuccessfa2": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.formatAuthError(error)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D√©connexion s√©curis√©e\r\n     */\r\n    public async secureLogout(): Promise<void> {\r\n        console.log(",
    "errorreturnsuccessfa3": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©initialiser le mot de passe d",
    "errorreturnsuccessfa4": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©initialiser le mot de passe d",
    "errorsetresulterreur": ", error);\r\n            setResult(`‚ùå Erreur connexion admin: ${error.message}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const logoutAdmin = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await signOut(auth);\r\n            setResult(",
    "errorreturnfalseveri": ", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un utilisateur existe\r\n   */\r\n  private async checkUserExists(email: string): Promise<boolean> {\r\n    try {\r\n      // Tenter de se connecter pour v√©rifier l",
    "errorreturnfalseveri1": ", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un utilisateur existe\r\n   */\r\n  private async checkUserExists(email: string): Promise<boolean> {\r\n    try {\r\n      // Tenter de se connecter pour v√©rifier l",
    "errorthrowerrorcreet": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cr√©e tous les utilisateurs de test\r\n   */\r\n  private async createTestUsers(): Promise<Array<{email: string, success: boolean, error?: string}>> {\r\n    const results = [];\r\n    \r\n    for (const testUser of TEST_USERS) {\r\n      try {\r\n        console.log(`Cr√©ation de l",
    "errorthrowerrorcreet1": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cr√©e tous les utilisateurs de test\r\n   */\r\n  private async createTestUsers(): Promise<Array<{email: string, success: boolean, error?: string}>> {\r\n    const results = [];\r\n    \r\n    for (const testUser of TEST_USERS) {\r\n      try {\r\n        console.log(`Cr√©ation de l",
    "firebaseuseremailcon": ", firebaseUser.email);\r\n\r\n            const userProfile: AdminUser = {\r\n                uid: firebaseUser.uid,\r\n                id: firebaseUser.uid,\r\n                email: firebaseUser.email || ",
    "firebaseuseremailcon1": ", firebaseUser.email);\r\n                    const user = await this.loadUserProfile(firebaseUser);\r\n\r\n                    if (user) {\r\n                        this.currentUser = user;\r\n                        this.startSessionMonitoring();\r\n                        await this.updateLastActivity();\r\n                        console.log(`‚úÖ Session initialis√©e pour ${user.name} (${user.role})`);\r\n                    }\r\n\r\n                    resolve(user);\r\n                } else {\r\n                    console.log(",
    "firebaseuseruiduserp": ", firebaseUser.uid), userProfile);\r\n            console.log(`‚úÖ Profil Firestore cr√©√©: ${userData.email}`);\r\n\r\n            ",
    "firebaseuseruiduserp1": ", firebaseUser.uid), userProfile);\r\n            console.log(`‚úÖ Profil Firestore cr√©√©: ${userData.email}`);\r\n\r\n            // 5. D√©connecter l",
    "firebaseuseruiduserp2": ", firebaseUser.uid), userProfile);\r\n            console.log(`‚úÖ Profil Firestore cr√©√©: ${userData.email}`);\r\n\r\n            // 5. D√©connecter l",
    "firebaseuseruid3cree": ", firebaseUser.uid);\r\n\r\n            // 3. Cr√©er le profil admin dans Firestore\r\n            const adminUserProfile = {\r\n                uid: firebaseUser.uid,\r\n                id: firebaseUser.uid,\r\n                email: userData.email,\r\n                name: userData.name,\r\n                role: ",
    "firebaseuseruidconst": ", firebaseUser.uid);\r\n            const userDoc = await getDoc(userDocRef);\r\n\r\n            if (!userDoc.exists()) {\r\n                console.error(`‚ùå Profil utilisateur non trouv√©: ${firebaseUser.uid}`);\r\n                return null;\r\n            }\r\n\r\n            const userData = userDoc.data() as User;\r\n\r\n            // Assurer la coh√©rence des donn√©es\r\n            const user: User = {\r\n                ...userData,\r\n                uid: firebaseUser.uid,\r\n                id: userData.id || firebaseUser.uid,\r\n                email: userData.email || firebaseUser.email || ",
    "firebaseuseruidconst1": ", firebaseUser.uid);\r\n            const userDoc = await getDoc(userDocRef);\r\n\r\n            if (!userDoc.exists()) {\r\n                console.error(`‚ùå Profil utilisateur non trouv√©: ${firebaseUser.uid}`);\r\n                return null;\r\n            }\r\n\r\n            const userData = userDoc.data() as User;\r\n\r\n            // Assurer la coh√©rence des donn√©es\r\n            const user: User = {\r\n                ...userData,\r\n                uid: firebaseUser.uid,\r\n                id: userData.id || firebaseUser.uid,\r\n                email: userData.email || firebaseUser.email || ",
    "firebaseuseruidconst2": ", firebaseUser.uid);\r\n            const userDoc = await getDoc(userDocRef);\r\n\r\n            if (!userDoc.exists()) {\r\n                console.log(`üîÑ Synchronisation utilisateur: ${firebaseUser.email}`);\r\n\r\n                const userProfile: User = {\r\n                    uid: firebaseUser.uid,\r\n                    id: firebaseUser.uid,\r\n                    email: firebaseUser.email || ",
    "healthpourlestestssi": ", health);\n\n        // Pour les tests : simuler un utilisateur fournisseur connect√©\n        // TODO: Retirer cette simulation en production\n        // Code de connexion automatique d√©sactiv√© pour permettre l",
    "healthpourlestestssi1": ", health);\n\n        // Pour les tests : simuler un utilisateur fournisseur connect√©\n        // TODO: Retirer cette simulation en production\n        // Code de connexion automatique d√©sactiv√© pour permettre l",
    "healthpourlestestssi2": ", health);\n\n        // Pour les tests : simuler un utilisateur fournisseur connect√©\n        // TODO: Retirer cette simulation en production\n        // Code de connexion automatique d√©sactiv√© pour permettre l",
    "parseintetargetvalue": ", parseInt(e.target.value))}\r\n              min=\"1\"\r\n              max=\"1440\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Apr√®s √©checs de connexion</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-6\">\r\n          <div className=\"flex items-center justify-between p-4 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Protection force brute</h4>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">D√©tection automatique des attaques</p>\r\n            </div>\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={settings.bruteForceProtection}\r\n                onChange={(e) => updateSetting(",
    "parseintetargetvalue1": ", parseInt(e.target.value))}\r\n              min=\"15\"\r\n              max=\"480\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n            />\r\n            <p className=\"text-xs text-gray-500 mt-1\">Sessions plus courtes pour les comptes administrateur (recommand√©: 60 minutes)</p>\r\n          </div>\r\n\r\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <AlertTriangle className=\"w-4 h-4 text-yellow-600 dark:text-yellow-400\" />\r\n              <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200\">Recommandations de s√©curit√©</h4>\r\n            </div>\r\n            <ul className=\"mt-2 text-xs text-yellow-700 dark:text-yellow-300 space-y-1\">\r\n              <li>‚Ä¢ Activez la 2FA pour tous les comptes administrateur</li>\r\n              <li>‚Ä¢ Utilisez des mots de passe complexes avec symboles</li>\r\n              <li>‚Ä¢ Limitez les tentatives de connexion √† 3-5 maximum</li>\r\n              <li>‚Ä¢ Activez la liste blanche IP pour l",
    "snapshotsizesetresul": ", snapshot.size);\r\n\r\n            setResult(`‚úÖ Connexion Firebase OK\r\nAuth: ${auth.currentUser?.email || ",
    "testuseremailconstre": ", testUser.email);\r\n            const result = await adminUserServiceFixed.createUser(testUser);\r\n\r\n            if (result.success) {\r\n                setResult(`‚úÖ Succ√®s: Utilisateur cr√©√© avec l",
    "testuseremailconstre1": ", testUser.email);\r\n            const result = await adminUserServiceFixed.createUser(testUser);\r\n\r\n            if (result.success) {\r\n                setResult(`‚úÖ Succ√®s: Utilisateur cr√©√© avec l",
    "uiduserdocumentconso": ", uid), userDocument);\r\n\r\n                console.log(`‚úÖ Utilisateur Firestore ${testUser.email} cr√©√© avec succ√®s`);\r\n                results.push({ email: testUser.email, success: true });\r\n\r\n                // D√©lai pour √©viter de surcharger Firestore\r\n                await new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n            } catch (error: any) {\r\n                console.error(`‚ùå Erreur Firestore pour ${testUser.email}:`, error);\r\n                results.push({\r\n                    email: testUser.email,\r\n                    success: false,\r\n                    error: error.message\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    ",
    "uiduserdocumentconso1": ", uid), userDocument);\r\n\r\n                console.log(`‚úÖ Utilisateur Firestore ${testUser.email} cr√©√© avec succ√®s`);\r\n                results.push({ email: testUser.email, success: true });\r\n\r\n                // D√©lai pour √©viter de surcharger Firestore\r\n                await new Promise(resolve => setTimeout(resolve, 100));\r\n\r\n            } catch (error: any) {\r\n                console.error(`‚ùå Erreur Firestore pour ${testUser.email}:`, error);\r\n                results.push({\r\n                    email: testUser.email,\r\n                    success: false,\r\n                    error: error.message\r\n                });\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    /**\r\n     * Affiche les identifiants de test (pour information)\r\n     */\r\n    displayTestCredentials(): void {\r\n        console.log(",
    "userdataemail1valida": ", userData.email);\r\n\r\n            // 1. Validation des donn√©es\r\n            const validation = this.validateAdminData(userData);\r\n            if (!validation.valid) {\r\n                return {\r\n                    success: false,\r\n                    message: validation.message\r\n                };\r\n            }\r\n\r\n            // 2. Cr√©er l",
    "userdataemail1valida1": ", userData.email);\r\n\r\n            // 1. Validation des donn√©es\r\n            const validation = this.validateAdminData(userData);\r\n            if (!validation.valid) {\r\n                return {\r\n                    success: false,\r\n                    message: validation.message\r\n                };\r\n            }\r\n\r\n            // 2. Cr√©er l",
    "userdataemail1verifi": ", userData.email);\r\n\r\n            // 1. V√©rifier l",
    "userdataemail1verifi1": ", userData.email);\r\n\r\n            // 1. V√©rifier l",
    "userdataemail1verifi2": ", userData.email);\r\n\r\n            // 1. V√©rifier l",
    "userdataemailverific": ", userData.email);\r\n\r\n            // V√©rification basique de l",
    "userdataemailverific1": ", userData.email);\r\n\r\n            // V√©rification basique de l",
    "userdataemailverifie": ", userData.email);\r\n\r\n            // V√©rifier si un admin est connect√©\r\n            if (!currentUser) {\r\n                console.error(",
    "userdataemailverifie1": ", userData.email);\r\n\r\n            // V√©rifier si un admin est connect√©\r\n            if (!currentUser) {\r\n                console.error(",
    "svgdivdivdivchampssp": "/>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}            {/* Champs sp√©cifiques pour les influenceurs */}\r\n            {!isLoginMode && selectedRole === 'influencer' && (\r\n              <div className=",
    "returnalertcirclecla": ":\r\n                return <AlertCircle className=\"w-4 h-4\" />;\r\n            default:\r\n                return <Clock className=\"w-4 h-4\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className=\"space-y-6 p-6\">\r\n                {/* En-t√™te */}\r\n                <BackButton to=\"/admin/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n                <div>\r\n                    <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        Gestion de la Base de Donn√©es\r\n                    </h1>\r\n                    <p className=\"text-gray-600 dark:text-gray-400\">\r\n                        Surveillez et g√©rez votre base de donn√©es, cr√©ez des sauvegardes et analysez les performances\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Statistiques g√©n√©rales */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                                <HardDrive className=\"h-6 w-6 text-blue-600\" />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Taille totale</p>\r\n                                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{stats.totalSize}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                                <Database className=\"h-6 w-6 text-green-600\" />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Tables</p>\r\n                                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{stats.tables}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                                <Activity className=\"h-6 w-6 text-purple-600\" />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Enregistrements</p>\r\n                                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                                    {stats.records.toLocaleString()}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                        <div className=\"flex items-center\">\r\n                            <div className=\"p-2 bg-orange-100 rounded-lg\">\r\n                                <Server className=\"h-6 w-6 text-orange-600\" />\r\n                            </div>\r\n                            <div className=\"ml-4\">\r\n                                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Connexions</p>\r\n                                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{stats.connections}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Statut du serveur */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                        Statut du Serveur\r\n                    </h2>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                        <div>\r\n                            <div className=\"flex items-center justify-between py-2\">\r\n                                <span className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Uptime</span>\r\n                                <span className=\"text-sm text-gray-900 dark:text-white\">{stats.uptime}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center justify-between py-2\">\r\n                                <span className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Derni√®re sauvegarde</span>\r\n                                <span className=\"text-sm text-gray-900 dark:text-white\">\r\n                                    {stats.lastBackup.toLocaleString(",
    "constnavbarreactfcco": ";\n\nconst Navbar: React.FC = () => {\n  const { user, logout } = useAuth();\n  const { language, setLanguage, t, getLanguageName, availableLanguages } = useLanguage();\n  const { currency, setCurrency, currencyNames } = useCurrency();\n  const { isDarkMode, toggleTheme } = useTheme();\n\n  // Debug: v√©rifier l",
    "constnavbarreactfcco1": ";\n\nconst Navbar: React.FC = () => {\n  const { user, logout } = useAuth();\n  const { language, setLanguage, t, getLanguageName, availableLanguages } = useLanguage();\n  const { currency, setCurrency, currencyNames } = useCurrency();\n  const { isDarkMode, toggleTheme } = useTheme();\n\n  // Debug: v√©rifier l",
    "exportinterfaceuseri": ";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: UserRole;\n  language: UserLanguage;\n  currency: string;\n  favorites: string[];\n  browsingHistory: string[];\n  messages: Message[];\n  created_at: string;\n  updated_at: string;\n  last_login?: string;\n  subscription?: string;\n}\n\nexport type Permission = {\n  id: string;\n  name: string;\n  description: string;\n};\n\nexport type Role = {\n  id: string;\n  name: UserRole;\n  description: string;\n  permissions: Permission[];\n};\n\nexport type Product = {\n  id: string;\n  name: string;\n  category: string;\n  description: {\n    chinese: string;\n    english: string;\n    french: string;\n  };\n  images: string[];\n  video?: {\n    url: string;\n    type: ",
    "exporttypeexchangera": ";\n\nexport type ExchangeRates = {\n  EUR: number;\n  USD: number;\n  GBP: number;\n  CNY: number;\n  AED: number;\n};\n\nexport type Subscription = {\n  id: string;\n  name: string;\n  price: number;\n  currency: UserCurrency;\n  features: string[];\n  isPopular?: boolean;\n};\n\n// Interface pour la compatibilit√© avec la base de donn√©es\nexport type DatabaseUser = {\n  id: string;\n  email: string;\n  name: string | null;\n  role: UserRole;\n  language: UserLanguage;\n  currency: UserCurrency;\n  subscription: SubscriptionTier;\n  favorites: string[]; ",
    "exporttypeexchangera1": ";\n\nexport type ExchangeRates = {\n  EUR: number;\n  USD: number;\n  GBP: number;\n  CNY: number;\n  AED: number;\n};\n\nexport type Subscription = {\n  id: string;\n  name: string;\n  price: number;\n  currency: UserCurrency;\n  features: string[];\n  isPopular?: boolean;\n};\n\n// Interface pour la compatibilit√© avec la base de donn√©es\nexport type DatabaseUser = {\n  id: string;\n  email: string;\n  name: string | null;\n  role: UserRole;\n  language: UserLanguage;\n  currency: UserCurrency;\n  subscription: SubscriptionTier;\n  favorites: string[]; // JSON array dans la DB\n  messages: Message[]; ",
    "exporttypeexchangera2": ";\n\nexport type ExchangeRates = {\n  EUR: number;\n  USD: number;\n  GBP: number;\n  CNY: number;\n  AED: number;\n};\n\nexport type Subscription = {\n  id: string;\n  name: string;\n  price: number;\n  currency: UserCurrency;\n  features: string[];\n  isPopular?: boolean;\n};\n\n// Interface pour la compatibilit√© avec la base de donn√©es\nexport type DatabaseUser = {\n  id: string;\n  email: string;\n  name: string | null;\n  role: UserRole;\n  language: UserLanguage;\n  currency: UserCurrency;\n  subscription: SubscriptionTier;\n  favorites: string[]; // JSON array dans la DB\n  messages: Message[]; // JSON array dans la DB\n  browsing_history: string[]; // JSON array dans la DB\n  created_at: string;\n  updated_at: string;\n  last_login?: string;\n};\n\nexport type ContainerStatus = ",
    "interfacelanguagecon": ";\n\ninterface LanguageContextType {\n  language: UserLanguage;\n  setLanguage: (lang: UserLanguage) => void;\n  t: (key: string, params?: Record<string, any>) => string;\n  availableLanguages: UserLanguage[];\n  getLanguageName: (lang: UserLanguage) => string;\n}\n\nconst translations: Record<UserLanguage, Record<string, string>> = {\n  \"fr\": {\n    \"home\": \"Accueil\",\n    \"search\": \"Rechercher\",\n    \"search.placeholder\": \"Rechercher des produits...\",\n    \"dashboard\": \"Tableau de bord\",\n    \"nav.login\": \"Connexion\",\n    \"logout\": \"D√©connexion\",\n    \"discover\": \"D√©couvrir\",\n\n    \"notifications.title\": \"Notifications\",\n    \"notifications.noNotifications\": \"Aucune notification\",\n    \"notifications.noNotificationsMessage\": \"Vous n",
    "verifiersiunemailexi2": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     *",
    "verifiersiunemailexi3": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     *",
    "verifiersiunemailexi4": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     *",
    "verifiersiunemailexi5": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            const q = query(\r\n                collection(db, this.collectionName),\r\n                where(",
    "verifiersiunemailexi6": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkIfEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            // Cette m√©thode v√©rifie seulement dans Firestore\r\n            // En production, utilisez Firebase Admin SDK pour v√©rifier Auth aussi\r\n            const snapshot = await import(",
    "verifiersiunemailexi7": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkIfEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            // Cette m√©thode v√©rifie seulement dans Firestore\r\n            // En production, utilisez Firebase Admin SDK pour v√©rifier Auth aussi\r\n            const snapshot = await import(",
    "verifiersiunemailexi8": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkIfEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            const q = query(\r\n                collection(db, this.collectionName),\r\n                where(",
    "verifiersiunemailexi9": ";\r\n\r\n    /**\r\n     * V√©rifier si un email existe d√©j√†\r\n     */\r\n    private async checkIfEmailExists(email: string): Promise<boolean> {\r\n        try {\r\n            const q = query(\r\n                collection(db, this.collectionName),\r\n                where(",
    "hookpersonnalisepour": ";\r\n\r\n/**\r\n * Hook personnalis√© pour g√©rer la synchronisation automatique des utilisateurs\r\n * Firebase Auth vers Firestore\r\n */\r\nexport const useUserSync = (enabled: boolean = true) => {\r\n    const unsubscribeRef = useRef<(() => void) | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (enabled && !unsubscribeRef.current) {\r\n            // D√©marrer la surveillance des connexions utilisateurs\r\n            unsubscribeRef.current = adminUserServiceFixed.startUserSyncMonitoring();\r\n\r\n            console.log(",
    "hookpersonnalisepour1": ";\r\n\r\n/**\r\n * Hook personnalis√© pour g√©rer la synchronisation automatique des utilisateurs\r\n * Firebase Auth vers Firestore\r\n */\r\nexport const useUserSync = (enabled: boolean = true) => {\r\n    const unsubscribeRef = useRef<(() => void) | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (enabled && !unsubscribeRef.current) {\r\n            // D√©marrer la surveillance des connexions utilisateurs\r\n            unsubscribeRef.current = adminUserServiceFixed.startUserSyncMonitoring();\r\n\r\n            console.log(",
    "hookpersonnalisepour2": ";\r\n\r\n/**\r\n * Hook personnalis√© pour g√©rer la synchronisation automatique des utilisateurs\r\n * Firebase Auth vers Firestore\r\n */\r\nexport const useUserSync = (enabled: boolean = true) => {\r\n    const unsubscribeRef = useRef<(() => void) | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (enabled && !unsubscribeRef.current) {\r\n            // D√©marrer la surveillance des connexions utilisateurs\r\n            unsubscribeRef.current = adminUserServiceFixed.startUserSyncMonitoring();\r\n\r\n            console.log(",
    "interfacepourlesresu": ";\r\n\r\n/**\r\n * Interface pour les r√©sultats de connexion\r\n *",
    "interfacepourlesresu1": ";\r\n\r\n/**\r\n * Interface pour les r√©sultats de connexion\r\n *",
    "interfacepourlesresu2": ";\r\n\r\n/**\r\n * Interface pour les r√©sultats de connexion\r\n */\r\nexport interface LoginResult {\r\n    success: boolean;\r\n    user?: User;\r\n    error?: string;\r\n    redirectTo?: string;\r\n}\r\n\r\n/**\r\n * Interface pour la gestion des sessions\r\n */\r\nexport interface SessionInfo {\r\n    user: User;\r\n    loginTime: string;\r\n    lastActivity: string;\r\n    expiresAt: string;\r\n}\r\n\r\n/**\r\n * Service d",
    "servicespecialisepou": ";\r\n\r\n/**\r\n * Service sp√©cialis√© pour g√©rer la redirection admin\r\n */\r\nexport class AdminFixService {\r\n    private static readonly ADMIN_EMAIL = ",
    "interfacepourlesdonn": ";\r\n\r\n// Interface pour les donn√©es de la carte de visite\r\nexport interface BusinessCardData {\r\n    // Informations de base\r\n    companyName: string;\r\n    tagline: string;\r\n    contactPerson: string;\r\n    position: string;\r\n\r\n    // Contact\r\n    phone: string;\r\n    email: string;\r\n    website: string;\r\n    address: string;\r\n\r\n    ",
    "interfacepourlesdonn1": ";\r\n\r\n// Interface pour les donn√©es de la carte de visite\r\nexport interface BusinessCardData {\r\n    // Informations de base\r\n    companyName: string;\r\n    tagline: string;\r\n    contactPerson: string;\r\n    position: string;\r\n\r\n    // Contact\r\n    phone: string;\r\n    email: string;\r\n    website: string;\r\n    address: string;\r\n\r\n    // R√©seaux sociaux\r\n    linkedin?: string;\r\n    whatsapp?: string;\r\n    wechat?: string;\r\n\r\n    ",
    "interfacepourlesdonn2": ";\r\n\r\n// Interface pour les donn√©es de la carte de visite\r\nexport interface BusinessCardData {\r\n    // Informations de base\r\n    companyName: string;\r\n    tagline: string;\r\n    contactPerson: string;\r\n    position: string;\r\n\r\n    // Contact\r\n    phone: string;\r\n    email: string;\r\n    website: string;\r\n    address: string;\r\n\r\n    // R√©seaux sociaux\r\n    linkedin?: string;\r\n    whatsapp?: string;\r\n    wechat?: string;\r\n\r\n    // Visuels\r\n    logo: string;\r\n    backgroundImage?: string;\r\n\r\n    // Branding\r\n    primaryColor: string;\r\n    secondaryColor: string;\r\n    textColor: string;\r\n    accentColor: string;\r\n\r\n    // Style et layout\r\n    template: string;\r\n    fontSize: ",
    "interfacepourlesinfo": ";\r\n\r\n// Interface pour les informations du fournisseur\r\ninterface SupplierProfile {\r\n    id: string;\r\n    name: string;\r\n    logo: string;\r\n    coverImage: string;\r\n    description: string;\r\n    location: {\r\n        city: string;\r\n        country: string;\r\n        address: string;\r\n    };\r\n    contact: {\r\n        phone: string;\r\n        email: string;\r\n        website: string;\r\n    };\r\n    rating: number;\r\n    totalReviews: number;\r\n    yearEstablished: number;\r\n    employeeCount: string;\r\n    specialties: string[];\r\n    certifications: string[];\r\n    products: {\r\n        total: number;\r\n        categories: string[];\r\n    };\r\n    stats: {\r\n        ordersCompleted: number;\r\n        responseTime: string;\r\n        onTimeDelivery: number;\r\n    };\r\n    gallery: string[];\r\n    verified: boolean;\r\n    goldSupplier: boolean;\r\n}\r\n\r\n// Donn√©es de test pour le fournisseur\r\nconst mockSupplier: SupplierProfile = {\r\n    id: ",
    "interfacepourlesinfo1": ";\r\n\r\n// Interface pour les informations du fournisseur\r\ninterface SupplierProfile {\r\n    id: string;\r\n    name: string;\r\n    logo: string;\r\n    coverImage: string;\r\n    description: string;\r\n    location: {\r\n        city: string;\r\n        country: string;\r\n        address: string;\r\n    };\r\n    contact: {\r\n        phone: string;\r\n        email: string;\r\n        website: string;\r\n    };\r\n    rating: number;\r\n    totalReviews: number;\r\n    yearEstablished: number;\r\n    employeeCount: string;\r\n    specialties: string[];\r\n    certifications: string[];\r\n    products: {\r\n        total: number;\r\n        categories: string[];\r\n    };\r\n    stats: {\r\n        ordersCompleted: number;\r\n        responseTime: string;\r\n        onTimeDelivery: number;\r\n    };\r\n    gallery: string[];\r\n    verified: boolean;\r\n    goldSupplier: boolean;\r\n}\r\n\r\n// Donn√©es de test pour le fournisseur\r\nconst mockSupplier: SupplierProfile = {\r\n    id: ",
    "interfacepourlesinfo2": ";\r\n\r\n// Interface pour les informations du fournisseur\r\ninterface SupplierProfile {\r\n    id: string;\r\n    name: string;\r\n    logo: string;\r\n    coverImage: string;\r\n    description: string;\r\n    location: {\r\n        city: string;\r\n        country: string;\r\n        address: string;\r\n    };\r\n    contact: {\r\n        phone: string;\r\n        email: string;\r\n        website: string;\r\n    };\r\n    rating: number;\r\n    totalReviews: number;\r\n    yearEstablished: number;\r\n    employeeCount: string;\r\n    specialties: string[];\r\n    certifications: string[];\r\n    products: {\r\n        total: number;\r\n        categories: string[];\r\n    };\r\n    stats: {\r\n        ordersCompleted: number;\r\n        responseTime: string;\r\n        onTimeDelivery: number;\r\n    };\r\n    gallery: string[];\r\n    verified: boolean;\r\n    goldSupplier: boolean;\r\n}\r\n\r\n// Donn√©es de test pour le fournisseur\r\nconst mockSupplier: SupplierProfile = {\r\n    id: ",
    "scriptpourcreerunuti": ";\r\n\r\n// Script pour cr√©er un utilisateur influenceur de test\r\nexport const createTestInfluencer = async () => {\r\n    try {\r\n        // Cr√©er un utilisateur influenceur\r\n        const testUser = {\r\n            email: ",
    "scriptpourcreerunuti1": ";\r\n\r\n// Script pour cr√©er un utilisateur influenceur de test\r\nexport const createTestInfluencer = async () => {\r\n    try {\r\n        // Cr√©er un utilisateur influenceur\r\n        const testUser = {\r\n            email: ",
    "scriptpourcreerunuti2": ";\r\n\r\n// Script pour cr√©er un utilisateur influenceur de test\r\nexport const createTestInfluencer = async () => {\r\n    try {\r\n        // Cr√©er un utilisateur influenceur\r\n        const testUser = {\r\n            email: ",
    "typestemporairesaada": ";\r\n\r\n// Types temporaires (√† adapter selon votre structure)\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n    country: string;\r\n    email: string;\r\n    phone: string;\r\n    contact_person: string;\r\n    preferred_currency: string;\r\n    interested_products: string[];\r\n    website: string;\r\n}\r\n\r\ninterface CompanyProfile {\r\n    id: string;\r\n    company_id: string;\r\n    monthly_sales_volume: string;\r\n    has_merchandising: boolean;\r\n    is_top_importer: boolean;\r\n    has_warehouses: boolean;\r\n    warehouse_count: number;\r\n    has_logistics_vehicles: boolean;\r\n    vehicle_count: number;\r\n    business_type: string;\r\n    notes: string;\r\n}\r\n\r\n",
    "typestemporairesaada1": ";\r\n\r\n// Types temporaires (√† adapter selon votre structure)\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n    country: string;\r\n    email: string;\r\n    phone: string;\r\n    contact_person: string;\r\n    preferred_currency: string;\r\n    interested_products: string[];\r\n    website: string;\r\n}\r\n\r\ninterface CompanyProfile {\r\n    id: string;\r\n    company_id: string;\r\n    monthly_sales_volume: string;\r\n    has_merchandising: boolean;\r\n    is_top_importer: boolean;\r\n    has_warehouses: boolean;\r\n    warehouse_count: number;\r\n    has_logistics_vehicles: boolean;\r\n    vehicle_count: number;\r\n    business_type: string;\r\n    notes: string;\r\n}\r\n\r\n// Composants UI simplifi√©s pour la d√©mo\r\nconst Button: React.FC<any> = ({ children, ...props }) => (\r\n    <button {...props} className={`px-4 py-2 rounded ${props.className || ",
    "typestemporairesaada2": ";\r\n\r\n// Types temporaires (√† adapter selon votre structure)\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n    country: string;\r\n    email: string;\r\n    phone: string;\r\n    contact_person: string;\r\n    preferred_currency: string;\r\n    interested_products: string[];\r\n    website: string;\r\n}\r\n\r\ninterface CompanyProfile {\r\n    id: string;\r\n    company_id: string;\r\n    monthly_sales_volume: string;\r\n    has_merchandising: boolean;\r\n    is_top_importer: boolean;\r\n    has_warehouses: boolean;\r\n    warehouse_count: number;\r\n    has_logistics_vehicles: boolean;\r\n    vehicle_count: number;\r\n    business_type: string;\r\n    notes: string;\r\n}\r\n\r\n// Composants UI simplifi√©s pour la d√©mo\r\nconst Button: React.FC<any> = ({ children, ...props }) => (\r\n    <button {...props} className={`px-4 py-2 rounded ${props.className || ",
    "constnavbarsimplerea": ";\r\n\r\nconst NavbarSimple: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const { language, setLanguage, t, getLanguageName, availableLanguages } = useLanguage();\r\n  const { currency, setCurrency, currencyNames } = useCurrency();\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n\r\n  const [isLanguageMenuOpen, setIsLanguageMenuOpen] = useState(false);\r\n  const [isCurrencyMenuOpen, setIsCurrencyMenuOpen] = useState(false);\r\n  const [isNotificationCenterOpen, setIsNotificationCenterOpen] = useState(false);\r\n\r\n  // Refs pour √©viter les conflits\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { unreadCount, refresh: refreshNotifications } = useNotifications({\r\n    pollInterval: user ? 30000 : 0,\r\n    autoRefresh: !!user\r\n  });\r\n\r\n  ",
    "constnavbarsimplerea1": ";\r\n\r\nconst NavbarSimple: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const { language, setLanguage, t, getLanguageName, availableLanguages } = useLanguage();\r\n  const { currency, setCurrency, currencyNames } = useCurrency();\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n\r\n  const [isLanguageMenuOpen, setIsLanguageMenuOpen] = useState(false);\r\n  const [isCurrencyMenuOpen, setIsCurrencyMenuOpen] = useState(false);\r\n  const [isNotificationCenterOpen, setIsNotificationCenterOpen] = useState(false);\r\n\r\n  // Refs pour √©viter les conflits\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { unreadCount, refresh: refreshNotifications } = useNotifications({\r\n    pollInterval: user ? 30000 : 0,\r\n    autoRefresh: !!user\r\n  });\r\n\r\n  // Gestion avec √©v√©nements isol√©s\r\n  const handleLanguageClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(",
    "constnavbarsimplerea2": ";\r\n\r\nconst NavbarSimple: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const { language, setLanguage, t, getLanguageName, availableLanguages } = useLanguage();\r\n  const { currency, setCurrency, currencyNames } = useCurrency();\r\n  const { isDarkMode, toggleTheme } = useTheme();\r\n\r\n  const [isLanguageMenuOpen, setIsLanguageMenuOpen] = useState(false);\r\n  const [isCurrencyMenuOpen, setIsCurrencyMenuOpen] = useState(false);\r\n  const [isNotificationCenterOpen, setIsNotificationCenterOpen] = useState(false);\r\n\r\n  // Refs pour √©viter les conflits\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  const { unreadCount, refresh: refreshNotifications } = useNotifications({\r\n    pollInterval: user ? 30000 : 0,\r\n    autoRefresh: !!user\r\n  });\r\n\r\n  // Gestion avec √©v√©nements isol√©s\r\n  const handleLanguageClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log(",
    "constquicklogoutreac": ";\r\n\r\nconst QuickLogout: React.FC = () => {\r\n    const { user, logout } = useAuth();\r\n\r\n    const handleQuickLogout = async () => {\r\n        try {\r\n            await logout();\r\n            // Si la d√©connexion normale ne fonctionne pas, rediriger manuellement\r\n            setTimeout(() => {\r\n                if (window.location.pathname !== ",
    "constquicklogoutreac1": ";\r\n\r\nconst QuickLogout: React.FC = () => {\r\n    const { user, logout } = useAuth();\r\n\r\n    const handleQuickLogout = async () => {\r\n        try {\r\n            await logout();\r\n            // Si la d√©connexion normale ne fonctionne pas, rediriger manuellement\r\n            setTimeout(() => {\r\n                if (window.location.pathname !== ",
    "constquicklogoutreac2": ";\r\n\r\nconst QuickLogout: React.FC = () => {\r\n    const { user, logout } = useAuth();\r\n\r\n    const handleQuickLogout = async () => {\r\n        try {\r\n            await logout();\r\n            // Si la d√©connexion normale ne fonctionne pas, rediriger manuellement\r\n            setTimeout(() => {\r\n                if (window.location.pathname !== ",
    "exportinterfacecreat1": ";\r\n\r\nexport interface CreateAdminUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Service pour cr√©er un nouveau compte administrateur\r\n */\r\nexport class AdminCreationService {\r\n\r\n    /**\r\n     * Cr√©er un nouveau compte admin complet\r\n     *",
    "exportinterfacecreat2": ";\r\n\r\nexport interface CreateAdminUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Service pour cr√©er un nouveau compte administrateur\r\n */\r\nexport class AdminCreationService {\r\n\r\n    /**\r\n     * Cr√©er un nouveau compte admin complet\r\n     *",
    "exportinterfacecreat3": ";\r\n\r\nexport interface CreateAdminUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Service pour cr√©er un nouveau compte administrateur\r\n */\r\nexport class AdminCreationService {\r\n\r\n    /**\r\n     * Cr√©er un nouveau compte admin complet\r\n     */\r\n    static async createNewAdminAccount(userData: CreateAdminUserData): Promise<{\r\n        success: boolean;\r\n        message: string;\r\n        uid?: string;\r\n    }> {\r\n        try {\r\n            console.log(",
    "exportinterfacecreat4": ";\r\n\r\nexport interface CreateProductionUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n    additionalData?: {\r\n        phone?: string;\r\n        company?: string;\r\n        address?: string;\r\n    };\r\n}\r\n\r\nexport interface ProductionUserSummary {\r\n    total: number;\r\n    byRole: Record<UserRole, number>;\r\n    active: number;\r\n    inactive: number;\r\n}\r\n\r\n/**\r\n * Service de gestion des utilisateurs pour l",
    "exportinterfacecreat5": ";\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface AdminUser extends User {\r\n    uid: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    isActive: boolean;\r\n    lastLogin?: string;\r\n}\r\n\r\n/**\r\n * Service de cr√©ation d",
    "exportinterfacecreat6": ";\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface AdminUser extends User {\r\n    uid: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    isActive: boolean;\r\n    lastLogin?: string;\r\n}\r\n\r\n/**\r\n * Service de cr√©ation d",
    "exportinterfacecreat7": ";\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SavedUser {\r\n    uid: string;\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive: boolean;\r\n    language: string;\r\n    currency: string;\r\n    favorites: any[];\r\n    browsingHistory: any[];\r\n    messages: any[];\r\n    subscription: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\n",
    "exportinterfacecreat8": ";\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SavedUser {\r\n    uid: string;\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive: boolean;\r\n    language: string;\r\n    currency: string;\r\n    favorites: any[];\r\n    browsingHistory: any[];\r\n    messages: any[];\r\n    subscription: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\n/**\r\n * Service de cr√©ation d",
    "exportinterfacecreat9": ";\r\n\r\nexport interface CreateUserData {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SavedUser {\r\n    uid: string;\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: UserRole;\r\n    isActive: boolean;\r\n    language: string;\r\n    currency: string;\r\n    favorites: any[];\r\n    browsingHistory: any[];\r\n    messages: any[];\r\n    subscription: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n}\r\n\r\n/**\r\n * Service de cr√©ation d",
    "exportinterfacesafet": ";\r\n\r\nexport interface SafeTestUser {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le (Firestore seulement)\r\nexport const SAFE_TEST_USERS: SafeTestUser[] = [\r\n    {\r\n        email: ",
    "exportinterfacesafet1": ";\r\n\r\nexport interface SafeTestUser {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le (Firestore seulement)\r\nexport const SAFE_TEST_USERS: SafeTestUser[] = [\r\n    {\r\n        email: ",
    "exportinterfacesafet2": ";\r\n\r\nexport interface SafeTestUser {\r\n    email: string;\r\n    password: string;\r\n    name: string;\r\n    role: UserRole;\r\n    company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le (Firestore seulement)\r\nexport const SAFE_TEST_USERS: SafeTestUser[] = [\r\n    {\r\n        email: ",
    "exportinterfacetestu": ";\r\n\r\nexport interface TestUser {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  role: UserRole;\r\n  company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le\r\nexport const TEST_USERS: TestUser[] = [\r\n  {\r\n    email: ",
    "exportinterfacetestu1": ";\r\n\r\nexport interface TestUser {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  role: UserRole;\r\n  company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le\r\nexport const TEST_USERS: TestUser[] = [\r\n  {\r\n    email: ",
    "exportinterfacetestu2": ";\r\n\r\nexport interface TestUser {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  role: UserRole;\r\n  company?: string;\r\n}\r\n\r\n// Utilisateurs de test √† cr√©er pour chaque r√¥le\r\nexport const TEST_USERS: TestUser[] = [\r\n  {\r\n    email: ",
    "interfaceinfluencert": ";\r\n\r\ninterface InfluencerTopbarProps {\r\n    setSidebarOpen: (open: boolean) => void;\r\n}\r\n\r\nconst InfluencerTopbar: React.FC<InfluencerTopbarProps> = ({ setSidebarOpen }) => {\r\n    const [showUserMenu, setShowUserMenu] = useState(false);\r\n    const [notifications] = useState(3); // Nombre de notifications non lues\r\n    const { user, logout } = useAuth();\r\n\r\n    return (\r\n        <div className=",
    "interfaceplatformset": ";\r\n\r\ninterface PlatformSettings {\r\n  siteName: string;\r\n  siteDescription: string;\r\n  maintenanceMode: boolean;\r\n  registrationEnabled: boolean;\r\n  emailNotifications: boolean;\r\n  smsNotifications: boolean;\r\n  defaultLanguage: string;\r\n  defaultCurrency: string;\r\n  maxFileSize: number;\r\n  allowedFileTypes: string[];\r\n  commissionRate: number;\r\n  minOrderAmount: number;\r\n  // Nouveaux param√®tres de s√©curit√©\r\n  passwordMinLength: number;\r\n  passwordRequireUppercase: boolean;\r\n  passwordRequireNumbers: boolean;\r\n  passwordRequireSymbols: boolean;\r\n  sessionTimeout: number;\r\n  maxLoginAttempts: number;\r\n  lockoutDuration: number;\r\n  twoFactorRequired: boolean;\r\n  ipWhitelistEnabled: boolean;\r\n  allowedIPs: string[];\r\n  sslRequired: boolean;\r\n  securityAlertsEnabled: boolean;\r\n  bruteForceProtection: boolean;\r\n  captchaEnabled: boolean;\r\n  adminSessionTimeout: number;\r\n}\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(",
    "interfaceplatformset1": ";\r\n\r\ninterface PlatformSettings {\r\n  siteName: string;\r\n  siteDescription: string;\r\n  maintenanceMode: boolean;\r\n  registrationEnabled: boolean;\r\n  emailNotifications: boolean;\r\n  smsNotifications: boolean;\r\n  defaultLanguage: string;\r\n  defaultCurrency: string;\r\n  maxFileSize: number;\r\n  allowedFileTypes: string[];\r\n  commissionRate: number;\r\n  minOrderAmount: number;\r\n  // Nouveaux param√®tres de s√©curit√©\r\n  passwordMinLength: number;\r\n  passwordRequireUppercase: boolean;\r\n  passwordRequireNumbers: boolean;\r\n  passwordRequireSymbols: boolean;\r\n  sessionTimeout: number;\r\n  maxLoginAttempts: number;\r\n  lockoutDuration: number;\r\n  twoFactorRequired: boolean;\r\n  ipWhitelistEnabled: boolean;\r\n  allowedIPs: string[];\r\n  sslRequired: boolean;\r\n  securityAlertsEnabled: boolean;\r\n  bruteForceProtection: boolean;\r\n  captchaEnabled: boolean;\r\n  adminSessionTimeout: number;\r\n}\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(",
    "interfaceplatformset2": ";\r\n\r\ninterface PlatformSettings {\r\n  siteName: string;\r\n  siteDescription: string;\r\n  maintenanceMode: boolean;\r\n  registrationEnabled: boolean;\r\n  emailNotifications: boolean;\r\n  smsNotifications: boolean;\r\n  defaultLanguage: string;\r\n  defaultCurrency: string;\r\n  maxFileSize: number;\r\n  allowedFileTypes: string[];\r\n  commissionRate: number;\r\n  minOrderAmount: number;\r\n  // Nouveaux param√®tres de s√©curit√©\r\n  passwordMinLength: number;\r\n  passwordRequireUppercase: boolean;\r\n  passwordRequireNumbers: boolean;\r\n  passwordRequireSymbols: boolean;\r\n  sessionTimeout: number;\r\n  maxLoginAttempts: number;\r\n  lockoutDuration: number;\r\n  twoFactorRequired: boolean;\r\n  ipWhitelistEnabled: boolean;\r\n  allowedIPs: string[];\r\n  sslRequired: boolean;\r\n  securityAlertsEnabled: boolean;\r\n  bruteForceProtection: boolean;\r\n  captchaEnabled: boolean;\r\n  adminSessionTimeout: number;\r\n}\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(",
    "interfacesupplierbus": ";\r\n\r\ninterface SupplierBusinessCardProps {\r\n    supplierData: {\r\n        name: string;\r\n        logo: string;\r\n        contact: {\r\n            phone: string;\r\n            email: string;\r\n            website: string;\r\n        };\r\n        location: {\r\n            address: string;\r\n            city: string;\r\n            country: string;\r\n        };\r\n    };\r\n    isOwner?: boolean;\r\n    onManageCards?: () => void;\r\n}\r\n\r\nconst SupplierBusinessCard: React.FC<SupplierBusinessCardProps> = ({\r\n    supplierData,\r\n    isOwner = false,\r\n    onManageCards\r\n}) => {\r\n    ",
    "interfacesupplierbus1": ";\r\n\r\ninterface SupplierBusinessCardProps {\r\n    supplierData: {\r\n        name: string;\r\n        logo: string;\r\n        contact: {\r\n            phone: string;\r\n            email: string;\r\n            website: string;\r\n        };\r\n        location: {\r\n            address: string;\r\n            city: string;\r\n            country: string;\r\n        };\r\n    };\r\n    isOwner?: boolean;\r\n    onManageCards?: () => void;\r\n}\r\n\r\nconst SupplierBusinessCard: React.FC<SupplierBusinessCardProps> = ({\r\n    supplierData,\r\n    isOwner = false,\r\n    onManageCards\r\n}) => {\r\n    // Convertir les donn√©es du fournisseur en format carte de visite\r\n    const businessCardData: BusinessCardData = {\r\n        ...defaultBusinessCardData,\r\n        companyName: supplierData.name,\r\n        tagline: ",
    "interfacesupplierbus2": ";\r\n\r\ninterface SupplierBusinessCardProps {\r\n    supplierData: {\r\n        name: string;\r\n        logo: string;\r\n        contact: {\r\n            phone: string;\r\n            email: string;\r\n            website: string;\r\n        };\r\n        location: {\r\n            address: string;\r\n            city: string;\r\n            country: string;\r\n        };\r\n    };\r\n    isOwner?: boolean;\r\n    onManageCards?: () => void;\r\n}\r\n\r\nconst SupplierBusinessCard: React.FC<SupplierBusinessCardProps> = ({\r\n    supplierData,\r\n    isOwner = false,\r\n    onManageCards\r\n}) => {\r\n    // Convertir les donn√©es du fournisseur en format carte de visite\r\n    const businessCardData: BusinessCardData = {\r\n        ...defaultBusinessCardData,\r\n        companyName: supplierData.name,\r\n        tagline: ",
    "interfacesupplierset": ";\r\n\r\ninterface SupplierSettings {\r\n  company: {\r\n    name: string;\r\n    email: string;\r\n    phone: string;\r\n    address: string;\r\n    city: string;\r\n    postalCode: string;\r\n    country: string;\r\n    website: string;\r\n    description: string;\r\n  };\r\n  profile: {\r\n    contactName: string;\r\n    contactEmail: string;\r\n    contactPhone: string;\r\n    position: string;\r\n  };\r\n  notifications: {\r\n    emailOrders: boolean;\r\n    emailMessages: boolean;\r\n    emailReviews: boolean;\r\n    emailMarketing: boolean;\r\n    pushOrders: boolean;\r\n    pushMessages: boolean;\r\n    pushReviews: boolean;\r\n  };\r\n  security: {\r\n    twoFactorAuth: boolean;\r\n    passwordExpiry: number;\r\n    sessionTimeout: number;\r\n  };\r\n  billing: {\r\n    companyName: string;\r\n    taxId: string;\r\n    billingEmail: string;\r\n    paymentMethod: string;\r\n  };\r\n}\r\n\r\nconst initialSettings: SupplierSettings = {\r\n  company: {\r\n    name: ",
    "setmessageerrormessa": ";\r\n            }\r\n\r\n            setMessage(`‚ùå ${errorMessage}: ${error.message}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    return (\r\n        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200 mb-4\">\r\n            <h4 className=\"font-semibold text-blue-800 mb-2\">Connexion Admin Rapide</h4>\r\n\r\n            {currentUser ? (\r\n                <div className=\"text-green-600\">\r\n                    ‚úÖ Connect√© en tant que: {currentUser.email}\r\n                </div>\r\n            ) : (\r\n                <div className=\"space-y-2\">\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                        <Input\r\n                            type=\"email\"\r\n                            placeholder=\"Email admin\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            type=\"password\"\r\n                            placeholder=\"Mot de passe\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button onClick={handleLogin} disabled={loading} size=\"sm\">\r\n                        {loading ? ",
    "elseiferrormessageer": ";\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er plusieurs utilisateurs de production en batch\r\n     */\r\n    public async createProductionUsersBatch(users: CreateProductionUserData[]): Promise<{\r\n        success: boolean;\r\n        created: User[];\r\n        failed: Array<{ email: string; error: string }>;\r\n        summary: ProductionUserSummary;\r\n    }> {\r\n        console.log(`üöÄ === CR√âATION BATCH DE ${users.length} UTILISATEURS ===`);\r\n\r\n        const created: User[] = [];\r\n        const failed: Array<{ email: string; error: string }> = [];\r\n\r\n        for (const userData of users) {\r\n            try {\r\n                console.log(`‚è≥ Cr√©ation: ${userData.email}...`);\r\n\r\n                const result = await this.createProductionUser(userData);\r\n\r\n                if (result.success && result.user) {\r\n                    created.push(result.user);\r\n                    console.log(`‚úÖ ${userData.email} cr√©√© avec succ√®s`);\r\n                } else {\r\n                    failed.push({\r\n                        email: userData.email,\r\n                        error: result.error || ",
    "isactivebooleanexpor": ";\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SupabaseAdminUser {\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n    last_login?: string;\r\n}\r\n\r\nclass SupabaseAdminUserService {\r\n    /**\r\n     * Cr√©er un nouvel utilisateur directement dans la table users\r\n     * Note: En production, il faudrait utiliser Supabase Auth avec les bonnes permissions\r\n     *",
    "isactivebooleanexpor1": ";\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SupabaseAdminUser {\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n    last_login?: string;\r\n}\r\n\r\nclass SupabaseAdminUserService {\r\n    /**\r\n     * Cr√©er un nouvel utilisateur directement dans la table users\r\n     * Note: En production, il faudrait utiliser Supabase Auth avec les bonnes permissions\r\n     *",
    "isactivebooleanexpor2": ";\r\n    isActive?: boolean;\r\n}\r\n\r\nexport interface SupabaseAdminUser {\r\n    id: string;\r\n    email: string;\r\n    name: string;\r\n    role: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n    last_login?: string;\r\n}\r\n\r\nclass SupabaseAdminUserService {\r\n    /**\r\n     * Cr√©er un nouvel utilisateur directement dans la table users\r\n     * Note: En production, il faudrait utiliser Supabase Auth avec les bonnes permissions\r\n     */\r\n    async createUser(userFormData: CreateUserData): Promise<{ success: boolean; user?: SupabaseAdminUser; error?: string }> {\r\n        try {\r\n            console.log(",
    "startdatestringendda": ";\r\n    startDate: string;\r\n    endDate: string;\r\n    budget: number;\r\n    description: string;\r\n    requirements: string[];\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n}\r\n\r\nexport interface InfluencerProfile {\r\n    id?: string;\r\n    userId: string;\r\n    name: string;\r\n    email: string;\r\n    avatar?: string;\r\n    bio: string;\r\n    followers: number;\r\n    country: string;\r\n    category: string;\r\n    languages: string[];\r\n    socialMedia: {\r\n        instagram?: string;\r\n        tiktok?: string;\r\n        youtube?: string;\r\n        twitter?: string;\r\n    };\r\n    pricing: {\r\n        postPrice: number;\r\n        storyPrice: number;\r\n        reelPrice: number;\r\n    };\r\n    engagement: number;\r\n    verified: boolean;\r\n    stats: {\r\n        totalViews: number;\r\n        totalEngagement: number;\r\n        totalClicks: number;\r\n        totalEarnings: number;\r\n    };\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n}\r\n\r\nexport interface ReferralData {\r\n    id?: string;\r\n    influencerId: string;\r\n    referralCode: string;\r\n    referredUserId: string;\r\n    referredUserEmail: string;\r\n    status: ",
    "mettreajourladernier": ";\r\n    }\r\n\r\n    /**\r\n     * Mettre √† jour la derni√®re connexion\r\n     *",
    "mettreajourladernier1": ";\r\n    }\r\n\r\n    /**\r\n     * Mettre √† jour la derni√®re connexion\r\n     *",
    "mettreajourladernier2": ";\r\n    }\r\n\r\n    /**\r\n     * Mettre √† jour la derni√®re connexion\r\n     */\r\n    private async updateLastLogin(userId: string): Promise<void> {\r\n        try {\r\n            const userDocRef = doc(db, ",
    "validerlesdonneesdec": ";\r\n    }\r\n\r\n    /**\r\n     * Valider les donn√©es de connexion\r\n     *",
    "validerlesdonneesdec1": ";\r\n    }\r\n\r\n    /**\r\n     * Valider les donn√©es de connexion\r\n     *",
    "validerlesdonneesdec2": ";\r\n    }\r\n\r\n    /**\r\n     * Valider les donn√©es de connexion\r\n     */\r\n    private validateLoginInput(email: string, password: string): { valid: boolean; error?: string } {\r\n        if (!email || !email.trim()) {\r\n            return { valid: false, error: ",
    "sinonattribuerlerole": ";\r\n    }\r\n\r\n    // Sinon, attribuer le r√¥le par d√©faut\r\n    return this.DEFAULT_ROLE;\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un email correspond √† un administrateur\r\n   * @param email - L",
    "sinonattribuerlerole1": ";\r\n    }\r\n\r\n    // Sinon, attribuer le r√¥le par d√©faut\r\n    return this.DEFAULT_ROLE;\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si un email correspond √† un administrateur\r\n   * @param email - L",
    "creeunutilisateurdem": ";\r\n    }\r\n  }\r\n  /**\r\n   * Cr√©e un utilisateur d√©mo pour les tests\r\n   * @param email - L",
    "creeunutilisateurdem1": ";\r\n    }\r\n  }\r\n  /**\r\n   * Cr√©e un utilisateur d√©mo pour les tests\r\n   * @param email - L",
    "favoritesstringbrows": ";\r\n  favorites: string[];\r\n  browsingHistory: string[];\r\n  messages: any[];\r\n  stripeCustomerId?: string;\r\n  subscriptionId?: string;\r\n  language?: UserLanguage;\r\n  currency?: UserCurrency;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  last_login?: string;\r\n  createdAt?: string; // Alias pour created_at\r\n  updatedAt?: string; // Alias pour updated_at\r\n  lastLogin?: string; // Alias pour last_login\r\n  isActive?: boolean; // Statut actif/inactif\r\n  phone?: string; // Num√©ro de t√©l√©phone\r\n  address?: string; // Adresse\r\n}\r\n\r\nexport interface Supplier {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  location: string;\r\n  rating?: number;\r\n  verified?: boolean;\r\n  products?: string[];\r\n  email?: string;\r\n}\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: Record<UserLanguage, string>;\r\n  description: Record<UserLanguage, string>;\r\n  price: { cny: number; unitCny: number; };\r\n  images: string[];\r\n  category: string;\r\n  supplier: Supplier;\r\n  moq: number;\r\n  certifiedCE: boolean;\r\n  origin?: string;\r\n  material?: string;\r\n  brand?: string;\r\n  modelNumber?: string;\r\n  application?: string;\r\n  style?: string;\r\n  specifications?: Record<string, string | number | boolean>;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n  // Nouvelles propri√©t√©s pour le UI am√©lior√©\r\n  discount?: number; // Pourcentage de remise\r\n  featured?: string[]; // Liste des fonctionnalit√©s/caract√©ristiques\r\n  isPopular?: boolean; ",
    "favoritesstringbrows1": ";\r\n  favorites: string[];\r\n  browsingHistory: string[];\r\n  messages: any[];\r\n  stripeCustomerId?: string;\r\n  subscriptionId?: string;\r\n  language?: UserLanguage;\r\n  currency?: UserCurrency;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  last_login?: string;\r\n  createdAt?: string; // Alias pour created_at\r\n  updatedAt?: string; // Alias pour updated_at\r\n  lastLogin?: string; // Alias pour last_login\r\n  isActive?: boolean; // Statut actif/inactif\r\n  phone?: string; // Num√©ro de t√©l√©phone\r\n  address?: string; // Adresse\r\n}\r\n\r\nexport interface Supplier {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  location: string;\r\n  rating?: number;\r\n  verified?: boolean;\r\n  products?: string[];\r\n  email?: string;\r\n}\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: Record<UserLanguage, string>;\r\n  description: Record<UserLanguage, string>;\r\n  price: { cny: number; unitCny: number; };\r\n  images: string[];\r\n  category: string;\r\n  supplier: Supplier;\r\n  moq: number;\r\n  certifiedCE: boolean;\r\n  origin?: string;\r\n  material?: string;\r\n  brand?: string;\r\n  modelNumber?: string;\r\n  application?: string;\r\n  style?: string;\r\n  specifications?: Record<string, string | number | boolean>;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n  // Nouvelles propri√©t√©s pour le UI am√©lior√©\r\n  discount?: number; // Pourcentage de remise\r\n  featured?: string[]; // Liste des fonctionnalit√©s/caract√©ristiques\r\n  isPopular?: boolean; // Produit populaire\r\n  isNew?: boolean; // Nouveau produit\r\n  rating?: number; ",
    "favoritesstringbrows2": ";\r\n  favorites: string[];\r\n  browsingHistory: string[];\r\n  messages: any[];\r\n  stripeCustomerId?: string;\r\n  subscriptionId?: string;\r\n  language?: UserLanguage;\r\n  currency?: UserCurrency;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n  last_login?: string;\r\n  createdAt?: string; // Alias pour created_at\r\n  updatedAt?: string; // Alias pour updated_at\r\n  lastLogin?: string; // Alias pour last_login\r\n  isActive?: boolean; // Statut actif/inactif\r\n  phone?: string; // Num√©ro de t√©l√©phone\r\n  address?: string; // Adresse\r\n}\r\n\r\nexport interface Supplier {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  location: string;\r\n  rating?: number;\r\n  verified?: boolean;\r\n  products?: string[];\r\n  email?: string;\r\n}\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: Record<UserLanguage, string>;\r\n  description: Record<UserLanguage, string>;\r\n  price: { cny: number; unitCny: number; };\r\n  images: string[];\r\n  category: string;\r\n  supplier: Supplier;\r\n  moq: number;\r\n  certifiedCE: boolean;\r\n  origin?: string;\r\n  material?: string;\r\n  brand?: string;\r\n  modelNumber?: string;\r\n  application?: string;\r\n  style?: string;\r\n  specifications?: Record<string, string | number | boolean>;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n  // Nouvelles propri√©t√©s pour le UI am√©lior√©\r\n  discount?: number; // Pourcentage de remise\r\n  featured?: string[]; // Liste des fonctionnalit√©s/caract√©ristiques\r\n  isPopular?: boolean; // Produit populaire\r\n  isNew?: boolean; // Nouveau produit\r\n  rating?: number; // Note du produit\r\n  reviewCount?: number; // Nombre d",
    "importgetauthcreateu": ";\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile, signOut } from ",
    "suppliercontactemail": ">\r\n                                                {supplier.contact.email}\r\n                                            <",
    "votreconnexionestpro": ">\r\n                                Votre connexion est prot√©g√©e par un chiffrement SSL et des r√®gles de s√©curit√© strictes.\r\n                            <",
    "votreconnexionestpro1": ">\r\n                                Votre connexion est prot√©g√©e par un chiffrement SSL et des r√®gles de s√©curit√© strictes.\r\n                            <",
    "votreconnexionestpro2": ">\r\n                                Votre connexion est prot√©g√©e par un chiffrement SSL et des r√®gles de s√©curit√© strictes.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Lien retour */}\r\n                <div className=",
    "connexionsecurisee": ">\r\n                        Connexion S√©curis√©e\r\n                    <",
    "connexionsecurisee1": ">\r\n                        Connexion S√©curis√©e\r\n                    <",
    "connexionsecuriseeh2": ">\r\n                        Connexion S√©curis√©e\r\n                    </h2>\r\n                    <p className=",
    "telechargeztoutesvos": ">\r\n                        T√©l√©chargez toutes vos donn√©es personnelles\r\n                      </p>\r\n                      <button\r\n                        onClick={() => showNotification('info', 'Export des donn√©es en cours... Vous recevrez un email.')}\r\n                        className=",
    "votrecompteestbiense": ">\r\n                        Votre compte est bien s√©curis√©. Activez les alertes email pour am√©liorer davantage.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Alertes de s√©curit√© *",
    "votrecompteestbiense1": ">\r\n                        Votre compte est bien s√©curis√©. Activez les alertes email pour am√©liorer davantage.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Alertes de s√©curit√© *",
    "votrecompteestbiense2": ">\r\n                        Votre compte est bien s√©curis√©. Activez les alertes email pour am√©liorer davantage.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Alertes de s√©curit√© */}\r\n                  <div className=",
    "eyesize16genererunmo": ">\r\n                      <Eye size={16} />\r\n                      G√©n√©rer un mot de passe\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Authentification √† deux facteurs am√©lior√©e *",
    "eyesize16genererunmo1": ">\r\n                      <Eye size={16} />\r\n                      G√©n√©rer un mot de passe\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Authentification √† deux facteurs am√©lior√©e */}\r\n              <Section icon={<Smartphone className=",
    "derniereconnexion": ">\r\n                      Derni√®re connexion\r\n                    <",
    "derniereconnexion1": ">\r\n                      Derni√®re connexion\r\n                    <",
    "derniereconnexiontht": ">\r\n                      Derni√®re connexion\r\n                    </th>\r\n                    <th className=",
    "buttononclickshownot": ">\r\n                    <button\r\n                      onClick={() => showNotification('success', 'Mot de passe mis √† jour avec succ√®s !')}\r\n                      className=",
    "li1entrezlemotdepass": ">\r\n                    <li>1. Entrez le mot de passe de admin@chinetonusine.com<",
    "doubleclicpourbrdeco": ">\r\n                    Double-clic pour<br />d√©connexion d",
    "doubleclicpourbrdeco1": ">\r\n                    Double-clic pour<br />d√©connexion d",
    "connecteentantquecur": ">\r\n                    ‚úÖ Connect√© en tant que: {currentUser.email}\r\n                <",
    "connecteentantquecur1": ">\r\n                    ‚úÖ Connect√© en tant que: {currentUser.email}\r\n                </div>\r\n            ) : (\r\n                <div className=",
    "idemailorderstitleno": ">\r\n                  {[\r\n                    {\r\n                      id: 'email-orders',\r\n                      title: 'Nouvelles commandes',\r\n                      description: 'Recevoir un email pour chaque nouvelle commande',\r\n                      enabled: true\r\n                    },\r\n                    {\r\n                      id: 'email-messages',\r\n                      title: 'Nouveaux messages',\r\n                      description: 'Notifications pour les messages de fournisseurs',\r\n                      enabled: true\r\n                    },\r\n                    {\r\n                      id: 'email-marketing',\r\n                      title: 'Actualit√©s et promotions',\r\n                      description: 'Recevoir les derni√®res nouvelles et offres',\r\n                      enabled: false\r\n                    },\r\n                    {\r\n                      id: 'push-mobile',\r\n                      title: 'Notifications mobiles',\r\n                      description: 'Notifications push sur l\\'application mobile',\r\n                      enabled: true\r\n                    }\r\n                  ].map((notif) => (\r\n                    <div key={notif.id} className=",
    "actionconnexionreuss": ">\r\n                  {[\r\n                    { action: 'Connexion r√©ussie', time: '2 heures', icon: <User size={16} />, color: 'bg-green-100 text-green-600 dark:bg-green-900 dark:text-green-400' },\r\n                    { action: 'Commande #CMD-001 pass√©e', time: '1 jour', icon: <Package size={16} />, color: 'bg-blue-100 text-blue-600 dark:bg-blue-900 dark:text-blue-400' },\r\n                    { action: 'Profil mis √† jour', time: '3 jours', icon: <Edit3 size={16} />, color: 'bg-purple-100 text-purple-600 dark:bg-purple-900 dark:text-purple-400' },\r\n                    { action: 'Nouveau message re√ßu', time: '5 jours', icon: <Mail size={16} />, color: 'bg-orange-100 text-orange-600 dark:bg-orange-900 dark:text-orange-400' },\r\n                  ].map((activity, index) => (\r\n                    <div key={index} className=",
    "labelnomcompletkeyna": ">\r\n                  {[\r\n                    { label: 'Nom complet', key: 'name', type: 'text', icon: <User size={16} />, required: true },\r\n                    { label: 'Adresse email', key: 'email', type: 'email', icon: <Mail size={16} />, required: true },\r\n                    { label: 'T√©l√©phone', key: 'phone', type: 'tel', icon: <Phone size={16} /> },\r\n                    { label: 'Pays/R√©gion', key: 'country', type: 'text', icon: <MapPin size={16} /> },\r\n                    { label: 'Ville', key: 'city', type: 'text', icon: <MapPin size={16} /> },\r\n                    { label: 'Code postal', key: 'zipCode', type: 'text', icon: <MapPin size={16} /> }\r\n                  ].map((field) => (\r\n                    <div key={field.key} className=",
    "connexionuniverselle3": ">\r\n                  üåü Connexion Universelle\r\n                <",
    "cetestcreeunutilisat": ">\r\n                Ce test cr√©e un utilisateur directement sans passer par AuthContext\r\n                pour isoler le probl√®me de d√©connexion.\r\n            <",
    "cetestcreeunutilisat1": ">\r\n                Ce test cr√©e un utilisateur directement sans passer par AuthContext\r\n                pour isoler le probl√®me de d√©connexion.\r\n            <",
    "connectezvoussimplem": ">\r\n                Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.\r\n              <",
    "connectezvoussimplem1": ">\r\n                Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=",
    "liactivezla2fapourto": ">\r\n              <li>‚Ä¢ Activez la 2FA pour tous les comptes administrateur</li>\r\n              <li>‚Ä¢ Utilisez des mots de passe complexes avec symboles</li>\r\n              <li>‚Ä¢ Limitez les tentatives de connexion √† 3-5 maximum<",
    "liactivezla2fapourto1": ">\r\n              <li>‚Ä¢ Activez la 2FA pour tous les comptes administrateur</li>\r\n              <li>‚Ä¢ Utilisez des mots de passe complexes avec symboles</li>\r\n              <li>‚Ä¢ Limitez les tentatives de connexion √† 3-5 maximum<",
    "liactivezla2fapourto2": ">\r\n              <li>‚Ä¢ Activez la 2FA pour tous les comptes administrateur</li>\r\n              <li>‚Ä¢ Utilisez des mots de passe complexes avec symboles</li>\r\n              <li>‚Ä¢ Limitez les tentatives de connexion √† 3-5 maximum</li>\r\n              <li>‚Ä¢ Activez la liste blanche IP pour l'acc√®s admin</li>\r\n              <li>‚Ä¢ Surveillez r√©guli√®rement les alertes de s√©curit√©</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistiques de s√©curit√© en temps r√©el */}\r\n      <div className=",
    "spantorcontinuewiths": ">\r\n              <span>{t('orContinueWith')}</span>\r\n            </div>\r\n            \r\n            <GoogleSignInButton\r\n              onSuccess={() => {\r\n                // La redirection sera g√©r√©e automatiquement par l'√©couteur onAuthStateChanged\r\n                // dans le contexte d'authentification\r\n                console.log('Connexion Google r√©ussie');\r\n              }}\r\n              onError={(errorMessage) => {\r\n                setError(errorMessage);\r\n              }}\r\n              className=",
    "tentativesdeconnexio": ">\r\n              Tentatives de connexion maximum\r\n            <",
    "isloginmodetlogindes": ">\r\n              {isLoginMode \r\n                ? t('loginDescription', 'Acc√©dez √† votre compte')\r\n                : t('registerDescription', 'Rejoignez notre plateforme')\r\n              }\r\n            </p>\r\n          </div>\r\n\r\n          {/* Navigation des onglets */}\r\n          <div className=",
    "isloginmodetwelcomeb": ">\r\n              {isLoginMode \r\n                ? t('welcome.back.subtitle', 'Connectez-vous pour acc√©der √† votre espace')\r\n                : t('welcome.join.subtitle', 'Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d\\'affaires avec la Chine')\r\n              }\r\n            </p>\r\n            \r\n            <div className=",
    "isloginmodetlogincon": ">\r\n              {isLoginMode ? t('login', 'Connexion') : t('createAccount', 'Cr√©er un compte')}\r\n            </h2>\r\n            <p className=",
    "tregisternowcreerunc": ">\r\n              {t('registerNow', 'Cr√©er un compte')}\r\n            </Link>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center', marginTop: '1.5rem' }}>\r\n            <p style={{ fontSize: '0.75rem', color: 'var(--auth-text-light)' }}>\r\n              {t('agreementPrefix', 'En continuant, vous acceptez nos')}{' '}\r\n              <Link to=",
    "spanisloginmodetnoac": ">\r\n            <span>\r\n              {isLoginMode \r\n                ? t('noAccountQuestion', 'Pas encore de compte ?')\r\n                : t('hasAccountQuestion', 'D√©j√† un compte ?')\r\n              }\r\n            </span>\r\n          </div>\r\n\r\n          <div style={{ textAlign: 'center' }}>\r\n            {isLoginMode ? (\r\n              <button \r\n                type=",
    "spantorcontinuewiths1": ">\r\n            <span>{t('orContinueWith')}</span>\r\n          </div>\r\n\r\n          <GoogleSignInButton\r\n            onSuccess={() => {\r\n              console.log('Connexion Google r√©ussie');\r\n              // La redirection sera g√©r√©e automatiquement\r\n            }}\r\n            onError={(errorMessage) => {\r\n              setError(errorMessage);\r\n            }}\r\n            className=",
    "envoyerdesnotificati": ">\r\n            Envoyer des notifications par email\r\n          <",
    "childrendivdivdivcon": ">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserProfile: React.FC = () => {\r\n  const { user: baseUser, loading, updateUser } = useAuth();\r\n  const [tab, setTab] = useState('infos');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedUser, setEditedUser] = useState<any>({});\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const [preview, setPreview] = useState<string | null>(null);\r\n  const [uploadStatus, setUploadStatus] = useState<'idle' | 'uploading' | 'success' | 'error'>('idle');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [notification, setNotification] = useState<{ type: 'success' | 'error' | 'info', message: string } | null>(null);\r\n\r\n  // Cast pour acc√©der aux propri√©t√©s √©tendues non typ√©es\r\n  const user = baseUser as Record<string, any>;\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setEditedUser({ ...user });\r\n    }\r\n  }, [user]);\r\n\r\n  // Animation notification\r\n  useEffect(() => {\r\n    if (notification) {\r\n      const timer = setTimeout(() => {\r\n        setNotification(null);\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  const showNotification = (type: 'success' | 'error' | 'info', message: string) => {\r\n    setNotification({ type, message });\r\n  };\r\n\r\n  // Fonctions pour la gestion du profil\r\n  const handleClickChangePhoto = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleProfilePicChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Validation du fichier\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      showNotification('error', 'Le fichier est trop volumineux (max 5MB)');\r\n      return;\r\n    }\r\n\r\n    if (!file.type.startsWith('image/')) {\r\n      showNotification('error', 'Veuillez s√©lectionner une image valide');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploadStatus('uploading');\r\n\r\n      // Cr√©er un aper√ßu local\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPreview(e.target?.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n      // Upload vers Firebase Storage\r\n      const storageRef = ref(storage, `avatars/${user.id}-${Date.now()}`);\r\n      const snapshot = await uploadBytes(storageRef, file);\r\n      const downloadURL = await getDownloadURL(snapshot.ref);\r\n\r\n      // Mettre √† jour le profil utilisateur (cast pour √©viter l'erreur de type)\r\n      await updateUser({ ...user, avatar: downloadURL } as any);\r\n\r\n      setUploadStatus('success');\r\n      showNotification('success', 'Photo de profil mise √† jour avec succ√®s !');\r\n    } catch (error) {\r\n      console.error('Erreur upload:', error);\r\n      setUploadStatus('error');\r\n      showNotification('error', 'Erreur lors de l\\'upload de l\\'image');\r\n    }\r\n  };\r\n\r\n  const handleSaveProfile = async () => {\r\n    try {\r\n      await updateUser(editedUser);\r\n      setIsEditing(false);\r\n      showNotification('success', 'Profil mis √† jour avec succ√®s !');\r\n    } catch (error) {\r\n      console.error('Erreur sauvegarde:', error);\r\n      showNotification('error', 'Erreur lors de la sauvegarde du profil');\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditedUser({ ...user });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  // Fonctions utilitaires pour la validation\r\n  const validateEmail = (email: string): boolean => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePhone = (phone: string): boolean => {\r\n    const phoneRegex = /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  const getFieldValidationClass = (field: string, value: string): string => {\r\n    if (!isEditing || !value) return '';\r\n\r\n    let isValid = true;\r\n    switch (field) {\r\n      case 'email':\r\n        isValid = validateEmail(value);\r\n        break;\r\n      case 'phone':\r\n        isValid = validatePhone(value);\r\n        break;\r\n      case 'name':\r\n        isValid = value.trim().length >= 2;\r\n        break;\r\n      default:\r\n        return '';\r\n    }\r\n\r\n    return isValid\r\n      ? 'ring-2 ring-green-500 border-green-500'\r\n      : 'ring-2 ring-red-500 border-red-500';\r\n  };\r\n\r\n  const getValidationIcon = (field: string, value: string) => {\r\n    if (!isEditing || !value) return null;\r\n\r\n    let isValid = true;\r\n    switch (field) {\r\n      case 'email':\r\n        isValid = validateEmail(value);\r\n        break;\r\n      case 'phone':\r\n        isValid = validatePhone(value);\r\n        break;\r\n      case 'name':\r\n        isValid = value.trim().length >= 2;\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n\r\n    return isValid\r\n      ? <CheckCircle size={16} className=",
    "divconnexionencours": "></div>\r\n                                    Connexion en cours...\r\n                                <",
    "divspanconnexion": "></div>\r\n          <span>Connexion...<",
    "alertesparemailpdivb": ">Alertes par email</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('success', 'Alertes de connexion activ√©es')}\r\n                          className=",
    "apresechecsdeconnexi": ">Apr√®s √©checs de connexion<",
    "apresechecsdeconnexi1": ">Apr√®s √©checs de connexion<",
    "apresechecsdeconnexi2": ">Apr√®s √©checs de connexion<",
    "apresechecsdeconnexi3": ">Apr√®s √©checs de connexion<",
    "apresechecsdeconnexi4": ">Apr√®s √©checs de connexion</p>\r\n            </div>\r\n            <label className=",
    "apresechecsdeconnexi5": ">Apr√®s √©checs de connexion</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=",
    "connectezvoussimplem2": ">Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.<",
    "connectezvoussimplem3": ">Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.</div>\r\n          </div>\r\n\r\n          <form className=",
    "connexionadminrapide": ">Connexion Admin Rapide<",
    "connexionreussie": ">Connexion r√©ussie<",
    "connexionreussie1": ">Connexion r√©ussie<",
    "connexionreussieh3pc": ">Connexion r√©ussie</h3>\r\n                                    <p className=",
    "connexionsdepuisnouv": ">Connexions depuis nouveaux appareils<",
    "connexionsdepuisnouv1": ">Connexions depuis nouveaux appareils</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('success', 'Alertes de session activ√©es')}\r\n                          className=",
    "connexionssuspectes": ">Connexions suspectes<",
    "connexionssecurisees": ">Connexions s√©curis√©es<",
    "connexionssecurisees1": ">Connexions s√©curis√©es<",
    "connexionssecurisees2": ">Connexions s√©curis√©es</p>\r\n                <p className=",
    "connexions": ">Connexions<",
    "creezvotrecomptefaci": ">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).<",
    "creezvotrecomptefaci1": ">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).<",
    "creezvotrecomptefaci2": ">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).</div>\r\n          </div>\r\n\r\n          <form className=",
    "creezvotrecomptefaci3": ">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).</div>\r\n          </div>\r\n\r\n          <form className=",
    "deconnexion": ">D√©connexion<",
    "deconnexion1": ">D√©connexion<",
    "deconnexionspanbutto": ">D√©connexion</span>\r\n                </button>\r\n                <div className=",
    "erreurdeconnexion": ">Erreur de connexion<",
    "forcerlesconnexionss": ">Forcer les connexions s√©curis√©es<",
    "forcerlesconnexionss1": ">Forcer les connexions s√©curis√©es<",
    "forcerlesconnexionss2": ">Forcer les connexions s√©curis√©es</p>\r\n              </div>\r\n              <label className=",
    "notificationsemail": ">Notifications email<",
    "notificationsparemai": ">Notifications par email<",
    "recevoirdesemailspro": ">Recevoir des emails promotionnels et newsletters</p>\r\n                        </div>\r\n                        <button\r\n                          onClick={() => showNotification('info', 'Communications marketing d√©sactiv√©es')}\r\n                          className=",
    "seulslesadministrate": ">Seuls les administrateurs peuvent acc√©der √† cette page.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadSummary();\r\n    }, []);\r\n\r\n    const loadSummary = async () => {\r\n        try {\r\n            setLoading(true);\r\n\r\n            if ((window as any).productionUserService) {\r\n                const summaryData = await (window as any).productionUserService.getUsersSummary();\r\n                setSummary(summaryData);\r\n            } else {\r\n                setMessage({\r\n                    type: 'error',\r\n                    text: 'Service de gestion des utilisateurs non disponible'\r\n                });\r\n            }\r\n        } catch (error: any) {\r\n            console.error('Erreur chargement r√©sum√©:', error);\r\n            setMessage({\r\n                type: 'error',\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateEssentialUsers = async () => {\r\n        setIsCreating(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error('Service non disponible');\r\n            }\r\n\r\n            const result = await (window as any).productionUserService.createEssentialProductionUsers();\r\n\r\n            if (result.success) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    text: `${result.created.length} utilisateurs essentiels cr√©√©s avec succ√®s`\r\n                });\r\n\r\n                // Afficher les identifiants dans la console\r\n                console.log('\\nüîê === IDENTIFIANTS CR√â√âS ===');\r\n                result.credentials.forEach((cred: any) => {\r\n                    console.log(`üìß ${cred.email} | üîë ${cred.password} | üë§ ${cred.name}`);\r\n                });\r\n\r\n                await loadSummary();\r\n            } else {\r\n                setMessage({\r\n                    type: 'warning',\r\n                    text: `Cr√©ation partielle: ${result.created.length} cr√©√©s, ${result.failed.length} √©checs`\r\n                });\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error('Erreur cr√©ation utilisateurs:', error);\r\n            setMessage({\r\n                type: 'error',\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const handlePurgeUsers = async () => {\r\n        const confirmed = confirm(`\r\n‚ö†Ô∏è ATTENTION: OP√âRATION IRR√âVERSIBLE\r\n\r\nVous allez supprimer TOUS les utilisateurs existants.\r\n\r\nCette action ne peut pas √™tre annul√©e.\r\n\r\n√ätes-vous absolument certain de vouloir continuer ?`);\r\n\r\n        if (!confirmed) return;\r\n\r\n        setIsPurging(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error('Service non disponible');\r\n            }\r\n\r\n            const result = await (window as any).productionUserService.purgeAllUsers();\r\n\r\n            if (result.success) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    text: `${result.deletedCount} utilisateurs supprim√©s avec succ√®s`\r\n                });\r\n            } else {\r\n                setMessage({\r\n                    type: 'warning',\r\n                    text: `Suppression partielle: ${result.deletedCount} supprim√©s, ${result.errors.length} erreurs`\r\n                });\r\n            }\r\n\r\n            await loadSummary();\r\n\r\n        } catch (error: any) {\r\n            console.error('Erreur purge utilisateurs:', error);\r\n            setMessage({\r\n                type: 'error',\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsPurging(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateUser = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setIsCreating(true);\r\n        setMessage(null);\r\n\r\n        try {\r\n            if (!(window as any).productionUserService) {\r\n                throw new Error('Service non disponible');\r\n            }\r\n\r\n            const result = await (window as any).productionUserService.createProductionUser({\r\n                email: newUser.email,\r\n                password: newUser.password,\r\n                name: newUser.name,\r\n                role: newUser.role,\r\n                isActive: true,\r\n                additionalData: {\r\n                    company: newUser.company || undefined,\r\n                    phone: newUser.phone || undefined\r\n                }\r\n            });\r\n\r\n            if (result.success) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    text: `Utilisateur ${newUser.email} cr√©√© avec succ√®s`\r\n                });\r\n\r\n                // R√©initialiser le formulaire\r\n                setNewUser({\r\n                    email: '',\r\n                    password: '',\r\n                    name: '',\r\n                    role: 'customer',\r\n                    company: '',\r\n                    phone: ''\r\n                });\r\n                setShowCreateForm(false);\r\n\r\n                await loadSummary();\r\n            } else {\r\n                setMessage({\r\n                    type: 'error',\r\n                    text: `Erreur: ${result.error}`\r\n                });\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error('Erreur cr√©ation utilisateur:', error);\r\n            setMessage({\r\n                type: 'error',\r\n                text: `Erreur: ${error.message}`\r\n            });\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const downloadCredentials = () => {\r\n        const content = `\r\nIDENTIFIANTS CHINE TON USINE - PRODUCTION\r\n=====================================\r\n\r\nADMINISTRATEURS:\r\n‚Ä¢ admin@chinetonusine.com | ProductionAdmin2024!\r\n‚Ä¢ admin.backup@chinetonusine.com | BackupAdmin2024!\r\n‚Ä¢ support@chinetonusine.com | SupportTeam2024!\r\n\r\nLIENS:\r\n‚Ä¢ Connexion: ${window.location.origin}/login\r\n‚Ä¢ Admin: ${window.location.origin}/admin/dashboard\r\n\r\nS√âCURIT√â:\r\n‚Ä¢ Changez les mots de passe d√®s la premi√®re connexion\r\n‚Ä¢ Ne partagez jamais ces identifiants\r\n‚Ä¢ Surveillez les connexions suspectes\r\n\r\nDate de g√©n√©ration: ${new Date().toLocaleString()}\r\n`;\r\n\r\n        const blob = new Blob([content], { type: 'text/plain' });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `chine-ton-usine-credentials-${Date.now()}.txt`;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=",
    "touteslesconnexionsf": ">Toutes les connexions fonctionnent<",
    "httplocalhost5174log": ">http://localhost:5174/login</code>\r\n                                    <br />\r\n                                    2. Utilisez un des comptes admin ci-dessus\r\n                                    <br />\r\n                                    3. Acc√©dez au tableau de bord admin\r\n                                <",
    "httplocalhost5174log1": ">http://localhost:5174/login</code>\r\n                                    <br />\r\n                                    2. Utilisez un des comptes admin ci-dessus\r\n                                    <br />\r\n                                    3. Acc√©dez au tableau de bord admin\r\n                                <",
    "httplocalhost5174log2": ">http://localhost:5174/login</code>\r\n                                    <br />\r\n                                    2. Utilisez un des comptes admin ci-dessus\r\n                                    <br />\r\n                                    3. Acc√©dez au tableau de bord admin\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Erreur */}\r\n            {ultimateResult && !ultimateResult.success && (\r\n                <div className=",
    "errorpdivtestcompone": ">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Test Component - S√âCURIS√âS SEULEMENT (pas de Firebase Auth) */}\r\n        <UltimateUserPanel />\r\n        <UserResetPanel />\r\n        <AdminDiagnosticPanel />\r\n        <AdminCreationPanel />\r\n        <QuickAdminLogin />\r\n        {/* üö® COMPOSANTS D√âSACTIV√âS - ils utilisent Firebase Auth et causent la d√©connexion *",
    "errorpdivtestcompone1": ">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Test Component - S√âCURIS√âS SEULEMENT (pas de Firebase Auth) */}\r\n        <UltimateUserPanel />\r\n        <UserResetPanel />\r\n        <AdminDiagnosticPanel />\r\n        <AdminCreationPanel />\r\n        <QuickAdminLogin />\r\n        {/* üö® COMPOSANTS D√âSACTIV√âS - ils utilisent Firebase Auth et causent la d√©connexion *",
    "selecteduseremailspa": ">{selectedUser.email}</span> ? Cette action est irr√©versible.\n            <",
    "selecteduseremailspa1": ">{selectedUser.email}</span> ? Cette action est irr√©versible.\n            <",
    "selecteduseremailspa2": ">{selectedUser.email}</span> ? Cette action est irr√©versible.\n            </p>\n            {error && <div className=",
    "selecteduseremailspa3": ">{selectedUser.email}</span> ? Cette action est irr√©versible.\n            </p>\n            {error && <div className=",
    "successdivformonsubm": ">{success}</div>}\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              setError('');\n              setSuccess('');\n              setLoading(true);\n              try {\n                await userService.updateUser(selectedUser.id, { email, name, role });\n                setSuccess('Utilisateur mis √† jour avec succ√®s');\n                setShowEditUserModal(false);\n                resetForm();\n                loadUsers();\n              } catch (err: unknown) {\n                console.error('Erreur lors de la mise √† jour:', err);\n                setError(err instanceof Error ? err.message : 'Erreur lors de la mise √† jour de l\\'utilisateur');\n              } finally {\n                setLoading(false);\n              }\n            }} className=",
    "successdivformonsubm1": ">{success}</div>}\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              setError('');\n              setSuccess('');\n              setLoading(true);\n              try {\n                await userService.updateUser(selectedUser.id, { email, name, role });\n                setSuccess('Utilisateur mis √† jour avec succ√®s');\n                setShowEditUserModal(false);\n                resetForm();\n                loadUsers();\n              } catch (err: unknown) {\n                console.error('Erreur lors de la mise √† jour:', err);\n                setError(err instanceof Error ? err.message : 'Erreur lors de la mise √† jour de l\\'utilisateur');\n              } finally {\n                setLoading(false);\n              }\n            }} className=",
    "successpdivdivbouton": ">{success}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Bouton de connexion *",
    "tlogindescriptionacc": ">{t('loginDescription', 'Acc√©dez √† votre compte')}</p>\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=",
    "troleinfluenceroptio": ">{t('role.influencer')}</option>}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Messages personnalis√©s pour inscription uniquement */}\r\n            {!isLoginMode && (\r\n              <>\r\n                {/* Message personnalis√© pour les fournisseurs */}\r\n                {selectedRole === 'supplier' && (\r\n                  <div className=",
    "tsharestatsagreement": ">{t('shareStatsAgreement')}</span>\r\n                  </label>                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Champs sp√©cifiques pour les fournisseurs */}\r\n            {!isLoginMode && selectedRole === 'supplier' && (\r\n              <div className=",
    "tsourcerregistration": ">{t('sourcer.registration.validation')}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}            {/* Mot de passe - masqu√© pour fournisseurs, sourceurs et influenceurs en mode inscription */}\r\n            {(isLoginMode || (selectedRole !== 'supplier' && selectedRole !== 'sourcer' && selectedRole !== 'influencer')) && (\r\n              <div className=",
    "tsuppliersettingscha": ">{t('supplier.settings.changePassword')}</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'company':\r\n        return renderCompanySettings();\r\n      case 'profile':\r\n        return renderCompanySettings(); // Simplifi√© pour l'exemple\r\n      case 'notifications':\r\n        return renderNotificationSettings();\r\n      case 'security':\r\n        return renderSecuritySettings();\r\n      case 'billing':\r\n        return renderCompanySettings(); // Simplifi√© pour l'exemple\r\n      default:\r\n        return renderCompanySettings();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SupplierLayout>      <div className=",
    "connexionuniverselle4": ">üåü Connexion Universelle<",
    "connexionadministrat": ">üîê Connexion Administrateur<",
    "alertesdeconnexionac": "Alertes de connexion activ√©es",
    "alertesdeconnexionac1": "Alertes de connexion activ√©es",
    "alertesdeconnexionac2": "Alertes de connexion activ√©es",
    "aucuncompteassocieac": "Aucun compte associ√© √† cette adresse email",
    "aucuncompteassocieac1": "Aucun compte associ√© √† cette adresse email",
    "cetemailestdejautili": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili1": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili2": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili3": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili4": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili5": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili6": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili7": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili8": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili9": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili10": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili11": "Cet email est d√©j√† utilis√©",
    "cetemailestdejautili12": "Cet email est d√©j√† utilis√© dans Firebase Auth",
    "cetemailestdejautili13": "Cet email est d√©j√† utilis√© dans Firebase Auth",
    "cetutilisateuracree5": "Cet utilisateur a cr√©√© 5 comptes avec des emails similaires en 24h.",
    "cetutilisateuracree51": "Cet utilisateur a cr√©√© 5 comptes avec des emails similaires en 24h.",
    "cetteadresseemailest": "Cette adresse email est d√©j√† utilis√©e",
    "cetteadresseemailest1": "Cette adresse email est d√©j√† utilis√©e",
    "clicdeconnexionnorma": "Clic: d√©connexion normale | Double-clic: d√©connexion d",
    "clicdeconnexionnorma1": "Clic: d√©connexion normale | Double-clic: d√©connexion d",
    "clicdeconnexionnorma2": "Clic: d√©connexion normale | Double-clic: d√©connexion d'urgence",
    "confirmerlenouveaumo1": "Confirmer le nouveau mot de passe",
    "confirmezvotrenouvea": "Confirmez votre nouveau mot de passe",
    "connexion": "Connexion",
    "connexion1": "Connexion",
    "connexion2": "Connexion",
    "connexion3": "Connexion",
    "connexion4": "Connexion",
    "connexiongoogledepui": "Connexion Google depuis le contexte:",
    "connexiongooglenondi": "Connexion Google non disponible en production. Utilisez email",
    "connexiongooglereuss": "Connexion Google r√©ussie",
    "connexiongooglereuss1": "Connexion Google r√©ussie",
    "connexiongooglereuss2": "Connexion Google r√©ussie",
    "connexiongooglereuss3": "Connexion Google r√©ussie",
    "connexiongooglereuss4": "Connexion Google r√©ussie",
    "connexiongooglereuss5": "Connexion Google r√©ussie",
    "connexionreussie2": "Connexion r√©ussie",
    "connexionreussie3": "Connexion r√©ussie",
    "connexionreussiedepu": "Connexion r√©ussie depuis le contexte",
    "connexionreussiedepu1": "Connexion r√©ussie depuis le contexte",
    "connexionreussiedepu2": "Connexion r√©ussie depuis le contexte",
    "connexion5": "Connexion...",
    "connexion6": "Connexion...",
    "connexion7": "Connexion...",
    "connexion8": "Connexion...",
    "connexion9": "Connexion...",
    "connexions1": "Connexions",
    "deconnexion2": "D√©connexion",
    "deconnexion3": "D√©connexion",
    "deconnexion4": "D√©connexion",
    "deconnexioncomplete": "D√©connexion compl√®te",
    "deconnexioncomplete1": "D√©connexion compl√®te",
    "deconnexioncomplete2": "D√©connexion compl√®te",
    "deconnexiondepuislec": "D√©connexion depuis le contexte...",
    "deconnexiondepuislec1": "D√©connexion depuis le contexte...",
    "deconnexiondepuislec2": "D√©connexion depuis le contexte...",
    "emaildecontact": "Email de contact",
    "emailnonconfirme": "Email non confirm√©",
    "emailnonconfirme1": "Email non confirm√©",
    "emaileobrigatrio": "Email √© obrigat√≥rio",
    "emaileobrigatrio1": "Email √© obrigat√≥rio",
    "entrezunnouveaumotde": "Entrez un nouveau mot de passe",
    "erreurconnexiongoogl": "Erreur connexion Google",
    "erreurconnexion": "Erreur connexion:",
    "erreurdeconnexion1": "Erreur de connexion",
    "erreurdeconnexion2": "Erreur de connexion",
    "erreurdeconnexion3": "Erreur de connexion",
    "erreurdeconnexion4": "Erreur de connexion",
    "erreurdeconnexion5": "Erreur de connexion",
    "erreurdeconnexion6": "Erreur de connexion",
    "erreurdeconnexion7": "Erreur de connexion",
    "erreurdeconnexion8": "Erreur de connexion",
    "erreurdeconnexion9": "Erreur de connexion",
    "erreurdeconnexion10": "Erreur de connexion",
    "erreurdeconnexionfir": "Erreur de connexion Firebase:",
    "erreurdeconnexiongoo": "Erreur de connexion Google",
    "erreurdeconnexiongoo1": "Erreur de connexion Google dans le contexte:",
    "erreurdeconnexiondan": "Erreur de connexion dans le contexte:",
    "erreurdeconnexionina": "Erreur de connexion inattendue",
    "erreurdeconnexioninc": "Erreur de connexion inconnue.",
    "erreurdeconnexioninc1": "Erreur de connexion inconnue.",
    "erreurdeconnexioninc2": "Erreur de connexion inconnue.",
    "erreurdeconnexionres": "Erreur de connexion r√©seau",
    "erreurdeconnexionres1": "Erreur de connexion r√©seau",
    "erreurdeconnexionres2": "Erreur de connexion r√©seau",
    "erreurdeconnexionver": "Erreur de connexion. V√©rifiez votre connexion internet",
    "erreurdeconnexionver1": "Erreur de connexion. V√©rifiez votre connexion internet",
    "erreurdeconnexionver2": "Erreur de connexion. V√©rifiez votre connexion internet",
    "erreurdeconnexionver3": "Erreur de connexion. V√©rifiez votre connexion internet.",
    "erreurdeconnexionver4": "Erreur de connexion. V√©rifiez votre connexion internet.",
    "erreurdeconnexionver5": "Erreur de connexion. V√©rifiez votre connexion internet.",
    "erreurdeconnexionver6": "Erreur de connexion. V√©rifiez votre internet",
    "erreurdeconnexionver7": "Erreur de connexion. V√©rifiez votre internet",
    "erreurdeconnexionver8": "Erreur de connexion. V√©rifiez votre internet",
    "erreurdeconnexion11": "Erreur de connexion:",
    "erreurdedeconnexionf": "Erreur de d√©connexion Firebase:",
    "erreurdedeconnexionf1": "Erreur de d√©connexion Firebase:",
    "erreurdedeconnexionf2": "Erreur de d√©connexion Firebase:",
    "erreurdedeconnexiond": "Erreur de d√©connexion dans le contexte:",
    "erreurdedeconnexiond1": "Erreur de d√©connexion dans le contexte:",
    "erreurdedeconnexiond2": "Erreur de d√©connexion dans le contexte:",
    "erreurdedeconnexioni": "Erreur de d√©connexion inconnue.",
    "erreurdedeconnexioni1": "Erreur de d√©connexion inconnue.",
    "erreurdedeconnexioni2": "Erreur de d√©connexion inconnue.",
    "erreurlorsdeladeconn": "Erreur lors de la d√©connexion:",
    "erreurlorsdeladeconn1": "Erreur lors de la d√©connexion:",
    "erreurlorsdeladeconn2": "Erreur lors de la d√©connexion:",
    "erreurlorsdelareinit": "Erreur lors de la r√©initialisation du mot de passe",
    "erreurlorsdelareinit1": "Erreur lors de la r√©initialisation du mot de passe",
    "erreurverificationem": "Erreur v√©rification email:",
    "erreurverificationem1": "Erreur v√©rification email:",
    "erreurverificationem2": "Erreur v√©rification email:",
    "erreurverificationem3": "Erreur v√©rification email:",
    "erreurverificationem4": "Erreur v√©rification email:",
    "erreurverificationem5": "Erreur v√©rification email:",
    "exportdesdonneesenco": "Export des donn√©es en cours... Vous recevrez un email.",
    "exportdesdonneesenco1": "Export des donn√©es en cours... Vous recevrez un email.",
    "lemotdepassedoitcont": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont1": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont2": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont3": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont4": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont5": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont6": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont7": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont8": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont9": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont10": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont11": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont12": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont13": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont14": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont15": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont16": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont17": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont18": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont19": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont20": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont21": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont22": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont23": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont24": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont25": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont26": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont27": "Le mot de passe doit contenir au moins 6 caract√®res",
    "lemotdepassedoitcont28": "Le mot de passe doit contenir au moins 8 caract√®res",
    "lemotdepassedoitcont29": "Le mot de passe doit contenir au moins 8 caract√®res",
    "motdepassemisajourav": "Mot de passe mis √† jour avec succ√®s !",
    "motdepassemisajourav1": "Mot de passe mis √† jour avec succ√®s !",
    "motdepasseoublie": "Mot de passe oubli√© ?",
    "motdepasseoublie1": "Mot de passe oubli√© ?",
    "motdepassetropcourtm": "Mot de passe trop court (min 6 caract√®res)",
    "motdepassetropcourtm1": "Mot de passe trop court (min 6 caract√®res)",
    "notificationsparemai1": "Notifications par email",
    "nouveaumotdepasse1": "Nouveau mot de passe",
    "nouveaumotdepasse2": "Nouveau mot de passe",
    "plusieurstentativesd": "Plusieurs tentatives de connexion √©chou√©es depuis l\\",
    "plusieurstentativesd1": "Plusieurs tentatives de connexion √©chou√©es depuis l\\",
    "plusieurstentativesd2": "Plusieurs tentatives de connexion √©chou√©es depuis l\\",
    "recevoirunemailpourc": "Recevoir un email pour chaque nouveau message",
    "rechercherparemailou": "Rechercher par email ou nom...",
    "rechercherparnomouem": "Rechercher par nom ou email...",
    "rechercherparnomemai": "Rechercher par nom, email ou entreprise...",
    "rechercherparnomemai1": "Rechercher par nom, email ou entreprise...",
    "rechercherparnomemai2": "Rechercher par nom, email ou localisation...",
    "tentativedeconnexion": "Tentative de connexion Google depuis le contexte...",
    "tentativedeconnexion1": "Tentative de connexion depuis le contexte...",
    "tentativedeconnexion2": "Tentative de connexion suspecte",
    "testconnexion": "Test Connexion",
    "testconnexionadmin": "Test Connexion Admin",
    "testconnexionadmin1": "Test Connexion Admin",
    "tropdetentativesdeco": "Trop de tentatives de connexion. R√©essayez plus tard",
    "tropdetentativesdeco1": "Trop de tentatives de connexion. R√©essayez plus tard",
    "tropdetentativesdeco2": "Trop de tentatives de connexion. R√©essayez plus tard",
    "uneerreurestsurvenue": "Une erreur est survenue lors de la connexion Google",
    "uneerreurestsurvenue1": "Une erreur est survenue lors de la connexion Google.",
    "uneerreurestsurvenue2": "Une erreur est survenue lors de la connexion Google.",
    "uneerreurestsurvenue3": "Une erreur est survenue lors de la connexion Google.",
    "uneerreurinattenduee": "Une erreur inattendue est survenue lors de la connexion Google.",
    "utilisateursansdecon": "Utilisateur SANS d√©connexion admin\r\n * \r\n * Ce service permet de cr√©er des utilisateurs depuis l",
    "utilisateursansdecon1": "Utilisateur SANS d√©connexion admin\r\n * \r\n * Ce service permet de cr√©er des utilisateurs depuis l",
    "utilisateursansdecon2": "Utilisateur SANS d√©connexion admin\r\n * \r\n * Ce service permet de cr√©er des utilisateurs depuis l",
    "vousserezcontactepou": "Vous serez contact√© pour finaliser votre inscription fournisseur",
    "vousserezcontactepou1": "Vous serez contact√© pour finaliser votre inscription fournisseur",
    "vousserezcontactepou2": "Vous serez contact√© pour finaliser votre inscription fournisseur",
    "vousserezcontactepou3": "Vous serez contact√© pour finaliser votre inscription sourceur",
    "vousserezcontactepou4": "Vous serez contact√© pour finaliser votre inscription sourceur",
    "vousserezcontactepou5": "Vous serez contact√© pour finaliser votre inscription sourceur",
    "ninformationsdeconne": "\\nüîë INFORMATIONS DE CONNEXION DES UTILISATEURS DE TEST:",
    "commissionrate50mino": "],\r\n    commissionRate: 5.0,\r\n    minOrderAmount: 100,\r\n    // Param√®tres de s√©curit√© par d√©faut\r\n    passwordMinLength: 8,\r\n    passwordRequireUppercase: true,\r\n    passwordRequireNumbers: true,\r\n    passwordRequireSymbols: false,\r\n    sessionTimeout: 30,\r\n    maxLoginAttempts: 5,\r\n    lockoutDuration: 15,\r\n    twoFactorRequired: false,\r\n    ipWhitelistEnabled: false,\r\n    allowedIPs: [",
    "commissionrate50mino1": "],\r\n    commissionRate: 5.0,\r\n    minOrderAmount: 100,\r\n    // Param√®tres de s√©curit√© par d√©faut\r\n    passwordMinLength: 8,\r\n    passwordRequireUppercase: true,\r\n    passwordRequireNumbers: true,\r\n    passwordRequireSymbols: false,\r\n    sessionTimeout: 30,\r\n    maxLoginAttempts: 5,\r\n    lockoutDuration: 15,\r\n    twoFactorRequired: false,\r\n    ipWhitelistEnabled: false,\r\n    allowedIPs: [",
    "commissionrate50mino2": "],\r\n    commissionRate: 5.0,\r\n    minOrderAmount: 100,\r\n    // Param√®tres de s√©curit√© par d√©faut\r\n    passwordMinLength: 8,\r\n    passwordRequireUppercase: true,\r\n    passwordRequireNumbers: true,\r\n    passwordRequireSymbols: false,\r\n    sessionTimeout: 30,\r\n    maxLoginAttempts: 5,\r\n    lockoutDuration: 15,\r\n    twoFactorRequired: false,\r\n    ipWhitelistEnabled: false,\r\n    allowedIPs: [",
    "acceptelesconditions": "accepte les conditions g√©n√©rales\",\n    \"preorder.termsRequired\": \"Vous devez accepter les conditions g√©n√©rales\",\n\n    // Traductions pour les articles de conteneurs\n    \"containerItems.title\": \"Articles du conteneur\",\n    \"containerItems.productId\": \"ID Produit\",\n    \"containerItems.quantity\": \"Quantit√©\",\n    \"containerItems.userId\": \"Utilisateur\",\n    \"containerItems.loading\": \"Chargement des articles...\",\n    \"containerItems.error\": \"Erreur lors du chargement des articles\",\n    \"containerItems.noItems\": \"Aucun article dans ce conteneur\",\n    \"containerItems.addItem\": \"Ajouter un article\",\n\n    // Traductions communes\n    \"units\": \"unit√©s\",\n    \"cbm\": \"CBM\",\n    \"cancel\": \"Annuler\",\n    \"confirm\": \"Confirmer\",\n    \"close\": \"Fermer\"\n  },\n  \"en\": {\n    \"home\": \"Home\",\n    \"search\": \"Search\",\n    \"search.placeholder\": \"Search for products...\",\n    \"dashboard\": \"Dashboard\",\n    \"nav.login\": \"Login\",\n    \"logout\": \"Logout\",\n    \"discover\": \"Discover\",\n\n    \"notifications.title\": \"Notifications\",\n    \"notifications.noNotifications\": \"No notifications\",\n    \"notifications.noNotificationsMessage\": \"You have no notifications at the moment\",\n    \"notifications.markAllAsRead\": \"Mark all as read\",\n    \"notifications.markAsRead\": \"Mark as read\",\n    \"notifications.refresh\": \"Refresh\",\n    \"notifications.filters\": \"Filters\",\n    \"notifications.status\": \"Status\",\n    \"notifications.type\": \"Type\",\n    \"notifications.all\": \"All\",\n    \"notifications.unread\": \"Unread\",\n    \"notifications.read\": \"Read\",\n    \"notifications.allTypes\": \"All types\",\n    \"notifications.orders\": \"Orders\",\n    \"notifications.payments\": \"Payments\",\n    \"notifications.shipments\": \"Shipments\",\n    \"notifications.system\": \"System\",\n    \"notifications.info\": \"Information\",\n    \"notifications.warnings\": \"Warnings\",\n    \"notifications.errors\": \"Errors\",\n    \"notifications.clearFilters\": \"Clear\",\n    \"notifications.loading\": \"Loading...\",\n    \"notifications.error\": \"Error loading notifications\",\n    \"notifications.seeDetails\": \"See details\",\n    \"notifications.timeAgo.now\": \"Just now\",\n    \"notifications.timeAgo.minutes\": \"{0} min ago\",\n    \"notifications.timeAgo.hours\": \"{0}h ago\",\n    \"notifications.timeAgo.days\": \"{0}d ago\",\n    \"notifications.priority.urgent\": \"Urgent\",\n    \"notifications.priority.high\": \"High\",\n    \"notifications.priority.medium\": \"Medium\",\n    \"notifications.priority.low\": \"Low\",\n    \"notifications.allLoaded\": \"All notifications have been loaded\",\n    \"notifications.count.singular\": \"{0} unread\",\n    \"notifications.count.plural\": \"{0} unread\",\n\n    \"email\": \"Email\",\n    \"password\": \"Password\",\n    \"confirmPassword\": \"Confirm Password\",\n    \"login\": \"Login\",\n    \"register\": \"Register\",\n    \"loginDescription\": \"Sign in to access your account\",\n    \"accountType\": \"Account Type\",\n    \"role.customer\": \"Customer\",\n    \"role.supplier\": \"Supplier\",\n    \"role.sourcer\": \"Sourcer\",\n    \"role.influencer\": \"Influencer\",\n    \"emailPlaceholder\": \"your@email.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"Remember me\",\n    \"forgotPassword\": \"Forgot password?\",\n    \"loginButton\": \"Sign in\",\n    \"loggingIn\": \"Signing in...\",\n    \"createAccount\": \"Create Account\",\n    \"registerDescription\": \"Create your account to get started\",\n    \"fullName\": \"Full Name\",\n    \"yourNamePlaceholder\": \"Your full name\",\n    \"nameRequired\": \"Name is required\",\n    \"emailRequired\": \"Email is required\",\n    \"passwordMinLength\": \"Password must be at least 6 characters\",\n    \"passwordsDoNotMatch\": \"Passwords do not match\",\n    \"registrationError\": \"Registration error\",\n    \"creatingAccount\": \"Creating account...\",\n    \"createMyAccount\": \"Create My Account\",\n    \"hasAccountQuestion\": \"Already have an account?\",\n    \"role.customerTitle\": \"Customer\",\n    \"role.supplierTitle\": \"Supplier\",\n    \"role.sourcerTitle\": \"Sourcer\",\n    \"role.customerDescription\": \"Buy products from suppliers\",\n    \"role.supplierDescription\": \"Sell your products to customers\",\n    \"role.sourcerDescription\": \"Help customers find the best suppliers\",\n    \"common.optional\": \"Optional\",\n    \"fashion\": \"Fashion\",\n    \"tech\": \"Tech\",\n    \"beauty\": \"Beauty\",\n    \"sports\": \"Sports\",\n    \"mainAudience\": \"Main audience\",\n    \"mainAudiencePlaceholder\": \"Main country or region, average age\",\n    \"engagementRate\": \"Engagement rate\",\n    \"engagementRatePlaceholder\": \"Optional, useful for evaluating interaction\",\n    \"shareStatsAgreement\": \"I agree to share my detailed statistics on request\",\n    \"mediaKit\": \"Media kit\",\n    \"message\": \"Message\",\n    \"messagePlaceholder\": \"Briefly introduce yourself\",\n    \"socialMediaLinks\": \"Social media links\",\n    \"socialMediaLinksPlaceholder\": \"Instagram, TikTok, YouTube, etc.\",\n    \"followerCount\": \"Follower count\",\n    \"followerCountPlaceholder\": \"Number of followers for each network\",\n    \"category\": \"Influence category\",\n\n    \"emptyFields\": \"Please fill in all fields\",\n    \"loginError\": \"Login error\",\n    \"loginErrorTitle\": \"Login Error\",\n    \"registerNow\": \"Register now\",\n    \"noAccountQuestion\": \"Don",
    "acceptequemesinforma": "accepte que mes informations soient v√©rifi√©es\",\n    \"supplier.registration.message\": \"Vous serez contact√© pour finaliser votre inscription fournisseur\",\n    \"supplier.registration.validation\": \"Votre compte sera valid√© manuellement par notre √©quipe\",\n    \"supplier.registration.title\": \"Information Importante\",\n    \"supplier.registration.submitButton\": \"Soumettre la demande\",\n    \"sourcer.registration.message\": \"Vous serez contact√© pour finaliser votre inscription sourceur\",\n    \"sourcer.registration.validation\": \"Votre compte sera valid√© manuellement par notre √©quipe\",\n    \"sourcer.registration.title\": \"Information Importante\",\n    \"sourcer.registration.submitButton\": \"Soumettre la demande\",\n    \"fileUpload.dragDrop\": \"Glissez et d√©posez un fichier ici\",\n    \"fileUpload.orClick\": \"ou cliquez pour s√©lectionner\",\n    \"fileUpload.applicationpdf\": \"PDF\",\n    \"fileUpload.imageall\": \"Images\",\n    \"fileUpload.remove\": \"Supprimer\",\n    \"fileUpload.title\": \"Kit m√©dia\",\n\n    // Traductions manquantes pour le tableau de bord fournisseur\n    \"supplier.dashboard.title\": \"Tableau de bord fournisseur\",\n    \"supplier.dashboard.overview\": \"Vue d",
    "administrateurasuppo": "administrateur √† :\r\n\r\nüìß support@chinetonusine.com\r\nüìû +33 1 00 00 00 00\r\n\r\nPr√©cisez votre adresse email et votre demande sera trait√©e dans les plus brefs d√©lais.`);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=",
    "administrateursprede": "administrateurs pr√©d√©finis\r\n  private static readonly ADMIN_EMAILS = [\r\n    ",
    "administrateursprede1": "administrateurs pr√©d√©finis\r\n  private static readonly ADMIN_EMAILS = [\r\n    ",
    "affairessuppliercust": "affaires\",\n    \"supplier.customers.name\": \"Nom\",\n    \"supplier.customers.email\": \"Email\",\n    \"supplier.customers.company\": \"Entreprise\",\n    \"supplier.customers.location\": \"Localisation\",\n    \"supplier.customers.joinDate\": \"Client depuis\",\n    \"supplier.customers.totalOrders\": \"Total commandes\",\n    \"supplier.customers.totalSpent\": \"Total d√©pens√©\",\n    \"supplier.customers.lastOrder\": \"Derni√®re commande\",\n    \"supplier.customers.status\": \"Statut\",\n    \"supplier.customers.actions\": \"Actions\",\n    \"supplier.customers.view\": \"Voir\",\n    \"supplier.customers.message\": \"Message\",\n    \"supplier.customers.loading\": \"Chargement...\",\n    \"supplier.customers.error\": \"Erreur lors du chargement des clients\",\n\n    // Traductions pour les messages\n    \"supplier.messages.title\": \"Messages\",\n    \"supplier.messages.subtitle\": \"Communiquez avec vos clients\",\n    \"supplier.messages.back\": \"Retour au tableau de bord\",\n    \"supplier.messages.searchPlaceholder\": \"Rechercher un message...\",\n    \"supplier.messages.allTypes\": \"Tous les types\",\n    \"supplier.messages.inquiry\": \"Demande\",\n    \"supplier.messages.order\": \"Commande\",\n    \"supplier.messages.support\": \"Support\",\n    \"supplier.messages.totalMessages\": \"Total Messages\",\n    \"supplier.messages.unreadMessages\": \"Messages non lus\",\n    \"supplier.messages.respondedToday\": \"R√©pondus aujourd",
    "affairessupplierdash": "affaires\",\n    \"supplier.dashboard.last30Days\": \"30 derniers jours\",\n    \"supplier.dashboard.month\": \"Mois\",\n    \"supplier.dashboard.year\": \"Ann√©e\",\n    \"supplier.dashboard.salesChart\": \"Graphique des ventes\",\n    \"supplier.dashboard.dataWillDisplay\": \"Les donn√©es seront affich√©es ici\",\n\n    \"fileUpload.dragDrop\": \"Glissez et d√©posez un fichier ici\",\n    \"fileUpload.orClick\": \"ou cliquez pour s√©lectionner\",\n    \"fileUpload.applicationpdf\": \"PDF\",\n    \"fileUpload.imageall\": \"Images\",\n    \"fileUpload.remove\": \"Supprimer\",\n    \"fileUpload.title\": \"Kit m√©dia\",\n\n    // Container translations\n    \"containers\": \"Containers\",\n    \"containers.title\": \"Container List\",\n    \"containers.loading\": \"Loading containers...\",\n    \"containers.error\": \"Loading error\",\n    \"containers.name\": \"Container name\",\n    \"containers.departure\": \"Departure location\",\n    \"containers.arrival\": \"Arrival location\",\n    \"containers.estimatedDeparture\": \"Estimated departure date\",\n    \"containers.status\": \"Status\",\n    \"containers.status.active\": \"Active\",\n    \"containers.status.closed\": \"Closed\",\n    \"containers.capacity\": \"Capacity\",\n    \"containers.usedCapacity\": \"Used capacity\",\n    \"containers.availableCapacity\": \"Available capacity\",\n    \"containers.totalCapacity\": \"Total capacity\",\n    \"containers.closedMessage\": \"This container is closed and no longer bookable.\",\n    \"containers.almostFullMessage\": \"This container is almost full, book quickly!\",\n    \"containers.availableMessage\": \"This container is available for new reservations.\",\n\n    // Container preorder translations\n    \"preorder.title\": \"Container Space Preorder\",\n    \"preorder.description\": \"Reserve your space in this container before it gets full.\",\n    \"preorder.quantity\": \"Quantity (CBM)\",\n    \"preorder.button\": \"Preorder\",\n    \"preorder.confirm\": \"Confirm preorder\",\n    \"preorder.cancel\": \"Cancel\",\n    \"preorder.success\": \"Your preorder has been successfully registered!\",\n    \"preorder.availableCapacity\": \"Available capacity\",\n    \"preorder.terms\": \"I accept the terms and conditions\",\n    \"preorder.termsRequired\": \"You must accept the terms and conditions\",\n\n    // Container items translations\n    \"containerItems.title\": \"Container items\",\n    \"containerItems.productId\": \"Product ID\",\n    \"containerItems.quantity\": \"Quantity\",\n    \"containerItems.userId\": \"User\",\n    \"containerItems.loading\": \"Loading items...\",\n    \"containerItems.error\": \"Error loading items\",\n    \"containerItems.noItems\": \"No items in this container\",\n    \"containerItems.addItem\": \"Add item\",\n\n    // Common translations\n    \"units\": \"units\",\n    \"cbm\": \"CBM\",\n    \"cancel\": \"Cancel\",\n    \"confirm\": \"Confirm\",\n    \"close\": \"Close\"\n  },\n  \"es\": {\n    \"home\": \"Inicio\",\n    \"search\": \"Buscar\",\n    \"search.placeholder\": \"Buscar productos...\",\n    \"dashboard\": \"Panel\",\n    \"nav.login\": \"Acceso\",\n    \"logout\": \"Cerrar sesi√≥n\",\n    \"discover\": \"Descubrir\",\n    \"email\": \"Correo electr√≥nico\",\n    \"password\": \"Contrase√±a\",\n    \"confirmPassword\": \"Confirmar contrase√±a\",\n    \"login\": \"Acceso\",\n    \"register\": \"Registro\",\n    \"loginDescription\": \"Inicia sesi√≥n para acceder a tu cuenta\",\n    \"accountType\": \"Tipo de cuenta\",\n    \"role.customer\": \"Cliente\",\n    \"role.supplier\": \"Proveedor\",\n    \"role.sourcer\": \"Sourcer\",\n    \"role.influencer\": \"Influencer\",\n    \"emailPlaceholder\": \"tu@email.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"Recordarme\",\n    \"forgotPassword\": \"¬øOlvidaste la contrase√±a?\",\n    \"loginButton\": \"Iniciar sesi√≥n\",\n    \"loggingIn\": \"Iniciando sesi√≥n...\",\n    \"createAccount\": \"Crear cuenta\",\n    \"registerDescription\": \"Crea tu cuenta para comenzar\",\n    \"fullName\": \"Nombre completo\",\n    \"yourNamePlaceholder\": \"Tu nombre completo\",\n    \"nameRequired\": \"El nombre es obligatorio\",\n    \"emailRequired\": \"El email es obligatorio\",\n    \"passwordMinLength\": \"La contrase√±a debe tener al menos 6 caracteres\",\n    \"passwordsDoNotMatch\": \"Las contrase√±as no coinciden\",\n    \"registrationError\": \"Error de registro\",\n    \"creatingAccount\": \"Creando cuenta...\",\n    \"createMyAccount\": \"Crear mi cuenta\",\n    \"hasAccountQuestion\": \"¬øYa tienes una cuenta?\",\n    \"role.customerTitle\": \"Cliente\",\n    \"role.supplierTitle\": \"Proveedor\",\n    \"role.sourcerTitle\": \"Sourcer\",\n    \"role.customerDescription\": \"Comprar productos a proveedores\",\n    \"role.supplierDescription\": \"Vender tus productos a clientes\",\n    \"role.sourcerDescription\": \"Ayudar a los clientes a encontrar los mejores proveedores\",\n    \"emptyFields\": \"Por favor, rellene todos los campos\",\n    \"loginError\": \"Error de inicio de sesi√≥n\",\n    \"loginErrorTitle\": \"Error de inicio de sesi√≥n\",\n    \"registerNow\": \"Registrarse ahora\",\n    \"noAccountQuestion\": \"¬øNo tienes una cuenta?\",\n    \"termsOfUse\": \"t√©rminos de uso\",\n    \"privacyPolicy\": \"pol√≠tica de privacidad\",\n    \"googleLoginError\": \"Error de inicio de sesi√≥n con Google\",\n    \"orContinueWith\": \"O continuar con\",\n    \"signInWithGoogle\": \"Continuar con Google\",\n    \"agreementPrefix\": \"Al continuar, aceptas nuestros\",\n    \"agreementSuffix\": \".\",\n    \"and\": \"y\",\n    \"andOur\": \"y nuestra\",\n    \"termsOfService\": \"t√©rminos de servicio\",\n    \"loginNow\": \"Iniciar sesi√≥n ahora\",\n    \"registrationErrorTitle\": \"Error de registro\",\n\n    // Traducciones de contenedores\n    \"containers\": \"Contenedores\",\n    \"containers.title\": \"Lista de contenedores\",\n    \"containers.loading\": \"Cargando contenedores...\",\n    \"containers.error\": \"Error de carga\",\n    \"containers.name\": \"Nombre del contenedor\",\n    \"containers.departure\": \"Lugar de salida\",\n    \"containers.arrival\": \"Lugar de llegada\",\n    \"containers.estimatedDeparture\": \"Fecha estimada de salida\",\n    \"containers.status\": \"Estado\",\n    \"containers.status.active\": \"Activo\",\n    \"containers.status.closed\": \"Cerrado\",\n    \"containers.capacity\": \"Capacidad\",\n    \"containers.usedCapacity\": \"Capacidad utilizada\",\n    \"containers.availableCapacity\": \"Capacidad disponible\",\n    \"containers.totalCapacity\": \"Capacidad total\",\n    \"containers.closedMessage\": \"Este contenedor est√° cerrado y ya no se puede reservar.\",\n    \"containers.almostFullMessage\": \"Este contenedor est√° casi lleno, ¬°reserva r√°pido!\",\n    \"containers.availableMessage\": \"Este contenedor est√° disponible para nuevas reservas.\",\n\n    // Traducciones de preorden de contenedores\n    \"preorder.title\": \"Preorden de espacio en contenedor\",\n    \"preorder.description\": \"Reserva tu espacio en este contenedor antes de que se llene.\",\n    \"preorder.quantity\": \"Cantidad (CBM)\",\n    \"preorder.button\": \"Preordenar\",\n    \"preorder.confirm\": \"Confirmar preorden\",\n    \"preorder.cancel\": \"Cancelar\",\n    \"preorder.success\": \"¬°Tu preorden ha sido registrada con √©xito!\",\n    \"preorder.availableCapacity\": \"Capacidad disponible\",\n    \"preorder.terms\": \"Acepto los t√©rminos y condiciones\",\n    \"preorder.termsRequired\": \"Debes aceptar los t√©rminos y condiciones\",\n\n    // Traducciones de art√≠culos de contenedores\n    \"containerItems.title\": \"Art√≠culos del contenedor\",\n    \"containerItems.productId\": \"ID del producto\",\n    \"containerItems.quantity\": \"Cantidad\",\n    \"containerItems.userId\": \"Usuario\",\n    \"containerItems.loading\": \"Cargando art√≠culos...\",\n    \"containerItems.error\": \"Error al cargar art√≠culos\",\n    \"containerItems.noItems\": \"No hay art√≠culos en este contenedor\",\n    \"containerItems.addItem\": \"Agregar art√≠culo\",\n\n    // Traducciones comunes\n    \"units\": \"unidades\",\n    \"cbm\": \"CBM\",\n    \"cancel\": \"Cancelar\",\n    \"confirm\": \"Confirmar\",\n    \"close\": \"Cerrar\"\n  },\n  \"ar\": {\n    \"home\": \"ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©\",\n    \"search\": \"ÿ®ÿ≠ÿ´\",\n    \"search.placeholder\": \"ÿßŸÑÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™...\",\n    \"dashboard\": \"ŸÑŸàÿ≠ÿ© ÿßŸÑŸÇŸäÿßÿØÿ©\",\n    \"nav.login\": \"ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ\",\n    \"logout\": \"ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿÆÿ±Ÿàÿ¨\",\n    \"discover\": \"ÿßŸÉÿ™ÿ¥ŸÅ\",\n    \"email\": \"ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä\",\n    \"password\": \"ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±\",\n    \"confirmPassword\": \"ÿ™ÿ£ŸÉŸäÿØ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±\",\n    \"login\": \"ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ\",\n    \"register\": \"ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ\",\n    \"loginDescription\": \"ÿ≥ÿ¨ŸÑ ÿßŸÑÿØÿÆŸàŸÑ ŸÑŸÑŸàÿµŸàŸÑ ÿ•ŸÑŸâ ÿ≠ÿ≥ÿßÿ®ŸÉ\",\n    \"accountType\": \"ŸÜŸàÿπ ÿßŸÑÿ≠ÿ≥ÿßÿ®\",\n    \"role.customer\": \"ÿπŸÖŸäŸÑ\",\n    \"role.supplier\": \"ŸÖŸàÿ±ÿØ\",\n    \"role.sourcer\": \"ÿ®ÿßÿ≠ÿ´\",\n    \"role.influencer\": \"ŸÖÿ§ÿ´ÿ±\",\n    \"emailPlaceholder\": \"ÿ®ÿ±ŸäÿØŸÉ@ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"ÿ™ÿ∞ŸÉÿ±ŸÜŸä\",\n    \"forgotPassword\": \"ŸÜÿ≥Ÿäÿ™ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±ÿü\",\n    \"loginButton\": \"ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ\",\n    \"loggingIn\": \"ÿ¨ÿßÿ±Ÿä ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ...\",\n    \"createAccount\": \"ÿ•ŸÜÿ¥ÿßÿ° ÿ≠ÿ≥ÿßÿ®\",\n    \"registerDescription\": \"ÿ£ŸÜÿ¥ÿ¶ ÿ≠ÿ≥ÿßÿ®ŸÉ ŸÑŸÑÿ®ÿØÿ°\",\n    \"fullName\": \"ÿßŸÑÿßÿ≥ŸÖ ÿßŸÑŸÉÿßŸÖŸÑ\",\n    \"yourNamePlaceholder\": \"ÿßÿ≥ŸÖŸÉ ÿßŸÑŸÉÿßŸÖŸÑ\",\n    \"nameRequired\": \"ÿßŸÑÿßÿ≥ŸÖ ŸÖÿ∑ŸÑŸàÿ®\",\n    \"emailRequired\": \"ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ŸÖÿ∑ŸÑŸàÿ®\",\n    \"passwordMinLength\": \"Ÿäÿ¨ÿ® ÿ£ŸÜ ÿ™ÿ≠ÿ™ŸàŸä ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ÿπŸÑŸâ 6 ÿ£ÿ≠ÿ±ŸÅ ÿπŸÑŸâ ÿßŸÑÿ£ŸÇŸÑ\",\n    \"passwordsDoNotMatch\": \"ŸÉŸÑŸÖÿßÿ™ ÿßŸÑŸÖÿ±Ÿàÿ± ÿ∫Ÿäÿ± ŸÖÿ™ÿ∑ÿßÿ®ŸÇÿ©\",\n    \"registrationError\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ\",\n    \"creatingAccount\": \"ÿ¨ÿßÿ±Ÿä ÿ•ŸÜÿ¥ÿßÿ° ÿßŸÑÿ≠ÿ≥ÿßÿ®...\",\n    \"createMyAccount\": \"ÿ•ŸÜÿ¥ÿßÿ° ÿ≠ÿ≥ÿßÿ®Ÿä\",\n    \"hasAccountQuestion\": \"ŸáŸÑ ŸÑÿØŸäŸÉ ÿ≠ÿ≥ÿßÿ® ÿ®ÿßŸÑŸÅÿπŸÑÿü\",\n    \"role.customerTitle\": \"ÿπŸÖŸäŸÑ\",\n    \"role.supplierTitle\": \"ŸÖŸàÿ±ÿØ\",\n    \"role.sourcerTitle\": \"ÿ®ÿßÿ≠ÿ´\",\n    \"role.customerDescription\": \"ÿ¥ÿ±ÿßÿ° ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ŸÖŸÜ ÿßŸÑŸÖŸàÿ±ÿØŸäŸÜ\",\n    \"role.supplierDescription\": \"ÿ®Ÿäÿπ ŸÖŸÜÿ™ÿ¨ÿßÿ™ŸÉ ŸÑŸÑÿπŸÖŸÑÿßÿ°\",\n    \"role.sourcerDescription\": \"ŸÖÿ≥ÿßÿπÿØÿ© ÿßŸÑÿπŸÖŸÑÿßÿ° ŸÅŸä ÿßŸÑÿπÿ´Ÿàÿ± ÿπŸÑŸâ ÿ£ŸÅÿ∂ŸÑ ÿßŸÑŸÖŸàÿ±ÿØŸäŸÜ\",\n    \"emptyFields\": \"Ÿäÿ±ÿ¨Ÿâ ŸÖŸÑÿ° ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÑ\",\n    \"loginError\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ\",\n    \"loginErrorTitle\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ\",\n    \"registerNow\": \"ÿ≥ÿ¨ŸÑ ÿßŸÑÿ¢ŸÜ\",\n    \"noAccountQuestion\": \"ŸÑŸäÿ≥ ŸÑÿØŸäŸÉ ÿ≠ÿ≥ÿßÿ®ÿü\",\n    \"termsOfUse\": \"ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ\",\n    \"privacyPolicy\": \"ÿ≥Ÿäÿßÿ≥ÿ© ÿßŸÑÿÆÿµŸàÿµŸäÿ©\",\n    \"googleLoginError\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ÿ®ÿ¨Ÿàÿ¨ŸÑ\",\n    \"orContinueWith\": \"ÿ£Ÿà ÿ™ÿßÿ®ÿπ ŸÖÿπ\",\n    \"signInWithGoogle\": \"ÿ™ÿßÿ®ÿπ ŸÖÿπ ÿ¨Ÿàÿ¨ŸÑ\",\n    \"agreementPrefix\": \"ÿ®ÿßŸÑŸÖÿ™ÿßÿ®ÿπÿ©ÿå ŸÅÿ•ŸÜŸÉ ÿ™ŸàÿßŸÅŸÇ ÿπŸÑŸâ\",\n    \"agreementSuffix\": \".\",\n    \"and\": \"Ÿà\",\n    \"andOur\": \"Ÿàÿ≥Ÿäÿßÿ≥ÿ©\",\n    \"termsOfService\": \"ÿ¥ÿ±Ÿàÿ∑ ÿßŸÑÿÆÿØŸÖÿ©\",\n    \"loginNow\": \"ÿ≥ÿ¨ŸÑ ÿßŸÑÿØÿÆŸàŸÑ ÿßŸÑÿ¢ŸÜ\",\n    \"registrationErrorTitle\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ\",\n\n    // ÿ™ÿ±ÿ¨ŸÖÿßÿ™ ÿßŸÑÿ≠ÿßŸàŸäÿßÿ™\n    \"containers\": \"ÿßŸÑÿ≠ÿßŸàŸäÿßÿ™\",\n    \"containers.title\": \"ŸÇÿßÿ¶ŸÖÿ© ÿßŸÑÿ≠ÿßŸàŸäÿßÿ™\",\n    \"containers.loading\": \"ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ≠ÿßŸàŸäÿßÿ™...\",\n    \"containers.error\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ\",\n    \"containers.name\": \"ÿßÿ≥ŸÖ ÿßŸÑÿ≠ÿßŸàŸäÿ©\",\n    \"containers.departure\": \"ŸÖŸÉÿßŸÜ ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ©\",\n    \"containers.arrival\": \"ŸÖŸÉÿßŸÜ ÿßŸÑŸàÿµŸàŸÑ\",\n    \"containers.estimatedDeparture\": \"ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÖÿ∫ÿßÿØÿ±ÿ© ÿßŸÑŸÖŸÇÿØÿ±\",\n    \"containers.status\": \"ÿßŸÑÿ≠ÿßŸÑÿ©\",\n    \"containers.status.active\": \"ŸÜÿ¥ÿ∑\",\n    \"containers.status.closed\": \"ŸÖÿ∫ŸÑŸÇ\",\n    \"containers.capacity\": \"ÿßŸÑÿ≥ÿπÿ©\",\n    \"containers.usedCapacity\": \"ÿßŸÑÿ≥ÿπÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖÿ©\",\n    \"containers.availableCapacity\": \"ÿßŸÑÿ≥ÿπÿ© ÿßŸÑŸÖÿ™ÿßÿ≠ÿ©\",\n    \"containers.totalCapacity\": \"ÿßŸÑÿ≥ÿπÿ© ÿßŸÑÿ•ÿ¨ŸÖÿßŸÑŸäÿ©\",\n    \"containers.closedMessage\": \"Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿßŸàŸäÿ© ŸÖÿ∫ŸÑŸÇÿ© ŸàŸÑÿß ŸäŸÖŸÉŸÜ ÿ≠ÿ¨ÿ≤Ÿáÿß ÿ®ÿπÿØ ÿßŸÑÿ¢ŸÜ.\",\n    \"containers.almostFullMessage\": \"Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿßŸàŸäÿ© ŸÖŸÖÿ™ŸÑÿ¶ÿ© ÿ™ŸÇÿ±Ÿäÿ®ÿßŸãÿå ÿßÿ≠ÿ¨ÿ≤ ÿ®ÿ≥ÿ±ÿπÿ©!\",\n    \"containers.availableMessage\": \"Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿßŸàŸäÿ© ŸÖÿ™ÿßÿ≠ÿ© ŸÑŸÑÿ≠ÿ¨Ÿàÿ≤ÿßÿ™ ÿßŸÑÿ¨ÿØŸäÿØÿ©.\",\n\n    // ÿ™ÿ±ÿ¨ŸÖÿßÿ™ ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑŸÖÿ≥ÿ®ŸÇ ŸÑŸÑÿ≠ÿßŸàŸäÿßÿ™\n    \"preorder.title\": \"ÿ∑ŸÑÿ® ŸÖÿ≥ÿ®ŸÇ ŸÑŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿ≠ÿßŸàŸäÿ©\",\n    \"preorder.description\": \"ÿßÿ≠ÿ¨ÿ≤ ŸÖÿ≥ÿßÿ≠ÿ™ŸÉ ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿßŸàŸäÿ© ŸÇÿ®ŸÑ ÿ£ŸÜ ÿ™ŸÖÿ™ŸÑÿ¶.\",\n    \"preorder.quantity\": \"ÿßŸÑŸÉŸÖŸäÿ© (ŸÖÿ™ÿ± ŸÖŸÉÿπÿ®)\",\n    \"preorder.button\": \"ÿ∑ŸÑÿ® ŸÖÿ≥ÿ®ŸÇ\",\n    \"preorder.confirm\": \"ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑŸÖÿ≥ÿ®ŸÇ\",\n    \"preorder.cancel\": \"ÿ•ŸÑÿ∫ÿßÿ°\",\n    \"preorder.success\": \"ÿ™ŸÖ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿ∑ŸÑÿ®ŸÉ ÿßŸÑŸÖÿ≥ÿ®ŸÇ ÿ®ŸÜÿ¨ÿßÿ≠!\",\n    \"preorder.availableCapacity\": \"ÿßŸÑÿ≥ÿπÿ© ÿßŸÑŸÖÿ™ÿßÿ≠ÿ©\",\n    \"preorder.terms\": \"ÿ£ŸàÿßŸÅŸÇ ÿπŸÑŸâ ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ\",\n    \"preorder.termsRequired\": \"Ÿäÿ¨ÿ® ÿ£ŸÜ ÿ™ŸàÿßŸÅŸÇ ÿπŸÑŸâ ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ\",\n\n    // ÿ™ÿ±ÿ¨ŸÖÿßÿ™ ÿπŸÜÿßÿµÿ± ÿßŸÑÿ≠ÿßŸàŸäÿßÿ™\n    \"containerItems.title\": \"ÿπŸÜÿßÿµÿ± ÿßŸÑÿ≠ÿßŸàŸäÿ©\",\n    \"containerItems.productId\": \"ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖŸÜÿ™ÿ¨\",\n    \"containerItems.quantity\": \"ÿßŸÑŸÉŸÖŸäÿ©\",\n    \"containerItems.userId\": \"ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ\",\n    \"containerItems.loading\": \"ÿ¨ÿßÿ±Ÿä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿπŸÜÿßÿµÿ±...\",\n    \"containerItems.error\": \"ÿÆÿ∑ÿ£ ŸÅŸä ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿπŸÜÿßÿµÿ±\",\n    \"containerItems.noItems\": \"ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿπŸÜÿßÿµÿ± ŸÅŸä Ÿáÿ∞Ÿá ÿßŸÑÿ≠ÿßŸàŸäÿ©\",\n    \"containerItems.addItem\": \"ÿ•ÿ∂ÿßŸÅÿ© ÿπŸÜÿµÿ±\",\n\n    // ÿ™ÿ±ÿ¨ŸÖÿßÿ™ ŸÖÿ¥ÿ™ÿ±ŸÉÿ©\n    \"units\": \"Ÿàÿ≠ÿØÿßÿ™\",\n    \"cbm\": \"ŸÖÿ™ÿ± ŸÖŸÉÿπÿ®\",\n    \"cancel\": \"ÿ•ŸÑÿ∫ÿßÿ°\",\n    \"confirm\": \"ÿ™ÿ£ŸÉŸäÿØ\",\n    \"close\": \"ÿ•ÿ∫ŸÑÿßŸÇ\"\n  },\n  \"zh\": {\n    \"home\": \"È¶ñÈ°µ\",\n    \"search\": \"ÊêúÁ¥¢\",\n    \"search.placeholder\": \"ÊêúÁ¥¢‰∫ßÂìÅ...\",\n    \"dashboard\": \"‰ª™Ë°®Êùø\",\n    \"nav.login\": \"ÁôªÂΩï\",\n    \"logout\": \"ÁôªÂá∫\",\n    \"discover\": \"ÂèëÁé∞\",\n    \"email\": \"ÈÇÆÁÆ±\",\n    \"password\": \"ÂØÜÁ†Å\",\n    \"confirmPassword\": \"Á°ÆËÆ§ÂØÜÁ†Å\",\n    \"login\": \"ÁôªÂΩï\",\n    \"register\": \"Ê≥®ÂÜå\",\n    \"loginDescription\": \"ÁôªÂΩï‰ª•ËÆøÈóÆÊÇ®ÁöÑË¥¶Êà∑\",\n    \"accountType\": \"Ë¥¶Êà∑Á±ªÂûã\",\n    \"role.customer\": \"ÂÆ¢Êà∑\",\n    \"role.supplier\": \"‰æõÂ∫îÂïÜ\",\n    \"role.sourcer\": \"ÈááË¥≠ÂïÜ\",\n    \"role.influencer\": \"ÂΩ±ÂìçËÄÖ\",\n    \"emailPlaceholder\": \"ÊÇ®ÁöÑ@ÈÇÆÁÆ±.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"ËÆ∞‰ΩèÊàë\",\n    \"forgotPassword\": \"ÂøòËÆ∞ÂØÜÁ†ÅÔºü\",\n    \"loginButton\": \"ÁôªÂΩï\",\n    \"loggingIn\": \"ÁôªÂΩï‰∏≠...\",\n    \"createAccount\": \"ÂàõÂª∫Ë¥¶Êà∑\",\n    \"registerDescription\": \"ÂàõÂª∫ÊÇ®ÁöÑË¥¶Êà∑ÂºÄÂßã‰ΩøÁî®\",\n    \"fullName\": \"ÂÖ®Âêç\",\n    \"yourNamePlaceholder\": \"ÊÇ®ÁöÑÂÖ®Âêç\",\n    \"nameRequired\": \"ÂßìÂêçÊòØÂøÖÈúÄÁöÑ\",\n    \"emailRequired\": \"ÈÇÆÁÆ±ÊòØÂøÖÈúÄÁöÑ\",\n    \"passwordMinLength\": \"ÂØÜÁ†ÅÂøÖÈ°ªËá≥Â∞ë6‰∏™Â≠óÁ¨¶\",\n    \"passwordsDoNotMatch\": \"ÂØÜÁ†Å‰∏çÂåπÈÖç\",\n    \"registrationError\": \"Ê≥®ÂÜåÈîôËØØ\",\n    \"creatingAccount\": \"ÂàõÂª∫Ë¥¶Êà∑‰∏≠...\",\n    \"createMyAccount\": \"ÂàõÂª∫ÊàëÁöÑË¥¶Êà∑\",\n    \"hasAccountQuestion\": \"Â∑≤ÁªèÊúâË¥¶Êà∑‰∫ÜÔºü\",\n    \"role.customerTitle\": \"ÂÆ¢Êà∑\",\n    \"role.supplierTitle\": \"‰æõÂ∫îÂïÜ\",\n    \"role.sourcerTitle\": \"ÈááË¥≠ÂïÜ\",\n    \"role.customerDescription\": \"‰ªé‰æõÂ∫îÂïÜË¥≠‰π∞‰∫ßÂìÅ\",\n    \"role.supplierDescription\": \"ÂêëÂÆ¢Êà∑ÈîÄÂîÆÊÇ®ÁöÑ‰∫ßÂìÅ\",\n    \"role.sourcerDescription\": \"Â∏ÆÂä©ÂÆ¢Êà∑ÊâæÂà∞ÊúÄÂ•ΩÁöÑ‰æõÂ∫îÂïÜ\",\n    \"emptyFields\": \"ËØ∑Â°´ÂÜôÊâÄÊúâÂ≠óÊÆµ\",\n    \"loginError\": \"ÁôªÂΩïÈîôËØØ\",\n    \"loginErrorTitle\": \"ÁôªÂΩïÈîôËØØ\",\n    \"registerNow\": \"Á´ãÂç≥Ê≥®ÂÜå\",\n    \"noAccountQuestion\": \"Ê≤°ÊúâË¥¶Êà∑Ôºü\",\n    \"termsOfUse\": \"‰ΩøÁî®Êù°Ê¨æ\",\n    \"privacyPolicy\": \"ÈöêÁßÅÊîøÁ≠ñ\",\n    \"googleLoginError\": \"Ë∞∑Ê≠åÁôªÂΩïÈîôËØØ\",\n    \"orContinueWith\": \"ÊàñÁªßÁª≠‰ΩøÁî®\",\n    \"signInWithGoogle\": \"‰ΩøÁî®Ë∞∑Ê≠åÁªßÁª≠\",\n    \"agreementPrefix\": \"ÁªßÁª≠Âç≥Ë°®Á§∫ÊÇ®ÂêåÊÑèÊàë‰ª¨ÁöÑ\",\n    \"agreementSuffix\": \"„ÄÇ\",\n    \"and\": \"Âíå\",\n    \"andOur\": \"ÂíåÊàë‰ª¨ÁöÑ\",\n    \"termsOfService\": \"ÊúçÂä°Êù°Ê¨æ\",\n    \"loginNow\": \"Á´ãÂç≥ÁôªÂΩï\",\n    \"registrationErrorTitle\": \"Ê≥®ÂÜåÈîôËØØ\",\n\n    // ÈõÜË£ÖÁÆ±ÁøªËØë\n    \"containers\": \"ÈõÜË£ÖÁÆ±\",\n    \"containers.title\": \"ÈõÜË£ÖÁÆ±ÂàóË°®\",\n    \"containers.loading\": \"Âä†ËΩΩÈõÜË£ÖÁÆ±‰∏≠...\",\n    \"containers.error\": \"Âä†ËΩΩÈîôËØØ\",\n    \"containers.name\": \"ÈõÜË£ÖÁÆ±ÂêçÁß∞\",\n    \"containers.departure\": \"Âá∫ÂèëÂú∞ÁÇπ\",\n    \"containers.arrival\": \"Âà∞ËææÂú∞ÁÇπ\",\n    \"containers.estimatedDeparture\": \"È¢ÑËÆ°Âá∫ÂèëÊó•Êúü\",\n    \"containers.status\": \"Áä∂ÊÄÅ\",\n    \"containers.status.active\": \"Ê¥ªË∑É\",\n    \"containers.status.closed\": \"Â∑≤ÂÖ≥Èó≠\",\n    \"containers.capacity\": \"ÂÆπÈáè\",\n    \"containers.usedCapacity\": \"Â∑≤Áî®ÂÆπÈáè\",\n    \"containers.availableCapacity\": \"ÂèØÁî®ÂÆπÈáè\",\n    \"containers.totalCapacity\": \"ÊÄªÂÆπÈáè\",\n    \"containers.closedMessage\": \"Ê≠§ÈõÜË£ÖÁÆ±Â∑≤ÂÖ≥Èó≠ÔºåÊó†Ê≥ïÂÜçÈ¢ÑËÆ¢„ÄÇ\",\n    \"containers.almostFullMessage\": \"Ê≠§ÈõÜË£ÖÁÆ±Âá†‰πéÊª°‰∫ÜÔºåËØ∑Âø´ÈÄüÈ¢ÑËÆ¢ÔºÅ\",\n    \"containers.availableMessage\": \"Ê≠§ÈõÜË£ÖÁÆ±ÂèØ‰æõÊñ∞È¢ÑËÆ¢„ÄÇ\",\n\n    // ÈõÜË£ÖÁÆ±È¢ÑËÆ¢ÁøªËØë\n    \"preorder.title\": \"ÈõÜË£ÖÁÆ±Á©∫Èó¥È¢ÑËÆ¢\",\n    \"preorder.description\": \"Âú®Ê≠§ÈõÜË£ÖÁÆ±Ë£ÖÊª°‰πãÂâçÈ¢ÑËÆ¢ÊÇ®ÁöÑÁ©∫Èó¥„ÄÇ\",\n    \"preorder.quantity\": \"Êï∞ÈáèÔºàÁ´ãÊñπÁ±≥Ôºâ\",\n    \"preorder.button\": \"È¢ÑËÆ¢\",\n    \"preorder.confirm\": \"Á°ÆËÆ§È¢ÑËÆ¢\",\n    \"preorder.cancel\": \"ÂèñÊ∂à\",\n    \"preorder.success\": \"ÊÇ®ÁöÑÈ¢ÑËÆ¢Â∑≤ÊàêÂäüÊ≥®ÂÜåÔºÅ\",\n    \"preorder.availableCapacity\": \"ÂèØÁî®ÂÆπÈáè\",\n    \"preorder.terms\": \"ÊàëÊé•ÂèóÊù°Ê¨æÂíåÊù°‰ª∂\",\n    \"preorder.termsRequired\": \"ÊÇ®ÂøÖÈ°ªÊé•ÂèóÊù°Ê¨æÂíåÊù°‰ª∂\",\n\n    // ÈõÜË£ÖÁÆ±Áâ©ÂìÅÁøªËØë\n    \"containerItems.title\": \"ÈõÜË£ÖÁÆ±Áâ©ÂìÅ\",\n    \"containerItems.productId\": \"‰∫ßÂìÅID\",\n    \"containerItems.quantity\": \"Êï∞Èáè\",\n    \"containerItems.userId\": \"Áî®Êà∑\",\n    \"containerItems.loading\": \"Âä†ËΩΩÁâ©ÂìÅ‰∏≠...\",\n    \"containerItems.error\": \"Âä†ËΩΩÁâ©ÂìÅÈîôËØØ\",\n    \"containerItems.noItems\": \"Ê≠§ÈõÜË£ÖÁÆ±‰∏≠Ê≤°ÊúâÁâ©ÂìÅ\",\n    \"containerItems.addItem\": \"Ê∑ªÂä†Áâ©ÂìÅ\",\n\n    // ÈÄöÁî®ÁøªËØë\n    \"units\": \"Âçï‰Ωç\",\n    \"cbm\": \"Á´ãÊñπÁ±≥\",\n    \"cancel\": \"ÂèñÊ∂à\",\n    \"confirm\": \"Á°ÆËÆ§\",\n    \"close\": \"ÂÖ≥Èó≠\"\n  },\n  \"pt\": {\n    \"home\": \"In√≠cio\",\n    \"search\": \"Pesquisar\",\n    \"search.placeholder\": \"Pesquisar produtos...\",\n    \"dashboard\": \"Painel\",\n    \"nav.login\": \"Entrar\",\n    \"logout\": \"Sair\",\n    \"discover\": \"Descobrir\",\n    \"email\": \"Email\",\n    \"password\": \"Senha\",\n    \"confirmPassword\": \"Confirmar senha\",\n    \"login\": \"Entrar\",\n    \"register\": \"Registrar\",\n    \"loginDescription\": \"Entre para acessar sua conta\",\n    \"accountType\": \"Tipo de conta\",\n    \"role.customer\": \"Cliente\",\n    \"role.supplier\": \"Fornecedor\",\n    \"role.sourcer\": \"Sourcer\",\n    \"role.influencer\": \"Influenciador\",\n    \"emailPlaceholder\": \"seu@email.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"Lembrar de mim\",\n    \"forgotPassword\": \"Esqueceu a senha?\",\n    \"loginButton\": \"Entrar\",\n    \"loggingIn\": \"Entrando...\",\n    \"createAccount\": \"Criar conta\",\n    \"registerDescription\": \"Crie sua conta para come√ßar\",\n    \"fullName\": \"Nome completo\",\n    \"yourNamePlaceholder\": \"Seu nome completo\",\n    \"nameRequired\": \"Nome √© obrigat√≥rio\",\n    \"emailRequired\": \"Email √© obrigat√≥rio\",\n    \"passwordMinLength\": \"A senha deve ter pelo menos 6 caracteres\",\n    \"passwordsDoNotMatch\": \"As senhas n√£o coincidem\",\n    \"registrationError\": \"Erro de registro\",\n    \"creatingAccount\": \"Criando conta...\",\n    \"createMyAccount\": \"Criar minha conta\",\n    \"hasAccountQuestion\": \"J√° tem uma conta?\",\n    \"role.customerTitle\": \"Cliente\",\n    \"role.supplierTitle\": \"Fornecedor\",\n    \"role.sourcerTitle\": \"Sourcer\",\n    \"role.customerDescription\": \"Comprar produtos de fornecedores\",\n    \"role.supplierDescription\": \"Vender seus produtos para clientes\",\n    \"role.sourcerDescription\": \"Ajudar clientes a encontrar os melhores fornecedores\",\n    \"emptyFields\": \"Por favor, preencha todos os campos\",\n    \"loginError\": \"Erro de login\",\n    \"loginErrorTitle\": \"Erro de login\",\n    \"registerNow\": \"Registrar agora\",\n    \"noAccountQuestion\": \"N√£o tem uma conta?\",\n    \"termsOfUse\": \"termos de uso\",\n    \"privacyPolicy\": \"pol√≠tica de privacidade\",\n    \"googleLoginError\": \"Erro de login do Google\",\n    \"orContinueWith\": \"Ou continue com\",\n    \"signInWithGoogle\": \"Continue com Google\",\n    \"agreementPrefix\": \"Ao continuar, voc√™ aceita nossos\",\n    \"agreementSuffix\": \".\",\n    \"and\": \"e\",\n    \"andOur\": \"e nossa\",\n    \"termsOfService\": \"termos de servi√ßo\",\n    \"loginNow\": \"Entrar agora\",\n    \"registrationErrorTitle\": \"Erro de registro\",\n\n    // Tradu√ß√µes de cont√™ineres\n    \"containers\": \"Cont√™ineres\",\n    \"containers.title\": \"Lista de cont√™ineres\",\n    \"containers.loading\": \"Carregando cont√™ineres...\",\n    \"containers.error\": \"Erro de carregamento\",\n    \"containers.name\": \"Nome do cont√™iner\",\n    \"containers.departure\": \"Local de partida\",\n    \"containers.arrival\": \"Local de chegada\",\n    \"containers.estimatedDeparture\": \"Data estimada de partida\",\n    \"containers.status\": \"Status\",\n    \"containers.status.active\": \"Ativo\",\n    \"containers.status.closed\": \"Fechado\",\n    \"containers.capacity\": \"Capacidade\",\n    \"containers.usedCapacity\": \"Capacidade utilizada\",\n    \"containers.availableCapacity\": \"Capacidade dispon√≠vel\",\n    \"containers.totalCapacity\": \"Capacidade total\",\n    \"containers.closedMessage\": \"Este cont√™iner est√° fechado e n√£o pode mais ser reservado.\",\n    \"containers.almostFullMessage\": \"Este cont√™iner est√° quase cheio, reserve rapidamente!\",\n    \"containers.availableMessage\": \"Este cont√™iner est√° dispon√≠vel para novas reservas.\",\n\n    // Tradu√ß√µes de pr√©-pedido de cont√™ineres\n    \"preorder.title\": \"Pr√©-pedido de espa√ßo em cont√™iner\",\n    \"preorder.description\": \"Reserve seu espa√ßo neste cont√™iner antes que fique cheio.\",\n    \"preorder.quantity\": \"Quantidade (CBM)\",\n    \"preorder.button\": \"Pr√©-pedir\",\n    \"preorder.confirm\": \"Confirmar pr√©-pedido\",\n    \"preorder.cancel\": \"Cancelar\",\n    \"preorder.success\": \"Seu pr√©-pedido foi registrado com sucesso!\",\n    \"preorder.availableCapacity\": \"Capacidade dispon√≠vel\",\n    \"preorder.terms\": \"Aceito os termos e condi√ß√µes\",\n    \"preorder.termsRequired\": \"Voc√™ deve aceitar os termos e condi√ß√µes\",\n\n    // Tradu√ß√µes de itens de cont√™ineres\n    \"containerItems.title\": \"Itens do cont√™iner\",\n    \"containerItems.productId\": \"ID do produto\",\n    \"containerItems.quantity\": \"Quantidade\",\n    \"containerItems.userId\": \"Usu√°rio\",\n    \"containerItems.loading\": \"Carregando itens...\",\n    \"containerItems.error\": \"Erro ao carregar itens\",\n    \"containerItems.noItems\": \"Nenhum item neste cont√™iner\",\n    \"containerItems.addItem\": \"Adicionar item\",\n\n    // Tradu√ß√µes comuns\n    \"units\": \"unidades\",\n    \"cbm\": \"CBM\",\n    \"cancel\": \"Cancelar\",\n    \"confirm\": \"Confirmar\",\n    \"close\": \"Fechar\"\n  },\n  \"nl\": {\n    \"home\": \"Home\",\n    \"search\": \"Zoeken\",\n    \"search.placeholder\": \"Zoek naar producten...\",\n    \"dashboard\": \"Dashboard\",\n    \"nav.login\": \"Inloggen\",\n    \"logout\": \"Uitloggen\",\n    \"discover\": \"Ontdekken\",\n    \"email\": \"Email\",\n    \"password\": \"Wachtwoord\",\n    \"confirmPassword\": \"Bevestig wachtwoord\",\n    \"login\": \"Inloggen\",\n    \"register\": \"Registreren\",\n    \"loginDescription\": \"Log in om toegang te krijgen tot uw account\",\n    \"accountType\": \"Accounttype\",\n    \"role.customer\": \"Klant\",\n    \"role.supplier\": \"Leverancier\",\n    \"role.sourcer\": \"Sourcer\",\n    \"role.influencer\": \"Influencer\",\n    \"emailPlaceholder\": \"uw@email.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"Onthoud mij\",\n    \"forgotPassword\": \"Wachtwoord vergeten?\",\n    \"loginButton\": \"Inloggen\",\n    \"loggingIn\": \"Inloggen...\",\n    \"createAccount\": \"Account aanmaken\",\n    \"registerDescription\": \"Maak uw account aan om te beginnen\",\n    \"fullName\": \"Volledige naam\",\n    \"yourNamePlaceholder\": \"Uw volledige naam\",\n    \"nameRequired\": \"Naam is verplicht\",\n    \"emailRequired\": \"Email is verplicht\",\n    \"passwordMinLength\": \"Wachtwoord moet minimaal 6 tekens hebben\",\n    \"passwordsDoNotMatch\": \"Wachtwoorden komen niet overeen\",\n    \"registrationError\": \"Registratiefout\",\n    \"creatingAccount\": \"Account aanmaken...\",\n    \"createMyAccount\": \"Mijn account aanmaken\",\n    \"hasAccountQuestion\": \"Heeft u al een account?\",\n    \"role.customerTitle\": \"Klant\",\n    \"role.supplierTitle\": \"Leverancier\",\n    \"role.sourcerTitle\": \"Sourcer\",\n    \"role.customerDescription\": \"Producten kopen van leveranciers\",\n    \"role.supplierDescription\": \"Uw producten verkopen aan klanten\",\n    \"role.sourcerDescription\": \"Klanten helpen de beste leveranciers te vinden\",\n    \"emptyFields\": \"Vul alle velden in\",\n    \"loginError\": \"Inlogfout\",\n    \"loginErrorTitle\": \"Inlogfout\",\n    \"registerNow\": \"Nu registreren\",\n    \"noAccountQuestion\": \"Geen account?\",\n    \"termsOfUse\": \"gebruiksvoorwaarden\",\n    \"privacyPolicy\": \"privacybeleid\",\n    \"googleLoginError\": \"Google inlogfout\",\n    \"orContinueWith\": \"Of ga verder met\",\n    \"signInWithGoogle\": \"Ga verder met Google\",\n    \"agreementPrefix\": \"Door verder te gaan, accepteert u onze\",\n    \"agreementSuffix\": \".\",\n    \"and\": \"en\",\n    \"andOur\": \"en ons\",\n    \"termsOfService\": \"servicevoorwaarden\",\n    \"loginNow\": \"Nu inloggen\",\n    \"registrationErrorTitle\": \"Registratiefout\",\n\n    // Container vertalingen\n    \"containers\": \"Containers\",\n    \"containers.title\": \"Container lijst\",\n    \"containers.loading\": \"Containers laden...\",\n    \"containers.error\": \"Laadfout\",\n    \"containers.name\": \"Container naam\",\n    \"containers.departure\": \"Vertreklocatie\",\n    \"containers.arrival\": \"Aankomstlocatie\",\n    \"containers.estimatedDeparture\": \"Geschatte vertrekdatum\",\n    \"containers.status\": \"Status\",\n    \"containers.status.active\": \"Actief\",\n    \"containers.status.closed\": \"Gesloten\",\n    \"containers.capacity\": \"Capaciteit\",\n    \"containers.usedCapacity\": \"Gebruikte capaciteit\",\n    \"containers.availableCapacity\": \"Beschikbare capaciteit\",\n    \"containers.totalCapacity\": \"Totale capaciteit\",\n    \"containers.closedMessage\": \"Deze container is gesloten en kan niet meer gereserveerd worden.\",\n    \"containers.almostFullMessage\": \"Deze container is bijna vol, reserveer snel!\",\n    \"containers.availableMessage\": \"Deze container is beschikbaar voor nieuwe reserveringen.\",\n\n    // Container voorbestelling vertalingen\n    \"preorder.title\": \"Container ruimte voorbestelling\",\n    \"preorder.description\": \"Reserveer uw ruimte in deze container voordat deze vol is.\",\n    \"preorder.quantity\": \"Hoeveelheid (CBM)\",\n    \"preorder.button\": \"Voorbestellen\",\n    \"preorder.confirm\": \"Voorbestelling bevestigen\",\n    \"preorder.cancel\": \"Annuleren\",\n    \"preorder.success\": \"Uw voorbestelling is succesvol geregistreerd!\",\n    \"preorder.availableCapacity\": \"Beschikbare capaciteit\",\n    \"preorder.terms\": \"Ik accepteer de algemene voorwaarden\",\n    \"preorder.termsRequired\": \"U moet de algemene voorwaarden accepteren\",\n\n    // Container items vertalingen\n    \"containerItems.title\": \"Container items\",\n    \"containerItems.productId\": \"Product ID\",\n    \"containerItems.quantity\": \"Hoeveelheid\",\n    \"containerItems.userId\": \"Gebruiker\",\n    \"containerItems.loading\": \"Items laden...\",\n    \"containerItems.error\": \"Fout bij het laden van items\",\n    \"containerItems.noItems\": \"Geen items in deze container\",\n    \"containerItems.addItem\": \"Item toevoegen\",\n\n    // Algemene vertalingen\n    \"units\": \"eenheden\",\n    \"cbm\": \"CBM\",\n    \"cancel\": \"Annuleren\",\n    \"confirm\": \"Bevestigen\",\n    \"close\": \"Sluiten\"\n  }\n};\n\nconst languageNames: Record<UserLanguage, string> = {\n  ",
    "apresleslogsleproble": "apr√®s les logs, le probl√®me vient du AuthContext qui d√©clenche automatiquement\r\n * une d√©connexion/reconnexion lors de la cr√©ation d",
    "apresleslogsleproble1": "apr√®s les logs, le probl√®me vient du AuthContext qui d√©clenche automatiquement\r\n * une d√©connexion/reconnexion lors de la cr√©ation d",
    "apresleslogsleproble2": "apr√®s les logs, le probl√®me vient du AuthContext qui d√©clenche automatiquement\r\n * une d√©connexion/reconnexion lors de la cr√©ation d",
    "authentificationsecu": "authentification s√©curis√© pour la production\r\n * G√®re les connexions, redirections et s√©curit√© des sessions\r\n *",
    "authentificationsecu1": "authentification s√©curis√© pour la production\r\n * G√®re les connexions, redirections et s√©curit√© des sessions\r\n *",
    "autresimemecelacause": "autre\r\n * Si m√™me cela cause une d√©connexion, le probl√®me est dans React",
    "emailuserdataemailex": "email ${userData.email} existe d√©j√†` };\r\n            }\r\n\r\n            // 3. Cr√©er l",
    "emailuserdataemailex1": "email ${userData.email} existe d√©j√†` };\r\n            }\r\n\r\n            // 3. Cr√©er l",
    "emailuserdataemailex2": "email ${userData.email} existe d√©j√†` };\r\n            }\r\n\r\n            // 3. Cr√©er l",
    "emailexistedejaconst": "email existe d√©j√†\r\n            const emailExists = await this.checkIfEmailExists(userData.email);\r\n            if (emailExists) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "emailexistedejaconst1": "email existe d√©j√†\r\n            const emailExists = await this.checkIfEmailExists(userData.email);\r\n            if (emailExists) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "emailexistedejaconst2": "email existe d√©j√†\r\n            const emailExists = await this.checkIfEmailExists(userData.email);\r\n            if (emailExists) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "emailexistedejaconst3": "email existe d√©j√†\r\n            const emailExists = await this.checkIfEmailExists(userData.email);\r\n            if (emailExists) {\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "emailmessages": "email-messages",
    "emailmessages1": "emailMessages",
    "entrepriselabelinput": "entreprise\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={cardData.companyName}\r\n                                        onChange={(e) => updateCardData({ companyName: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Slogan\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={cardData.tagline}\r\n                                        onChange={(e) => updateCardData({ tagline: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Nom de contact\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={cardData.contactPerson}\r\n                                            onChange={(e) => updateCardData({ contactPerson: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Poste\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={cardData.position}\r\n                                            onChange={(e) => updateCardData({ position: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            T√©l√©phone\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={cardData.phone}\r\n                                            onChange={(e) => updateCardData({ phone: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Email\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            value={cardData.email}\r\n                                            onChange={(e) => updateCardData({ email: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Site web\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={cardData.website}\r\n                                        onChange={(e) => updateCardData({ website: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Adresse\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={cardData.address}\r\n                                        onChange={(e) => updateCardData({ address: e.target.value })}\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-3 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            LinkedIn\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={cardData.linkedin || ",
    "entrepriseconstcompa": "entreprise\r\n            const companyData = {\r\n                name: formData.name,\r\n                country: formData.country,\r\n                email: formData.email,\r\n                phone: formData.phone,\r\n                contact_person: formData.contactPerson,\r\n                preferred_currency: formData.preferredCurrency,\r\n                interested_products: formData.interestedProducts,\r\n                website: formData.website,\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            // Donn√©es du profil\r\n            const profileData = {\r\n                monthly_sales_volume: formData.monthlySalesVolume,\r\n                has_merchandising: formData.hasMerchandising,\r\n                is_top_importer: formData.isTopImporter,\r\n                has_warehouses: formData.hasWarehouses,\r\n                warehouse_count: formData.hasWarehouses ? parseInt(formData.warehouseCount) || 0 : null,\r\n                has_logistics_vehicles: formData.hasLogisticsVehicles,\r\n                vehicle_count: formData.hasLogisticsVehicles ? parseInt(formData.vehicleCount) || 0 : null,\r\n                business_type: formData.businessType,\r\n                notes: formData.notes,\r\n                updated_at: new Date().toISOString()\r\n            };\r\n\r\n            ",
    "entreprisenamenameva": "entreprise\"\r\n                                    name=\"name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    icon={<Building2 className=\"text-gray-400\" size={20} />}\r\n                                />\r\n\r\n                                <Input\r\n                                    label=\"Pays\"\r\n                                    name=\"country\"\r\n                                    value={formData.country}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    icon={<MapPin className=\"text-gray-400\" size={20} />}\r\n                                />\r\n\r\n                                <Input\r\n                                    label=\"Email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    icon={<Mail className=\"text-gray-400\" size={20} />}\r\n                                />\r\n\r\n                                <Input\r\n                                    label=\"T√©l√©phone\"\r\n                                    type=\"tel\"\r\n                                    name=\"phone\"\r\n                                    value={formData.phone}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    icon={<Phone className=\"text-gray-400\" size={20} />}\r\n                                />\r\n\r\n                                <Input\r\n                                    label=\"Personne de contact\"\r\n                                    name=\"contactPerson\"\r\n                                    value={formData.contactPerson}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    icon={<User className=\"text-gray-400\" size={20} />}\r\n                                />\r\n\r\n                                <Input\r\n                                    label=\"Site web\"\r\n                                    type=\"url\"\r\n                                    name=\"website\"\r\n                                    value={formData.website}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"https://example.com\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Informations commerciales</h3>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                <Select\r\n                                    label=\"Devise pr√©f√©r√©e\"\r\n                                    name=\"preferredCurrency\"\r\n                                    value={formData.preferredCurrency}\r\n                                    onChange={(value) => setFormData(prev => ({ ...prev, preferredCurrency: value }))}\r\n                                    options={currencyOptions}\r\n                                />\r\n\r\n                                <Select\r\n                                    label=\"Type d",
    "entreprisesupplierse": "entreprise\",\n    \"supplier.settings.contactEmail\": \"Email de contact\",\n    \"supplier.settings.phone\": \"T√©l√©phone\",\n    \"supplier.settings.address\": \"Adresse\",\n    \"supplier.settings.city\": \"Ville\",\n    \"supplier.settings.postalCode\": \"Code postal\",\n    \"supplier.settings.country\": \"Pays\",\n    \"supplier.settings.website\": \"Site web\",\n    \"supplier.settings.description\": \"Description de l",
    "erreurfirebaseifmoun": "erreur Firebase\n            if (mounted && !user) {\n              setUser(null);\n            }\n          }\n        } else {\n          // D√©connexion compl√®te si pas d",
    "erreurfirebaseifmoun1": "erreur Firebase\n            if (mounted && !user) {\n              setUser(null);\n            }\n          }\n        } else {\n          // D√©connexion compl√®te si pas d",
    "erreurfirebaseifmoun2": "erreur Firebase\n            if (mounted && !user) {\n              setUser(null);\n            }\n          }\n        } else {\n          // D√©connexion compl√®te si pas d",
    "erreuretdesucceserro": "erreur et de succ√®s */}\r\n                        {error && (\r\n                            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 flex items-start\">\r\n                                <AlertCircle className=\"h-5 w-5 text-red-400 mt-0.5 mr-3 flex-shrink-0\" />\r\n                                <div>\r\n                                    <h3 className=\"text-sm font-medium text-red-800\">Erreur de connexion</h3>\r\n                                    <p className=\"text-sm text-red-700 mt-1\">{error}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {success && (\r\n                            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 flex items-start\">\r\n                                <CheckCircle className=\"h-5 w-5 text-green-400 mt-0.5 mr-3 flex-shrink-0\" />\r\n                                <div>\r\n                                    <h3 className=\"text-sm font-medium text-green-800\">Connexion r√©ussie</h3>\r\n                                    <p className=\"text-sm text-green-700 mt-1\">{success}</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Bouton de connexion */}\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={isLoading}\r\n                            className=\"w-full flex justify-center items-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            {isLoading ? (\r\n                                <>\r\n                                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                                    Connexion en cours...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Lock className=\"h-4 w-4 mr-2\" />\r\n                                    Se connecter\r\n                                </>\r\n                            )}\r\n                        </button>\r\n\r\n                        {/* Mot de passe oubli√© */}\r\n                        <div className=\"text-center\">\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleForgotPassword}\r\n                                disabled={isLoading}\r\n                                className=\"text-sm text-blue-600 hover:text-blue-800 transition-colors duration-200 disabled:opacity-50\"\r\n                            >\r\n                                Mot de passe oubli√© ?\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Informations de s√©curit√© */}\r\n                <div className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\">\r\n                    <div className=\"flex\">\r\n                        <Shield className=\"h-5 w-5 text-blue-600 mt-0.5 mr-3 flex-shrink-0\" />\r\n                        <div>\r\n                            <h3 className=\"text-sm font-medium text-blue-800\">S√©curit√© renforc√©e</h3>\r\n                            <p className=\"text-sm text-blue-700 mt-1\">\r\n                                Votre connexion est prot√©g√©e par un chiffrement SSL et des r√®gles de s√©curit√© strictes.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Lien retour */}\r\n                <div className=\"text-center\">\r\n                    <Link\r\n                        to=\"/\"\r\n                        className=\"text-sm text-gray-600 hover:text-gray-900 transition-colors duration-200\"\r\n                    >\r\n                        ‚Üê Retour √† l",
    "erreurutiliserladeco": "erreur, utiliser la d√©connexion d",
    "erreurutiliserladeco1": "erreur, utiliser la d√©connexion d",
    "erreurutiliserladeco2": "erreur, utiliser la d√©connexion d",
    "existepasreturnfalse": "existe pas\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Affiche les informations de connexion des utilisateurs de test\r\n   *",
    "expirationdesessions": "expiration de session\",\n    \"supplier.settings.changePassword\": \"Changer le mot de passe\",\n    \"supplier.settings.currentPassword\": \"Mot de passe actuel\",\n    \"supplier.settings.newPassword\": \"Nouveau mot de passe\",\n    \"supplier.settings.confirmPassword\": \"Confirmer le mot de passe\",\n    \"supplier.settings.save\": \"Enregistrer\",\n    \"supplier.settings.saveChanges\": \"Enregistrer les modifications\",\n    \"supplier.settings.cancel\": \"Annuler\",\n    \"supplier.settings.loading\": \"Chargement...\",\n    \"supplier.settings.saved\": \"Param√®tres sauvegard√©s\",\n    \"supplier.settings.error\": \"Erreur lors de la sauvegarde\",\n\n    // Traductions pour les filtres de recherche\n    \"search.filter.allCategories\": \"Toutes les cat√©gories\",\n    \"search.filter.name\": \"Nom du produit\",\n    \"search.filter.category\": \"Cat√©gorie\",\n    \"search.filter.moq\": \"Quantit√© minimum (MOQ)\",\n    \"search.filter.priceRange\": \"Fourchette de prix\",\n    \"search.filter.minPrice\": \"Prix minimum\",\n    \"search.filter.maxPrice\": \"Prix maximum\",\n    \"search.filter.ce\": \"Certifi√© CE\",\n\n    // Traductions pour le modal de produit\n    \"product.modal.addTitle\": \"Ajouter un produit\",\n    \"product.modal.editTitle\": \"Modifier le produit\",\n    \"product.modal.productName\": \"Nom du produit\",\n    \"product.modal.productNamePlaceholder\": \"Entrez le nom du produit\",\n    \"product.modal.productId\": \"ID Produit\",\n    \"product.modal.productIdPlaceholder\": \"Entrez l",
    "informationpourlacon": "information pour la connexion universelle *",
    "informationpourlacon1": "information pour la connexion universelle */}\r\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 text-blue-800 dark:text-blue-200 text-sm rounded-md p-4 mb-4\">\r\n            <div className=\"font-medium\">üåü Connexion Universelle</div>\r\n            <div className=\"mt-1\">Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.</div>\r\n          </div>\r\n\r\n          <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n            <div className=\"auth-form-group\">\r\n              <div className=\"auth-input-wrapper\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"auth-input\"\r\n                  placeholder={t(",
    "inscriptionuniversel": "inscription universelle */}\r\n            <div className=\"auth-info-badge\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-4 h-4 text-blue-300\">\r\n                  <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-sm text-blue-100\">\r\n                  üåü Connexion Universelle\r\n                </span>\r\n              </div>\r\n              <p className=\"text-xs text-blue-200 mt-2\">\r\n                Connectez-vous simplement avec votre email et mot de passe. Votre r√¥le sera automatiquement attribu√©.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"auth-visual-illustration\">\r\n              <div className=\"illustration-circle\"></div>\r\n              <div className=\"illustration-circle\"></div>\r\n              <div className=\"illustration-center\">\r\n                <div className=\"w-6 h-6 text-white\">\r\n                  <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Colonne formulaire */}\r\n        <div className=\"auth-form-column auth-form-spectacular\">\r\n          <div className=\"auth-form-header\">\r\n            <h1 className=\"auth-form-title\">{t(",
    "inscriptionuniversel1": "inscription universelle */}\r\n          <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-800 dark:text-green-200 text-sm rounded-md p-4 mb-4\">\r\n            <div className=\"font-medium\">üöÄ Inscription Universelle</div>\r\n            <div className=\"mt-1\">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).</div>\r\n          </div>\r\n\r\n          <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n            <div className=\"auth-form-group\">\r\n              <div className=\"auth-input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"auth-input\"\r\n                  placeholder={t(",
    "inscriptionuniversel2": "inscription universelle */}\r\n          <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 text-green-800 dark:text-green-200 text-sm rounded-md p-4 mb-4\">\r\n            <div className=\"font-medium\">üöÄ Inscription Universelle</div>\r\n            <div className=\"mt-1\">Cr√©ez votre compte facilement. Votre r√¥le sera automatiquement attribu√© (Client par d√©faut, Admin si email admin).</div>\r\n          </div>\r\n\r\n          <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n            <div className=\"auth-form-group\">\r\n              <div className=\"auth-input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"auth-input\"\r\n                  placeholder={t(",
    "inscriptioncreatinga": "inscription\",\n    \"creatingAccount\": \"Cr√©ation du compte...\",\n    \"createMyAccount\": \"Cr√©er mon compte\",\n    \"hasAccountQuestion\": \"Vous avez d√©j√† un compte ?\",\n    \"role.customerTitle\": \"Client\",\n    \"role.supplierTitle\": \"Fournisseur\",\n    \"role.sourcerTitle\": \"Sourceur\",\n    \"role.customerDescription\": \"Acheter des produits aux fournisseurs\",\n    \"role.supplierDescription\": \"Vendre vos produits aux clients\",\n    \"role.sourcerDescription\": \"Aider les clients √† trouver les meilleurs fournisseurs\",\n    \"common.optional\": \"Optionnel\",\n    \"fashion\": \"Mode\",\n    \"tech\": \"Technologie\",\n    \"beauty\": \"Beaut√©\",\n    \"sports\": \"Sport\",\n    \"mainAudience\": \"Audience principale\",\n    \"mainAudiencePlaceholder\": \"Pays ou r√©gion majoritaire, √¢ge moyen\",\n    \"engagementRate\": \"Taux d",
    "inscriptionsearchbut": "inscription\",\n    \"search.button\": \"Rechercher\",\n\n    \"socialNetworkSelector.title\": \"R√©seaux sociaux\",\n    \"socialNetworkSelector.subtitle\": \"S√©lectionnez vos r√©seaux sociaux\",\n    \"socialNetworkSelector.modalInfo\": \"Un formulaire s",
    "inscriptionemailtryc": "inscription: ${email}`);\r\n\r\n        try {\r\n            const result = await productionUserService.createProductionUser({\r\n                email,\r\n                password,\r\n                name,\r\n                role,\r\n                isActive: true\r\n            });\r\n\r\n            if (result.success && result.user) {\r\n                console.log(`‚úÖ Inscription r√©ussie: ${result.user.name}`);\r\n\r\n                ",
    "inscriptionemailtryc1": "inscription: ${email}`);\r\n\r\n        try {\r\n            const result = await productionUserService.createProductionUser({\r\n                email,\r\n                password,\r\n                name,\r\n                role,\r\n                isActive: true\r\n            });\r\n\r\n            if (result.success && result.user) {\r\n                console.log(`‚úÖ Inscription r√©ussie: ${result.user.name}`);\r\n\r\n                // Connecter automatiquement l",
    "inscriresigninsubtit": "inscrire\",\n    \"signInSubtitle\": \"Acc√©dez √† votre espace personnel\",\n    \"signUpSubtitle\": \"Cr√©ez votre compte en quelques √©tapes\",\n    \"googleLoginError\": \"Erreur de connexion Google\",\n    \"orContinueWith\": \"Ou continuer avec\",\n    \"signInWithGoogle\": \"Continuer avec Google\",\n    \"agreementPrefix\": \"En continuant, vous acceptez nos\",\n    \"agreementSuffix\": \".\",\n    \"and\": \"et\",\n    \"andOur\": \"et notre\",\n    \"termsOfService\": \"conditions d",
    "instancesecondaireth": "instance secondaire\r\n            this.initializeSecondaryApp();\r\n\r\n            // 3. V√©rifications basiques\r\n            if (!userData.email || !userData.email.includes(",
    "instancesecondaireth1": "instance secondaire\r\n            this.initializeSecondaryApp();\r\n\r\n            // 3. V√©rifications basiques\r\n            if (!userData.email || !userData.email.includes(",
    "instantnotifications": "instant\",\n    \"notifications.timeAgo.minutes\": \"Il y a {0} min\",\n    \"notifications.timeAgo.hours\": \"Il y a {0}h\",\n    \"notifications.timeAgo.days\": \"Il y a {0}j\",\n    \"notifications.priority.urgent\": \"Urgent\",\n    \"notifications.priority.high\": \"√âlev√©\",\n    \"notifications.priority.medium\": \"Moyen\",\n    \"notifications.priority.low\": \"Faible\",\n    \"notifications.allLoaded\": \"Toutes les notifications ont √©t√© charg√©es\",\n    \"notifications.count.singular\": \"{0} non lu\",\n    \"notifications.count.plural\": \"{0} non lus\",\n\n    \"email\": \"Email\",\n    \"password\": \"Mot de passe\",\n    \"confirmPassword\": \"Confirmer le mot de passe\",\n    \"login\": \"Connexion\",\n    \"register\": \"Inscription\",\n    \"loginDescription\": \"Connectez-vous pour acc√©der √† votre compte\",\n    \"accountType\": \"Type de compte\",\n    \"role.customer\": \"Client\",\n    \"role.supplier\": \"Fournisseur\",\n    \"role.sourcer\": \"Sourceur\",\n    \"role.influencer\": \"Influenceur\",\n    \"emailPlaceholder\": \"votre@email.com\",\n    \"passwordPlaceholder\": \"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\",\n    \"rememberMe\": \"Se souvenir de moi\",\n    \"forgotPassword\": \"Mot de passe oubli√© ?\",\n    \"loginButton\": \"Se connecter\",\n    \"loggingIn\": \"Connexion...\",\n    \"createAccount\": \"Cr√©er un compte\",\n    \"registerDescription\": \"Cr√©ez votre compte pour commencer\",\n    \"fullName\": \"Nom complet\",\n    \"yourNamePlaceholder\": \"Votre nom complet\",\n    \"nameRequired\": \"Le nom est requis\",\n    \"emailRequired\": \"L",
    "objetcontenantnameem": "objet contenant name, email, password, confirmPassword\r\n   * @returns Un objet contenant la validit√© et les messages d",
    "objetcontenantnameem1": "objet contenant name, email, password, confirmPassword\r\n   * @returns Un objet contenant la validit√© et les messages d",
    "objetcontenantnameem2": "objet contenant name, email, password, confirmPassword\r\n   * @returns Un objet contenant la validit√© et les messages d",
    "objetutilisateurdemo": "objet utilisateur d√©mo\r\n   */\r\n  static createDemoUser(email: string, role: UserRole, name?: string) {\r\n    return {\r\n      id: `demo_${role}_${Date.now()}`,\r\n      email: email.trim(),\r\n      name: name?.trim() || `Utilisateur ${role}`,\r\n      role: role,\r\n      favorites: [],\r\n      browsingHistory: [],\r\n      messages: [],\r\n      subscription: ",
    "objetutilisateurdemo1": "objet utilisateur d√©mo\r\n   */\r\n  static createDemoUser(email: string, role: UserRole, name?: string) {\r\n    return {\r\n      id: `demo_${role}_${Date.now()}`,\r\n      email: email.trim(),\r\n      name: name?.trim() || `Utilisateur ${role}`,\r\n      role: role,\r\n      favorites: [],\r\n      browsingHistory: [],\r\n      messages: [],\r\n      subscription: ",
    "suppliersettingscont": "supplier.settings.contactEmail",
    "suppliersettingsemai": "supplier.settings.emailNotifications",
    "unadminstaticisadmin": "un admin\r\n   */\r\n  static isAdminEmail(email: string): boolean {\r\n    return this.ADMIN_EMAILS.includes(email.toLowerCase().trim());\r\n  }\r\n\r\n  /**\r\n   * Obtient la route de redirection appropri√©e apr√®s connexion\r\n   * @param role - Le r√¥le de l",
    "unadminstaticisadmin1": "un admin\r\n   */\r\n  static isAdminEmail(email: string): boolean {\r\n    return this.ADMIN_EMAILS.includes(email.toLowerCase().trim());\r\n  }\r\n\r\n  /**\r\n   * Obtient la route de redirection appropri√©e apr√®s connexion\r\n   * @param role - Le r√¥le de l",
    "unadminstaticisadmin2": "un admin\r\n   */\r\n  static isAdminEmail(email: string): boolean {\r\n    return this.ADMIN_EMAILS.includes(email.toLowerCase().trim());\r\n  }\r\n\r\n  /**\r\n   * Obtient la route de redirection appropri√©e apr√®s connexion\r\n   * @param role - Le r√¥le de l",
    "unnouvelutilisateurs": "un nouvel utilisateur (sans d√©connexion admin):",
    "urgenceemergencylogo": "urgence\r\n        emergencyLogout();\r\n    };\r\n\r\n    if (!user) return null;\r\n\r\n    return (\r\n        <div className=\"fixed bottom-4 right-4 z-50\">\r\n            <div className=\"flex flex-col gap-2\">\r\n                <button\r\n                    onClick={handleQuickLogout}\r\n                    onDoubleClick={handleDoubleClick}\r\n                    className=\"bg-red-500 hover:bg-red-600 text-white p-3 rounded-full shadow-lg transition-all duration-300 transform hover:scale-110 flex items-center gap-2\"\r\n                    title=\"Clic: d√©connexion normale | Double-clic: d√©connexion d",
    "utilisateurasynccrea": "utilisateur\r\n     */\r\n    async createUserWithoutDisconnect(userData: CreateUserData): Promise<{\r\n        success: boolean;\r\n        user?: AdminUser;\r\n        error?: string;\r\n        warning?: string;\r\n    }> {\r\n        // D√©l√©guer au service sp√©cialis√© qui √©vite la d√©connexion\r\n        return adminUserCreationServiceFixed.createUser(userData);\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs (de Firestore + utilisateurs connect√©s r√©cemment)\r\n     *",
    "utilisateurreturnsle": "utilisateur\r\n   * @returns Le r√¥le d√©termin√©\r\n   */\r\n  static determineUserRole(email: string): UserRole {\r\n    const normalizedEmail = email.toLowerCase().trim();\r\n\r\n    // V√©rifier si c",
    "utilisateurreturnsle1": "utilisateur\r\n   * @returns Le r√¥le d√©termin√©\r\n   */\r\n  static determineUserRole(email: string): UserRole {\r\n    const normalizedEmail = email.toLowerCase().trim();\r\n\r\n    // V√©rifier si c",
    "utilisateuravecfireb": "utilisateur AVEC Firebase Auth SANS d√©connexion admin\r\n * \r\n * Cette solution utilise une instance Firebase s√©par√©e pour cr√©er l",
    "utilisateuravecfireb1": "utilisateur AVEC Firebase Auth SANS d√©connexion admin\r\n * \r\n * Cette solution utilise une instance Firebase s√©par√©e pour cr√©er l",
    "utilisateuravecfireb2": "utilisateur AVEC Firebase Auth SANS d√©connexion admin\r\n * \r\n * Cette solution utilise une instance Firebase s√©par√©e pour cr√©er l",
    "utilisateurapresinsc": "utilisateur apr√®s inscription\r\n                const loginResult = await secureAuthService.secureLogin(email, password);\r\n                if (loginResult.success && loginResult.user) {\r\n                    setUser(loginResult.user);\r\n                }\r\n\r\n                return { user: result.user };\r\n            } else {\r\n                console.log(`‚ùå Inscription √©chou√©e: ${result.error}`);\r\n                return { user: null, error: result.error };\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "utilisateurconnectee": "utilisateur connect√©\r\nexport interface CurrentUser {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n    type: ",
    "utilisateurconnectee1": "utilisateur connect√©\r\nexport interface CurrentUser {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n    type: ",
    "utilisateurexisteifr": "utilisateur existe\r\n      if (result.user) {\r\n        await firebaseAuthService.signOut(); // Se d√©connecter imm√©diatement\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      // Si erreur de mot de passe incorrect, l",
    "utilisateurresteconn": "utilisateur reste connect√© malgr√© la d√©connexion\r\nexport const emergencyLogout = () => {\r\n    if (window.confirm(",
    "utilisateurtemporair": "utilisateur temporaire\r\n\r\nCe service cr√©e des utilisateurs SEULEMENT dans Firestore pour √©viter\r\nla d√©connexion de l",
    "utilisateurtemporair1": "utilisateur temporaire\r\n\r\nCe service cr√©e des utilisateurs SEULEMENT dans Firestore pour √©viter\r\nla d√©connexion de l",
    "utilisateurtemporair2": "utilisateur temporaire\r\n\r\nCe service cr√©e des utilisateurs SEULEMENT dans Firestore pour √©viter\r\nla d√©connexion de l",
    "utilisateursexportin": "utilisateurs\r\nexport interface CreateUserData {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  role: UserRole;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport interface User {\r\n  uid?: string; ",
    "utilisepascreateuser": "utilise PAS createUserWithEmailAndPassword pour √©viter la d√©connexion\r\n     *",
    "utilisequefirestoree": "utilise QUE Firestore\r\n * √âvite les erreurs Auth et les d√©connexions automatiques\r\n */\r\nclass SafeInitializationService {\r\n    private isInitialized = false;\r\n\r\n    /**\r\n     * Initialise les utilisateurs de test SEULEMENT dans Firestore\r\n     * (pas dans Firebase Auth pour √©viter les d√©connexions)\r\n     *",
    "connexion1allezsur": "}\r\n\r\nüéØ Connexion:\r\n1. Allez sur ",
    "buttondivdivshowcrea": "}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {showCreateForm && (\r\n                        <div className=\"p-6\">\r\n                            <form onSubmit={handleCreateUser} className=\"space-y-4\">\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                            Email *\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            required\r\n                                            value={newUser.email}\r\n                                            onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                            placeholder=\"utilisateur@exemple.com\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                            Mot de passe *\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            required\r\n                                            value={newUser.password}\r\n                                            onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                            placeholder=\"Minimum 8 caract√®res\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                            Nom complet *\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            required\r\n                                            value={newUser.name}\r\n                                            onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                            placeholder=\"Nom Pr√©nom\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                            R√¥le *\r\n                                        </label>\r\n                                        <select\r\n                                            value={newUser.role}\r\n                                            onChange={(e) => setNewUser({ ...newUser, role: e.target.value as any })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                        >\r\n                                            <option value=\"customer\">Client</option>\r\n                                            <option value=\"supplier\">Fournisseur</option>\r\n                                            <option value=\"admin\">Administrateur</option>\r\n                                            <option value=\"sourcer\">Sourceur</option>\r\n                                            <option value=\"influencer\">Influenceur</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                            Entreprise\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={newUser.company}\r\n                                            onChange={(e) => setNewUser({ ...newUser, company: e.target.value })}\r\n                                            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                            placeholder=\"Nom de l",
    "spandivcontactinfodi": "}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Contact Info */}\r\n                  <div className=\"space-y-2 mb-4\">\r\n                    <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n                      <Mail size={14} className=\"mr-2\" />\r\n                      {customer.email}\r\n                    </div>\r\n                    {customer.phone && (\r\n                      <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n                        <Phone size={14} className=\"mr-2\" />\r\n                        {customer.phone}\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n                      <MapPin size={14} className=\"mr-2\" />\r\n                      {customer.location}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Stats */}\r\n                  <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">{customer.totalOrders}</p>\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">Commandes</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                        {formatPrice(customer.totalSpent)}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">Total d√©pens√©</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Footer */}\r\n                  <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <Calendar size={12} />\r\n                          Client depuis {formatDate(customer.joinedDate)}\r\n                        </div>\r\n                        {customer.lastOrderDate && (\r\n                          <div className=\"flex items-center gap-1 mt-1\">\r\n                            <ShoppingBag size={12} />\r\n                            Derni√®re commande: {formatDate(customer.lastOrderDate)}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Button\r\n                        onClick={() => console.log(",
    "buttonuserslength0bu": "}\r\n            </Button>\r\n            {users.length === 0 && (\r\n              <Button\r\n                onClick={handleCreateTestUsers}\r\n                variant=\"outline\"\r\n                className=\"flex items-center gap-2\"\r\n                disabled={loading}\r\n              >\r\n                <Users size={16} />\r\n                Cr√©er des utilisateurs de test\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{userStats.total}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Shield className=\"h-8 w-8 text-red-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Admins</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {userStats.byRole.admin}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"h-8 w-8 text-orange-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Fournisseurs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {userStats.byRole.supplier}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Eye className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Clients</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {userStats.byRole.customer}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Activity className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Actifs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {userStats.active}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>        {/* Filters */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Rechercher par nom ou email...\"\r\n                  value={searchTerm}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white placeholder-gray-600 dark:placeholder-gray-400\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full sm:w-48\">\r\n              <select\r\n                value={roleFilter}\r\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setRoleFilter(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-red-500 focus:border-transparent dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n              >\r\n                <option value=\"\">Tous les r√¥les</option>\r\n                <option value=\"admin\">Admin</option>\r\n                <option value=\"supplier\">Fournisseur</option>\r\n                <option value=\"customer\">Client</option>\r\n                <option value=\"sourcer\">Sourcer</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Users Table */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\r\n          {loading ? (\r\n            <div className=\"p-8 text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Chargement...</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Utilisateur\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      R√¥le\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Statut\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Derni√®re connexion\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Date cr√©ation\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                      Actions\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredUsers.map((user) => (\r\n                    <tr key={user.uid} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"h-10 w-10 rounded-full bg-gradient-to-r from-red-400 to-red-600 flex items-center justify-center\">\r\n                            <span className=\"text-white font-medium text-sm\">\r\n                              {user.name.charAt(0).toUpperCase()}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"ml-4\">\r\n                            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">{user.name}</div>\r\n                            <div className=\"text-sm text-gray-500 dark:text-gray-400 flex items-center gap-1\">\r\n                              <Mail size={12} />\r\n                              {user.email}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex items-center gap-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${getRoleColor(user.role)}`}>\r\n                          {getRoleIcon(user.role)}\r\n                          {user.role}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${user.isActive\r\n                          ? ",
    "consolelogemailverif": "}`);\r\n        console.log(`   Email v√©rifi√©: ${currentUser.emailVerified}`);\r\n        console.log(`   Derni√®re connexion: ${currentUser.metadata.lastSignInTime}`);\r\n    }\r\n\r\n    ",
    "diverrorsemailpclass": "}`}\r\n                            />\r\n                        </div>\r\n                        {errors.email && (\r\n                            <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Role */}\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                            R√¥le\r\n                        </label>\r\n                        <div className=\"relative\">\r\n                            <Shield className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 z-10\" size={16} />\r\n                            <Select\r\n                                value={formData.role}\r\n                                onChange={(e) => handleInputChange(",
    "reinitialisationcomp": "}`} />\r\n                    R√©initialisation Compl√®te\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleCreateEssentials}\r\n                    disabled={isResetting || isDeleting || isCreating}\r\n                    className=\"flex items-center gap-2 bg-blue-500 hover:bg-blue-600 text-white\"\r\n                >\r\n                    <Users className=\"h-4 w-4\" />\r\n                    Cr√©er Comptes Essentiels\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={deleteAllUsers}\r\n                    disabled={isResetting || isDeleting || isCreating}\r\n                    className=\"flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white\"\r\n                >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                    Supprimer Tous\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Avertissement */}\r\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-6\">\r\n                <div className=\"flex items-start gap-3\">\r\n                    <AlertTriangle className=\"h-5 w-5 text-yellow-500 mt-0.5\" />\r\n                    <div>\r\n                        <h3 className=\"font-semibold text-yellow-800\">Attention</h3>\r\n                        <p className=\"text-yellow-700 text-sm\">\r\n                            La r√©initialisation compl√®te supprimera d√©finitivement tous les utilisateurs existants\r\n                            et cr√©era de nouveaux comptes avec des mots de passe par d√©faut.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats */}\r\n            {results && (\r\n                <div className=\"bg-gray-50 border rounded-md p-4 mb-6\">\r\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">R√©sultats :</h3>\r\n                    <pre className=\"text-sm text-gray-700 whitespace-pre-wrap font-mono\">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* Affichage des comptes cr√©√©s */}\r\n            {createdAccounts.length > 0 && (\r\n                <div className=\"bg-green-50 border border-green-200 rounded-md p-4\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5\" />\r\n                        <div className=\"flex-1\">\r\n                            <h3 className=\"font-semibold text-green-800 mb-2\">\r\n                                Comptes cr√©√©s ({createdAccounts.length})\r\n                            </h3>\r\n                            <div className=\"space-y-2\">\r\n                                {createdAccounts.map((account, index) => (\r\n                                    <div key={index} className=\"bg-white rounded p-3 border\">\r\n                                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 text-sm\">\r\n                                            <div>\r\n                                                <span className=\"font-semibold\">Email:</span>\r\n                                                <br />\r\n                                                {account.email}\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className=\"font-semibold\">Mot de passe:</span>\r\n                                                <br />\r\n                                                <code className=\"bg-gray-100 px-1 rounded\">\r\n                                                    {account.password}\r\n                                                </code>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className=\"font-semibold\">Nom:</span>\r\n                                                <br />\r\n                                                {account.name}\r\n                                            </div>\r\n                                            <div>\r\n                                                <span className=\"font-semibold\">R√¥le:</span>\r\n                                                <br />\r\n                                                <span className={`px-2 py-1 rounded text-xs ${account.role === ",
    "echecdelaconnexion": "√âchec de la connexion",
    "echecdelaconnexion1": "√âchec de la connexion",
    "echecdelaconnexion2": "√âchec de la connexion",
    "ecouteurconstloginas": "√©couteur\n    };\n  }, []);\n\n  const login = async (email: string, password: string): Promise<User> => {\n    try {\n      console.log(",
    "ecouteurconstloginas1": "√©couteur\n    };\n  }, []);\n\n  const login = async (email: string, password: string): Promise<User> => {\n    try {\n      console.log(",
    "deconnexiond": "‚ö†Ô∏è D√âCONNEXION D\\",
    "deconnexiond1": "‚ö†Ô∏è D√âCONNEXION D\\",
    "erreurmiseajourderni": "‚ö†Ô∏è Erreur mise √† jour derni√®re connexion:",
    "erreurmiseajourderni1": "‚ö†Ô∏è Erreur mise √† jour derni√®re connexion:",
    "erreurmiseajourderni2": "‚ö†Ô∏è Erreur mise √† jour derni√®re connexion:",
    "connexionadminreussi": "‚úÖ Connexion admin r√©ussie",
    "connexionadminreussi1": "‚úÖ Connexion admin r√©ussie",
    "connexionreussievous": "‚úÖ Connexion r√©ussie ! Vous pouvez maintenant cr√©er des utilisateurs.",
    "connexionreussievous1": "‚úÖ Connexion r√©ussie ! Vous pouvez maintenant cr√©er des utilisateurs.",
    "connexionreussievous2": "‚úÖ Connexion r√©ussie ! Vous pouvez maintenant cr√©er des utilisateurs.",
    "connexionuniverselle5": "‚úÖ Connexion universelle r√©ussie:",
    "deconnexioncompletee": "‚úÖ D√©connexion compl√®te effectu√©e",
    "deconnexionreussie": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie1": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie2": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie3": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie4": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie5": "‚úÖ D√©connexion r√©ussie",
    "deconnexionreussie6": "‚úÖ D√©connexion r√©ussie",
    "motdepassereinitiali": "‚úÖ Mot de passe r√©initialis√© avec succ√®s",
    "motdepassereinitiali1": "‚úÖ Mot de passe r√©initialis√© avec succ√®s",
    "erreurdeconnexionuni": "‚ùå Erreur de connexion universelle:",
    "erreurdeconnexion12": "‚ùå Erreur d√©connexion:",
    "erreurdeconnexion13": "‚ùå Erreur d√©connexion:",
    "erreurdeconnexion14": "‚ùå Erreur d√©connexion:",
    "erreurlorsdeladeconn3": "‚ùå Erreur lors de la d√©connexion:",
    "erreurlorsdeladeconn4": "‚ùå Erreur lors de la d√©connexion:",
    "erreurlorsdeladeconn5": "‚ùå Erreur lors de la d√©connexion:",
    "erreurverificationem6": "‚ùå Erreur v√©rification email:",
    "erreurverificationem7": "‚ùå Erreur v√©rification email:",
    "deconnexionencours": "üëã D√©connexion en cours...",
    "deconnexionencours1": "üëã D√©connexion en cours...",
    "deconnexion5": "üëã D√©connexion...",
    "deconnexion6": "üëã D√©connexion...",
    "deconnexion7": "üëã D√©connexion...",
    "nouvelleconnexiondet": "üë§ Nouvelle connexion d√©tect√©e:",
    "nouvelleconnexiondet1": "üë§ Nouvelle connexion d√©tect√©e:",
    "nouvelleconnexiondet2": "üë§ Nouvelle connexion d√©tect√©e:",
    "derniereconnexionmis": "üîÑ Derni√®re connexion mise √† jour",
    "derniereconnexionmis1": "üîÑ Derni√®re connexion mise √† jour",
    "derniereconnexionmis2": "üîÑ Derni√®re connexion mise √† jour",
    "demarragedelasurveil": "üîÑ D√©marrage de la surveillance des connexions utilisateurs...",
    "demarragedelasurveil1": "üîÑ D√©marrage de la surveillance des connexions utilisateurs...",
    "demarragedelasurveil2": "üîÑ D√©marrage de la surveillance des connexions utilisateurs...",
    "connexiongooglenonim": "üîç Connexion Google non impl√©ment√©e en production",
    "connexiongooglenonim1": "üîç Connexion Google non impl√©ment√©e en production",
    "connexiongooglenonim2": "üîç Connexion Google non impl√©ment√©e en production",
    "testultimesideconnex": "üîç TEST ULTIME: Si d√©connexion maintenant, probl√®me est dans Firestore",
    "testultimesideconnex1": "üîç TEST ULTIME: Si d√©connexion maintenant, probl√®me est dans Firestore",
    "testultimesideconnex2": "üîç TEST ULTIME: Si d√©connexion maintenant, probl√®me est dans Firestore/React",
    "testdeconnexionfireb": "üîç Test de connexion Firebase...",
    "reinitialisationdumo": "üîë R√©initialisation du mot de passe pour:",
    "reinitialisationdumo1": "üîë R√©initialisation du mot de passe pour:",
    "deconnexiondel": "üîì D√©connexion de l\\",
    "deconnexiondel1": "üîì D√©connexion de l\\",
    "deconnexiondel2": "üîì D√©connexion de l\\",
    "creationutilisateurc": "üî• Cr√©ation utilisateur complet (Auth + Firestore) sans d√©connexion admin:",
    "creationutilisateurc1": "üî• Cr√©ation utilisateur complet (Auth + Firestore) sans d√©connexion admin:",
    "nettoyagedeconnexion": "üßπ Nettoyage: d√©connexion instance secondaire",
    "nettoyagedeconnexion1": "üßπ Nettoyage: d√©connexion instance secondaire",
    "nettoyagedeconnexion2": "üßπ Nettoyage: d√©connexion instance secondaire"
  },
  "admin": {
    "whitespacenowrappy4p": "\n                  } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n                >\n                  Utilisateurs\n                <",
    "nouvellesmethodescru": "\n      };\n    }\n  }\n\n  // Nouvelles m√©thodes CRUD pour la gestion des utilisateurs\n\n  /**\n   * R√©cup√®re tous les utilisateurs (admin uniquement)\n   *",
    "nouvellesmethodescru1": "\n      };\n    }\n  }\n\n  // Nouvelles m√©thodes CRUD pour la gestion des utilisateurs\n\n  /**\n   * R√©cup√®re tous les utilisateurs (admin uniquement)\n   *",
    "nouvellesmethodescru2": "\n      };\n    }\n  }\n\n  // Nouvelles m√©thodes CRUD pour la gestion des utilisateurs\n\n  /**\n   * R√©cup√®re tous les utilisateurs (admin uniquement)\n   */\n  async getAllUsers(): Promise<User[]> {\n    try {\n      const usersRef = collection(db, ",
    "asyncsigninwithgoogl": "\n      };\n    }\n  }\n\n  async signInWithGoogle() {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const firebaseUser = result.user;\n\n      // V√©rifier si l",
    "asyncsigninwithgoogl1": "\n      };\n    }\n  }\n\n  async signInWithGoogle() {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const firebaseUser = result.user;\n\n      // V√©rifier si l",
    "demanderlasuppressio": "\r\n                      >\r\n                        Demander la suppression\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Param√®tres de confidentialit√© *",
    "demanderlasuppressio1": "\r\n                      >\r\n                        Demander la suppression\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Param√®tres de confidentialit√© *",
    "checkedsettingsnotif": "\r\n                  checked={settings.notifications[item.key as keyof typeof settings.notifications] as boolean}\r\n                  onChange={(e) => handleInputChange(",
    "checkedsettingsnotif1": "\r\n                  checked={settings.notifications[item.key as keyof typeof settings.notifications] as boolean}\r\n                  onChange={(e) => handleInputChange(",
    "onchangehandleprofil": "\r\n                  onChange={handleProfilePicChange}\r\n                />\r\n              </div>\r\n\r\n              {/* Informations utilisateur *",
    "seconnectercommeadmi": "\r\n                >\r\n                    Se connecter comme Admin\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createTestUser}\r\n                    disabled={loading || !auth.currentUser}\r\n                >\r\n                    Cr√©er utilisateur test\r\n                <",
    "seconnectercommeadmi1": "\r\n                >\r\n                    Se connecter comme Admin\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createTestUser}\r\n                    disabled={loading || !auth.currentUser}\r\n                >\r\n                    Cr√©er utilisateur test\r\n                <",
    "iscreatingcreationcr": "\r\n                >\r\n                    {isCreating ? 'Cr√©ation...' : 'Cr√©er Admin Par D√©faut'}\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createTestAdmins}\r\n                    disabled={isCreating}\r\n                    variant=",
    "iscreatingcreationcr1": "\r\n                >\r\n                    {isCreating ? 'Cr√©ation...' : 'Cr√©er ce Compte Admin'}\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={createDefaultAdmin}\r\n                    disabled={isCreating}\r\n                    variant=",
    "disabledloadingusers": "\r\n                disabled={loading}\r\n              >\r\n                <Users size={16} />\r\n                Cr√©er des utilisateurs de test\r\n              <",
    "disabledloadingusers1": "\r\n                disabled={loading}\r\n              >\r\n                <Users size={16} />\r\n                Cr√©er des utilisateurs de test\r\n              <",
    "genererunuiduniqueco": "\r\n                };\r\n            }\r\n\r\n            // G√©n√©rer un UID unique\r\n            const uid = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // Cr√©er le document utilisateur dans Firestore\r\n            const userDoc: Omit<AdminUser, ",
    "checkedsettingssmsno": "\r\n            checked={settings.smsNotifications}\r\n            onChange={(e) => updateSetting(",
    "creerdesutilisateurs": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test pour le d√©veloppement\r\n     *",
    "creerdesutilisateurs1": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test pour le d√©veloppement\r\n     *",
    "creerdesutilisateurs2": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test pour le d√©veloppement\r\n     */\r\n    async createTestUsers(): Promise<{ success: boolean; count: number; error?: string }> {\r\n        try {\r\n            console.log(",
    "mettreajourunutilisa": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mettre √† jour un utilisateur\r\n     *",
    "mettreajourunutilisa1": "\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mettre √† jour un utilisateur\r\n     */\r\n    async updateUser(userId: string, updateData: Partial<CreateUserData>): Promise<{ success: boolean; user?: AdminUser; error?: string }> {\r\n        try {\r\n            console.log(",
    "obtenirlesstatistiqu": "\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Obtenir les statistiques des utilisateurs\r\n     *",
    "creeruncompteadminpa": "\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un compte admin par d√©faut\r\n     *",
    "verifierlespermissio": "\r\n    });\r\n\r\n    // V√©rifier les permissions\r\n    if (!user || user.role !== ",
    "verifierlespermissio1": "\r\n    });\r\n\r\n    // V√©rifier les permissions\r\n    if (!user || user.role !== ",
    "classinitializations": "\r\n  }\r\n];\r\n\r\nclass InitializationService {\r\n  private isInitialized = false;\r\n  /**\r\n   * Initialise la base de donn√©es avec les utilisateurs de test\r\n   *",
    "classinitializations1": "\r\n  }\r\n];\r\n\r\nclass InitializationService {\r\n  private isInitialized = false;\r\n  /**\r\n   * Initialise la base de donn√©es avec les utilisateurs de test\r\n   *",
    "classinitializations2": "\r\n  }\r\n];\r\n\r\nclass InitializationService {\r\n  private isInitialized = false;\r\n  /**\r\n   * Initialise la base de donn√©es avec les utilisateurs de test\r\n   */\r\n  async initializeDatabase(): Promise<void> {\r\n    if (this.isInitialized) {\r\n      console.log(",
    "creerutilisateur": " />\r\n                                                Cr√©er Utilisateur\r\n                                            <",
    "creerutilisateur1": " />\r\n                                                Cr√©er Utilisateur\r\n                                            <",
    "creercomptesessentie": " />\r\n                                    Cr√©er Comptes Essentiels\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Purge des utilisateurs *",
    "purgertouslesutilisa": " />\r\n                                    Purger Tous les Utilisateurs\r\n                                <",
    "purgertouslesutilisa1": " />\r\n                                    Purger Tous les Utilisateurs\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Cr√©ation d",
    "creerunutilisateur": " />\r\n                                Cr√©er un Utilisateur\r\n                            <",
    "creerunutilisateur1": " />\r\n                                Cr√©er un Utilisateur\r\n                            <",
    "gestiondesutilisateu": " />\r\n                                Gestion des Utilisateurs - Production\r\n                            <",
    "utilisateursessentie": " />\r\n                            Utilisateurs Essentiels\r\n                        <",
    "alertesdesecurite": " />\r\n                      Alertes de s√©curit√©\r\n                    <",
    "alertesdesecurite1": " />\r\n                      Alertes de s√©curit√©\r\n                    <",
    "buttonuserprofilelin": " />}\r\n            </button>\r\n\r\n            {/* User profile link *",
    "onsubmithandlesubmit": " onSubmit={handleSubmit}>\n            {/* S√©lecteur de r√¥le - cach√© pour les administrateurs *",
    "itemstatusfilterstat": " || item.status === filterStatus;\r\n    return matchesType && matchesStatus;\r\n  });\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    const icons = {\r\n      user: <User size={16} />,\r\n      product: <Package size={16} />,\r\n      review: <MessageSquare size={16} />,\r\n      message: <MessageSquare size={16} ",
    "constquerysnapshotaw": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw1": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw2": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw3": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw4": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw5": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ ${users.length} utilisateurs r√©cup√©r√©s`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw6": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ SAFE: ${users.length} utilisateurs r√©cup√©r√©s (lecture seule)`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw7": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ SAFE: ${users.length} utilisateurs r√©cup√©r√©s (lecture seule)`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "constquerysnapshotaw8": ")\r\n            );\r\n\r\n            const querySnapshot = await getDocs(q);\r\n            const users: AdminUser[] = [];\r\n\r\n            querySnapshot.forEach((doc) => {\r\n                const data = doc.data();\r\n                users.push({\r\n                    uid: doc.id,\r\n                    ...data\r\n                } as AdminUser);\r\n            });\r\n\r\n            console.log(`‚úÖ SAFE: ${users.length} utilisateurs r√©cup√©r√©s (lecture seule)`);\r\n            return users;\r\n\r\n        } catch (error) {\r\n            console.error(",
    "returntruelogiquedes": ") return true;\n\n    // Logique des permissions par r√¥le\n    const rolePermissions: Record<UserRole, string[]> = {\n      admin: [",
    "returntruelogiquedes1": ") return true;\n\n    // Logique des permissions par r√¥le\n    const rolePermissions: Record<UserRole, string[]> = {\n      admin: [",
    "userpermissionsinclu": ") || userPermissions.includes(permission);\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si l",
    "userpermissionsinclu1": ") || userPermissions.includes(permission);\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si l",
    "verifiersidesutilisa": ");\r\n\r\n            // V√©rifier si des utilisateurs existent d√©j√†\r\n            const usersCollection = collection(db, ",
    "verifiersidesutilisa1": ");\r\n\r\n            // V√©rifier si des utilisateurs existent d√©j√†\r\n            const usersCollection = collection(db, ",
    "ifthisauthstateunsub": ");\r\n\r\n        if (this.authStateUnsubscribe) {\r\n            this.authStateUnsubscribe();\r\n            this.authStateUnsubscribe = null;\r\n        }\r\n\r\n        this.stopSessionMonitoring();\r\n        this.currentUser = null;\r\n    }\r\n\r\n    /**\r\n     * Charger le profil utilisateur depuis Firestore\r\n     */\r\n    private async loadUserProfile(firebaseUser: FirebaseUser): Promise<User | null> {\r\n        try {\r\n            const userDocRef = doc(db, ",
    "tryconstresultawaita": ");\r\n\r\n        try {\r\n            const result = await adminUserServiceFixed.syncAllVisibleUsers();\r\n\r\n            if (result.success) {\r\n                console.log(`‚úÖ Synchronisation r√©ussie: ${result.count} utilisateur(s) synchronis√©(s)`);\r\n            } else {\r\n                console.log(`‚ùå √âchec de la synchronisation: ${result.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(",
    "tryconstresultawaita1": ");\r\n\r\n        try {\r\n            const result = await adminUserServiceFixed.syncAllVisibleUsers();\r\n\r\n            if (result.success) {\r\n                console.log(`‚úÖ Synchronisation r√©ussie: ${result.count} utilisateur(s) synchronis√©(s)`);\r\n            } else {\r\n                console.log(`‚ùå √âchec de la synchronisation: ${result.error}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(",
    "creerunaperculocalco": ");\r\n\r\n      // Cr√©er un aper√ßu local\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPreview(e.target?.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n      // Upload vers Firebase Storage\r\n      const storageRef = ref(storage, `avatars/${user.id}-${Date.now()}`);\r\n      const snapshot = await uploadBytes(storageRef, file);\r\n      const downloadURL = await getDownloadURL(snapshot.ref);\r\n\r\n      // Mettre √† jour le profil utilisateur (cast pour √©viter l",
    "creerunaperculocalco1": ");\r\n\r\n      // Cr√©er un aper√ßu local\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPreview(e.target?.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n      // Upload vers Firebase Storage\r\n      const storageRef = ref(storage, `avatars/${user.id}-${Date.now()}`);\r\n      const snapshot = await uploadBytes(storageRef, file);\r\n      const downloadURL = await getDownloadURL(snapshot.ref);\r\n\r\n      // Mettre √† jour le profil utilisateur (cast pour √©viter l",
    "creerunaperculocalco2": ");\r\n\r\n      // Cr√©er un aper√ßu local\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPreview(e.target?.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n\r\n      // Upload vers Firebase Storage\r\n      const storageRef = ref(storage, `avatars/${user.id}-${Date.now()}`);\r\n      const snapshot = await uploadBytes(storageRef, file);\r\n      const downloadURL = await getDownloadURL(snapshot.ref);\r\n\r\n      // Mettre √† jour le profil utilisateur (cast pour √©viter l",
    "utiliserleservicefin": ");\r\n\r\n      // Utiliser le service final s√©curis√© pour recharger\r\n      const users = await finalUserCreationService.getAllUsersFromDatabase();\r\n\r\n      // Conversion s√©curis√©e avec la fonction helper\r\n      const convertedUsers: AdminUser[] = users.map(convertFirestoreUser);\r\n\r\n      setUsers(convertedUsers);\r\n\r\n      showToast(`${users.length} utilisateurs synchronis√©s`, ",
    "redirigersidejaconne": ");\r\n\r\n    // Rediriger si d√©j√† connect√©\r\n    if (user && !loading) {\r\n        const redirectTo = getRedirectPath(user.role);\r\n        return <Navigate to={redirectTo} replace ",
    "nepasafficherlefoote": ");\r\n\r\n  // Ne pas afficher le Footer sur les routes admin car AdminLayout g√®re son propre Footer\r\n  if (isAdminRoute) {\r\n    return null;\r\n  }\r\n\r\n  return <Footer ",
    "creerlesutilisateurs": ");\r\n      \r\n      // Cr√©er les utilisateurs de test\r\n      const userResults = await this.createTestUsers();\r\n      \r\n      // Cr√©er les donn√©es de test pour les collections\r\n      await this.createTestData();\r\n      \r\n      // Afficher les r√©sultats\r\n      const successful = userResults.filter(r => r.success).length;\r\n      const failed = userResults.filter(r => !r.success).length;\r\n      \r\n      console.log(`‚úÖ Initialisation termin√©e: ${successful} utilisateurs cr√©√©s, ${failed} erreurs`);\r\n      \r\n      if (failed > 0) {\r\n        console.warn(",
    "nettoyerlorsdudemont": ");\r\n                    }\r\n                }\r\n\r\n                // Nettoyer lors du d√©montage\r\n                return () => {\r\n                    if (authStateUnsubscribe) {\r\n                        authStateUnsubscribe();\r\n                    }\r\n                    productionUserService.stopAuthStateListener();\r\n                    secureAuthService.cleanup();\r\n                };\r\n\r\n            } catch (error: any) {\r\n                console.error(",
    "nettoyerlorsdudemont1": ");\r\n                    }\r\n                }\r\n\r\n                // Nettoyer lors du d√©montage\r\n                return () => {\r\n                    if (authStateUnsubscribe) {\r\n                        authStateUnsubscribe();\r\n                    }\r\n                    productionUserService.stopAuthStateListener();\r\n                    secureAuthService.cleanup();\r\n                };\r\n\r\n            } catch (error: any) {\r\n                console.error(",
    "awaitnewpromiseresol": ");\r\n            await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n            // √âtape 2: Cr√©er de nouveaux utilisateurs\r\n            setResults(prev => prev + ",
    "awaitnewpromiseresol1": ");\r\n            await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n            // √âtape 2: Cr√©er de nouveaux utilisateurs\r\n            setResults(prev => prev + ",
    "awaitnewpromiseresol2": ");\r\n            await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n            // √âtape 2: Cr√©er de nouveaux utilisateurs\r\n            setResults(prev => prev + ",
    "constsnapshotawaitge": ");\r\n            const snapshot = await getDocs(usersCollection);\r\n\r\n            if (snapshot.size > 0) {\r\n                console.log(`‚ÑπÔ∏è ${snapshot.size} utilisateurs existent d√©j√†, pas d",
    "constsnapshotawaitge1": ");\r\n            const snapshot = await getDocs(usersCollection);\r\n\r\n            if (snapshot.size > 0) {\r\n                console.log(`‚ÑπÔ∏è ${snapshot.size} utilisateurs existent d√©j√†, pas d",
    "constsnapshotawaitge2": ");\r\n            const snapshot = await getDocs(usersCollection);\r\n\r\n            if (snapshot.size > 0) {\r\n                console.log(`‚ÑπÔ∏è ${snapshot.size} utilisateurs existent d√©j√†, pas d",
    "constuserssnapshotaw": ");\r\n            const usersSnapshot = await getDocs(usersCollection);\r\n\r\n            setResults(prev => prev + `üìä ${usersSnapshot.size} utilisateur(s) trouv√©(s)\\n`);\r\n\r\n            if (usersSnapshot.size === 0) {\r\n                setResults(prev => prev + ",
    "constuserssnapshotaw1": ");\r\n            const usersSnapshot = await getDocs(usersCollection);\r\n\r\n            setResults(prev => prev + `üìä ${usersSnapshot.size} utilisateur(s) trouv√©(s)\\n`);\r\n\r\n            if (usersSnapshot.size === 0) {\r\n                setResults(prev => prev + ",
    "finallysetloadingfal": ");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchReferrals();\r\n    }, [user]);\r\n\r\n    return {\r\n        referrals,\r\n        stats,\r\n        loading,\r\n        error\r\n    };\r\n};\r\n\r\n// Hook pour la recherche d",
    "purgertouslesutilisa2": ");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Purger TOUS les utilisateurs existants (Firebase Auth + Firestore)\r\n     * ‚ö†Ô∏è OP√âRATION IRR√âVERSIBLE - UTILISER AVEC PR√âCAUTION\r\n     *",
    "finallysetsyncloadin": ");\r\n    } finally {\r\n      setSyncLoading(false);\r\n    }\r\n  };\r\n  // Create test users handler - VERSION S√âCURIS√âE (Firestore seulement)\r\n  const handleCreateTestUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(",
    "finallysetsyncloadin1": ");\r\n    } finally {\r\n      setSyncLoading(false);\r\n    }\r\n  };\r\n  // Create test users handler - VERSION S√âCURIS√âE (Firestore seulement)\r\n  const handleCreateTestUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      console.log(",
    "constiscreatemodalop": ");\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [createLoading, setCreateLoading] = useState(false);\r\n  const [syncLoading, setSyncLoading] = useState(false);\r\n  const [userStats, setUserStats] = useState({\r\n    total: 0,\r\n    byRole: { admin: 0, supplier: 0, customer: 0, sourcer: 0 },\r\n    active: 0,\r\n    inactive: 0\r\n  });\r\n\r\n  const { showToast } = useToast();\r\n  // üö® DIAGNOSTIC: D√©sactivation temporaire du hook useUserSync\r\n  // const { syncUsers, getUserStats } = useUserSync(true); // Activer la synchronisation automatique\r\n  const { getUserStats } = useUserSync(false); // D√âSACTIV√â pour test - plus de syncUsers\r\n\r\n  // Fonction helper pour convertir les dates Firestore en s√©curit√©\r\n  const safeDate = (dateValue: any): Date => {\r\n    if (!dateValue) return new Date();\r\n\r\n    try {\r\n      if (dateValue instanceof Date) return dateValue;\r\n      if (typeof dateValue === ",
    "constiscreatemodalop1": ");\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [createLoading, setCreateLoading] = useState(false);\r\n  const [syncLoading, setSyncLoading] = useState(false);\r\n  const [userStats, setUserStats] = useState({\r\n    total: 0,\r\n    byRole: { admin: 0, supplier: 0, customer: 0, sourcer: 0 },\r\n    active: 0,\r\n    inactive: 0\r\n  });\r\n\r\n  const { showToast } = useToast();\r\n  // üö® DIAGNOSTIC: D√©sactivation temporaire du hook useUserSync\r\n  // const { syncUsers, getUserStats } = useUserSync(true); // Activer la synchronisation automatique\r\n  const { getUserStats } = useUserSync(false); // D√âSACTIV√â pour test - plus de syncUsers\r\n\r\n  // Fonction helper pour convertir les dates Firestore en s√©curit√©\r\n  const safeDate = (dateValue: any): Date => {\r\n    if (!dateValue) return new Date();\r\n\r\n    try {\r\n      if (dateValue instanceof Date) return dateValue;\r\n      if (typeof dateValue === ",
    "constiscreatemodalop2": ");\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\r\n  const [createLoading, setCreateLoading] = useState(false);\r\n  const [syncLoading, setSyncLoading] = useState(false);\r\n  const [userStats, setUserStats] = useState({\r\n    total: 0,\r\n    byRole: { admin: 0, supplier: 0, customer: 0, sourcer: 0 },\r\n    active: 0,\r\n    inactive: 0\r\n  });\r\n\r\n  const { showToast } = useToast();\r\n  // üö® DIAGNOSTIC: D√©sactivation temporaire du hook useUserSync\r\n  // const { syncUsers, getUserStats } = useUserSync(true); // Activer la synchronisation automatique\r\n  const { getUserStats } = useUserSync(false); // D√âSACTIV√â pour test - plus de syncUsers\r\n\r\n  // Fonction helper pour convertir les dates Firestore en s√©curit√©\r\n  const safeDate = (dateValue: any): Date => {\r\n    if (!dateValue) return new Date();\r\n\r\n    try {\r\n      if (dateValue instanceof Date) return dateValue;\r\n      if (typeof dateValue === ",
    "constsuggestionssets": ");\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n\r\n  // Refs pour les dropdowns\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "constsuggestionssets1": ");\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n\r\n  // Refs pour les dropdowns\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "constsuggestionssets2": ");\r\n  const [suggestions, setSuggestions] = useState<string[]>([]);\r\n\r\n  // Refs pour les dropdowns\r\n  const languageDropdownRef = useRef<HTMLDivElement>(null);\r\n  const currencyDropdownRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "0updateusermessagesu": ")[0],\n    };\n    \n    updateUser({ messages: [...user.messages, newMessage] });\n    setMessage(",
    "0updateusermessagesu1": ")[0],\n    };\n    \n    updateUser({ messages: [...user.messages, newMessage] });\n    setMessage(",
    "linkongletconteneurs": ")}\n              </Link>\n              {/* Onglet Conteneurs visible uniquement pour les fournisseurs connect√©s */}\n              {user && user.role === ",
    "linkdivdivdivnotific": ")}\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Notification Center - Affich√© uniquement pour les utilisateurs connect√©s *",
    "linkdivdivdivnotific1": ")}\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Notification Center - Affich√© uniquement pour les utilisateurs connect√©s *",
    "linkdivdivdivnotific2": ")}\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notification Center */}\r\n      {user && (\r\n        <NotificationCenter\r\n          isOpen={isNotificationCenterOpen}\r\n          onClose={() => setIsNotificationCenterOpen(false)}\r\n          onUnreadCountChange={() => refreshNotifications()}\r\n        ",
    "traductionsmanquante": ",\n\n    // Traductions manquantes pour le tableau de bord fournisseur\n    ",
    "traductionsmanquante1": ",\n\n    // Traductions manquantes pour le tableau de bord fournisseur\n    ",
    "traductionspourlespa": ",\n\n    // Traductions pour les param√®tres\n    ",
    "traductionspourlespa1": ",\n\n    // Traductions pour les param√®tres\n    ",
    "traductionspourlespa2": ",\n\n    // Traductions pour les param√®tres\n    ",
    "favoritesmessagesbro": ",\n          favorites: [],\n          messages: [],\n          browsingHistory: [],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        await setDoc(userDocRef, userData);\n        return { user: userData, error: null };\n      } else {\n        // R√©cup√©rer les donn√©es existantes de Firestore\n        const userData = userDoc.data() as User;\n        const hydratedUser: User = {\n          ...userData,\n          favorites: userData.favorites || [],\n          messages: userData.messages || [],\n          browsingHistory: userData.browsingHistory || []\n        };\n        return { user: hydratedUser, error: null };\n      }\n    } catch (error) {\n      console.error(",
    "favoritesmessagesbro1": ",\n          favorites: [],\n          messages: [],\n          browsingHistory: [],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        await setDoc(userDocRef, userData);\n        return { user: userData, error: null };\n      } else {\n        // R√©cup√©rer les donn√©es existantes de Firestore\n        const userData = userDoc.data() as User;\n        const hydratedUser: User = {\n          ...userData,\n          favorites: userData.favorites || [],\n          messages: userData.messages || [],\n          browsingHistory: userData.browsingHistory || []\n        };\n        return { user: hydratedUser, error: null };\n      }\n    } catch (error) {\n      console.error(",
    "favoritesmessagesbro2": ",\n          favorites: [],\n          messages: [],\n          browsingHistory: [],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        await setDoc(userDocRef, userData);\n        return { user: userData, error: null };\n      } else {\n        // R√©cup√©rer les donn√©es existantes de Firestore\n        const userData = userDoc.data() as User;\n        const hydratedUser: User = {\n          ...userData,\n          favorites: userData.favorites || [],\n          messages: userData.messages || [],\n          browsingHistory: userData.browsingHistory || []\n        };\n        return { user: hydratedUser, error: null };\n      }\n    } catch (error) {\n      console.error(",
    "textresultcreatedlen": ",\r\n                    text: `${result.created.length} utilisateurs essentiels cr√©√©s avec succ√®s`\r\n                });\r\n\r\n                ",
    "textresultcreatedlen1": ",\r\n                    text: `${result.created.length} utilisateurs essentiels cr√©√©s avec succ√®s`\r\n                });\r\n\r\n                ",
    "textresultcreatedlen2": ",\r\n                    text: `${result.created.length} utilisateurs essentiels cr√©√©s avec succ√®s`\r\n                });\r\n\r\n                // Afficher les identifiants dans la console\r\n                console.log(",
    "createdatnewdatetois": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                // Note: En production, utiliser Firebase Admin SDK pour cr√©er dans Auth\r\n                userType: ",
    "createdatnewdatetois1": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                // Note: En production, utiliser Firebase Admin SDK pour cr√©er dans Auth\r\n                userType: ",
    "createdatnewdatetois2": ",\r\n                createdAt: new Date().toISOString(),\r\n                updatedAt: new Date().toISOString(),\r\n                created_at: new Date().toISOString(),\r\n                updated_at: new Date().toISOString(),\r\n                // Note: En production, utiliser Firebase Admin SDK pour cr√©er dans Auth\r\n                userType: ",
    "favoritesbrowsinghis": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: userData.role === ",
    "rolepardefautpourles": ", // R√¥le par d√©faut pour les nouveaux utilisateurs\r\n                    isActive: true,\r\n                    language: ",
    "rolepardefautpourles1": ", // R√¥le par d√©faut pour les nouveaux utilisateurs\r\n                    isActive: true,\r\n                    language: ",
    "rolepardefautpourles2": ", // R√¥le par d√©faut pour les nouveaux utilisateurs\r\n                    isActive: true,\r\n                    language: ",
    "jsonstringifydemouse": ", JSON.stringify(demoUser));\n\n      // Redirection bas√©e sur le r√¥le d√©termin√©\n      switch (userRole) {\n        case ",
    "jsonstringifydemouse1": ", JSON.stringify(demoUser));\n\n      // Redirection bas√©e sur le r√¥le d√©termin√©\n      switch (userRole) {\n        case ",
    "errthrowerrreturncol": ", err);\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    return {\r\n        collaborations,\r\n        loading,\r\n        error,\r\n        updateCollaborationStatus,\r\n        refetch: () => {\r\n            if (user) {\r\n                const fetchCollaborations = async () => {\r\n                    const profile = await influencerService.getInfluencerProfile(user.id);\r\n                    if (profile) {\r\n                        const data = await collaborationService.getCollaborationsByInfluencer(profile.id!);\r\n                        setCollaborations(data);\r\n                    }\r\n                };\r\n                fetchCollaborations();\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n// Hook pour le profil influenceur\r\nexport const useInfluencerProfile = () => {\r\n    const [profile, setProfile] = useState<InfluencerProfile | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            if (!user) return;\r\n\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                const data = await influencerService.getInfluencerProfile(user.id);\r\n                setProfile(data);\r\n            } catch (err) {\r\n                console.error(",
    "errorthrowerrorobtie": ", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Obtient les statistiques des utilisateurs\n   *",
    "errorreturncreerdesu": ", error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test (pour le d√©veloppement)\r\n     *",
    "errorreturncreerdesu1": ", error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test (pour le d√©veloppement)\r\n     *",
    "errorreturncreerdesu2": ", error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test (pour le d√©veloppement)\r\n     */\r\n    async createTestUsers(): Promise<{ success: boolean; count: number; error?: string }> {\r\n        try {\r\n            console.log(",
    "errorreturnfalsecree": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er et sauvegarder un utilisateur dans la base de donn√©es\r\n     *",
    "errorreturnfalsecree1": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (Firebase Auth + Firestore)\r\n     *",
    "errorreturnfalsecree2": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (Firebase Auth + Firestore)\r\n     *",
    "errorreturnfalsecree3": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (Firebase Auth + Firestore)\r\n     */\r\n    async createUser(userData: CreateUserData): Promise<{ success: boolean; user?: AdminUser; error?: string }> {\r\n        const currentUser = auth.currentUser;\r\n\r\n        try {\r\n            console.log(",
    "errorreturnfalsecree4": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (temporairement seulement dans Firestore)\r\n     * Note: En production, il faudrait utiliser Firebase Admin SDK ou Cloud Functions\r\n     *",
    "errorreturnfalsecree5": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (temporairement seulement dans Firestore)\r\n     * Note: En production, il faudrait utiliser Firebase Admin SDK ou Cloud Functions\r\n     *",
    "errorreturnfalsecree6": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur (temporairement seulement dans Firestore)\r\n     * Note: En production, il faudrait utiliser Firebase Admin SDK ou Cloud Functions\r\n     */\r\n    async createUser(userData: CreateUserData): Promise<{ success: boolean; user?: AdminUser; error?: string }> {\r\n        try {\r\n            console.log(",
    "errorreturnfalsecree7": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur SANS d√©connecter l",
    "errorreturnfalsecree8": ", error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un utilisateur complet (Firebase Auth + Firestore) SANS d√©connecter l",
    "errorreturnnulldeter": ", error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D√©terminer la redirection selon le r√¥le\r\n     */\r\n    private determineRedirection(role: UserRole): string {\r\n        const redirections: Record<UserRole, string> = {\r\n            admin: ",
    "errorreturnsuccessfa": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er des utilisateurs de test pour le d√©veloppement\r\n     *",
    "errorreturnsuccessfa1": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "errorreturnsuccessfa2": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "errorreturnsuccessfa3": ", error);\r\n            return {\r\n                success: false,\r\n                error: this.getErrorMessage(error.message)\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     */\r\n    async getAllUsers(): Promise<SupabaseAdminUser[]> {\r\n        try {\r\n            console.log(",
    "errorreturnsuccessfa4": ", error);\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "errorthrowerrorcreel": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©e les utilisateurs de test SEULEMENT dans Firestore\r\n     *",
    "errorexportconstadmi": ", error);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminUserCreationWithAuthService = new AdminUserCreationWithAuthService();\r\n\r\n// Auto-nettoyage lors du d√©chargement de la page\r\nif (typeof window !== ",
    "errorexportconstadmi1": ", error);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminUserCreationWithAuthService = new AdminUserCreationWithAuthService();\r\n\r\n// Auto-nettoyage lors du d√©chargement de la page\r\nif (typeof window !== ",
    "errorafficherlesstat": ", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Afficher les statistiques utilisateurs\r\n     *",
    "errorthrowerrorcreet": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cr√©e tous les utilisateurs de test\r\n   *",
    "firebaseuseruidadmin": ", firebaseUser.uid), adminUserProfile);\r\n            console.log(",
    "firebaseuseruidconst": ", firebaseUser.uid);\n      const userDoc = await getDoc(userDocRef);\n\n      if (!userDoc.exists()) {\n        // Cr√©er le document utilisateur si c",
    "firebaseuseruidconst1": ", firebaseUser.uid);\n      const userDoc = await getDoc(userDocRef);\n\n      if (!userDoc.exists()) {\n        // Cr√©er le document utilisateur si c",
    "firebaseuseruidconst2": ", firebaseUser.uid);\n      const userDoc = await getDoc(userDocRef);\n\n      if (!userDoc.exists()) {\n        // Cr√©er le document utilisateur si c",
    "firebaseuseruidconst3": ", firebaseUser.uid);\r\n            const userDoc = await getDoc(userDocRef);\r\n\r\n            if (!userDoc.exists()) {\r\n                console.error(`‚ùå Profil utilisateur non trouv√©: ${firebaseUser.uid}`);\r\n                return null;\r\n            }\r\n\r\n            const userData = userDoc.data() as User;\r\n\r\n            ",
    "settingssethaschange": ", settings);\r\n    setHasChanges(false);\r\n    // Afficher un toast de succ√®s\r\n  };\r\n\r\n  const tabs = [\r\n    { id: ",
    "settingssethaschange1": ", settings);\r\n    setHasChanges(false);\r\n    // Afficher un toast de succ√®s\r\n  };\r\n\r\n  const tabs = [\r\n    { id: ",
    "userdataconsterroraw": ", userData);\n      const { error } = await firebaseAuthService.updateUser(user.id, userData);\n\n      if (error) throw error;\n\n      // Mettre √† jour l",
    "userdataconsterroraw1": ", userData);\n      const { error } = await firebaseAuthService.updateUser(user.id, userData);\n\n      if (error) throw error;\n\n      // Mettre √† jour l",
    "useridconstquerysnap": ", userId)\r\n            );\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            if (querySnapshot.empty) return null;\r\n\r\n            const doc = querySnapshot.docs[0];\r\n            return {\r\n                id: doc.id,\r\n                ...doc.data(),\r\n                createdAt: doc.data().createdAt.toDate(),\r\n                updatedAt: doc.data().updatedAt.toDate()\r\n            } as InfluencerProfile;\r\n        } catch (error) {\r\n            console.error(",
    "useridifuserdocexist": ", userId));\n      if (!userDoc.exists()) return null;\n      const data = userDoc.data() as User;\n      return {\n        ...data,\n        favorites: data.favorites || [],\n        messages: data.messages || [],\n        browsingHistory: data.browsingHistory || []\n      };\n    } catch (error) {\n      console.error(",
    "returnrendercompanys": ":\r\n        return renderCompanySettings(); // Simplifi√© pour l",
    "returnrendercompanys1": ":\r\n        return renderCompanySettings(); // Simplifi√© pour l",
    "returnrendercompanys2": ":\r\n        return renderCompanySettings(); // Simplifi√© pour l",
    "returnrendercompanys3": ":\r\n        return renderCompanySettings(); // Simplifi√© pour l",
    "classfirebaseauthser": ";\n\nclass FirebaseAuthService {\n  private currentUser: FirebaseUser | null = null;\n\n  constructor() {\n    // √âcouter les changements d",
    "classfirebaseauthser1": ";\n\nclass FirebaseAuthService {\n  private currentUser: FirebaseUser | null = null;\n\n  constructor() {\n    // √âcouter les changements d",
    "constproductpagereac": ";\n\nconst ProductPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { t, language } = useLanguage();\n  const { user, updateUser } = useAuth();\n  const { currency } = useCurrency();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [activeImage, setActiveImage] = useState(0);\n  const [showContactForm, setShowContactForm] = useState(false);\n  const [showSampleForm, setShowSampleForm] = useState(false);\n  const [message, setMessage] = useState(",
    "creerunnouvelutilisa": ";\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur via Cloud Functions (recommand√©)\r\n     * Cette m√©thode √©vite de d√©connecter l",
    "creerunnouvelutilisa1": ";\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur via Cloud Functions (recommand√©)\r\n     * Cette m√©thode √©vite de d√©connecter l",
    "creerunnouvelutilisa2": ";\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur via Cloud Functions (recommand√©)\r\n     * Cette m√©thode √©vite de d√©connecter l",
    "creerunutilisateurun": ";\r\n\r\n    /**\r\n     * Cr√©er un utilisateur UNIQUEMENT dans Firestore\r\n     * AUCUN appel √† Firebase Auth - IMPOSSIBLE de d√©connecter\r\n     *",
    "creerunutilisateurun1": ";\r\n\r\n    /**\r\n     * Cr√©er un utilisateur UNIQUEMENT dans Firestore\r\n     * AUCUN appel √† Firebase Auth - IMPOSSIBLE de d√©connecter\r\n     *",
    "creerunutilisateurun2": ";\r\n\r\n    /**\r\n     * Cr√©er un utilisateur UNIQUEMENT dans Firestore\r\n     * AUCUN appel √† Firebase Auth - IMPOSSIBLE de d√©connecter\r\n     */\r\n    async createUserFirestoreOnly(userData: CreateUserData): Promise<{\r\n        success: boolean;\r\n        user?: any;\r\n        error?: string;\r\n    }> {\r\n        try {\r\n            console.log(",
    "recuperertouslesutil": ";\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs SANS aucune modification\r\n     * Cette m√©thode ne touche √† rien, elle fait juste une lecture\r\n     *",
    "recuperertouslesutil1": ";\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs SANS aucune modification\r\n     * Cette m√©thode ne touche √† rien, elle fait juste une lecture\r\n     *",
    "recuperertouslesutil2": ";\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs SANS aucune modification\r\n     * Cette m√©thode ne touche √† rien, elle fait juste une lecture\r\n     */\r\n    async getAllUsersReadOnly(): Promise<AdminUser[]> {\r\n        try {\r\n            console.log(",
    "scriptdediagnosticpo": ";\r\n\r\n/**\r\n * Script de diagnostic pour le probl√®me de redirection admin\r\n * Ce script v√©rifie et corrige la configuration de l",
    "scriptdediagnosticpo1": ";\r\n\r\n/**\r\n * Script de diagnostic pour le probl√®me de redirection admin\r\n * Ce script v√©rifie et corrige la configuration de l",
    "servicespecialisepou": ";\r\n\r\n/**\r\n * Service sp√©cialis√© pour g√©rer la redirection admin\r\n *",
    "hookpourlescollabora": ";\r\n\r\n// Hook pour les collaborations\r\nexport const useCollaborations = () => {\r\n    const [collaborations, setCollaborations] = useState<Collaboration[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const fetchCollaborations = async () => {\r\n            if (!user) return;\r\n\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                // R√©cup√©rer d",
    "hookpourlescollabora1": ";\r\n\r\n// Hook pour les collaborations\r\nexport const useCollaborations = () => {\r\n    const [collaborations, setCollaborations] = useState<Collaboration[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const fetchCollaborations = async () => {\r\n            if (!user) return;\r\n\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n\r\n                // R√©cup√©rer d",
    "constproductrecommen": ";\r\n\r\nconst ProductRecommendations: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const [currentIndex, setCurrentIndex] = useState(0);  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n  const touchStartX = useRef<number>(0);\r\n  const touchEndX = useRef<number>(0);\r\n  \r\n  // S√©lectionner 8 produits recommand√©s (m√©lange des premiers produits)\r\n  const recommendedProducts = products.slice(0, 8);\r\n  \r\n  ",
    "interfacefooterprops": ";\r\n\r\ninterface FooterProps {\r\n  inAdminLayout?: boolean;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ inAdminLayout = false }) => {\r\n  const { t } = useLanguage();\r\n  const currentYear = new Date().getFullYear();\r\n  const location = useLocation();\r\n\r\n  // V√©rifier si on est dans l",
    "interfacefooterprops1": ";\r\n\r\ninterface FooterProps {\r\n  inAdminLayout?: boolean;\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = ({ inAdminLayout = false }) => {\r\n  const { t } = useLanguage();\r\n  const currentYear = new Date().getFullYear();\r\n  const location = useLocation();\r\n\r\n  // V√©rifier si on est dans l",
    "interfacenotificatio": ";\r\n\r\ninterface NotificationCenterProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onUnreadCountChange: (count: number) => void;\r\n}\r\n\r\nconst NotificationCenter: React.FC<NotificationCenterProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onUnreadCountChange\r\n}) => {\r\n  const { t } = useLanguage();\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [filters, setFilters] = useState<NotificationFilters>({});\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [markingAllAsRead, setMarkingAllAsRead] = useState(false);\r\n\r\n  const notificationCenterRef = useRef<HTMLDivElement>(null);\r\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Charger les notifications\r\n  const loadNotifications = async (resetPage = false) => {\r\n    if (loading) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const currentPage = resetPage ? 1 : page;\r\n      const response = await notificationService.getNotifications(currentPage, 20, filters);\r\n      \r\n      if (resetPage) {\r\n        setNotifications(response.notifications);\r\n        setPage(2);\r\n      } else {\r\n        setNotifications(prev => [...prev, ...response.notifications]);\r\n        setPage(prev => prev + 1);\r\n      }\r\n      \r\n      setHasMore(response.hasMore);\r\n      setUnreadCount(response.unreadCount);\r\n      onUnreadCountChange(response.unreadCount);\r\n    } catch (err) {\r\n      setError(",
    "interfacenotificatio1": ";\r\n\r\ninterface NotificationCenterProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onUnreadCountChange: (count: number) => void;\r\n}\r\n\r\nconst NotificationCenter: React.FC<NotificationCenterProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onUnreadCountChange\r\n}) => {\r\n  const { t } = useLanguage();\r\n  const navigate = useNavigate();\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [filters, setFilters] = useState<NotificationFilters>({});\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [markingAllAsRead, setMarkingAllAsRead] = useState(false);\r\n\r\n  const notificationCenterRef = useRef<HTMLDivElement>(null);\r\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Charger les notifications\r\n  const loadNotifications = async (resetPage = false) => {\r\n    if (loading) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const currentPage = resetPage ? 1 : page;\r\n      const response = await notificationService.getNotifications(currentPage, 20, filters);\r\n      \r\n      if (resetPage) {\r\n        setNotifications(response.notifications);\r\n        setPage(2);\r\n      } else {\r\n        setNotifications(prev => [...prev, ...response.notifications]);\r\n        setPage(prev => prev + 1);\r\n      }\r\n      \r\n      setHasMore(response.hasMore);\r\n      setUnreadCount(response.unreadCount);\r\n      onUnreadCountChange(response.unreadCount);\r\n    } catch (err) {\r\n      setError(",
    "returnsuccessfalseer": ";\r\n            }\r\n\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "returnsuccessfalseer1": ";\r\n            }\r\n\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "returnsuccessfalseer2": ";\r\n            }\r\n\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     */\r\n    async getAllUsers(): Promise<AdminUser[]> {\r\n        try {\r\n            console.log(",
    "elseiferrormessageer": ";\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n\r\n            return { success: false, error: errorMessage };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * R√©cup√©rer tous les utilisateurs\r\n     *",
    "seterrorsnewerrorsre": ";\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        // V√©rifier si un admin est connect√©\r\n        if (!auth.currentUser) {\r\n            setErrors({ general: ",
    "seterrorsnewerrorsre1": ";\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        // V√©rifier si un admin est connect√©\r\n        if (!auth.currentUser) {\r\n            setErrors({ general: ",
    "constgettypeiconfrom": ";\r\n  };\r\n\r\n  const getTypeIcon = (fromType: string) => {\r\n    const icons = {\r\n      customer: <User size={16} />,\r\n      supplier: <MessageSquare size={16} ",
    "composantsdetestdesa": ";\r\n// üö® COMPOSANTS DE TEST D√âSACTIV√âS - ils utilisent des services avec Auth Firebase\r\n// import UserCreationTest from ",
    "importsdeservicessec": ";\r\n// üö® IMPORTS DE SERVICES S√âCURIS√âS UNIQUEMENT (Firestore seulement, pas Auth)\r\nimport { finalUserCreationService } from ",
    "importsdeservicessec1": ";\r\n// üö® IMPORTS DE SERVICES S√âCURIS√âS UNIQUEMENT (Firestore seulement, pas Auth)\r\nimport { finalUserCreationService } from ",
    "importuserprofilefro": ";\r\nimport UserProfile from ",
    "importuserprofilefro1": ";\r\nimport UserProfile from ",
    "importmessagesquares": ";\r\nimport { MessageSquare, Search, Plus, Send, Paperclip, MoreVertical, User } from ",
    "importshieldeyecheck": ";\r\nimport { Shield, Eye, CheckCircle, XCircle, AlertTriangle, MessageSquare, User, Package } from ",
    "importstarsearchmess": ";\r\nimport { Star, Search, MessageSquare, ThumbsUp, Calendar, User, Package } from ",
    "interfacesecuriseepo": ">\r\n                                Interface s√©curis√©e pour la gestion des comptes utilisateurs\r\n                            <",
    "interfacesecuriseepo1": ">\r\n                                Interface s√©curis√©e pour la gestion des comptes utilisateurs\r\n                            <",
    "strongdangerstrongsu": ">\r\n                            ‚ö†Ô∏è <strong>DANGER:</strong> Supprime TOUS les utilisateurs existants. Op√©ration irr√©versible.\r\n                        <",
    "strongdangerstrongsu1": ">\r\n                            ‚ö†Ô∏è <strong>DANGER:</strong> Supprime TOUS les utilisateurs existants. Op√©ration irr√©versible.\r\n                        <",
    "creerunnouvelutilisa3": ">\r\n                        Cr√©er un nouvel utilisateur\r\n                    <",
    "creerunnouvelutilisa4": ">\r\n                        Cr√©er un nouvel utilisateur\r\n                    <",
    "settingssize16parame": ">\r\n                      <Settings size={16} />\r\n                      Param√®tres avanc√©s\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Section de s√©curit√© avanc√©e - Nouvelles fonctionnalit√©s *",
    "settingssize16parame1": ">\r\n                      <Settings size={16} />\r\n                      Param√®tres avanc√©s\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Section de s√©curit√© avanc√©e - Nouvelles fonctionnalit√©s *",
    "settingssize18parame": ">\r\n                      <Settings size={18} />\r\n                      Param√®tres de confidentialit√©\r\n                    <",
    "settingssize18parame1": ">\r\n                      <Settings size={18} />\r\n                      Param√®tres de confidentialit√©\r\n                    <",
    "li1strongcompteparde": ">\r\n                    <li>1. <strong>Compte Par D√©faut</strong> : Cr√©e admin@chinetonusine.com ",
    "li1strongcompteparde1": ">\r\n                    <li>1. <strong>Compte Par D√©faut</strong> : Cr√©e admin@chinetonusine.com / admin123456</li>\r\n                    <li>2. <strong>Compte Personnalis√©</strong> : Modifiez les champs puis cr√©ez</li>\r\n                    <li>3. <strong>Comptes Test</strong> : Cr√©e 3 comptes admin diff√©rents</li>\r\n                    <li>4. <strong>Apr√®s cr√©ation</strong> : D√©connectez-vous et reconnectez-vous</li>\r\n                    <li>5. <strong>V√©rification</strong> : Redirection automatique vers /admin/dashboard</li>\r\n                </ol>\r\n            </div>\r\n\r\n            {/* Acc√®s rapide console *",
    "creationdecompteadmi": ">\r\n                    Cr√©ation de Compte Admin\r\n                </h3>\r\n            </div>\r\n\r\n            {/* Formulaire de cr√©ation personnalis√©e *",
    "creationdesutilisate": ">\r\n                    {/* Cr√©ation des utilisateurs essentiels *",
    "creationdesutilisate1": ">\r\n                    {/* Cr√©ation des utilisateurs essentiels *",
    "scoredesecurite": ">\r\n                  {/* Score de s√©curit√© *",
    "scoredesecurite1": ">\r\n                  {/* Score de s√©curit√© *",
    "configurezlesparamet": ">\r\n              Configurez les param√®tres g√©n√©raux de la plateforme\r\n            <",
    "configurezlesparamet1": ">\r\n              Configurez les param√®tres g√©n√©raux de la plateforme\r\n            <",
    "delaidexpirationadmi": ">\r\n              D√©lai d'expiration admin (minutes)\r\n            </label>\r\n            <input\r\n              type=",
    "gestiondesutilisateu1": ">\r\n              Gestion des Utilisateurs\r\n            <",
    "gereztouslesutilisat": ">\r\n              G√©rez tous les utilisateurs de la plateforme\r\n            <",
    "gereztouslesutilisat1": ">\r\n              G√©rez tous les utilisateurs de la plateforme\r\n            <",
    "parametresdelaplatef": ">\r\n              Param√®tres de la Plateforme\r\n            <",
    "parametresdelaplatef1": ">\r\n              Param√®tres de la Plateforme\r\n            <",
    "childrendivdivdivcon": ">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserProfile: React.FC = () => {\r\n  const { user: baseUser, loading, updateUser } = useAuth();\r\n  const [tab, setTab] = useState(",
    "divdivdivdivinterfac": "></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n));\r\n\r\ninterface Company {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Quote {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Appointment {\r\n    id: string;\r\n    status: string;\r\n}\r\n\r\ninterface Product {\r\n    id: string;\r\n}\r\n\r\nconst OptimizedDashboard: React.FC = memo(() => {\r\n    const { t } = useLanguage();\r\n\r\n    // Requ√™tes optimis√©es avec mise en cache\r\n    const { data: companies } = useOptimizedQuery<Company>(",
    "administration": ">Administration<",
    "alertesdesecurite2": ">Alertes de s√©curit√©<",
    "alertesdesecurite3": ">Alertes de s√©curit√©<",
    "aucunutilisateurtrou": ">Aucun utilisateur trouv√©.<",
    "chargementdesutilisa": ">Chargement des utilisateurs...<",
    "experienceutilisateu": ">Exp√©rience utilisateur<",
    "gestiondesutilisateu2": ">Gestion des utilisateurs<",
    "modifiezvosparametre": ">Modifiez vos param√®tres de compte ici.<",
    "modifiezvosparametre1": ">Modifiez vos param√®tres de compte ici.<",
    "parametres": ">Param√®tres<",
    "parametres1": ">Param√®tres<",
    "parametres2": ">Param√®tres<",
    "parametres3": ">Param√®tres<",
    "recommandationsdesec": ">Recommandations de s√©curit√©<",
    "recommandationsdesec1": ">Recommandations de s√©curit√©<",
    "reinitialisationdesu": ">R√©initialisation des Utilisateurs<",
    "reinitialisationdesu1": ">R√©initialisation des Utilisateurs<",
    "scoredesecurite2": ">Score de s√©curit√©<",
    "scoredesecurite3": ">Score de s√©curit√©<",
    "sessionspluscourtesp": ">Sessions plus courtes pour les comptes administrateur (recommand√©: 60 minutes)<",
    "seulslesadministrate": ">Seuls les administrateurs peuvent acc√©der √† cette page.<",
    "statistiquesdesecuri": ">Statistiques de s√©curit√© (derni√®res 24h)<",
    "statistiquesdesecuri1": ">Statistiques de s√©curit√© (derni√®res 24h)<",
    "securiteducompte": ">S√©curit√© du compte<",
    "securiteducompte1": ">S√©curit√© du compte<",
    "securiterenforcee": ">S√©curit√© renforc√©e<",
    "securiterenforcee1": ">S√©curit√© renforc√©e<",
    "totalutilisateurs": ">Total Utilisateurs<",
    "utilisateursactifs": ">Utilisateurs Actifs<",
    "utilisateurstotaux": ">Utilisateurs totaux<",
    "utilisateurs": ">Utilisateurs<",
    "votreprofilestvisibl": ">Votre profil est visible par les autres utilisateurs<",
    "vousetesidentifiecom": ">Vous √™tes identifi√© comme administrateur. Aucune s√©lection de r√¥le n√©cessaire.<",
    "vousetesidentifiecom1": ">Vous √™tes identifi√© comme administrateur. Aucune s√©lection de r√¥le n√©cessaire.</div>\n              </div>\n            )}\n\n            <Input\n              type=",
    "verificationdespermi": ">V√©rification des permissions...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <Navigate to={redirectTo} replace />;\n  }\n\n  if (!allowedRoles.includes(user.role)) {\n    // Redirection intelligente bas√©e sur le r√¥le de l",
    "filtereduserslengthu": ">{filteredUsers.length} utilisateur(s) trouv√©(s)<",
    "adminsdkoucloudfunct": "Admin SDK ou Cloud Functions\r\n\r\n            // G√©n√©rer un UID temporaire\r\n            const tempUID = `temp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // Cr√©er le document utilisateur dans Firestore seulement\r\n            const userDoc: Omit<AdminUser, ",
    "adminsdkoucloudfunct1": "Admin SDK ou Cloud Functions\r\n\r\n            // G√©n√©rer un UID temporaire\r\n            const tempUID = `temp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // Cr√©er le document utilisateur dans Firestore seulement\r\n            const userDoc: Omit<AdminUser, ",
    "adminsdkoucloudfunct2": "Admin SDK ou Cloud Functions\r\n\r\n            // G√©n√©rer un UID temporaire\r\n            const tempUID = `temp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // Cr√©er le document utilisateur dans Firestore seulement\r\n            const userDoc: Omit<AdminUser, ",
    "adminsdkconstfakeuid": "Admin SDK)\r\n            const fakeUID = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n            // Cr√©er le document utilisateur dans Firestore\r\n            const userDoc: Omit<AdminUser, ",
    "chaussuresdesecurite": "Chaussures de s√©curit√©",
    "chaussuresdesecurite1": "Chaussures de s√©curit√©",
    "chaussuresdesecurite2": "Chaussures de s√©curit√©",
    "chaussuresdesecurite3": "Chaussures de s√©curit√©",
    "chaussuresdesecurite4": "Chaussures de s√©curit√©",
    "chaussuresdesecurite5": "Chaussures de s√©curit√©",
    "chinetonusineadmin": "ChineTonUsine Admin",
    "chinetonusineadmin1": "ChineTonUsine Admin",
    "creeradminpardefaut": "Cr√©er Admin Par D√©faut",
    "creeradminpardefaut1": "Cr√©er Admin Par D√©faut",
    "creeradminpardefaut2": "Cr√©er Admin Par D√©faut",
    "creerplusieursadmins": "Cr√©er Plusieurs Admins Test",
    "creerplusieursadmins1": "Cr√©er Plusieurs Admins Test",
    "creerplusieursadmins2": "Cr√©er Plusieurs Admins Test",
    "creerutilisateurtest": "Cr√©er Utilisateur (Test Direct)",
    "creerutilisateurtest1": "Cr√©er Utilisateur (Test Direct)",
    "creerutilisateurtest2": "Cr√©er Utilisateur (Test Direct)",
    "creercecompteadmin": "Cr√©er ce Compte Admin",
    "creercecompteadmin1": "Cr√©er ce Compte Admin",
    "creercecompteadmin2": "Cr√©er ce Compte Admin",
    "erreurcreationutilis": "Erreur cr√©ation utilisateur:",
    "erreurcreationutilis1": "Erreur cr√©ation utilisateur:",
    "erreurcreationutilis2": "Erreur cr√©ation utilisateurs:",
    "erreurderecuperation": "Erreur de r√©cup√©ration des donn√©es utilisateur:",
    "erreurderecuperation1": "Erreur de r√©cup√©ration des donn√©es utilisateur:",
    "erreurlorsdelacreati": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati1": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati2": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati3": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati4": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati5": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati6": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati7": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati8": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati9": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati10": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati11": "Erreur lors de la cr√©ation des utilisateurs de test",
    "erreurlorsdelacreati12": "Erreur lors de la cr√©ation des utilisateurs de test:",
    "erreurlorsdelacreati13": "Erreur lors de la cr√©ation des utilisateurs de test:",
    "erreurlorsdelacreati14": "Erreur lors de la cr√©ation des utilisateurs de test:",
    "erreurlorsdelacreati15": "Erreur lors de la cr√©ation du compte admin",
    "erreurlorsdelacreati16": "Erreur lors de la cr√©ation du compte admin",
    "erreurlorsdelamiseaj": "Erreur lors de la mise √† jour de la langue utilisateur:",
    "erreurlorsdelamiseaj1": "Erreur lors de la mise √† jour de la langue utilisateur:",
    "erreurlorsdelamiseaj2": "Erreur lors de la mise √† jour de la langue utilisateur:",
    "erreurlorsdelarecher": "Erreur lors de la recherche des utilisateurs:",
    "erreurlorsdelarecupe": "Erreur lors de la r√©cup√©ration des donn√©es utilisateur Firestore:",
    "erreurlorsdelarecupe1": "Erreur lors de la r√©cup√©ration des donn√©es utilisateur Firestore:",
    "erreurlorsdelarecupe2": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe3": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe4": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe5": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe6": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe7": "Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelasuppre": "Erreur lors de la suppression du profil utilisateur",
    "erreurlorsdelasynchr": "Erreur lors de la synchronisation des utilisateurs",
    "erreurlorsdelasynchr1": "Erreur lors de la synchronisation des utilisateurs",
    "erreurlorsdelaverifi": "Erreur lors de la v√©rification du statut admin:",
    "erreurlorsdelaverifi1": "Erreur lors de la v√©rification du statut admin:",
    "erreurlorsduchargeme": "Erreur lors du chargement des utilisateurs",
    "erreurlorsduchargeme1": "Erreur lors du chargement des utilisateurs",
    "erreurlorsduchargeme2": "Erreur lors du chargement des utilisateurs:",
    "erreurlorsduchargeme3": "Erreur lors du chargement des utilisateurs:",
    "erreurpurgeutilisate": "Erreur purge utilisateurs:",
    "finalisezvotrecomman": "Finalisez votre commande en toute s√©curit√© avec notre syst√®me de paiement prot√©g√©.",
    "finalisezvotrecomman1": "Finalisez votre commande en toute s√©curit√© avec notre syst√®me de paiement prot√©g√©.",
    "finalisezvotrecomman2": "Finalisez votre commande en toute s√©curit√© avec notre syst√®me de paiement prot√©g√©.",
    "impossiblederecherch": "Impossible de rechercher les utilisateurs.",
    "impossiblederecupere": "Impossible de r√©cup√©rer les utilisateurs.",
    "impossiblederecupere1": "Impossible de r√©cup√©rer les utilisateurs.",
    "impossiblederecupere2": "Impossible de r√©cup√©rer les utilisateurs.",
    "messagedespamconfirm": "Message de spam confirm√© et utilisateur sanctionn√©.",
    "messagedespamconfirm1": "Message de spam confirm√© et utilisateur sanctionn√©.",
    "nouveauutilisateurin": "Nouveau utilisateur inscrit",
    "parametres4": "Param√®tres",
    "parametres5": "Param√®tres",
    "parametres6": "Param√®tres",
    "parametres7": "Param√®tres",
    "parametres8": "Param√®tres",
    "parametres9": "Param√®tres",
    "parametres10": "Param√®tres",
    "parametres11": "Param√®tres",
    "parametres12": "Param√®tres",
    "parametres13": "Param√®tres",
    "parametres14": "Param√®tres",
    "parametres15": "Param√®tres",
    "parametres16": "Param√®tres",
    "parametres17": "Param√®tres",
    "parametres18": "Param√®tres",
    "parametressauvegarde": "Param√®tres sauvegard√©s",
    "parametressauvegarde1": "Param√®tres sauvegard√©s",
    "parametressauvegarde2": "Param√®tres sauvegard√©s",
    "parametressauvegarde3": "Param√®tres sauvegard√©s avec succ√®s !",
    "parametressauvegarde4": "Param√®tres sauvegard√©s avec succ√®s !",
    "parametressauvegarde5": "Param√®tres sauvegard√©s avec succ√®s !",
    "payezensecurite": "Payez en s√©curit√©",
    "payezensecurite1": "Payez en s√©curit√©",
    "payezensecurite2": "Payez en s√©curit√©",
    "permissionsinsuffisa": "Permissions insuffisantes pour cr√©er un utilisateur. V√©rifiez les r√®gles de s√©curit√© Firestore.",
    "permissionsinsuffisa1": "Permissions insuffisantes pour cr√©er un utilisateur. V√©rifiez les r√®gles de s√©curit√© Firestore.",
    "permissionsinsuffisa2": "Permissions insuffisantes pour cr√©er un utilisateur. V√©rifiez les r√®gles de s√©curit√© Firestore.",
    "profilutilisateurnon": "Profil utilisateur non trouv√©. Contactez l\\",
    "profilutilisateurnon1": "Profil utilisateur non trouv√©. Contactez l\\",
    "servicedegestiondesu": "Service de gestion des utilisateurs non disponible",
    "suivezletatdevoscomm": "Suivez l'√©tat de vos commandes en temps r√©el depuis votre tableau de bord",
    "securite": "S√©curit√©",
    "securite1": "S√©curit√©",
    "securite2": "S√©curit√©",
    "securite3": "S√©curit√©",
    "securite4": "S√©curit√©",
    "securite5": "S√©curit√©",
    "securite6": "S√©curit√©",
    "securite7": "S√©curit√©",
    "securite8": "S√©curit√©",
    "securite9": "S√©curit√©",
    "securite10": "S√©curit√©",
    "securite11": "S√©curit√©",
    "securiteducompte2": "S√©curit√© du compte",
    "securiteducompte3": "S√©curit√© du compte",
    "securiteducompte4": "S√©curit√© du compte",
    "tableaudebordsourceu": "Tableau de Bord Sourceur",
    "tableaudebord": "Tableau de bord",
    "tableaudebord1": "Tableau de bord",
    "tableaudebord2": "Tableau de bord",
    "tableaudebordfournis": "Tableau de bord fournisseur",
    "tableaudebordfournis1": "Tableau de bord fournisseur",
    "utilisateuradminconf": "Utilisateur admin configur√© avec succ√®s. Reconnectez-vous pour tester la redirection.",
    "utilisateuradminconf1": "Utilisateur admin configur√© avec succ√®s. Reconnectez-vous pour tester la redirection.",
    "utilisateurcreantdem": "Utilisateur cr√©ant de multiples comptes",
    "utilisateurcreantdem1": "Utilisateur cr√©ant de multiples comptes",
    "utilisateurcreedansf": "Utilisateur cr√©√© dans Firestore uniquement. En production, utilisez Firebase Admin SDK pour cr√©er aussi dans Firebase Auth.",
    "utilisateurcreedansf1": "Utilisateur cr√©√© dans Firestore uniquement. En production, utilisez Firebase Admin SDK pour cr√©er aussi dans Firebase Auth.",
    "utilisateurcreedansf2": "Utilisateur cr√©√© dans Firestore uniquement. En production, utilisez Firebase Admin SDK pour cr√©er aussi dans Firebase Auth.",
    "utilisateurcreedansf3": "Utilisateur cr√©√© dans Firestore. Firebase Auth doit √™tre configur√© s√©par√©ment.",
    "utilisateurcreedansf4": "Utilisateur cr√©√© dans Firestore. Firebase Auth doit √™tre configur√© s√©par√©ment.",
    "utilisateurdeconnect": "Utilisateur d√©connect√©",
    "utilisateurdeconnect1": "Utilisateur d√©connect√©",
    "utilisateurinfluence": "Utilisateur influenceur cr√©√©:",
    "utilisateurinfluence1": "Utilisateur influenceur cr√©√©:",
    "utilisateurmisajoura": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura1": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura2": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura3": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura4": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura5": "Utilisateur mis √† jour avec succ√®s",
    "utilisateurnontrouve": "Utilisateur non trouv√©",
    "utilisateurnontrouve1": "Utilisateur non trouv√©",
    "utilisateurs1": "Utilisateurs",
    "utilisateurs2": "Utilisateurs\r\n                    <",
    "utilisateursdetestcr": "Utilisateurs de test cr√©√©s avec succ√®s (Firestore seulement) !",
    "utilisateursdetestcr1": "Utilisateurs de test cr√©√©s avec succ√®s (Firestore seulement) !",
    "utilisateursdetestcr2": "Utilisateurs de test cr√©√©s avec succ√®s (Firestore seulement) !",
    "vousdevezetreconnect": "Vous devez √™tre connect√© avec admin@chinetonusine.com",
    "vousdevezetreconnect1": "Vous devez √™tre connect√© avec admin@chinetonusine.com",
    "ncreationdenouveauxu": "\\nüë• Cr√©ation de nouveaux utilisateurs...\\n",
    "ncreationdescomptesu": "\\nüë• Cr√©ation des comptes utilisateurs...\\n",
    "ncreationdescomptesu1": "\\nüë• Cr√©ation des comptes utilisateurs...\\n",
    "ncreationdescomptesu2": "\\nüë• Cr√©ation des comptes utilisateurs...\\n",
    "nstatistiquesdesutil": "\\nüìä Statistiques des utilisateurs...",
    "nverificationdurolea": "\\nüîê V√©rification du r√¥le admin...",
    "nverificationdurolea1": "\\nüîê V√©rification du r√¥le admin...",
    "admindatabasepagerol": "]}>\r\n            <AdminDatabasePage />\r\n          </RoleBasedRoute>\r\n        }\r\n      />\r\n\r\n      {/* Pages pour le profil utilisateur *",
    "accesadminlilisurvei": "acc√®s admin</li>\r\n              <li>‚Ä¢ Surveillez r√©guli√®rement les alertes de s√©curit√©</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistiques de s√©curit√© en temps r√©el *",
    "accesadminlilisurvei1": "acc√®s admin</li>\r\n              <li>‚Ä¢ Surveillez r√©guli√®rement les alertes de s√©curit√©</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistiques de s√©curit√© en temps r√©el *",
    "adminsolutioncetteme": "admin\r\n     * \r\n     * üéØ SOLUTION : Cette m√©thode cr√©e seulement le document Firestore\r\n     * et n",
    "adminsolutioncetteme1": "admin\r\n     * \r\n     * üéØ SOLUTION : Cette m√©thode cr√©e seulement le document Firestore\r\n     * et n",
    "admintechniqueavance": "admin\r\n     * \r\n     * üéØ TECHNIQUE AVANC√âE : Utilise une instance Firebase s√©par√©e\r\n     *",
    "admintechniqueavance1": "admin\r\n     * \r\n     * üéØ TECHNIQUE AVANC√âE : Utilise une instance Firebase s√©par√©e\r\n     */\r\n    async createUserWithFirebaseAuth(userData: CreateUserData): Promise<{\r\n        success: boolean;\r\n        user?: AdminUser;\r\n        error?: string;\r\n        sessionPreserved?: boolean;\r\n    }> {\r\n        let tempUser: any = null;\r\n\r\n        try {\r\n            console.log(",
    "adminlorsdelacreatio": "admin lors de la cr√©ation d",
    "adminlorsdelacreatio1": "admin lors de la cr√©ation d",
    "admin2chinetonusinec": "admin2@chinetonusine.com",
    "admin2chinetonusinec1": "admin2@chinetonusine.com",
    "admin2chinetonusinec2": "admin2@chinetonusine.com",
    "adminchinetonusineco": "admin@chine-ton-usine.com",
    "adminchinetonusineco1": "admin@chine-ton-usine.com",
    "adminchinetonusineco2": "admin@chinetonusine.com",
    "adminchinetonusineco3": "admin@chinetonusine.com",
    "adminchinetonusineco4": "admin@chinetonusine.com",
    "adminchinetonusineco5": "admin@chinetonusine.com",
    "adminchinetonusineco6": "admin@chinetonusine.com",
    "adminchinetonusineco7": "admin@chinetonusine.com",
    "adminchinetonusineco8": "admin@chinetonusine.com",
    "adminchinetonusineco9": "admin@chinetonusine.com",
    "adminchinetonusineco10": "admin@chinetonusine.com",
    "adminchinetonusineco11": "admin@chinetonusine.com",
    "adminchinetonusineco12": "admin@chinetonusine.com",
    "adminchinetonusineco13": "admin@chinetonusine.com",
    "adminchinetonusineco14": "admin@chinetonusine.com",
    "adminchinetonusineco15": "admin@chinetonusine.com",
    "adminchinetonusineco16": "admin@chinetonusine.com",
    "adminchinetousinecom": "admin@chinetousine.com",
    "adminchinetousinecom1": "admin@chinetousine.com",
    "adminchinetousinecom2": "admin@chinetousine.com",
    "adminchinetousinecom3": "admin@chinetousine.com",
    "adminchinetousinecom4": "admin@chinetousine.com",
    "adminchinetousinecom5": "admin@chinetousine.com",
    "adminchinetousinecom6": "admin@chinetousine.com",
    "administrateurpourcr": "administrateur pour cr√©er un utilisateur",
    "administrateurpourcr1": "administrateur pour cr√©er un utilisateur.",
    "administrateurpourcr2": "administrateur pour cr√©er un utilisateur.",
    "administrateurpourcr3": "administrateur pour cr√©er un utilisateur.",
    "administratorchineto": "administrator@chinetonusine.com",
    "administratorchineto1": "administrator@chinetonusine.com",
    "administratorchineto2": "administrator@chinetonusine.com",
    "administratorchineto3": "administrator@chinetonusine.com",
    "articleconstnewitemc": "article\r\n        const newItem: ContainerItem = {\r\n          id: `item${Date.now()}`,\r\n          containerId,\r\n          productId,\r\n          quantity,\r\n          userId,\r\n        };\r\n        currentContainerItems.set(newItem.id, newItem);        // Mettre √† jour la capacit√© du conteneur\r\n        const updatedUsedCapacity = container.usedCapacity + quantity;\r\n        try {\r\n          await this.updateContainerCapacity(containerId, updatedUsedCapacity);\r\n          resolve(newItem);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }, 300); ",
    "authentificationcons": "authentification\n      const user = await this.getCurrentUser();\n      \n      // V√©rifier Firestore\n      const usersRef = collection(db, ",
    "authentificationcons1": "authentification\n      const user = await this.getCurrentUser();\n      \n      // V√©rifier Firestore\n      const usersRef = collection(db, ",
    "authentificationuniv": "authentification universelle\r\n * Simplifie le processus en attribuant automatiquement les r√¥les\r\n */\r\nexport class UniversalAuthService {\r\n  // R√¥le par d√©faut pour tous les nouveaux utilisateurs\r\n  private static readonly DEFAULT_ROLE: UserRole = ",
    "dashboardcontactsupp": "dashboard.contactSupplier",
    "dashboardmessages": "dashboard.messages",
    "ensembledevotreactiv": "ensemble de votre activit√©\",\n    \"supplier.dashboard.totalProducts\": \"Produits totaux\",\n    \"supplier.dashboard.monthlyRevenue\": \"Chiffre d",
    "environnementdeprodu": "environnement de production\r\n * G√®re la cr√©ation, suppression et synchronisation des utilisateurs Firebase\r\n *",
    "environnementdeprodu1": "environnement de production\r\n * G√®re la cr√©ation, suppression et synchronisation des utilisateurs Firebase\r\n */\r\nexport class ProductionUserService {\r\n    private static instance: ProductionUserService;\r\n    private authStateUnsubscribe: (() => void) | null = null;\r\n\r\n    public static getInstance(): ProductionUserService {\r\n        if (!ProductionUserService.instance) {\r\n            ProductionUserService.instance = new ProductionUserService();\r\n        }\r\n        return ProductionUserService.instance;\r\n    }\r\n\r\n    /**\r\n     * Initialiser la surveillance de l",
    "estpasdansfirestorea": "est pas dans Firestore\r\n            await this.ensureCurrentUserInFirestore();\r\n\r\n            // 3. Re-r√©cup√©rer les utilisateurs apr√®s l",
    "estpasdansfirestorea1": "est pas dans Firestore\r\n            await this.ensureCurrentUserInFirestore();\r\n\r\n            // 3. Re-r√©cup√©rer les utilisateurs apr√®s l",
    "estpasdansfirestorea2": "est pas dans Firestore\r\n            await this.ensureCurrentUserInFirestore();\r\n\r\n            // 3. Re-r√©cup√©rer les utilisateurs apr√®s l",
    "esttrouveproposerdec": "est trouv√©, proposer de cr√©er des utilisateurs de test\r\n      if (convertedUsers.length === 0) {\r\n        console.log(",
    "esttrouveproposerdec1": "est trouv√©, proposer de cr√©er des utilisateurs de test\r\n      if (convertedUsers.length === 0) {\r\n        console.log(",
    "esttrouveproposerdec2": "est trouv√©, proposer de cr√©er des utilisateurs de test\r\n      if (convertedUsers.length === 0) {\r\n        console.log(",
    "instantcreonsdirecte": "instant, cr√©ons directement dans la table users\r\n            ",
    "instantcreonsdirecte1": "instant, cr√©ons directement dans la table users\r\n            // En production, il faudrait d",
    "objetutilisateurdemo": "objet utilisateur d√©mo\r\n   *",
    "superadminchinetonus": "superadmin@chinetonusine.com",
    "supplierdashboardmes": "supplier.dashboard.messages",
    "supplierdashboardmes1": "supplier.dashboard.messages",
    "supplierdashboardmes2": "supplier.dashboard.messages",
    "supplierdashboardthr": "supplier.dashboard.threeNewMessages",
    "supplierdashboardthr1": "supplier.dashboard.threeNewMessages",
    "supplierdashboardthr2": "supplier.dashboard.threeNewMessages",
    "suppliersettingscont": "supplier.settings.contactInfo",
    "suppliersettingsmark": "supplier.settings.marketingNotifications",
    "suppliersettingsmess": "supplier.settings.messageNotifications",
    "suppliersettingsnoti": "supplier.settings.notifications",
    "suppliersettingsorde": "supplier.settings.orderNotifications",
    "suppliersettingsprof": "supplier.settings.profile",
    "suppliersettingspush": "supplier.settings.pushNotifications",
    "suppliersettingsrevi": "supplier.settings.reviewNotifications",
    "securite12": "s√©curit√©",
    "securite13": "s√©curit√©",
    "securite14": "s√©curit√©",
    "undesrolesspecifiesp": "un des r√¥les sp√©cifi√©s\r\n     */\r\n    public hasAnyRole(roles: UserRole[]): boolean {\r\n        if (!this.currentUser) return false;\r\n        return roles.includes(this.currentUser.role);\r\n    }\r\n\r\n    /**\r\n     * Nettoyer le service lors de la destruction\r\n     */\r\n    public cleanup(): void {\r\n        console.log(",
    "unnouveaucompteadmin": "un nouveau compte admin:",
    "unutilisateurfirebas": "un utilisateur Firebase Auth est synchronis√© dans Firestore\r\n     *",
    "unutilisateurfirebas1": "un utilisateur Firebase Auth est synchronis√© dans Firestore\r\n     */\r\n    private async ensureUserSyncInFirestore(firebaseUser: FirebaseUser): Promise<void> {\r\n        try {\r\n            const userDocRef = doc(db, ",
    "utilisateurparamrole": "utilisateur\r\n   * @param role - Le r√¥le de l",
    "utilisateurparamrole1": "utilisateur\r\n   * @param role - Le r√¥le de l",
    "utilisateuractuelpub": "utilisateur actuel\r\n     */\r\n    public getCurrentUser(): User | null {\r\n        return this.currentUser;\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si l",
    "utilisateuractuelpub1": "utilisateur actuel\r\n     */\r\n    public getCurrentUser(): User | null {\r\n        return this.currentUser;\r\n    }\r\n\r\n    /**\r\n     * V√©rifier si l",
    "utilisateuractuellem": "utilisateur actuellement connect√©\r\n     *",
    "utilisateuractuellem1": "utilisateur actuellement connect√©\r\n     * Pour synchroniser TOUS les utilisateurs Firebase Auth, il faut utiliser Firebase Admin SDK c√¥t√© serveur\r\n     *",
    "utilisateuractuellem2": "utilisateur actuellement connect√©\r\n     * Pour synchroniser TOUS les utilisateurs Firebase Auth, il faut utiliser Firebase Admin SDK c√¥t√© serveur\r\n     *",
    "utilisateuractuellem3": "utilisateur actuellement connect√©\r\n     * Pour synchroniser TOUS les utilisateurs Firebase Auth, il faut utiliser Firebase Admin SDK c√¥t√© serveur\r\n     */\r\n    async syncAllVisibleUsers(): Promise<{ success: boolean; count: number; error?: string }> {\r\n        try {\r\n            console.log(",
    "utilisateuractuellem4": "utilisateur actuellement connect√©\r\n     */\r\n    private async checkCurrentUser() {\r\n        console.log(",
    "utilisateuractuellem5": "utilisateur actuellement connect√© s",
    "utilisateuractuellem6": "utilisateur actuellement connect√© s",
    "utilisateuradminchin": "utilisateur admin@chinetonusine.com\r\n *",
    "utilisateurconnectee": "utilisateur connect√©\r\n        // En production, cela ferait appel √† votre API d",
    "utilisateurconnectee1": "utilisateur connect√©\r\n        // En production, cela ferait appel √† votre API d",
    "utilisateurconnectea": "utilisateur connect√©\r\n        await this.checkCurrentUser();\r\n\r\n        // 2. V√©rifier l",
    "utilisateurconnectea1": "utilisateur connect√©\r\n        await this.checkCurrentUser();\r\n\r\n        // 2. V√©rifier l",
    "utilisateurconnectee2": "utilisateur connect√© est dans Firestore\r\n     */\r\n    private async ensureCurrentUserInFirestore(): Promise<void> {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) return;\r\n\r\n        try {\r\n            // V√©rifier si l",
    "utilisateurconnectee3": "utilisateur connect√© est dans Firestore\r\n     */\r\n    private async ensureCurrentUserInFirestore(): Promise<void> {\r\n        const currentUser = auth.currentUser;\r\n        if (!currentUser) return;\r\n\r\n        try {\r\n            // V√©rifier si l",
    "utilisateurconnectep": "utilisateur connect√© peut √™tre synchronis√© c√¥t√© client\r\n            await this.ensureCurrentUserInFirestore();\r\n\r\n            return {\r\n                success: true,\r\n                count: 1,\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "utilisateurconnectep1": "utilisateur connect√© peut √™tre synchronis√© c√¥t√© client\r\n            await this.ensureCurrentUserInFirestore();\r\n\r\n            return {\r\n                success: true,\r\n                count: 1,\r\n            };\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "utilisateurconnecte": "utilisateur connect√©...",
    "utilisateurconnecte1": "utilisateur connect√©:",
    "utilisateurconnecte2": "utilisateur connect√©:",
    "utilisateurconnecte3": "utilisateur connect√©:",
    "utilisateurconnecte4": "utilisateur connect√©:",
    "utilisateurdansfires": "utilisateur dans Firestore\r\n * avec toutes les informations n√©cessaires pour votre application\r\n *",
    "utilisateurdansfires1": "utilisateur dans Firestore\r\n * avec toutes les informations n√©cessaires pour votre application\r\n *",
    "utilisateurdansfires2": "utilisateur dans Firestore\r\n * avec toutes les informations n√©cessaires pour votre application\r\n */\r\n\r\nimport { doc, setDoc, collection, query, where, getDocs } from ",
    "utilisateurdansleloc": "utilisateur dans le localStorage pour la d√©mo\n      localStorage.setItem(",
    "utilisateurdansleloc1": "utilisateur dans le localStorage pour la d√©mo\n      localStorage.setItem(",
    "utilisateurdansleloc2": "utilisateur dans le localStorage pour la d√©mo\n      localStorage.setItem(",
    "utilisateurdansleloc3": "utilisateur dans le localStorage pour la d√©mo\n      localStorage.setItem(",
    "utilisateurdoitetrec": "utilisateur doit √™tre cr√©√© ou synchronis√©",
    "utilisateurdoitetrec1": "utilisateur doit √™tre cr√©√© ou synchronis√©",
    "utilisateurexisteifr": "utilisateur existe\r\n      if (result.user) {\r\n        await firebaseAuthService.signOut(); // Se d√©connecter imm√©diatement\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      ",
    "utilisateurexistedej": "utilisateur existe d√©j√† dans Firestore\r\n            const userDocRef = doc(db, ",
    "utilisateurexistedej1": "utilisateur existe d√©j√† dans Firestore\r\n            const userDocRef = doc(db, ",
    "utilisateurexistedej2": "utilisateur existe d√©j√† dans Firestore ou le cr√©er\n      const userDocRef = doc(db, ",
    "utilisateurexistepeu": "utilisateur existe peut-√™tre d√©j√†\r\n          if (result.error.includes(",
    "utilisateurexistepeu1": "utilisateur existe peut-√™tre d√©j√†\r\n          if (result.error.includes(",
    "utilisateurfournisse": "utilisateur fournisseur connect√©\r\n            const mockUser: CurrentUser = {\r\n                id: ",
    "utilisateurfournisse1": "utilisateur fournisseur connect√©\r\n            const mockUser: CurrentUser = {\r\n                id: ",
    "utilisateurnontrouve2": "utilisateur non trouv√©, il n",
    "utilisateurnontrouve3": "utilisateur non trouv√©, il n",
    "utilisateursansprofi": "utilisateur sans profil\r\n                return {\r\n                    success: false,\r\n                    error: ",
    "utilisateurscettemet": "utilisateurs\r\n     * Cette m√©thode surveille les changements d",
    "utilisateurscettemet1": "utilisateurs\r\n     * Cette m√©thode surveille les changements d",
    "utilisateurscettemet2": "utilisateurs\r\n     * Cette m√©thode surveille les changements d",
    "utilisateurssansmise": "utilisateurs SANS mise √† jour\r\n * \r\n * Ce service r√©cup√®re les utilisateurs SANS d√©clencher de mise √† jour\r\n * de l",
    "utilisateurssansmise1": "utilisateurs SANS mise √† jour\r\n * \r\n * Ce service r√©cup√®re les utilisateurs SANS d√©clencher de mise √† jour\r\n * de l",
    "utilisateurssansmise2": "utilisateurs SANS mise √† jour\r\n * \r\n * Ce service r√©cup√®re les utilisateurs SANS d√©clencher de mise √† jour\r\n * de l",
    "utilisateursdetest": "utilisateurs de test...",
    "utilisateursdetest1": "utilisateurs de test...",
    "utilisateursdetest2": "utilisateurs de test...",
    "prochainesetapes1dec": "}\r\n\r\nüéØ Prochaines √©tapes:\r\n1. D√©connectez-vous de votre session actuelle\r\n2. Connectez-vous avec ces identifiants\r\n3. Vous devriez √™tre redirig√© vers /admin/dashboard`);\r\n            } else {\r\n                setResults(`‚ùå Erreur: ${result.message}`);\r\n            }\r\n        } catch (error: any) {\r\n            setResults(`üí• Exception: ${error.message}`);\r\n        } finally {\r\n            setIsCreating(false);\r\n        }\r\n    };\r\n\r\n    const createDefaultAdmin = async () => {\r\n        setIsCreating(true);\r\n        setResults(",
    "equipementdesecurite": "√âquipement de s√©curit√©",
    "equipementdesecurite1": "√âquipement de s√©curit√©",
    "equipementdesecurite2": "√âquipement de s√©curit√©",
    "etatdevoscommandesen": "√©tat de vos commandes en temps r√©el depuis votre tableau de bord",
    "etatdevoscommandesen1": "√©tat de vos commandes en temps r√©el depuis votre tableau de bord",
    "etatlocalsetusernull": "√©tat local\n      setUser(null);\n\n      console.log(",
    "etatlocalsetusernull1": "√©tat local\n      setUser(null);\n\n      console.log(",
    "etatlocalsetusernull2": "√©tat local\n      setUser(null);\n      localStorage.removeItem(",
    "etatlocalsetusernull3": "√©tat local\n      setUser(null);\n      localStorage.removeItem(",
    "etatlocalconstupdate": "√©tat local\r\n            const updatedUser = { ...user, ...userData };\r\n            setUser(updatedUser);\r\n\r\n            // TODO: Impl√©menter la mise √† jour en base de donn√©es\r\n            console.log(",
    "etatlocalconstupdate1": "√©tat local\r\n            const updatedUser = { ...user, ...userData };\r\n            setUser(updatedUser);\r\n\r\n            // TODO: Impl√©menter la mise √† jour en base de donn√©es\r\n            console.log(",
    "etatlocalthiscurrent": "√©tat local\r\n            this.currentUser = null;\r\n\r\n            console.log(",
    "etrecreepoureviterla": "√™tre cr√©√© pour √©viter la confusion\r\n            if (auth.currentUser?.uid === firebaseUser.uid) {\r\n                await signOut(auth);\r\n                console.log(",
    "etrecreepoureviterla1": "√™tre cr√©√© pour √©viter la confusion\r\n            if (auth.currentUser?.uid === firebaseUser.uid) {\r\n                await signOut(auth);\r\n                console.log(",
    "notelesutilisateursf": "‚ÑπÔ∏è Note: Les utilisateurs Firebase Auth ne peuvent √™tre supprim√©s que c√¥t√© serveur",
    "notelesutilisateursf1": "‚ÑπÔ∏è Note: Les utilisateurs Firebase Auth ne peuvent √™tre supprim√©s que c√¥t√© serveur",
    "notelesutilisateursf2": "‚ÑπÔ∏è Note: Les utilisateurs Firebase Auth ne peuvent √™tre supprim√©s que c√¥t√© serveur",
    "attentionsuppression": "‚ö†Ô∏è ATTENTION: Suppression de TOUS les utilisateurs existants",
    "aucunutilisateurconn": "‚ö†Ô∏è Aucun utilisateur connect√© pour mise √† jour",
    "aucunutilisateurconn1": "‚ö†Ô∏è Aucun utilisateur connect√© pour mise √† jour",
    "certainsutilisateurs": "‚ö†Ô∏è Certains utilisateurs n\\",
    "admintoujoursconnect": "‚úÖ Admin toujours connect√©:",
    "admintoujoursconnect1": "‚úÖ Admin toujours connect√©:",
    "documentutilisateurc": "‚úÖ Document utilisateur cr√©√© (Firebase Auth requis s√©par√©ment)",
    "documentutilisateurc1": "‚úÖ Document utilisateur cr√©√© (Firebase Auth requis s√©par√©ment)",
    "profiladmincreedansf": "‚úÖ Profil admin cr√©√© dans Firestore",
    "profiladmincreedansf1": "‚úÖ Profil admin cr√©√© dans Firestore",
    "roleadmincorrectemen": "‚úÖ R√¥le admin correctement d√©fini",
    "roleadmincorrectemen1": "‚úÖ R√¥le admin correctement d√©fini",
    "roleadmindejacorrect": "‚úÖ R√¥le admin d√©j√† correct",
    "roleadmindejacorrect1": "‚úÖ R√¥le admin d√©j√† correct",
    "rolemisajourversadmi": "‚úÖ R√¥le mis √† jour vers admin",
    "rolemisajourversadmi1": "‚úÖ R√¥le mis √† jour vers admin",
    "touteslesdonneesutil": "‚úÖ Toutes les donn√©es utilisateur ont √©t√© nettoy√©es",
    "touteslesdonneesutil1": "‚úÖ Toutes les donn√©es utilisateur ont √©t√© nettoy√©es",
    "ultrasafeutilisateur": "‚úÖ ULTRA-SAFE: Utilisateur cr√©√© avec succ√®s dans Firestore",
    "ultrasafeutilisateur1": "‚úÖ ULTRA-SAFE: Utilisateur cr√©√© avec succ√®s dans Firestore",
    "utilisateurauthcrees": "‚úÖ Utilisateur Auth cr√©√© sur instance secondaire:",
    "utilisateurauthcrees1": "‚úÖ Utilisateur Auth cr√©√© sur instance secondaire:",
    "utilisateurfirebasea": "‚úÖ Utilisateur Firebase Auth cr√©√©:",
    "utilisateurfirebasea1": "‚úÖ Utilisateur Firebase Auth cr√©√©:",
    "utilisateuractive": "‚úÖ Utilisateur activ√©",
    "utilisateuractive1": "‚úÖ Utilisateur activ√©",
    "utilisateuradmincree": "‚úÖ Utilisateur admin cr√©√©",
    "utilisateuradmincree1": "‚úÖ Utilisateur admin cr√©√©",
    "utilisateuradmincree2": "‚úÖ Utilisateur admin cr√©√© en Firestore",
    "utilisateuradmincree3": "‚úÖ Utilisateur admin cr√©√© en Firestore",
    "utilisateuradminmisa": "‚úÖ Utilisateur admin mis √† jour",
    "utilisateuradminmisa1": "‚úÖ Utilisateur admin mis √† jour",
    "utilisateurcreeavecs": "‚úÖ Utilisateur cr√©√© avec succ√®s:",
    "utilisateurcreeavecs1": "‚úÖ Utilisateur cr√©√© avec succ√®s:",
    "utilisateurcreeavecs2": "‚úÖ Utilisateur cr√©√© avec succ√®s:",
    "utilisateurcreeavecs3": "‚úÖ Utilisateur cr√©√© avec succ√®s:",
    "utilisateurcreedansf5": "‚úÖ Utilisateur cr√©√© dans Firestore avec succ√®s",
    "utilisateurcreedansf6": "‚úÖ Utilisateur cr√©√© dans Firestore avec succ√®s",
    "utilisateurcreedirec": "‚úÖ Utilisateur cr√©√© directement sans AuthContext",
    "utilisateurcreedirec1": "‚úÖ Utilisateur cr√©√© directement sans AuthContext",
    "utilisateurdetestcha": "‚úÖ Utilisateur de test charg√©:",
    "utilisateurdetestcha1": "‚úÖ Utilisateur de test charg√©:",
    "utilisateurmisajoura6": "‚úÖ Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura7": "‚úÖ Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura8": "‚úÖ Utilisateur mis √† jour avec succ√®s",
    "utilisateurmisajoura9": "‚úÖ Utilisateur mis √† jour avec succ√®s",
    "utilisateursupprimea": "‚úÖ Utilisateur supprim√© avec succ√®s",
    "utilisateursupprimea1": "‚úÖ Utilisateur supprim√© avec succ√®s",
    "utilisateursupprimea2": "‚úÖ Utilisateur supprim√© avec succ√®s",
    "utilisateursupprimea3": "‚úÖ Utilisateur supprim√© avec succ√®s",
    "utilisateurtemporair": "‚úÖ Utilisateur temporaire cr√©√© avec succ√®s:",
    "utilisateurtemporair1": "‚úÖ Utilisateur temporaire cr√©√© avec succ√®s:",
    "utilisateursdetestde": "‚úÖ Utilisateurs de test d√©j√† initialis√©s",
    "utilisateursdetestde1": "‚úÖ Utilisateurs de test d√©j√† initialis√©s",
    "utilisateursdetestde2": "‚úÖ Utilisateurs de test d√©j√† initialis√©s",
    "aucunutilisateurconn2": "‚ùå Aucun utilisateur connect√©",
    "aucunutilisateurconn3": "‚ùå Aucun utilisateur connect√©",
    "erreurcreationutilis3": "‚ùå Erreur cr√©ation utilisateur:",
    "erreurcreationutilis4": "‚ùå Erreur cr√©ation utilisateur:",
    "erreurlorsdelacreati17": "‚ùå Erreur lors de la cr√©ation du compte admin:",
    "erreurlorsdelacreati18": "‚ùå Erreur lors de la cr√©ation du compte admin:",
    "erreurlorsdelarecupe8": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe9": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe10": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe11": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe12": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe13": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe14": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe15": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurlorsdelarecupe16": "‚ùå Erreur lors de la r√©cup√©ration des utilisateurs:",
    "erreurmiseajourutili": "‚ùå Erreur mise √† jour utilisateur:",
    "erreurmiseajourutili1": "‚ùå Erreur mise √† jour utilisateur:",
    "erreurrecuperationut": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut1": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut2": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut3": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut4": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut5": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut6": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut7": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "erreurrecuperationut8": "‚ùå Erreur r√©cup√©ration utilisateurs:",
    "impossibledeverifier": "‚ùå Impossible de v√©rifier le r√¥le - utilisateur non trouv√©",
    "impossibledeverifier1": "‚ùå Impossible de v√©rifier le r√¥le - utilisateur non trouv√©",
    "utilisateuradminnont": "‚ùå Utilisateur admin non trouv√© en Firestore",
    "utilisateuradminnont1": "‚ùå Utilisateur admin non trouv√© en Firestore",
    "processustermineadmi": "üéâ Processus termin√© - Admin toujours connect√© !",
    "creationdesutilisate2": "üè≠ === CR√âATION DES UTILISATEURS ESSENTIELS POUR LA PRODUCTION ===",
    "creationdesutilisate3": "üè≠ === CR√âATION DES UTILISATEURS ESSENTIELS POUR LA PRODUCTION ===",
    "aucunutilisateurconn4": "üëã Aucun utilisateur connect√©",
    "aucunutilisateurconn5": "üëã Aucun utilisateur connect√©",
    "adminconnecteinstanc": "üë§ Admin connect√© (instance principale):",
    "adminconnecteinstanc1": "üë§ Admin connect√© (instance principale):",
    "adminconnecteapres": "üë§ Admin connect√© apr√®s:",
    "adminconnecteapres1": "üë§ Admin connect√© apr√®s:",
    "adminconnecteavant": "üë§ Admin connect√© avant:",
    "adminconnecteavant1": "üë§ Admin connect√© avant:",
    "adminconnecte": "üë§ Admin connect√©:",
    "adminconnecte1": "üë§ Admin connect√©:",
    "adminconnecte2": "üë§ Admin connect√©:",
    "adminconnecte3": "üë§ Admin connect√©:",
    "admintoujoursconnect2": "üë§ Admin toujours connect√©:",
    "admintoujoursconnect3": "üë§ Admin toujours connect√©:",
    "utilisateurfirebased": "üë§ Utilisateur Firebase d√©tect√©:",
    "utilisateurfirebased1": "üë§ Utilisateur Firebase d√©tect√©:",
    "utilisateurconnected": "üë§ Utilisateur connect√© d√©tect√©:",
    "utilisateurconnected1": "üë§ Utilisateur connect√© d√©tect√©:",
    "miseajourduroleversa": "üîÑ Mise √† jour du r√¥le vers admin...",
    "miseajourduroleversa1": "üîÑ Mise √† jour du r√¥le vers admin...",
    "miseajourutilisateur": "üîÑ Mise √† jour utilisateur...",
    "miseajourutilisateur1": "üîÑ Mise √† jour utilisateur...",
    "rechargementmanuelet": "üîÑ Rechargement manuel et s√©curis√© de la liste utilisateurs",
    "rechargementmanuelet1": "üîÑ Rechargement manuel et s√©curis√© de la liste utilisateurs",
    "synchronisationdesut": "üîÑ Synchronisation des utilisateurs visibles...",
    "navbaretatutilisateu": "üîç Navbar - √âtat utilisateur:",
    "navbaretatutilisateu1": "üîç Navbar - √âtat utilisateur:",
    "recuperationdetousle": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle1": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle2": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle3": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle4": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle5": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle6": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle7": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle8": "üîç R√©cup√©ration de tous les utilisateurs...",
    "recuperationdetousle9": "üîç R√©cup√©ration de tous les utilisateurs...",
    "saferecuperationlect": "üîç SAFE: R√©cup√©ration lecture seule des utilisateurs...",
    "saferecuperationlect1": "üîç SAFE: R√©cup√©ration lecture seule des utilisateurs...",
    "initialisationdesuti": "üî• Initialisation des utilisateurs de test (Firestore seulement)...",
    "purgecompletedesutil": "üóëÔ∏è === PURGE COMPL√àTE DES UTILISATEURS ===",
    "purgecompletedesutil1": "üóëÔ∏è === PURGE COMPL√àTE DES UTILISATEURS ===",
    "purgecompletedesutil2": "üóëÔ∏è === PURGE COMPL√àTE DES UTILISATEURS ===",
    "suppressiondetousles": "üóëÔ∏è Suppression de tous les utilisateurs...\\n",
    "demarragedelacorrect": "üöÄ D√©marrage de la correction rapide admin...",
    "demarragedelacorrect1": "üöÄ D√©marrage de la correction rapide admin...",
    "surveillanceautomati": "üõë Surveillance automatique des utilisateurs d√©sactiv√©e",
    "surveillanceautomati1": "üõë Surveillance automatique des utilisateurs d√©sactiv√©e",
    "surveillanceautomati2": "üõë Surveillance automatique des utilisateurs d√©sactiv√©e",
    "initialisationsecuri": "üõ°Ô∏è Initialisation s√©curis√©e des utilisateurs de test (Firestore seulement)",
    "solutioncreationutil": "üõ°Ô∏è SOLUTION: Cr√©ation utilisateur Firestore SEULEMENT - pas de Firebase Auth",
    "solutioncreationutil1": "üõ°Ô∏è SOLUTION: Cr√©ation utilisateur Firestore SEULEMENT - pas de Firebase Auth",
    "ultrasafecreationuti": "üõ°Ô∏è ULTRA-SAFE: Cr√©ation utilisateur Firestore ONLY",
    "apresadminconnecte": "üß™ APR√àS - Admin connect√©:",
    "apresadminconnecte1": "üß™ APR√àS - Admin connect√©:",
    "avantadminconnecte": "üß™ AVANT - Admin connect√©:",
    "avantadminconnecte1": "üß™ AVANT - Admin connect√©:",
    "chargementdesutilisa1": "ÔøΩ Chargement des utilisateurs depuis la base de donn√©es",
    "chargementdesutilisa2": "ÔøΩ Chargement des utilisateurs depuis la base de donn√©es",
    "chargementdesutilisa3": "ÔøΩ Chargement des utilisateurs depuis la base de donn√©es",
    "utilisateursrecupere": "ÔøΩ Utilisateurs r√©cup√©r√©s:",
    "utilisateursrecupere1": "ÔøΩ Utilisateurs r√©cup√©r√©s:",
    "utilisateursrecupere2": "ÔøΩ Utilisateurs r√©cup√©r√©s:"
  },
  "navigation": {
    "categoryicondivspanc": "\n                  }`}>\n                  {category.icon}\n                </div>\n                <span className=\"mt-2 text-sm font-semibold text-center transition-colors duration-300 font-reading text-readable dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 max-w-20 leading-tight\">\n                  {category.name}\n                </span>\n              </Link>\n            ))}\n          </div>          </div>        </div>\n      </div>\n\n      {/* Section Recommandations - Positionn√©e avant les cartes de cat√©gories */}\n      <div className=\"bg-white dark:bg-gray-900 py-16\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <React.Suspense fallback={<div className=\"text-center py-8\">Chargement des recommandations...</div>}>\n            <ProductRecommendations />\n          </React.Suspense>\n        </div>\n      </div>\n\n      {/* Section des cartes produits */}\n      <div className=\"bg-white dark:bg-gray-900 py-16\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Carte √âlectronique */}\n            <div className={`bg-gradient-to-br from-blue-200 via-blue-300 to-orange-300 rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-3 hover:rotate-1 cursor-pointer group relative ${visibleCards >= 1 ? ",
    "stylebackgroundradia": "\n            style={{\n              background: 'radial-gradient(circle, rgba(255, 154, 0, 0.9) 0%, rgba(255, 167, 38, 0.7) 40%, transparent 70%)',\n              filter: 'blur(1px)'\n            }}\n          ></div>\n\n          {/* Montagnes en couches (optionnel, peut √™tre gard√© pour l'effet artistique) */}\n          <svg className=",
    "divclassnametextsmfo": "\r\n                                                    }`}\r\n                                            >\r\n                                                <div className=\"text-sm font-medium mb-1\">{template.name}</div>\r\n                                                <div className=\"text-xs text-gray-500\">{template.description}</div>\r\n                                                <div className=\"flex space-x-1 mt-2\">\r\n                                                    <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: template.primaryColor }} />\r\n                                                    <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: template.secondaryColor }} />\r\n                                                    <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: template.accentColor }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs pr√©d√©finies */}\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n                                        Palettes de couleurs\r\n                                    </label>\r\n                                    <div className=\"grid grid-cols-3 gap-3\">\r\n                                        {colorPresets.map((preset, index) => (\r\n                                            <button\r\n                                                key={index}\r\n                                                onClick={() => updateCardData({\r\n                                                    primaryColor: preset.primary,\r\n                                                    secondaryColor: preset.secondary,\r\n                                                    accentColor: preset.accent\r\n                                                })}\r\n                                                className=\"p-3 rounded-lg border border-gray-200 dark:border-gray-600 hover:border-gray-300 transition-colors\"\r\n                                            >\r\n                                                <div className=\"text-xs font-medium mb-2\">{preset.name}</div>\r\n                                                <div className=\"flex space-x-1\">\r\n                                                    <div className=\"w-4 h-4 rounded\" style={{ backgroundColor: preset.primary }} />\r\n                                                    <div className=\"w-4 h-4 rounded\" style={{ backgroundColor: preset.secondary }} />\r\n                                                    <div className=\"w-4 h-4 rounded\" style={{ backgroundColor: preset.accent }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs personnalis√©es */}\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Couleur primaire\r\n                                        </label>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <input\r\n                                                type=\"color\"\r\n                                                value={cardData.primaryColor}\r\n                                                onChange={(e) => updateCardData({ primaryColor: e.target.value })}\r\n                                                className=\"w-12 h-10 rounded border border-gray-300\"\r\n                                            />\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={cardData.primaryColor}\r\n                                                onChange={(e) => updateCardData({ primaryColor: e.target.value })}\r\n                                                className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Couleur secondaire\r\n                                        </label>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <input\r\n                                                type=\"color\"\r\n                                                value={cardData.secondaryColor}\r\n                                                onChange={(e) => updateCardData({ secondaryColor: e.target.value })}\r\n                                                className=\"w-12 h-10 rounded border border-gray-300\"\r\n                                            />\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={cardData.secondaryColor}\r\n                                                onChange={(e) => updateCardData({ secondaryColor: e.target.value })}\r\n                                                className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                            Couleur d",
    "retoural": "\r\n                        >\r\n                            Retour √† l",
    "retoural1": "\r\n                        >\r\n                            Retour √† l",
    "retouralaccueillinkp": "\r\n                        >\r\n                            Retour √† l'accueil\r\n                        </Link>\r\n\r\n                        <p className=",
    "retouralaccueillinkp1": "\r\n                        >\r\n                            Retour √† l'accueil\r\n                        </Link>\r\n\r\n                        <p className=",
    "onclicksetcurrencyco": "\r\n                        onClick={() => {\r\n                          setCurrency(code as UserCurrency);\r\n                          setIsCurrencyMenuOpen(false);\r\n                        }}\r\n                        className={`${\r\n                          currency === code ? 'bg-gray-100 dark:bg-gray-600' : ''\r\n                        } block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 w-full text-left hover:bg-gray-100 dark:hover:bg-gray-600 focus:outline-none`}\r\n                      >\r\n                        {name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Notifications - s√©par√© compl√®tement */}\r\n              {user && (\r\n                <button\r\n                  type=",
    "arrowleftsize20retou": "\r\n                    >\r\n                        <ArrowLeft size={20} />\r\n                        Retour aux produits\r\n                    <",
    "retourauxproduits": "\r\n                    >\r\n                        Retour aux produits\r\n                    <",
    "retoural2": "\r\n                    >\r\n                        ‚Üê Retour √† l",
    "styleheightitemheigh": "\r\n                    style={{ height: itemHeight - 8 }}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n});\r\n\r\nListSkeleton.displayName = 'ListSkeleton';\r\n\r\nfunction VirtualizedList<T extends Record<string, any>>({\r\n    items,\r\n    height,\r\n    itemHeight,\r\n    renderItem,\r\n    searchFields = [],\r\n    onSearch,\r\n    filterComponent,\r\n    emptyMessage = 'Aucun √©l√©ment trouv√©',\r\n    loading = false\r\n}: VirtualizedListProps<T>) {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n    // Filtrage des items bas√© sur la recherche\r\n    const filteredItems = useMemo(() => {\r\n        if (!debouncedSearchTerm || searchFields.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item =>\r\n            searchFields.some(field => {\r\n                const fieldValue = item[field];\r\n                return fieldValue &&\r\n                    String(fieldValue).toLowerCase().includes(debouncedSearchTerm.toLowerCase());\r\n            })\r\n        );\r\n    }, [items, debouncedSearchTerm, searchFields]);\r\n\r\n    // Handler pour la recherche\r\n    const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        setSearchTerm(value);\r\n        if (onSearch) {\r\n            onSearch(value);\r\n        }\r\n    }, [onSearch]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=",
    "pageproductsmapprodu": "\r\n                    }}\r\n                  >\r\n                    {pageProducts.map((product, index) => (\r\n                      <div key={product.id} className=\"px-3\">\r\n                        <ProductRecommendationCard product={product} index={startIndex + index} />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Boutons de navigation */}\r\n          {maxIndex > 0 && (\r\n            <>\r\n              <button\r\n                onClick={prevSlide}\r\n                className=\"absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group hover:scale-110 border border-gray-200 dark:border-gray-600\"\r\n                aria-label=\"Produit pr√©c√©dent\"\r\n              >\r\n                <ChevronLeft className=\"w-6 h-6 text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors\" />\r\n              </button>\r\n              \r\n              <button\r\n                onClick={nextSlide}\r\n                className=\"absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group hover:scale-110 border border-gray-200 dark:border-gray-600\"\r\n                aria-label=\"Produit suivant\"\r\n              >\r\n                <ChevronRight className=\"w-6 h-6 text-gray-700 dark:text-gray-300 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors\" />\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {/* Indicateurs de pagination */}\r\n          {maxIndex > 0 && (\r\n            <div className=\"flex justify-center mt-8 space-x-2\">\r\n              {Array.from({ length: maxIndex + 1 }, (_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => goToSlide(index)}\r\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\r\n                    index === currentIndex\r\n                      ? ",
    "setbackupsprevnewbac": "\r\n            };\r\n\r\n            setBackups(prev => [newBackup, ...prev]);\r\n\r\n            // Mettre √† jour les stats\r\n            setStats(prev => ({\r\n                ...prev,\r\n                lastBackup: new Date()\r\n            }));\r\n\r\n        } catch (error) {\r\n            console.error(",
    "setbackupsprevnewbac1": "\r\n            };\r\n\r\n            setBackups(prev => [newBackup, ...prev]);\r\n\r\n            // Mettre √† jour les stats\r\n            setStats(prev => ({\r\n                ...prev,\r\n                lastBackup: new Date()\r\n            }));\r\n\r\n        } catch (error) {\r\n            console.error(",
    "quantitycbmdivdivdiv": "\r\n            }`}>\r\n            {quantity} CBM\r\n          </div>\r\n        </div>\r\n          <div className=\"relative\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max={availableCapacity}\r\n              value={quantity}\r\n              onChange={handleSliderChange}\r\n              className=\"w-full container-reservation-slider smooth-transition\"\r\n              style={{\r\n                background: `linear-gradient(to right, #3B82F6 0%, #3B82F6 ${(quantity / availableCapacity) * 100}%, var(--modal-slider-track) ${(quantity / availableCapacity) * 100}%, var(--modal-slider-track) 100%)`\r\n              }}\r\n            />\r\n            <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n              <span>0</span>\r\n              <span>{availableCapacity} CBM</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Barre de progression des capacit√©s */}\r\n        <div className=\"space-y-3\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            R√©partition de la capacit√©\r\n          </h3>            <div className=\"relative w-full h-6 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\r\n            {/* Capacit√© utilis√©e */}\r\n            <div\r\n              className=\"absolute top-0 left-0 h-full bg-red-500 progress-bar-segment\"\r\n              style={{ width: `${usedPercentage}%` }}\r\n            />\r\n            {/* Capacit√© s√©lectionn√©e */}\r\n            <div\r\n              className=\"absolute top-0 h-full bg-blue-500 progress-bar-segment\"\r\n              style={{\r\n                left: `${usedPercentage}%`,\r\n                width: `${selectedPercentage}%`\r\n              }}\r\n            />\r\n            {/* Capacit√© disponible */}\r\n            <div\r\n              className=\"absolute top-0 right-0 h-full bg-green-500 progress-bar-segment\"\r\n              style={{ width: `${availablePercentage}%` }}\r\n            />\r\n          </div>\r\n\r\n          {/* L√©gende */}\r\n          <div className=\"flex flex-wrap gap-4 text-sm\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">\r\n                Utilis√© ({container.usedCapacity} CBM)\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">\r\n                S√©lectionn√© ({quantity} CBM)\r\n              </span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">\r\n                Disponible ({availableCapacity - quantity} CBM)\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>          {/* Informations dynamiques */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"flex items-center space-x-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg info-card smooth-transition hover:shadow-lg\">\r\n            <div className=\"icon-animate\">\r\n              <Euro className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Prix estim√©</p>\r\n              <p className={`text-xl font-bold text-blue-600 dark:text-blue-400 ${priceAnimating ? ",
    "retoural3": "\r\n          >\r\n            Retour √† l",
    "retouralaccueillinkd": "\r\n          >\r\n            Retour √† l'accueil\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=",
    "constcreatebackupasy": "\r\n        }\r\n    ]);\r\n\r\n    const createBackup = async () => {\r\n        setBackupLoading(true);\r\n        try {\r\n            // Simuler la cr√©ation d",
    "constcreatebackupasy1": "\r\n        }\r\n    ]);\r\n\r\n    const createBackup = async () => {\r\n        setBackupLoading(true);\r\n        try {\r\n            // Simuler la cr√©ation d",
    "constoriginalnamepro": "\r\n    }\r\n  };\r\n\r\n  const originalName = product.name as string;\r\n  const translations = productNameTranslations[originalName];\r\n  \r\n  if (translations) {\r\n    return translations[language] || translations.fr || translations.en || originalName;\r\n  }\r\n  \r\n  // Fallback : retourner le nom original\r\n  return originalName;\r\n};\r\n\r\n/**\r\n * Obtient la description du produit dans la langue sp√©cifi√©e\r\n * @param product Le produit\r\n * @param language La langue souhait√©e\r\n * @returns La description du produit dans la langue demand√©e ou un fallback\r\n *",
    "constloadingsetloadi": "\r\n    }));\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    // M√©morisation des handlers\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        const { name, value, type } = e.target;\r\n        const checked = (e.target as HTMLInputElement).checked;\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === ",
    "constloadingsetloadi1": "\r\n    }));\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    // M√©morisation des handlers\r\n    const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        const { name, value, type } = e.target;\r\n        const checked = (e.target as HTMLInputElement).checked;\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === ",
    "formatdateconstgetav": "\r\n    }).format(date);\r\n  };\r\n\r\n  const getAverageRating = () => {\r\n    if (reviews.length === 0) return 0;\r\n    const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\r\n    return (sum / reviews.length).toFixed(1);\r\n  };\r\n\r\n  const getRatingDistribution = () => {\r\n    const distribution = [0, 0, 0, 0, 0];\r\n    reviews.forEach(review => {\r\n      distribution[review.rating - 1]++;\r\n    });\r\n    return distribution;\r\n  };\r\n\r\n  const distribution = getRatingDistribution();\r\n  const totalReviews = reviews.length;\r\n\r\n  return (    <SupplierLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/supplier/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n        {/* Header */}\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Avis Clients\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Consultez et r√©pondez aux avis de vos clients\r\n          </p>\r\n        </div>\r\n\r\n        {/* Overview Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Star className=\"h-8 w-8 text-yellow-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Note moyenne</p>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                    {getAverageRating()}\r\n                  </p>\r\n                  <div className=\"flex\">{renderStars(Math.round(parseFloat(getAverageRating())))}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <MessageSquare className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total avis</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{totalReviews}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <ThumbsUp className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Avis positifs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {reviews.filter(r => r.rating >= 4).length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <MessageSquare className=\"h-8 w-8 text-purple-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Sans r√©ponse</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {reviews.filter(r => !r.hasResponse).length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Rating Distribution */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\r\n            R√©partition des notes\r\n          </h3>\r\n          <div className=\"space-y-3\">\r\n            {[5, 4, 3, 2, 1].map((rating) => (\r\n              <div key={rating} className=\"flex items-center gap-4\">\r\n                <div className=\"flex items-center gap-1 w-20\">\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">{rating}</span>\r\n                  <Star size={14} className=\"text-yellow-400 fill-current\" />\r\n                </div>\r\n                <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                  <div\r\n                    className=\"bg-yellow-400 h-2 rounded-full transition-all duration-300\"\r\n                    style={{\r\n                      width: totalReviews > 0 ? `${(distribution[rating - 1] / totalReviews) * 100}%` : ",
    "formatpricereturnsup": "\r\n    }).format(price);\r\n  };\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/supplier/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n        {/* Header */}\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Mes Exp√©ditions\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Suivez et g√©rez toutes vos exp√©ditions\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"h-8 w-8 text-yellow-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Pr√©paration</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {shipments.filter(s => s.status === ",
    "3e3csvg3evotrevideop": " /%3E%3C/svg%3E\"          >\n            {/* Votre vid√©o personnalis√©e pour le site e-commerce */}\n            <source src=\"/videos/hero-video.mp4\" type=\"video/mp4\" />\n            {/* Vid√©os de fallback en cas de probl√®me de chargement */}\n            <source src=\"https://videos.pexels.com/video-files/3163534/3163534-uhd_2560_1440_30fps.mp4\" type=\"video/mp4\" />\n            <source src=\"https://videos.pexels.com/video-files/4827401/4827401-uhd_2560_1440_30fps.mp4\" type=\"video/mp4\" />\n            {/* Fallback pour les navigateurs qui ne supportent pas la vid√©o */}\n            Votre navigateur ne supporte pas les vid√©os HTML5.\n          </video>          {/* Overlay sombre pour am√©liorer la lisibilit√© du texte */}\n          <div className=\"absolute inset-0 bg-black bg-opacity-50\"></div>\n\n          {/* Gradient overlay anim√© pour garder l",
    "buttonformdivdivdivn": " />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n        {/* Navigation par cat√©gories - D√©plac√©e sous l",
    "buttonformdivdivdivn1": " />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n        {/* Navigation par cat√©gories - D√©plac√©e sous l'image */}\n        <div className=",
    "buttonformdivdivdivn2": " />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation par cat√©gories - D√©plac√©e sous l",
    "buttonformdivdivdivn3": " />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation par cat√©gories - D√©plac√©e sous l'image */}\n      <div className=",
    "fallbackpourlesnavig": " />\n            {/* Fallback pour les navigateurs qui ne supportent pas la vid√©o */}\n            Votre navigateur ne supporte pas les vid√©os HTML5.\n          <",
    "fallbackpourlesnavig1": " />\n            {/* Fallback pour les navigateurs qui ne supportent pas la vid√©o */}\n            Votre navigateur ne supporte pas les vid√©os HTML5.\n          </video>          {/* Overlay sombre pour am√©liorer la lisibilit√© du texte *",
    "fallbackpourlesnavig2": " />\n            {/* Fallback pour les navigateurs qui ne supportent pas la vid√©o */}\n            Votre navigateur ne supporte pas les vid√©os HTML5.\n          </video>          {/* Overlay sombre pour am√©liorer la lisibilit√© du texte */}\n          <div className=",
    "videosdefallbackenca": " />\n            {/* Vid√©os de fallback en cas de probl√®me de chargement *",
    "videosdefallbackenca1": " />\n            {/* Vid√©os de fallback en cas de probl√®me de chargement */}\n            <source src=",
    "reactsuspensevideoba": " />\n          </React.Suspense>\n\n          {/* Vid√©o Background *",
    "reactsuspensevideoba1": " />\n          </React.Suspense>\n\n          {/* Vid√©o Background */}\n          <video\n            className=",
    "spanretourauxproduit": " />\r\n                            <span>Retour aux produits<",
    "buttondivformdivdivn": " />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories *",
    "buttondivformdivdivn1": " />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories *",
    "buttondivformdivdivn2": " />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories */}\r\n        <div className=",
    "buttondivformdivdivn3": " />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories */}\r\n        <div className=",
    "defaultreturnnullcon": " />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return 'Approuv√©';\r\n      case 'pending':\r\n        return 'En attente';\r\n      case 'rejected':\r\n        return 'Rejet√©';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const getTypeText = (type: string) => {\r\n    switch (type) {\r\n      case 'contract':\r\n        return 'Contrat';\r\n      case 'invoice':\r\n        return 'Facture';\r\n      case 'certificate':\r\n        return 'Certificat';\r\n      case 'manual':\r\n        return 'Manuel';\r\n      case 'other':\r\n        return 'Autre';\r\n      default:\r\n        return type;\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n  const handleUploadDocuments = async (files: File[], metadata: any) => {\r\n    try {\r\n      console.log('Uploading files:', files);\r\n      console.log('Metadata:', metadata);\r\n\r\n      // Utiliser le vrai service d'upload\r\n      const results = await uploadService.uploadFiles(\r\n        files,\r\n        {\r\n          folder: 'documents',\r\n          maxSize: 50, // 50MB max par fichier\r\n          allowedTypes: ['.pdf', '.doc', '.docx', '.txt', '.jpg', '.jpeg', '.png', '.xls', '.xlsx']\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}% upload√©`);\r\n        }\r\n      );\r\n\r\n      // Ajouter les nouveaux documents √† la liste\r\n      const newDocuments = files.map((file, index) => {\r\n        const result = results[index];\r\n        return {\r\n          id: `new-${Date.now()}-${index}`,\r\n          name: file.name,\r\n          type: metadata.type,\r\n          size: formatFileSize(file.size),\r\n          uploadDate: new Date().toISOString().split('T')[0],\r\n          status: result.success ? 'approved' as const : 'rejected' as const,\r\n          downloadCount: 0,\r\n          category: metadata.category,\r\n          url: result.url // Stocker l'URL pour le t√©l√©chargement\r\n        };\r\n      });\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      const successCount = results.filter(r => r.success).length;\r\n      alert(`${successCount}/${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'upload:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  const handleDownloadDocument = (document: Document) => {\r\n    console.log('Downloading document:', document.name);\r\n    \r\n    if (document.url) {\r\n      // T√©l√©charger le vrai fichier\r\n      const link = window.document.createElement('a');\r\n      link.href = document.url;\r\n      link.download = document.name;\r\n      link.target = '_blank'; // Ouvrir dans un nouvel onglet si c'est une URL externe\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    } else {\r\n      // Fallback: cr√©er un PDF fictif pour les documents de d√©monstration\r\n      const link = window.document.createElement('a');\r\n      link.href = `data:application/pdf;base64,JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PAovVGl0bGUgKCR7ZG9jdW1lbnQubmFtZX0pCi9Qcm9kdWNlciAoKQo+PgplbmRvYmoKMiAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMyAwIFIKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2VzCi9LaWRzIFs0IDAgUl0KL0NvdW50IDEKL01lZGlhQm94IFswIDAgNjEyIDc5Ml0KPj4KZW5kb2JqCjQgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL1BhcmVudCAzIDAgUgovUmVzb3VyY2VzIDw8Ci9Gb250IDw8Ci9GMSAKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9CYXNlRm9udCAvSGVsdmV0aWNhCj4+Cj4+Cj4+Ci9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKNSAwIG9iago8PAovTGVuZ3RoIDQ0Cj4+CnN0cmVhbQpCVAovRjEgMTIgVGYKNzIgNzIwIFRkCihEb2N1bWVudCBkZSBkZW1vbnN0cmF0aW9uKSBUagpFVAplbmRzdHJlYW0KZW5kb2JqCnhyZWYKMCA2CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMDMgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCnRyYWlsZXIKPDwKL1NpemUgNgovUm9vdCAyIDAgUgo+PgpzdGFydHhyZWYKMzk0CiUlRU9G`;\r\n      link.download = document.name;\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    }\r\n\r\n    // Incr√©menter le compteur de t√©l√©chargements\r\n    setDocuments(prev => prev.map(doc => \r\n      doc.id === document.id \r\n        ? { ...doc, downloadCount: doc.downloadCount + 1 }\r\n        : doc\r\n    ));\r\n  };\r\n  const handleDeleteDocument = async (document: Document) => {\r\n    if (confirm(t('supplier.documents.confirm.delete'))) {\r\n      try {\r\n        // Supprimer du serveur si c'est un fichier upload√©\r\n        if (document.url) {\r\n          await uploadService.deleteFile(document.url);\r\n        }\r\n        \r\n        // Retirer de la liste locale\r\n        setDocuments(prev => prev.filter(doc => doc.id !== document.id));\r\n        \r\n        alert('Document supprim√© avec succ√®s !');\r\n      } catch (error) {\r\n        console.error('Erreur lors de la suppression:', error);\r\n        alert('Erreur lors de la suppression du document');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=",
    "checkcircleclassname": " ? <CheckCircle className=\"h-5 w-5 mt-0.5 mr-3 flex-shrink-0\" /> :\r\n                            <AlertTriangle className=\"h-5 w-5 mt-0.5 mr-3 flex-shrink-0\" />}\r\n                        <p>{message.text}</p>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Statistiques */}\r\n                {summary && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n                        <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-600\">Total Utilisateurs</p>\r\n                                    <p className=\"text-3xl font-bold text-gray-900\">{summary.total}</p>\r\n                                </div>\r\n                                <Users className=\"h-8 w-8 text-blue-600\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-600\">Administrateurs</p>\r\n                                    <p className=\"text-3xl font-bold text-gray-900\">{summary.byRole.admin}</p>\r\n                                </div>\r\n                                <Shield className=\"h-8 w-8 text-red-600\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-600\">Utilisateurs Actifs</p>\r\n                                    <p className=\"text-3xl font-bold text-green-600\">{summary.active}</p>\r\n                                </div>\r\n                                <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-600\">Fournisseurs</p>\r\n                                    <p className=\"text-3xl font-bold text-gray-900\">{summary.byRole.supplier}</p>\r\n                                </div>\r\n                                <Settings className=\"h-8 w-8 text-yellow-600\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Actions principales */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n                    {/* Cr√©ation des utilisateurs essentiels */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                            <UserPlus className=\"h-5 w-5 text-green-600 mr-2\" />\r\n                            Utilisateurs Essentiels\r\n                        </h3>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            Cr√©er les comptes administrateurs essentiels pour la production (admin principal, backup, support).\r\n                        </p>\r\n                        <button\r\n                            onClick={handleCreateEssentialUsers}\r\n                            disabled={isCreating}\r\n                            className=\"w-full flex items-center justify-center px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50\"\r\n                        >\r\n                            {isCreating ? (\r\n                                <>\r\n                                    <RefreshCw className=\"h-4 w-4 animate-spin mr-2\" />\r\n                                    Cr√©ation en cours...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <UserPlus className=\"h-4 w-4 mr-2\" />\r\n                                    Cr√©er Comptes Essentiels\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Purge des utilisateurs */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow border\">\r\n                        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                            <Trash2 className=\"h-5 w-5 text-red-600 mr-2\" />\r\n                            Purge Compl√®te\r\n                        </h3>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            ‚ö†Ô∏è <strong>DANGER:</strong> Supprime TOUS les utilisateurs existants. Op√©ration irr√©versible.\r\n                        </p>\r\n                        <button\r\n                            onClick={handlePurgeUsers}\r\n                            disabled={isPurging}\r\n                            className=\"w-full flex items-center justify-center px-4 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50\"\r\n                        >\r\n                            {isPurging ? (\r\n                                <>\r\n                                    <RefreshCw className=\"h-4 w-4 animate-spin mr-2\" />\r\n                                    Suppression en cours...\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                                    Purger Tous les Utilisateurs\r\n                                </>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Cr√©ation d",
    "checkedvalueconsthan": " ? checked : value\r\n        }));\r\n    }, []);\r\n\r\n    const handleProductSelect = useCallback((product: string) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            interestedProducts: prev.interestedProducts.includes(product)\r\n                ? prev.interestedProducts.filter(p => p !== product)\r\n                : [...prev.interestedProducts, product]\r\n        }));\r\n    }, []);\r\n\r\n    // Optimistic update pour les mutations\r\n    const optimisticUpdateCompany = useCallback((data: Partial<Company>) => {\r\n        onUpdate({ ...prospect, ...data });\r\n    }, [prospect, onUpdate]);\r\n\r\n    const handleSubmit = useCallback(async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Donn√©es de l",
    "checkedvalueconsthan1": " ? checked : value\r\n        }));\r\n    }, []);\r\n\r\n    const handleProductSelect = useCallback((product: string) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            interestedProducts: prev.interestedProducts.includes(product)\r\n                ? prev.interestedProducts.filter(p => p !== product)\r\n                : [...prev.interestedProducts, product]\r\n        }));\r\n    }, []);\r\n\r\n    // Optimistic update pour les mutations\r\n    const optimisticUpdateCompany = useCallback((data: Partial<Company>) => {\r\n        onUpdate({ ...prospect, ...data });\r\n    }, [prospect, onUpdate]);\r\n\r\n    const handleSubmit = useCallback(async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            // Donn√©es de l",
    "styleanimationdelay2": " style={{ animationDelay: '200ms' }}>\n              {t('homepage.how.subtitle')}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales */}\n          <div className=",
    "styleanimationdelay21": " style={{ animationDelay: '200ms' }}>\n              {t('homepage.how.subtitle')}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales */}\n          <div className=",
    "stylebackgroundcolor": " style={{ backgroundColor: preset.accent }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs personnalis√©es *",
    "stylebackgroundcolor1": " style={{ backgroundColor: preset.accent }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs personnalis√©es */}\r\n                                <div className=",
    "stylebackgroundcolor2": " style={{ backgroundColor: template.accentColor }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs pr√©d√©finies *",
    "stylebackgroundcolor3": " style={{ backgroundColor: template.accentColor }} />\r\n                                                </div>\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Couleurs pr√©d√©finies */}\r\n                                <div>\r\n                                    <label className=",
    "treturndivclassnamem": " }\n  ], [t]);\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n      {/* Hero Section avec vid√©o background et paysage chinois stylis√© */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"relative h-[70vh] min-h-[500px] bg-gradient-to-br from-blue-400 via-blue-600 to-purple-800 flex items-center justify-center\">\n          {/* Syst√®me de particules flottantes */}\n          <React.Suspense fallback={null}>\n            <ParticleSystem particleCount={60} className=\"z-10\" />\n          </React.Suspense>\n\n          {/* Vid√©o Background */}\n          <video\n            className=\"absolute inset-0 w-full h-full object-cover\"\n            autoPlay\n            muted\n            loop\n            playsInline\n            poster=\"data:image/svg+xml,%3Csvg xmlns=",
    "ifloadingreturndivcl": " },\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <div className=\"text-gray-600 dark:text-gray-300 animate-pulse\">Chargement du profil...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\r\n        <div className=\"text-center bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg\">\r\n          <div className=\"text-gray-600 dark:text-gray-300\">\r\n            Vous devez √™tre connect√© pour voir votre profil.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Avatar fallback avec v√©rification de type\r\n  const avatar = preview || user?.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=6366f1&color=fff`;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 py-8\">\r\n      {/* Notification Toast am√©lior√©e */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 z-50 px-6 py-4 rounded-xl shadow-2xl transform transition-all duration-500 border-l-4 backdrop-blur-sm ${notification.type === ",
    "chinetonusineh1divcl": " }}>\r\n                Chine ton usine\r\n              </h1>\r\n              <div className=\"ml-2 w-4 h-4 bg-orange-400 rounded-sm transform rotate-45\"></div>\r\n            </div>\r\n            <div className=\"text-white text-lg mb-2 font-light tracking-wide\">\r\n              √áA VA VOUS \r\n              <span className=\"bg-orange-500 text-white px-2 py-1 mx-2 rounded font-bold transform -skew-x-12\">\r\n                PLAIRE\r\n              </span>\r\n            </div>\r\n            <p className=\"text-white text-sm opacity-90 mb-8\">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche */}\r\n            <form onSubmit={handleSearch} className=\"mt-8 w-full max-w-lg\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  placeholder=\"Recherchez un produit, une marque...\"\r\n                  className=\"w-full px-6 py-3 rounded-full text-gray-700 placeholder-gray-600 focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-50 shadow-lg\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-gray-100 hover:bg-gray-200 p-2 rounded-full transition-colors\"\r\n                >\r\n                  <Search className=\"h-4 w-4 text-gray-600\" />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories */}\r\n        <div className=\"bg-white border-b shadow-sm\">\r\n          <div className=\"max-w-7xl mx-auto px-4\">\r\n            <div className=\"flex items-center space-x-8 py-3 overflow-x-auto\">\r\n              {brandCategories.map((category, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`whitespace-nowrap px-3 py-2 text-sm font-medium transition-colors ${\r\n                    category.active\r\n                      ? ",
    "chinetonusineh1divcl1": " }}>\r\n                Chine ton usine\r\n              </h1>\r\n              <div className=\"ml-2 w-4 h-4 bg-orange-400 rounded-sm transform rotate-45\"></div>\r\n            </div>\r\n            <div className=\"text-white text-lg mb-2 font-light tracking-wide\">\r\n              √áA VA VOUS \r\n              <span className=\"bg-orange-500 text-white px-2 py-1 mx-2 rounded font-bold transform -skew-x-12\">\r\n                PLAIRE\r\n              </span>\r\n            </div>\r\n            <p className=\"text-white text-sm opacity-90 mb-8\">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche */}\r\n            <form onSubmit={handleSearch} className=\"mt-8 w-full max-w-lg\">\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  placeholder=\"Recherchez un produit, une marque...\"\r\n                  className=\"w-full px-6 py-3 rounded-full text-gray-700 placeholder-gray-600 focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-50 shadow-lg\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-gray-100 hover:bg-gray-200 p-2 rounded-full transition-colors\"\r\n                >\r\n                  <Search className=\"h-4 w-4 text-gray-600\" />\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation des cat√©gories */}\r\n        <div className=\"bg-white border-b shadow-sm\">\r\n          <div className=\"max-w-7xl mx-auto px-4\">\r\n            <div className=\"flex items-center space-x-8 py-3 overflow-x-auto\">\r\n              {brandCategories.map((category, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={`whitespace-nowrap px-3 py-2 text-sm font-medium transition-colors ${\r\n                    category.active\r\n                      ? ",
    "diveffetdesoleilanim": " }}></div>\n\n          {/* Effet de soleil anim√© */}\n          <div\n            className=\"absolute top-16 left-48 w-20 h-20 rounded-full opacity-60 z-10 animate-pulse-glow\"\n            style={{\n              background: ",
    "price199imageapiplac": "', price: 199, image: '/api/placeholder/300/300' },\r\n      { id: 4, name: 'Montre Connect√©e', price: 89, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  fashion: {\r\n    name: 'Mode',\r\n    icon: 'üëî',\r\n    products: [\r\n      { id: 5, name: 'T-shirt Premium', price: 19, image: '/api/placeholder/300/300' },\r\n      { id: 6, name: 'Jean Slim Fit', price: 39, image: '/api/placeholder/300/300' },\r\n      { id: 7, name: 'Veste Casual', price: 59, image: '/api/placeholder/300/300' },\r\n      { id: 8, name: 'Sneakers Sport', price: 79, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  home: {\r\n    name: 'Maison',\r\n    icon: 'üè†',\r\n    products: [\r\n      { id: 9, name: 'Lampe LED Design', price: 29, image: '/api/placeholder/300/300' },\r\n      { id: 10, name: 'Coussin D√©coratif', price: 15, image: '/api/placeholder/300/300' },\r\n      { id: 11, name: 'Tapis Moderne', price: 89, image: '/api/placeholder/300/300' },\r\n      { id: 12, name: 'Vase C√©ramique', price: 25, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  beauty: {\r\n    name: 'Beaut√©',\r\n    icon: 'üíÑ',\r\n    products: [\r\n      { id: 13, name: 'S√©rum Anti-√Çge', price: 45, image: '/api/placeholder/300/300' },\r\n      { id: 14, name: 'Rouge √† L√®vres Mat', price: 12, image: '/api/placeholder/300/300' },\r\n      { id: 15, name: 'Cr√®me Hydratante', price: 28, image: '/api/placeholder/300/300' },\r\n      { id: 16, name: 'Palette Maquillage', price: 35, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  sports: {\r\n    name: 'Sport',\r\n    icon: '‚öΩ',\r\n    products: [\r\n      { id: 17, name: 'Ballon de Football', price: 25, image: '/api/placeholder/300/300' },\r\n      { id: 18, name: 'Raquette de Tennis', price: 89, image: '/api/placeholder/300/300' },\r\n      { id: 19, name: 'Tapis de Yoga', price: 35, image: '/api/placeholder/300/300' },\r\n      { id: 20, name: 'Halt√®res 5kg', price: 45, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  automotive: {\r\n    name: 'Auto',\r\n    icon: 'üöó',\r\n    products: [\r\n      { id: 21, name: 'Chargeur USB Auto', price: 15, image: '/api/placeholder/300/300' },\r\n      { id: 22, name: 'Support T√©l√©phone', price: 12, image: '/api/placeholder/300/300' },\r\n      { id: 23, name: 'Aspirateur Auto', price: 45, image: '/api/placeholder/300/300' },\r\n      { id: 24, name: 'Tapis de Sol', price: 35, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  tools: {\r\n    name: 'Outils',\r\n    icon: 'üîß',\r\n    products: [\r\n      { id: 25, name: 'Perceuse Sans Fil', price: 89, image: '/api/placeholder/300/300' },\r\n      { id: 26, name: 'Kit Tournevis', price: 25, image: '/api/placeholder/300/300' },\r\n      { id: 27, name: 'Marteau Multifonction', price: 35, image: '/api/placeholder/300/300' },\r\n      { id: 28, name: 'Bo√Æte √† Outils', price: 55, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  toys: {\r\n    name: 'Jouets',\r\n    icon: 'üß∏',\r\n    products: [\r\n      { id: 29, name: 'Puzzle 1000 pi√®ces', price: 18, image: '/api/placeholder/300/300' },\r\n      { id: 30, name: 'Peluche Ours', price: 22, image: '/api/placeholder/300/300' },\r\n      { id: 31, name: 'Jeu de Construction', price: 45, image: '/api/placeholder/300/300' },\r\n      { id: 32, name: 'Robot T√©l√©command√©', price: 65, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  books: {\r\n    name: 'Livres',\r\n    icon: 'üìö',\r\n    products: [\r\n      { id: 33, name: 'Roman Bestseller', price: 12, image: '/api/placeholder/300/300' },\r\n      { id: 34, name: 'Guide Cuisine', price: 25, image: '/api/placeholder/300/300' },\r\n      { id: 35, name: 'Livre D√©veloppement', price: 35, image: '/api/placeholder/300/300' },\r\n      { id: 36, name: 'BD Aventure', price: 15, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  music: {\r\n    name: 'Musique',\r\n    icon: 'üéµ',\r\n    products: [\r\n      { id: 37, name: 'Guitare Acoustique', price: 129, image: '/api/placeholder/300/300' },\r\n      { id: 38, name: 'Casque Audio Pro', price: 89, image: '/api/placeholder/300/300' },\r\n      { id: 39, name: 'Microphone USB', price: 55, image: '/api/placeholder/300/300' },\r\n      { id: 40, name: 'Enceinte Portable', price: 45, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  garden: {\r\n    name: 'Jardin',\r\n    icon: 'üå±',\r\n    products: [\r\n      { id: 41, name: 'Kit Graines Bio', price: 15, image: '/api/placeholder/300/300' },\r\n      { id: 42, name: 'Arrosoir Design', price: 25, image: '/api/placeholder/300/300' },\r\n      { id: 43, name: 'S√©cateur Pro', price: 35, image: '/api/placeholder/300/300' },\r\n      { id: 44, name: 'Pot Terre Cuite', price: 18, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n  food: {\r\n    name: 'Alimentation',\r\n    icon: 'üçé',\r\n    products: [\r\n      { id: 45, name: 'Miel Bio 500g', price: 12, image: '/api/placeholder/300/300' },\r\n      { id: 46, name: 'Th√© Vert Premium', price: 18, image: '/api/placeholder/300/300' },\r\n      { id: 47, name: '√âpices du Monde', price: 25, image: '/api/placeholder/300/300' },\r\n      { id: 48, name: 'Chocolat Artisanal', price: 15, image: '/api/placeholder/300/300' },\r\n    ]\r\n  },\r\n};\r\n\r\nconst CategoryPage: React.FC = () => {\r\n  const { categoryId } = useParams<{ categoryId: string }>();\r\n  const [viewMode, setViewMode] = React.useState<'grid' | 'list'>('grid');\r\n\r\n  const category = categoryId ? categoryData[categoryId] : null;\r\n\r\n  if (!category) {\r\n    return (\r\n      <div className=",
    "constreadernewfilere": ")) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              const dataUrl = e.target?.result as string;\r\n              resolve({\r\n                success: true,\r\n                url: dataUrl, // Data URL pour affichage imm√©diat\r\n                progress: 100\r\n              });\r\n            };\r\n            reader.onerror = () => {\r\n              // Fallback avec image de placeholder\r\n              const randomId = Math.random().toString(36).substr(2, 9);\r\n              resolve({\r\n                success: true,\r\n                url: `https://picsum.photos/400/300?random=${randomId}`,\r\n                progress: 100\r\n              });\r\n            };\r\n            reader.readAsDataURL(file);\r\n          } else {\r\n            // Pour les autres fichiers, g√©n√©rer une URL fictive\r\n            const timestamp = Date.now();\r\n            const randomId = Math.random().toString(36).substr(2, 9);\r\n            const extension = file.name.split(",
    "constreadernewfilere1": ")) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              const dataUrl = e.target?.result as string;\r\n              resolve({\r\n                success: true,\r\n                url: dataUrl, // Data URL pour affichage imm√©diat\r\n                progress: 100\r\n              });\r\n            };\r\n            reader.onerror = () => {\r\n              // Fallback avec image de placeholder\r\n              const randomId = Math.random().toString(36).substr(2, 9);\r\n              resolve({\r\n                success: true,\r\n                url: `https://picsum.photos/400/300?random=${randomId}`,\r\n                progress: 100\r\n              });\r\n            };\r\n            reader.readAsDataURL(file);\r\n          } else {\r\n            // Pour les autres fichiers, g√©n√©rer une URL fictive\r\n            const timestamp = Date.now();\r\n            const randomId = Math.random().toString(36).substr(2, 9);\r\n            const extension = file.name.split(",
    "setdocumentsprevprev": "))) {\r\n      setDocuments(prev => prev.filter(doc => doc.id !== documentId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/supplier/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Documents</h1>\r\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n              G√©rez vos documents et fichiers\r\n            </p>\r\n          </div>          <Button \r\n            className=\"mt-4 sm:mt-0\"\r\n            onClick={() => setIsUploadModalOpen(true)}\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-2\" />\r\n            {t(",
    "finallysetisloadingf": "));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© */}\r\n      <div className=\"auth-animated-background\">\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n      </div>\r\n\r\n      {/* Carte principale */}\r\n      <div className=\"auth-card\">\r\n        {/* Colonne visuelle */}\r\n        <div className=\"auth-visual-column\">\r\n          <div className=\"auth-visual-content\">\r\n            <h1 className=\"auth-visual-title\">\r\n              {t(",
    "lengthreturnadminlay": ").length;\r\n\r\n    return (\r\n        <AdminLayout>\r\n            <div className=\"space-y-6 p-6\">\r\n                {/* En-t√™te */}\r\n                <div className=\"flex items-center justify-between\">\r\n                    <BackButton to=\"/admin/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\r\n                            <Bell className=\"w-4 h-4\" />\r\n                            <span>{unreadCount} non lues</span>\r\n                            {criticalCount > 0 && (\r\n                                <span className=\"px-2 py-1 bg-red-100 text-red-800 rounded-full text-xs font-medium\">\r\n                                    {criticalCount} critiques\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                        <Button onClick={markAllAsRead} variant=\"outline\" size=\"sm\">\r\n                            <Check className=\"w-4 h-4 mr-1\" />\r\n                            Tout marquer comme lu\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                        Centre d",
    "setisnotificationcen": ");\n    setIsNotificationCenterOpen(!isNotificationCenterOpen);\n    setIsLanguageMenuOpen(false);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleNotificationCountChange = () => {\n    // Le compteur est maintenant g√©r√© par le hook useNotifications\n    // Cette fonction peut √™tre utilis√©e pour des actions suppl√©mentaires\n    refreshNotifications();\n  };\n\n  const handleLanguageChange = (newLanguage: UserLanguage) => {\n    setLanguage(newLanguage);\n    setIsLanguageMenuOpen(false);\n  };\n\n  const handleCurrencyChange = (newCurrency: UserCurrency) => {\n    setCurrency(newCurrency);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(`",
    "setisnotificationcen1": ");\n    setIsNotificationCenterOpen(!isNotificationCenterOpen);\n    setIsLanguageMenuOpen(false);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleNotificationCountChange = () => {\n    // Le compteur est maintenant g√©r√© par le hook useNotifications\n    // Cette fonction peut √™tre utilis√©e pour des actions suppl√©mentaires\n    refreshNotifications();\n  };\n\n  const handleLanguageChange = (newLanguage: UserLanguage) => {\n    setLanguage(newLanguage);\n    setIsLanguageMenuOpen(false);\n  };\n\n  const handleCurrencyChange = (newCurrency: UserCurrency) => {\n    setCurrency(newCurrency);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(`/search?q=${encodeURIComponent(searchQuery)}`);\n    }\n  };\n\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      const fetchSuggestions = async () => {\n        if (import.meta.env.DEV) {\n          // Mock suggestions c√¥t√© front\n          const query = searchQuery.toLowerCase();\n          const allSuggestions = [...popularSearches, ...searchKeywords];\n          const filtered = allSuggestions.filter(s => s.toLowerCase().includes(query));\n          setSuggestions(filtered.slice(0, 7));\n        } else {\n          try {\n            const response = await axios.get(`",
    "setisnotificationcen2": ");\n    setIsNotificationCenterOpen(!isNotificationCenterOpen);\n    setIsLanguageMenuOpen(false);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleNotificationCountChange = () => {\n    // Le compteur est maintenant g√©r√© par le hook useNotifications\n    // Cette fonction peut √™tre utilis√©e pour des actions suppl√©mentaires\n    refreshNotifications();\n  };\n\n  const handleLanguageChange = (newLanguage: UserLanguage) => {\n    setLanguage(newLanguage);\n    setIsLanguageMenuOpen(false);\n  };\n\n  const handleCurrencyChange = (newCurrency: UserCurrency) => {\n    setCurrency(newCurrency);\n    setIsCurrencyMenuOpen(false);\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      navigate(`/search?q=${encodeURIComponent(searchQuery)}`);\n    }\n  };\n\n  useEffect(() => {\n    if (searchQuery.trim()) {\n      const fetchSuggestions = async () => {\n        if (import.meta.env.DEV) {\n          // Mock suggestions c√¥t√© front\n          const query = searchQuery.toLowerCase();\n          const allSuggestions = [...popularSearches, ...searchKeywords];\n          const filtered = allSuggestions.filter(s => s.toLowerCase().includes(query));\n          setSuggestions(filtered.slice(0, 7));\n        } else {\n          try {\n            const response = await axios.get(`/api/suggestions?q=${encodeURIComponent(searchQuery)}`);\n            setSuggestions(Array.isArray(response.data) ? response.data : []);\n          } catch (error) {\n            console.error(",
    "loadconversationsand": ");\r\n\r\n  // Load conversations and messages\r\n  const loadData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Using mock data for demonstration\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\r\n      setConversations(mockConversations);\r\n      setMessages(mockMessages);    } catch (err: unknown) {\r\n      console.error(",
    "fallbacksurlesdonnee": ");\r\n      // Fallback sur les donn√©es de test si Firebase √©choue\r\n      setUsers(mockUsers);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  ",
    "fallbacksurlesdonnee1": ");\r\n      // Fallback sur les donn√©es de test si Firebase √©choue\r\n      setUsers(mockUsers);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Synchronisation manuelle des utilisateurs\r\n  const handleSyncUsers = async () => {\r\n    setSyncLoading(true);\r\n    try {\r\n      console.log(",
    "returnsupplierlayout": ");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/supplier/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n        {/* En-t√™te */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Documents</h1>\r\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\r\n              G√©rez vos documents et fichiers\r\n            </p>\r\n          </div>          <Button \r\n            className=\"mt-4 sm:mt-0\"\r\n            onClick={() => setIsUploadModalOpen(true)}\r\n          >\r\n            <Plus className=\"h-4 w-4 mr-2\" />\r\n            {t(",
    "constshowfilterssets": ");\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n    // Filtrage des items bas√© sur la recherche\r\n    const filteredItems = useMemo(() => {\r\n        if (!debouncedSearchTerm || searchFields.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item =>\r\n            searchFields.some(field => {\r\n                const fieldValue = item[field];\r\n                return fieldValue &&\r\n                    String(fieldValue).toLowerCase().includes(debouncedSearchTerm.toLowerCase());\r\n            })\r\n        );\r\n    }, [items, debouncedSearchTerm, searchFields]);\r\n\r\n    // Handler pour la recherche\r\n    const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        setSearchTerm(value);\r\n        if (onSearch) {\r\n            onSearch(value);\r\n        }\r\n    }, [onSearch]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=",
    "constshowfilterssets1": ");\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 300);\r\n\r\n    // Filtrage des items bas√© sur la recherche\r\n    const filteredItems = useMemo(() => {\r\n        if (!debouncedSearchTerm || searchFields.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter(item =>\r\n            searchFields.some(field => {\r\n                const fieldValue = item[field];\r\n                return fieldValue &&\r\n                    String(fieldValue).toLowerCase().includes(debouncedSearchTerm.toLowerCase());\r\n            })\r\n        );\r\n    }, [items, debouncedSearchTerm, searchFields]);\r\n\r\n    // Handler pour la recherche\r\n    const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        setSearchTerm(value);\r\n        if (onSearch) {\r\n            onSearch(value);\r\n        }\r\n    }, [onSearch]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"space-y-4\">\r\n                <div className=\"flex gap-4 mb-4\">\r\n                    <div className=\"flex-1 h-10 bg-gray-200 rounded animate-pulse\" />\r\n                    <div className=\"w-24 h-10 bg-gray-200 rounded animate-pulse\" />\r\n                </div>\r\n                <ListSkeleton height={height} itemHeight={itemHeight} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            {/* Barre de recherche et filtres */}\r\n            <div className=\"mb-4 space-y-4\">\r\n                <div className=\"flex gap-4\">\r\n                    {/* Champ de recherche */}\r\n                    {searchFields.length > 0 && (\r\n                        <div className=\"relative flex-1\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Rechercher...\"\r\n                                value={searchTerm}\r\n                                onChange={handleSearchChange}\r\n                                className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                            />\r\n                            <Search size={18} className=\"absolute left-3 top-2.5 text-gray-400\" />\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Bouton de filtres */}\r\n                    {filterComponent && (\r\n                        <button\r\n                            onClick={() => setShowFilters(!showFilters)}\r\n                            className=\"flex items-center px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        >\r\n                            <Filter size={16} className=\"mr-2\" />\r\n                            Filtres\r\n                        </button>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Panneau de filtres */}\r\n                {showFilters && filterComponent && (\r\n                    <div className=\"p-4 border border-gray-200 rounded-md bg-gray-50\">\r\n                        {filterComponent}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Indicateur de r√©sultats */}\r\n            <div className=\"mb-4 text-sm text-gray-600\">\r\n                {filteredItems.length} r√©sultat{filteredItems.length > 1 ? ",
    "consthandlesavelinks": ");\r\n    }\r\n  };\r\n\r\n  const handleSaveLinks = (links: SocialMediaLink[]) => {\r\n    setSocialMediaLinksList(links);\r\n    setIsModalOpen(false);\r\n    \r\n    // Convertir en format string pour la compatibilit√© avec le backend actuel\r\n    const linksString = links\r\n      .filter(link => link.url.trim())\r\n      .map(link => `${link.network}: ${link.url}`)\r\n      .join(",
    "consthandlesavelinks1": ");\r\n    }\r\n  };\r\n\r\n  const handleSaveLinks = (links: SocialMediaLink[]) => {\r\n    setSocialMediaLinksList(links);\r\n    setIsModalOpen(false);\r\n    \r\n    // Convertir en format string pour la compatibilit√© avec le backend actuel\r\n    const linksString = links\r\n      .filter(link => link.url.trim())\r\n      .map(link => `${link.network}: ${link.url}`)\r\n      .join(",
    "verifiersileproduite": ");\r\n    };\r\n\r\n    // V√©rifier si le produit est d√©j√† dans le devis\r\n    const isProductInQuote = getItemQuantity(product.id!) > 0;\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n            {/* Navigation de retour */}\r\n            <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\r\n                    <Link\r\n                        to=\"/products\"\r\n                        className=\"inline-flex items-center gap-2 text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors\"\r\n                    >\r\n                        <ArrowLeft size={20} />\r\n                        Retour aux produits\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n                    {/* Galerie d",
    "classnamewfullpx6py4": ")}\n                className=\"w-full px-6 py-4 text-gray-800 bg-white/95 backdrop-blur-sm rounded-full border-2 border-white/50 focus:outline-none focus:ring-4 focus:ring-orange-300 focus:border-orange-400 shadow-2xl font-reading text-readable transition-all duration-300 hover:shadow-3xl placeholder-gray-600\"\n              />\n              <button\n                type=\"submit\"\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-blue-500 to-orange-500 text-white px-6 py-3 rounded-full hover:from-blue-600 hover:to-orange-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 font-display\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation par cat√©gories - D√©plac√©e sous l",
    "classnamewfullpx6py41": ")}\n                className=\"w-full px-6 py-4 text-gray-800 bg-white/95 backdrop-blur-sm rounded-full border-2 border-white/50 focus:outline-none focus:ring-4 focus:ring-orange-300 focus:border-orange-400 shadow-2xl font-reading text-readable transition-all duration-300 hover:shadow-3xl\"\n              />\n              <button\n                type=\"submit\"\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-blue-500 to-orange-500 text-white px-6 py-3 rounded-full hover:from-blue-600 hover:to-orange-600 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 font-display\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n        {/* Navigation par cat√©gories - D√©plac√©e sous l",
    "classnameflexitemsce": ")} className=\"flex items-center gap-2\">\r\n              <Download size={16} />\r\n              Exporter\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Revenus totaux</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {formatPrice(stats.totalRevenue)}\r\n                </p>\r\n                <div className={`flex items-center mt-2 text-sm ${getChangeColor(stats.revenueChange)}`}>\r\n                  {getChangeIcon(stats.revenueChange)}\r\n                  <span className=\"ml-1\">{formatPercent(stats.revenueChange)}</span>\r\n                  <span className=\"text-gray-500 ml-1\">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <DollarSign className=\"h-8 w-8 text-green-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Commandes</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {stats.totalOrders.toLocaleString()}\r\n                </p>\r\n                <div className={`flex items-center mt-2 text-sm ${getChangeColor(stats.ordersChange)}`}>\r\n                  {getChangeIcon(stats.ordersChange)}\r\n                  <span className=\"ml-1\">{formatPercent(stats.ordersChange)}</span>\r\n                  <span className=\"text-gray-500 ml-1\">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <ShoppingBag className=\"h-8 w-8 text-blue-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Utilisateurs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {stats.totalUsers.toLocaleString()}\r\n                </p>\r\n                <div className={`flex items-center mt-2 text-sm ${getChangeColor(stats.usersChange)}`}>\r\n                  {getChangeIcon(stats.usersChange)}\r\n                  <span className=\"ml-1\">{formatPercent(stats.usersChange)}</span>\r\n                  <span className=\"text-gray-500 ml-1\">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <Users className=\"h-8 w-8 text-purple-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Fournisseurs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {stats.totalSuppliers.toLocaleString()}\r\n                </p>\r\n                <div className={`flex items-center mt-2 text-sm ${getChangeColor(stats.suppliersChange)}`}>\r\n                  {getChangeIcon(stats.suppliersChange)}\r\n                  <span className=\"ml-1\">{formatPercent(stats.suppliersChange)}</span>\r\n                  <span className=\"text-gray-500 ml-1\">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <Package className=\"h-8 w-8 text-orange-500\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Charts */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* Revenue Chart */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                √âvolution des Revenus\r\n              </h3>\r\n              <BarChart3 className=\"h-5 w-5 text-gray-400\" />\r\n            </div>\r\n            {loading ? (\r\n              <div className=\"h-64 flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-red-600\"></div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"h-64\">\r\n                <div className=\"flex items-end justify-between h-full space-x-2\">\r\n                  {chartData.map((data, index) => (\r\n                    <div key={index} className=\"flex-1 flex flex-col items-center\">\r\n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-t relative\">\r\n                        <div\r\n                          className=\"bg-gradient-to-t from-green-500 to-green-400 rounded-t transition-all duration-500\"\r\n                          style={{\r\n                            height: `${(data.revenue / maxRevenue) * 200}px`,\r\n                            minHeight: ",
    "errreturn0recupererl": ", err);\r\n      return 0;\r\n    }\r\n  }, []);\r\n\r\n  // R√©cup√©rer les notifications r√©centes\r\n  const fetchRecentNotifications = useCallback(async (limit = 5) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await notificationService.getNotifications(1, limit);\r\n      setNotifications(response.notifications);\r\n      setUnreadCount(response.unreadCount);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : ",
    "errreturn0recupererl1": ", err);\r\n      return 0;\r\n    }\r\n  }, []);\r\n\r\n  // R√©cup√©rer les notifications r√©centes\r\n  const fetchRecentNotifications = useCallback(async (limit = 5) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await notificationService.getNotifications(1, limit);\r\n      setNotifications(response.notifications);\r\n      setUnreadCount(response.unreadCount);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : ",
    "errreturn0recupererl2": ", err);\r\n      return 0;\r\n    }\r\n  }, []);\r\n\r\n  // R√©cup√©rer les notifications r√©centes\r\n  const fetchRecentNotifications = useCallback(async (limit = 5) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const response = await notificationService.getNotifications(1, limit);\r\n      setNotifications(response.notifications);\r\n      setUnreadCount(response.unreadCount);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : ",
    "errreturnfalseajoute": ", err);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Ajouter une nouvelle notification (pour les tests)\r\n  const addNotification = useCallback(async (notification: Omit<Notification, ",
    "errreturnfalsemarque": ", err);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Marquer toutes les notifications comme lues\r\n  const markAllAsRead = useCallback(async () => {\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      \r\n      ",
    "errreturnfalsemarque1": ", err);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Marquer toutes les notifications comme lues\r\n  const markAllAsRead = useCallback(async () => {\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      \r\n      // Mettre √† jour l",
    "errreturnfalsemarque2": ", err);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Marquer toutes les notifications comme lues\r\n  const markAllAsRead = useCallback(async () => {\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      \r\n      // Mettre √† jour l",
    "errreturnnullfinally": ", err);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Marquer une notification comme lue\r\n  const markAsRead = useCallback(async (notificationId: string) => {\r\n    try {\r\n      await notificationService.markAsRead([notificationId]);\r\n      \r\n      // Mettre √† jour l",
    "errreturnnullfinally1": ", err);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Marquer une notification comme lue\r\n  const markAsRead = useCallback(async (notificationId: string) => {\r\n    try {\r\n      await notificationService.markAsRead([notificationId]);\r\n      \r\n      // Mettre √† jour l",
    "errfinallysetisloadi": ", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© */}\r\n      <div className=\"auth-animated-background\">\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n      </div>\r\n\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-form-column\">\r\n          <div className=\"auth-form-header\">\r\n            <h2 className=\"auth-form-title\">{t(",
    "errfinallysetisloadi1": ", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© spectaculaire */}\r\n      <div className=\"auth-animated-background\">\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        \r\n        {/* Particules d",
    "errfinallysetisloadi2": ", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"auth-main-container\">\r\n      {/* Background anim√© spectaculaire */}\r\n      <div className=\"auth-animated-background\">\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        <div className=\"floating-shape\"></div>\r\n        \r\n        {/* Particules d",
    "errorreturnsuccessfa": ", error);\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cr√©er un nouvel utilisateur directement (m√©thode de fallback)\r\n     * Cette m√©thode cr√©e uniquement le document Firestore\r\n     *",
    "errorfinallysetloadi": ", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        await attemptFetch();\r\n    }, [apiFunction, effectiveCacheKey, enableCache, cacheTTL, retryCount, retryDelay]);\r\n\r\n    // Fetch initial et re-fetch sur changement des d√©pendances\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        return () => {\r\n            if (abortControllerRef.current) {\r\n                abortControllerRef.current.abort();\r\n            }\r\n        };\r\n    }, dependencies);\r\n\r\n    const refetch = useCallback(() => {\r\n        return fetchData(true);\r\n    }, [fetchData]);\r\n\r\n    const isStale = useMemo(() => {\r\n        if (!enableCache) return false;\r\n        const cached = dataCache.get(effectiveCacheKey);\r\n        return !cached || Date.now() - cached.timestamp > cacheTTL;\r\n    }, [effectiveCacheKey, enableCache, cacheTTL, lastFetch]);\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        error,\r\n        refetch,\r\n        isStale,\r\n        lastFetch: new Date(lastFetch)\r\n    };\r\n}\r\n\r\n// Hook pour recherche avec debounce\r\nexport function useDebouncedSearch<T>(\r\n    searchFunction: (query: string) => Promise<T[]>,\r\n    searchTerm: string,\r\n    delay: number = 300,\r\n    options: UseOptimizedApiOptions = {}\r\n) {\r\n    const debouncedSearchTerm = useDebounce(searchTerm, delay);\r\n\r\n    const searchApi = useCallback(() => {\r\n        if (!debouncedSearchTerm.trim()) {\r\n            return Promise.resolve([]);\r\n        }\r\n        return searchFunction(debouncedSearchTerm);\r\n    }, [searchFunction, debouncedSearchTerm]);\r\n\r\n    return useOptimizedApi<T[]>(\r\n        searchApi,\r\n        [debouncedSearchTerm],\r\n        {\r\n            ...options,\r\n            cacheKey: options.cacheKey || `search-${debouncedSearchTerm}`,\r\n            cacheTTL: options.cacheTTL || 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n}\r\n\r\n",
    "errorfinallysetloadi1": ", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        await attemptFetch();\r\n    }, [apiFunction, effectiveCacheKey, enableCache, cacheTTL, retryCount, retryDelay]);\r\n\r\n    // Fetch initial et re-fetch sur changement des d√©pendances\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        return () => {\r\n            if (abortControllerRef.current) {\r\n                abortControllerRef.current.abort();\r\n            }\r\n        };\r\n    }, dependencies);\r\n\r\n    const refetch = useCallback(() => {\r\n        return fetchData(true);\r\n    }, [fetchData]);\r\n\r\n    const isStale = useMemo(() => {\r\n        if (!enableCache) return false;\r\n        const cached = dataCache.get(effectiveCacheKey);\r\n        return !cached || Date.now() - cached.timestamp > cacheTTL;\r\n    }, [effectiveCacheKey, enableCache, cacheTTL, lastFetch]);\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        error,\r\n        refetch,\r\n        isStale,\r\n        lastFetch: new Date(lastFetch)\r\n    };\r\n}\r\n\r\n// Hook pour recherche avec debounce\r\nexport function useDebouncedSearch<T>(\r\n    searchFunction: (query: string) => Promise<T[]>,\r\n    searchTerm: string,\r\n    delay: number = 300,\r\n    options: UseOptimizedApiOptions = {}\r\n) {\r\n    const debouncedSearchTerm = useDebounce(searchTerm, delay);\r\n\r\n    const searchApi = useCallback(() => {\r\n        if (!debouncedSearchTerm.trim()) {\r\n            return Promise.resolve([]);\r\n        }\r\n        return searchFunction(debouncedSearchTerm);\r\n    }, [searchFunction, debouncedSearchTerm]);\r\n\r\n    return useOptimizedApi<T[]>(\r\n        searchApi,\r\n        [debouncedSearchTerm],\r\n        {\r\n            ...options,\r\n            cacheKey: options.cacheKey || `search-${debouncedSearchTerm}`,\r\n            cacheTTL: options.cacheTTL || 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n}\r\n\r\n// Hook pour mutations optimis√©es\r\ninterface UseMutationOptions<T> {\r\n    onSuccess?: (data: T) => void;\r\n    onError?: (error: Error) => void;\r\n    invalidateCache?: string | string[];\r\n    optimisticUpdate?: (data: any) => void;\r\n}\r\n\r\nexport function useOptimizedMutation<TData, TVariables>(\r\n    mutationFunction: (variables: TVariables) => Promise<TData>,\r\n    options: UseMutationOptions<TData> = {}\r\n) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<Error | null>(null);\r\n\r\n    const mutate = useCallback(async (variables: TVariables) => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        // Mise √† jour optimiste\r\n        if (options.optimisticUpdate) {\r\n            options.optimisticUpdate(variables);\r\n        }\r\n\r\n        try {\r\n            const result = await mutationFunction(variables);\r\n\r\n            ",
    "errorfinallysetloadi2": ", error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        await attemptFetch();\r\n    }, [apiFunction, effectiveCacheKey, enableCache, cacheTTL, retryCount, retryDelay]);\r\n\r\n    // Fetch initial et re-fetch sur changement des d√©pendances\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        return () => {\r\n            if (abortControllerRef.current) {\r\n                abortControllerRef.current.abort();\r\n            }\r\n        };\r\n    }, dependencies);\r\n\r\n    const refetch = useCallback(() => {\r\n        return fetchData(true);\r\n    }, [fetchData]);\r\n\r\n    const isStale = useMemo(() => {\r\n        if (!enableCache) return false;\r\n        const cached = dataCache.get(effectiveCacheKey);\r\n        return !cached || Date.now() - cached.timestamp > cacheTTL;\r\n    }, [effectiveCacheKey, enableCache, cacheTTL, lastFetch]);\r\n\r\n    return {\r\n        data,\r\n        loading,\r\n        error,\r\n        refetch,\r\n        isStale,\r\n        lastFetch: new Date(lastFetch)\r\n    };\r\n}\r\n\r\n// Hook pour recherche avec debounce\r\nexport function useDebouncedSearch<T>(\r\n    searchFunction: (query: string) => Promise<T[]>,\r\n    searchTerm: string,\r\n    delay: number = 300,\r\n    options: UseOptimizedApiOptions = {}\r\n) {\r\n    const debouncedSearchTerm = useDebounce(searchTerm, delay);\r\n\r\n    const searchApi = useCallback(() => {\r\n        if (!debouncedSearchTerm.trim()) {\r\n            return Promise.resolve([]);\r\n        }\r\n        return searchFunction(debouncedSearchTerm);\r\n    }, [searchFunction, debouncedSearchTerm]);\r\n\r\n    return useOptimizedApi<T[]>(\r\n        searchApi,\r\n        [debouncedSearchTerm],\r\n        {\r\n            ...options,\r\n            cacheKey: options.cacheKey || `search-${debouncedSearchTerm}`,\r\n            cacheTTL: options.cacheTTL || 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n}\r\n\r\n// Hook pour mutations optimis√©es\r\ninterface UseMutationOptions<T> {\r\n    onSuccess?: (data: T) => void;\r\n    onError?: (error: Error) => void;\r\n    invalidateCache?: string | string[];\r\n    optimisticUpdate?: (data: any) => void;\r\n}\r\n\r\nexport function useOptimizedMutation<TData, TVariables>(\r\n    mutationFunction: (variables: TVariables) => Promise<TData>,\r\n    options: UseMutationOptions<TData> = {}\r\n) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<Error | null>(null);\r\n\r\n    const mutate = useCallback(async (variables: TVariables) => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        // Mise √† jour optimiste\r\n        if (options.optimisticUpdate) {\r\n            options.optimisticUpdate(variables);\r\n        }\r\n\r\n        try {\r\n            const result = await mutationFunction(variables);\r\n\r\n            // Invalidation du cache\r\n            if (options.invalidateCache) {\r\n                const cacheKeys = Array.isArray(options.invalidateCache)\r\n                    ? options.invalidateCache\r\n                    : [options.invalidateCache];\r\n\r\n                cacheKeys.forEach(key => {\r\n                    if (key.includes(",
    "errorfinallysetbacku": ", error);\r\n        } finally {\r\n            setBackupLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteBackup = (backupId: string) => {\r\n        setBackups(prev => prev.filter(backup => backup.id !== backupId));\r\n    };\r\n\r\n    const downloadBackup = (backup: BackupFile) => {\r\n        // Simuler le t√©l√©chargement\r\n        console.log(",
    "errorfinallysetbacku1": ", error);\r\n        } finally {\r\n            setBackupLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteBackup = (backupId: string) => {\r\n        setBackups(prev => prev.filter(backup => backup.id !== backupId));\r\n    };\r\n\r\n    const downloadBackup = (backup: BackupFile) => {\r\n        // Simuler le t√©l√©chargement\r\n        console.log(",
    "newcurrencysetcurren": ", newCurrency);\r\n    setCurrency(newCurrency);\r\n    setIsCurrencyMenuOpen(false);\r\n  };\r\n\r\n  // Fermeture des dropdowns au clic ext√©rieur\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        languageDropdownRef.current &&\r\n        !languageDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsLanguageMenuOpen(false);\r\n      }\r\n      if (\r\n        currencyDropdownRef.current &&\r\n        !currencyDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsCurrencyMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(",
    "newcurrencysetcurren1": ", newCurrency);\r\n    setCurrency(newCurrency);\r\n    setIsCurrencyMenuOpen(false);\r\n  };\r\n\r\n  // Fermeture des dropdowns au clic ext√©rieur\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        languageDropdownRef.current &&\r\n        !languageDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsLanguageMenuOpen(false);\r\n      }\r\n      if (\r\n        currencyDropdownRef.current &&\r\n        !currencyDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsCurrencyMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(",
    "newlanguagesetlangua": ", newLanguage);\r\n    setLanguage(newLanguage);\r\n    setIsLanguageMenuOpen(false);\r\n  };\r\n\r\n  // Fermeture au clic ext√©rieur\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        languageDropdownRef.current &&\r\n        !languageDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsLanguageMenuOpen(false);\r\n      }\r\n      if (\r\n        currencyDropdownRef.current &&\r\n        !currencyDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsCurrencyMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(",
    "newlanguagesetlangua1": ", newLanguage);\r\n    setLanguage(newLanguage);\r\n    setIsLanguageMenuOpen(false);\r\n  };\r\n\r\n  // Fermeture au clic ext√©rieur\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        languageDropdownRef.current &&\r\n        !languageDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsLanguageMenuOpen(false);\r\n      }\r\n      if (\r\n        currencyDropdownRef.current &&\r\n        !currencyDropdownRef.current.contains(event.target as Node)\r\n      ) {\r\n        setIsCurrencyMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(",
    "searchqueryreturndiv": ", searchQuery);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n      {/* Hero Section avec paysage chinois stylis√© */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"relative h-[70vh] min-h-[500px] bg-gradient-to-br from-blue-400 via-blue-600 to-purple-800 flex items-center justify-center\">\n          {/* Effet de soleil */}\n          <div \n            className=\"absolute top-16 left-48 w-20 h-20 rounded-full opacity-80\"\n            style={{\n              background: ",
    "stopopacity07linearg": ", stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re */}\r\n            <path d=\"M0,400 L200,180 L400,220 L600,140 L800,160 L1000,100 L1200,140 L1200,400 Z\" fill=\"url(#mountain3)\" />\r\n            \r\n            {/* Montagne moyenne */}\r\n            <path d=\"M0,400 L150,200 L350,240 L550,160 L750,180 L950,120 L1200,160 L1200,400 Z\" fill=\"url(#mountain2)\" />\r\n            \r\n            {/* Montagne avant */}\r\n            <path d=\"M0,400 L100,220 L300,200 L500,280 L700,150 L900,180 L1100,140 L1200,180 L1200,400 Z\" fill=\"url(#mountain1)\" />\r\n          </svg>          {/* Navigation en haut */}\r\n          <div className=\"absolute top-0 left-0 right-0 flex justify-between items-center p-6 z-10 backdrop-blur-sm\">            <div className=\"flex items-center space-x-4\">\r\n              <Menu className=\"h-6 w-6 text-white hover:text-orange-200 transition-colors cursor-pointer\" />\r\n              <span className=\"text-white text-sm font-medium\">Menu</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-8\">\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Globe className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Search className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Heart className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Bell className=\"h-5 w-5 text-white\" />\r\n                <span className=\"bg-orange-500 text-white text-xs rounded-full h-6 w-6 flex items-center justify-center font-bold animate-pulse\">3</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <User className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <button className=\"bg-white text-gray-800 px-6 py-2 rounded-full text-sm font-bold hover:bg-orange-50 hover:text-orange-600 transition-all duration-300 transform hover:scale-105 shadow-lg\">\r\n                S",
    "stopopacity07linearg1": ", stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re */}\r\n            <path d=\"M0,400 L200,180 L400,220 L600,140 L800,160 L1000,100 L1200,140 L1200,400 Z\" fill=\"url(#mountain3)\" />\r\n            \r\n            {/* Montagne moyenne */}\r\n            <path d=\"M0,400 L150,200 L350,240 L550,160 L750,180 L950,120 L1200,160 L1200,400 Z\" fill=\"url(#mountain2)\" />\r\n            \r\n            {/* Montagne avant */}\r\n            <path d=\"M0,400 L100,220 L300,200 L500,280 L700,150 L900,180 L1100,140 L1200,180 L1200,400 Z\" fill=\"url(#mountain1)\" />\r\n          </svg>          {/* Navigation en haut */}\r\n          <div className=\"absolute top-0 left-0 right-0 flex justify-between items-center p-6 z-10 backdrop-blur-sm\">            <div className=\"flex items-center space-x-4\">\r\n              <Menu className=\"h-6 w-6 text-white hover:text-orange-200 transition-colors cursor-pointer\" />\r\n              <span className=\"text-white text-sm font-medium\">Menu</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-8\">\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Globe className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Search className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Heart className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <Bell className=\"h-5 w-5 text-white\" />                <span className=\"bg-orange-500 text-white text-xs rounded-full h-6 w-6 flex items-center justify-center font-bold animate-pulse\">3</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2 hover:text-orange-200 transition-colors cursor-pointer\">\r\n                <User className=\"h-5 w-5 text-white\" />\r\n              </div>\r\n              <button className=\"bg-white text-gray-800 px-6 py-2 rounded-full text-sm font-bold hover:bg-orange-50 hover:text-orange-600 transition-all duration-300 transform hover:scale-105 shadow-lg\">\r\n                S",
    "languageislanguageme": ", {\r\n      language: isLanguageMenuOpen,\r\n      notification: isNotificationCenterOpen,\r\n      currency: isCurrencyMenuOpen\r\n    });\r\n  }, [isLanguageMenuOpen, isNotificationCenterOpen, isCurrencyMenuOpen]);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"bg-gradient-to-br from-blue-600 via-blue-500 to-orange-400 shadow-md sticky top-0 z-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            {/* Logo */}\r\n            <div className=\"flex items-center space-x-4\">\r\n              <Link to=\"/\" className=\"flex items-center\">\r\n                <ShoppingBag className=\"h-8 w-8 text-white\" />\r\n                <span className=\"ml-2 text-xl font-bold text-white font-display\">Chine ton usine</span>\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex items-center space-x-4\">\r\n              {/* Language selector avec isolation compl√®te */}\r\n              <div className=\"relative\" ref={languageDropdownRef}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleLanguageClick}\r\n                  className=\"flex items-center space-x-2 text-white hover:text-orange-200 transition-colors cursor-pointer p-2 rounded focus:outline-none focus:ring-2 focus:ring-orange-300\"\r\n                  title=\"Changer la langue\"\r\n                  aria-label=\"S√©lecteur de langue\"\r\n                >\r\n                  <Globe className=\"h-5 w-5\" />\r\n                </button>\r\n\r\n                {isLanguageMenuOpen && (\r\n                  <div className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white dark:bg-gray-700 ring-1 ring-black ring-opacity-5 focus:outline-none z-50\">\r\n                    {availableLanguages.map((code) => (\r\n                      <button\r\n                        key={code}\r\n                        type=\"button\"\r\n                        onClick={() => handleLanguageChange(code)}\r\n                        className={`${\r\n                          language === code ? ",
    "svgconstsocialmediam": "/>\r\n      </svg>\r\n    )\r\n  }\r\n};\r\n\r\nconst SocialMediaModal: React.FC<SocialMediaModalProps> = ({\r\n  isOpen,\r\n  selectedNetworks,\r\n  existingLinks,\r\n  onClose,\r\n  onSave\r\n}) => {\r\n  const { t } = useLanguage();\r\n  const [links, setLinks] = useState<SocialMediaLink[]>([]);\r\n  const [errors, setErrors] = useState<Record<SocialNetwork, string>>({} as Record<SocialNetwork, string>);\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const firstInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Initialiser les liens avec les valeurs existantes\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const initialLinks: SocialMediaLink[] = selectedNetworks.map(network => {\r\n        const existingLink = existingLinks.find(link => link.network === network);\r\n        return {\r\n          network,\r\n          url: existingLink?.url || ''\r\n        };\r\n      });\r\n      setLinks(initialLinks);\r\n      setErrors({} as Record<SocialNetwork, string>);\r\n      \r\n      // Focus sur le premier champ apr√®s l'animation\r\n      setTimeout(() => {\r\n        firstInputRef.current?.focus();\r\n      }, 150);\r\n    }\r\n  }, [isOpen, selectedNetworks, existingLinks]);\r\n\r\n  // Gestion de l'accessibilit√© clavier\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      // Emp√™cher le scroll du body\r\n      document.body.style.overflow = 'hidden';\r\n      \r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n        document.body.style.overflow = 'unset';\r\n      };\r\n    }\r\n  }, [isOpen, onClose]);\r\n\r\n  const validateUrl = (url: string, network: SocialNetwork): string => {\r\n    if (!url.trim()) {\r\n      return t('socialMediaModal.urlRequired');\r\n    }\r\n    \r\n    // Validation basique d'URL\r\n    try {\r\n      new URL(url);\r\n    } catch {\r\n      return t('socialMediaModal.urlInvalid');\r\n    }\r\n    \r\n    // Validation sp√©cifique selon le r√©seau\r\n    const domain = socialNetworkData[network].placeholder.split('/')[2];\r\n    if (!url.includes(domain)) {\r\n      return t('socialMediaModal.urlInvalidDomain');\r\n    }\r\n    \r\n    return '';\r\n  };\r\n\r\n  const handleUrlChange = (network: SocialNetwork, url: string) => {\r\n    setLinks(prev => \r\n      prev.map(link => \r\n        link.network === network ? { ...link, url } : link\r\n      )\r\n    );\r\n    \r\n    // Effacer l'erreur si l'utilisateur tape\r\n    if (errors[network]) {\r\n      setErrors(prev => ({ ...prev, [network]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const newErrors: Record<SocialNetwork, string> = {} as Record<SocialNetwork, string>;\r\n    let hasErrors = false;\r\n\r\n    links.forEach(link => {\r\n      const error = validateUrl(link.url, link.network);\r\n      if (error) {\r\n        newErrors[link.network] = error;\r\n        hasErrors = true;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (!hasErrors) {\r\n      onSave(links);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.target === modalRef.current) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div \r\n      ref={modalRef}\r\n      className=",
    "errorkeystoredvaluer": ":`, error);\r\n    }\r\n  }, [key, storedValue]);\r\n\r\n  return [storedValue, setValue] as const;\r\n};\r\n\r\n// Hook pour throttle (limitation des appels)\r\nexport const useThrottle = <T extends (...args: any[]) => any>(\r\n  callback: T,\r\n  delay: number\r\n): T => {\r\n  const lastCall = useRef<number>(0);\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  return useCallback((...args: Parameters<T>) => {\r\n    const now = Date.now();\r\n    \r\n    if (now - lastCall.current >= delay) {\r\n      lastCall.current = now;\r\n      return callback(...args);\r\n    } else {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = setTimeout(() => {\r\n        lastCall.current = Date.now();\r\n        callback(...args);\r\n      }, delay - (now - lastCall.current));\r\n    }\r\n  }, [callback, delay]) as T;\r\n};\r\n\r\n// Hook pour la gestion optimis√©e des √©tats de formulaire\r\nexport const useFormState = <T extends Record<string, any>>(initialState: T) => {\r\n  const [state, setState] = useState<T>(initialState);\r\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\r\n  const [touched, setTouched] = useState<Partial<Record<keyof T, boolean>>>({});\r\n\r\n  const setValue = useCallback((field: keyof T, value: any) => {\r\n    setState(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: undefined }));\r\n    }\r\n  }, [errors]);\r\n\r\n  const setError = useCallback((field: keyof T, error: string) => {\r\n    setErrors(prev => ({ ...prev, [field]: error }));\r\n  }, []);\r\n\r\n  const setTouched = useCallback((field: keyof T) => {\r\n    setTouched(prev => ({ ...prev, [field]: true }));\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setState(initialState);\r\n    setErrors({});\r\n    setTouched({});\r\n  }, [initialState]);\r\n\r\n  return {\r\n    state,\r\n    errors,\r\n    touched,\r\n    setValue,\r\n    setError,\r\n    setTouched,\r\n    reset\r\n  };\r\n};\r\n\r\n",
    "obtientlenomduprodui": ";\r\n\r\n/**\r\n * Obtient le nom du produit dans la langue sp√©cifi√©e\r\n * @param product Le produit\r\n * @param language La langue souhait√©e\r\n * @returns Le nom du produit dans la langue demand√©e ou un fallback\r\n *",
    "obtientlenomduprodui1": ";\r\n\r\n/**\r\n * Obtient le nom du produit dans la langue sp√©cifi√©e\r\n * @param product Le produit\r\n * @param language La langue souhait√©e\r\n * @returns Le nom du produit dans la langue demand√©e ou un fallback\r\n */\r\nexport const getProductName = (product: any, language: UserLanguage): string => {\r\n  // Si le nom est d√©j√† multilingue\r\n  if (typeof product.name === ",
    "obtientlenomduprodui2": ";\r\n\r\n/**\r\n * Obtient le nom du produit dans la langue sp√©cifi√©e\r\n * @param product Le produit\r\n * @param language La langue souhait√©e\r\n * @returns Le nom du produit dans la langue demand√©e ou un fallback\r\n */\r\nexport const getProductName = (product: any, language: UserLanguage): string => {\r\n  // Si le nom est d√©j√† multilingue\r\n  if (typeof product.name === ",
    "servicecentralisedeg": ";\r\n\r\n/**\r\n * Service centralis√© de gestion des produits\r\n * Permet de synchroniser les produits entre la gestion fournisseur et la d√©couverte\r\n */\r\nclass ProductsService {\r\n  private static instance: ProductsService;\r\n  private listeners: Array<() => void> = [];\r\n\r\n  static getInstance(): ProductsService {\r\n    if (!ProductsService.instance) {\r\n      ProductsService.instance = new ProductsService();\r\n    }\r\n    return ProductsService.instance;\r\n  }\r\n\r\n  /**\r\n   * √âcouter les changements dans la liste des produits\r\n   */\r\n  subscribe(listener: () => void): () => void {\r\n    this.listeners.push(listener);\r\n    // Retourner une fonction pour se d√©sabonner\r\n    return () => {\r\n      this.listeners = this.listeners.filter(l => l !== listener);\r\n    };\r\n  }\r\n\r\n  ",
    "servicecentralisedeg1": ";\r\n\r\n/**\r\n * Service centralis√© de gestion des produits\r\n * Permet de synchroniser les produits entre la gestion fournisseur et la d√©couverte\r\n */\r\nclass ProductsService {\r\n  private static instance: ProductsService;\r\n  private listeners: Array<() => void> = [];\r\n\r\n  static getInstance(): ProductsService {\r\n    if (!ProductsService.instance) {\r\n      ProductsService.instance = new ProductsService();\r\n    }\r\n    return ProductsService.instance;\r\n  }\r\n\r\n  /**\r\n   * √âcouter les changements dans la liste des produits\r\n   */\r\n  subscribe(listener: () => void): () => void {\r\n    this.listeners.push(listener);\r\n    // Retourner une fonction pour se d√©sabonner\r\n    return () => {\r\n      this.listeners = this.listeners.filter(l => l !== listener);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Notifier tous les listeners d",
    "cacheglobalpourlesdo": ";\r\n\r\n// Cache global pour les donn√©es\r\nconst dataCache = new Map<string, { data: any; timestamp: number; ttl: number }>();\r\n\r\n// Configuration par d√©faut\r\nconst DEFAULT_CACHE_TTL = 5 * 60 * 1000; // 5 minutes\r\n\r\n// Utilitaires de cache\r\nexport const cacheUtils = {\r\n    set: (key: string, data: any, ttl: number = DEFAULT_CACHE_TTL) => {\r\n        dataCache.set(key, {\r\n            data,\r\n            timestamp: Date.now(),\r\n            ttl\r\n        });\r\n    },\r\n\r\n    get: (key: string) => {\r\n        const cached = dataCache.get(key);\r\n        if (!cached) return null;\r\n\r\n        if (Date.now() - cached.timestamp > cached.ttl) {\r\n            dataCache.delete(key);\r\n            return null;\r\n        }\r\n\r\n        return cached.data;\r\n    },\r\n\r\n    invalidate: (key: string) => {\r\n        dataCache.delete(key);\r\n    },\r\n\r\n    clear: () => {\r\n        dataCache.clear();\r\n    },\r\n\r\n    clearPattern: (pattern: string) => {\r\n        for (const key of dataCache.keys()) {\r\n            if (key.includes(pattern)) {\r\n                dataCache.delete(key);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Hook pour debounce optimis√©\r\nexport const useDebounce = <T>(value: T, delay: number): T => {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n};\r\n\r\n// Hook pour API optimis√©e avec cache\r\ninterface UseOptimizedApiOptions {\r\n    cacheKey?: string;\r\n    cacheTTL?: number;\r\n    enableCache?: boolean;\r\n    retryCount?: number;\r\n    retryDelay?: number;\r\n}\r\n\r\nexport function useOptimizedApi<T>(\r\n    apiFunction: () => Promise<T>,\r\n    dependencies: any[] = [],\r\n    options: UseOptimizedApiOptions = {}\r\n) {\r\n    const [data, setData] = useState<T | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<Error | null>(null);\r\n    const [lastFetch, setLastFetch] = useState<number>(0);\r\n\r\n    const abortControllerRef = useRef<AbortController | null>(null);\r\n\r\n    const {\r\n        cacheKey,\r\n        cacheTTL = DEFAULT_CACHE_TTL,\r\n        enableCache = true,\r\n        retryCount = 3,\r\n        retryDelay = 1000\r\n    } = options;\r\n\r\n    // G√©n√©ration automatique de la cl√© de cache\r\n    const effectiveCacheKey = useMemo(() => {\r\n        return cacheKey || `api-${JSON.stringify(dependencies)}`;\r\n    }, [cacheKey, dependencies]);\r\n\r\n    const fetchData = useCallback(async (skipCache = false) => {\r\n        // Annuler la requ√™te pr√©c√©dente\r\n        if (abortControllerRef.current) {\r\n            abortControllerRef.current.abort();\r\n        }\r\n\r\n        abortControllerRef.current = new AbortController();\r\n\r\n        // V√©rifier le cache d",
    "cacheglobalpourlesdo1": ";\r\n\r\n// Cache global pour les donn√©es\r\nconst dataCache = new Map<string, { data: any; timestamp: number; ttl: number }>();\r\n\r\n// Configuration par d√©faut\r\nconst DEFAULT_CACHE_TTL = 5 * 60 * 1000; // 5 minutes\r\n\r\n// Utilitaires de cache\r\nexport const cacheUtils = {\r\n    set: (key: string, data: any, ttl: number = DEFAULT_CACHE_TTL) => {\r\n        dataCache.set(key, {\r\n            data,\r\n            timestamp: Date.now(),\r\n            ttl\r\n        });\r\n    },\r\n\r\n    get: (key: string) => {\r\n        const cached = dataCache.get(key);\r\n        if (!cached) return null;\r\n\r\n        if (Date.now() - cached.timestamp > cached.ttl) {\r\n            dataCache.delete(key);\r\n            return null;\r\n        }\r\n\r\n        return cached.data;\r\n    },\r\n\r\n    invalidate: (key: string) => {\r\n        dataCache.delete(key);\r\n    },\r\n\r\n    clear: () => {\r\n        dataCache.clear();\r\n    },\r\n\r\n    clearPattern: (pattern: string) => {\r\n        for (const key of dataCache.keys()) {\r\n            if (key.includes(pattern)) {\r\n                dataCache.delete(key);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Hook pour debounce optimis√©\r\nexport const useDebounce = <T>(value: T, delay: number): T => {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n};\r\n\r\n// Hook pour API optimis√©e avec cache\r\ninterface UseOptimizedApiOptions {\r\n    cacheKey?: string;\r\n    cacheTTL?: number;\r\n    enableCache?: boolean;\r\n    retryCount?: number;\r\n    retryDelay?: number;\r\n}\r\n\r\nexport function useOptimizedApi<T>(\r\n    apiFunction: () => Promise<T>,\r\n    dependencies: any[] = [],\r\n    options: UseOptimizedApiOptions = {}\r\n) {\r\n    const [data, setData] = useState<T | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<Error | null>(null);\r\n    const [lastFetch, setLastFetch] = useState<number>(0);\r\n\r\n    const abortControllerRef = useRef<AbortController | null>(null);\r\n\r\n    const {\r\n        cacheKey,\r\n        cacheTTL = DEFAULT_CACHE_TTL,\r\n        enableCache = true,\r\n        retryCount = 3,\r\n        retryDelay = 1000\r\n    } = options;\r\n\r\n    // G√©n√©ration automatique de la cl√© de cache\r\n    const effectiveCacheKey = useMemo(() => {\r\n        return cacheKey || `api-${JSON.stringify(dependencies)}`;\r\n    }, [cacheKey, dependencies]);\r\n\r\n    const fetchData = useCallback(async (skipCache = false) => {\r\n        // Annuler la requ√™te pr√©c√©dente\r\n        if (abortControllerRef.current) {\r\n            abortControllerRef.current.abort();\r\n        }\r\n\r\n        abortControllerRef.current = new AbortController();\r\n\r\n        // V√©rifier le cache d",
    "hookpourdebounceopti": ";\r\n\r\n// Hook pour debounce (optimisation des recherches)\r\nexport const useDebounce = <T>(value: T, delay: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\n// Hook pour intersection observer (lazy loading optimis√©)\r\nexport const useIntersectionObserver = (\r\n  ref: React.RefObject<Element>,\r\n  options: IntersectionObserverInit = {}\r\n) => {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\n// Hook pour localStorage avec synchronisation\r\nexport const useLocalStorage = <T>(key: string, initialValue: T) => {\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(`Error reading localStorage key \"${key}\":`, error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = useCallback((value: T | ((val: T) => T)) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.error(`Error setting localStorage key \"${key}\":`, error);\r\n    }\r\n  }, [key, storedValue]);\r\n\r\n  return [storedValue, setValue] as const;\r\n};\r\n\r\n// Hook pour throttle (limitation des appels)\r\nexport const useThrottle = <T extends (...args: any[]) => any>(\r\n  callback: T,\r\n  delay: number\r\n): T => {\r\n  const lastCall = useRef<number>(0);\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  return useCallback((...args: Parameters<T>) => {\r\n    const now = Date.now();\r\n    \r\n    if (now - lastCall.current >= delay) {\r\n      lastCall.current = now;\r\n      return callback(...args);\r\n    } else {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = setTimeout(() => {\r\n        lastCall.current = Date.now();\r\n        callback(...args);\r\n      }, delay - (now - lastCall.current));\r\n    }\r\n  }, [callback, delay]) as T;\r\n};\r\n\r\n// Hook pour la gestion optimis√©e des √©tats de formulaire\r\nexport const useFormState = <T extends Record<string, any>>(initialState: T) => {\r\n  const [state, setState] = useState<T>(initialState);\r\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string>>>({});\r\n  const [touched, setTouched] = useState<Partial<Record<keyof T, boolean>>>({});\r\n\r\n  const setValue = useCallback((field: keyof T, value: any) => {\r\n    setState(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: undefined }));\r\n    }\r\n  }, [errors]);\r\n\r\n  const setError = useCallback((field: keyof T, error: string) => {\r\n    setErrors(prev => ({ ...prev, [field]: error }));\r\n  }, []);\r\n\r\n  const setTouched = useCallback((field: keyof T) => {\r\n    setTouched(prev => ({ ...prev, [field]: true }));\r\n  }, []);\r\n\r\n  const reset = useCallback(() => {\r\n    setState(initialState);\r\n    setErrors({});\r\n    setTouched({});\r\n  }, [initialState]);\r\n\r\n  return {\r\n    state,\r\n    errors,\r\n    touched,\r\n    setValue,\r\n    setError,\r\n    setTouched,\r\n    reset\r\n  };\r\n};\r\n\r\n// Hook pour la performance de scroll\r\nexport const useScrollPerformance = () => {\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const timeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setIsScrolling(true);\r\n      \r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = setTimeout(() => {\r\n        setIsScrolling(false);\r\n      }, 150);\r\n    };\r\n\r\n    window.addEventListener(",
    "lazyloadingdescompos": ";\r\n\r\n// Lazy loading des composants pour r√©duire la taille du bundle initial\r\nconst HomePage = React.lazy(() => import(",
    "lazyloadingdescompos1": ";\r\n\r\n// Lazy loading des composants pour r√©duire la taille du bundle initial\r\nconst HomePage = React.lazy(() => import(",
    "lazyloadingdescompos2": ";\r\n\r\n// Lazy loading des composants pour r√©duire la taille du bundle initial\r\nconst HomePage = React.lazy(() => import(",
    "lazyloadingdescompos3": ";\r\n\r\n// Lazy loading des composants pour r√©duire la taille du bundle initial\r\nconst HomePage = React.lazy(() => import(",
    "constproductspagepla": ";\r\n\r\nconst ProductsPagePlaceholder: React.FC = () => {\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 dark:from-gray-900 dark:to-purple-900 flex items-center justify-center\">\r\n            <div className=\"max-w-2xl mx-auto px-4 text-center\">\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-3xl shadow-2xl p-12 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"text-6xl mb-6\">üöß</div>\r\n\r\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                        Nouvelle Page Produits\r\n                    </h1>\r\n\r\n                    <p className=\"text-xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed\">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir une exp√©rience personnalis√©e.\r\n                    </p>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\r\n                        <div className=\"flex items-center gap-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\r\n                            <ShoppingBag className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                            <span className=\"text-blue-800 dark:text-blue-200 font-medium\">Catalogue personnalis√©</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-green-50 dark:bg-green-900/20 rounded-xl\">\r\n                            <Search className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                            <span className=\"text-green-800 dark:text-green-200 font-medium\">Recherche avanc√©e</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-purple-50 dark:bg-purple-900/20 rounded-xl\">\r\n                            <Star className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n                            <span className=\"text-purple-800 dark:text-purple-200 font-medium\">Interface moderne</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-orange-50 dark:bg-orange-900/20 rounded-xl\">\r\n                            <Users className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\r\n                            <span className=\"text-orange-800 dark:text-orange-200 font-medium\">Exp√©rience utilisateur</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"inline-flex items-center gap-2 px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-2xl font-semibold text-lg shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300\"\r\n                        >\r\n                            Retour √† l",
    "constsearchpageplace": ";\r\n\r\nconst SearchPagePlaceholder: React.FC = () => {\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 dark:from-gray-900 dark:to-green-900 flex items-center justify-center\">\r\n            <div className=\"max-w-2xl mx-auto px-4 text-center\">\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-3xl shadow-2xl p-12 border border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"text-6xl mb-6\">üîç</div>\r\n\r\n                    <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n                        Nouvelle Page Recherche\r\n                    </h1>\r\n\r\n                    <p className=\"text-xl text-gray-600 dark:text-gray-300 mb-8 leading-relaxed\">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir des fonctionnalit√©s de recherche avanc√©es.\r\n                    </p>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\r\n                        <div className=\"flex items-center gap-3 p-4 bg-green-50 dark:bg-green-900/20 rounded-xl\">\r\n                            <Search className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                            <span className=\"text-green-800 dark:text-green-200 font-medium\">Recherche intelligente</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-xl\">\r\n                            <Filter className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                            <span className=\"text-blue-800 dark:text-blue-200 font-medium\">Filtres personnalis√©s</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-purple-50 dark:bg-purple-900/20 rounded-xl\">\r\n                            <SortAsc className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n                            <span className=\"text-purple-800 dark:text-purple-200 font-medium\">Tri avanc√©</span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-3 p-4 bg-orange-50 dark:bg-orange-900/20 rounded-xl\">\r\n                            <Globe className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\r\n                            <span className=\"text-orange-800 dark:text-orange-200 font-medium\">Recherche globale</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"inline-flex items-center gap-2 px-8 py-4 bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-2xl font-semibold text-lg shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300\"\r\n                        >\r\n                            Retour √† l",
    "interfaceimageupload": ";\r\n\r\ninterface ImageUploadProps {\r\n  onImageSelect?: (files: File[]) => void;\r\n  onUpload?: (files: File[]) => Promise<string[]>; // retourne les URLs des images upload√©es\r\n  maxImages?: number;\r\n  maxSizePerImage?: number; ",
    "interfaceimageupload1": ";\r\n\r\ninterface ImageUploadProps {\r\n  onImageSelect?: (files: File[]) => void;\r\n  onUpload?: (files: File[]) => Promise<string[]>; // retourne les URLs des images upload√©es\r\n  maxImages?: number;\r\n  maxSizePerImage?: number; // en MB\r\n  className?: string;\r\n  existingImages?: string[]; // URLs des images existantes\r\n  onRemoveExisting?: (imageUrl: string) => void;\r\n}\r\n\r\ninterface UploadImage {\r\n  file?: File;\r\n  id: string;\r\n  preview: string;\r\n  status: ",
    "interfacesearchfilte": ";\r\n\r\ninterface SearchFilters {\r\n  priceRange: [number, number];\r\n  categories: string[];\r\n  certifications: string[];\r\n  moqRange: [number, number];\r\n  location: string;\r\n}\r\n\r\nexport const Home: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\r\n  const [allProducts, setAllProducts] = useState<Product[]>([]);\r\n  const [comparisonProducts, setComparisonProducts] = useState<Product[]>([]);\r\n  // Charger tous les produits au montage (incluant ceux ajout√©s par les fournisseurs)\r\n  useEffect(() => {\r\n    const loadProducts = () => {\r\n      const products = productsService.getAllProducts();\r\n      setAllProducts(products);\r\n      // Afficher les 6 premiers produits par d√©faut\r\n      setSearchResults(products.slice(0, 6));\r\n    };\r\n    \r\n    ",
    "interfacesearchfilte1": ";\r\n\r\ninterface SearchFilters {\r\n  priceRange: [number, number];\r\n  categories: string[];\r\n  certifications: string[];\r\n  moqRange: [number, number];\r\n  location: string;\r\n}\r\n\r\nexport const Home: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\r\n  const [allProducts, setAllProducts] = useState<Product[]>([]);\r\n  const [comparisonProducts, setComparisonProducts] = useState<Product[]>([]);\r\n  // Charger tous les produits au montage (incluant ceux ajout√©s par les fournisseurs)\r\n  useEffect(() => {\r\n    const loadProducts = () => {\r\n      const products = productsService.getAllProducts();\r\n      setAllProducts(products);\r\n      // Afficher les 6 premiers produits par d√©faut\r\n      setSearchResults(products.slice(0, 6));\r\n    };\r\n    \r\n    // Charger les produits initialement\r\n    loadProducts();\r\n    \r\n    ",
    "interfacesearchfilte2": ";\r\n\r\ninterface SearchFilters {\r\n  priceRange: [number, number];\r\n  categories: string[];\r\n  certifications: string[];\r\n  moqRange: [number, number];\r\n  location: string;\r\n}\r\n\r\nexport const Home: React.FC = () => {\r\n  const { t, language } = useLanguage();\r\n  const [searchResults, setSearchResults] = useState<Product[]>([]);\r\n  const [allProducts, setAllProducts] = useState<Product[]>([]);\r\n  const [comparisonProducts, setComparisonProducts] = useState<Product[]>([]);\r\n  // Charger tous les produits au montage (incluant ceux ajout√©s par les fournisseurs)\r\n  useEffect(() => {\r\n    const loadProducts = () => {\r\n      const products = productsService.getAllProducts();\r\n      setAllProducts(products);\r\n      // Afficher les 6 premiers produits par d√©faut\r\n      setSearchResults(products.slice(0, 6));\r\n    };\r\n    \r\n    // Charger les produits initialement\r\n    loadProducts();\r\n    \r\n    // S",
    "interfaceusenotifica": ";\r\n\r\ninterface UseNotificationsOptions {\r\n  pollInterval?: number;\r\n  autoRefresh?: boolean;\r\n}\r\n\r\nexport const useNotifications = (options: UseNotificationsOptions = {}) => {\r\n  const { pollInterval = 30000, autoRefresh = true } = options;\r\n  \r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // R√©cup√©rer le nombre de notifications non lues\r\n  const fetchUnreadCount = useCallback(async () => {\r\n    try {\r\n      const count = await notificationService.getUnreadCount();\r\n      setUnreadCount(count);\r\n      return count;\r\n    } catch (err) {\r\n      console.error(",
    "interfaceusenotifica1": ";\r\n\r\ninterface UseNotificationsOptions {\r\n  pollInterval?: number;\r\n  autoRefresh?: boolean;\r\n}\r\n\r\nexport const useNotifications = (options: UseNotificationsOptions = {}) => {\r\n  const { pollInterval = 30000, autoRefresh = true } = options;\r\n  \r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // R√©cup√©rer le nombre de notifications non lues\r\n  const fetchUnreadCount = useCallback(async () => {\r\n    try {\r\n      const count = await notificationService.getUnreadCount();\r\n      setUnreadCount(count);\r\n      return count;\r\n    } catch (err) {\r\n      console.error(",
    "interfaceusenotifica2": ";\r\n\r\ninterface UseNotificationsOptions {\r\n  pollInterval?: number;\r\n  autoRefresh?: boolean;\r\n}\r\n\r\nexport const useNotifications = (options: UseNotificationsOptions = {}) => {\r\n  const { pollInterval = 30000, autoRefresh = true } = options;\r\n  \r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // R√©cup√©rer le nombre de notifications non lues\r\n  const fetchUnreadCount = useCallback(async () => {\r\n    try {\r\n      const count = await notificationService.getUnreadCount();\r\n      setUnreadCount(count);\r\n      return count;\r\n    } catch (err) {\r\n      console.error(",
    "returnadminlayoutdiv": ";\r\n    }\r\n  };\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/admin/dashboard\" label=\"Retour au tableau de bord admin\" variant=\"ghost\" />\r\n\r\n        {/* Header */}\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Gestion des Utilisateurs\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              G√©rez tous les utilisateurs de la plateforme\r\n            </p>\r\n          </div>          <div className=\"flex gap-2\">\r\n            <Button onClick={() => setIsCreateModalOpen(true)} className=\"flex items-center gap-2\">\r\n              <Plus size={16} />\r\n              Nouvel utilisateur\r\n            </Button>\r\n            <Button\r\n              onClick={handleSyncUsers}\r\n              variant=\"outline\"\r\n              className=\"flex items-center gap-2\"\r\n              disabled={syncLoading}\r\n            >\r\n              <RefreshCw size={16} className={syncLoading ? ",
    "constgettotalrevenue": ";\r\n  };\r\n\r\n  const getTotalRevenue = () => {\r\n    return customers.reduce((sum, customer) => sum + customer.totalSpent, 0);\r\n  };\r\n  return (\r\n    <SupplierLayout>\r\n      <div className=\"space-y-6\">\r\n        {/* Bouton retour */}\r\n        <BackButton to=\"/supplier/dashboard\" label=\"Retour au tableau de bord\" variant=\"ghost\" />\r\n\r\n        {/* Header */}\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Mes Clients\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            G√©rez vos relations clients et suivez leur activit√©\r\n          </p>\r\n        </div>\r\n\r\n        {/* Stats Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"h-8 w-8 text-blue-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total clients</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">{customers.length}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"h-8 w-8 text-green-500\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Clients actifs</p>\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {customers.filter(c => c.status === ",
    "importhomepackagebar": ";\r\nimport { \r\n  Home, \r\n  Package, \r\n  BarChart3, \r\n  MessageSquare, \r\n  FileText, \r\n  Settings,\r\n  Users,\r\n  Star\r\n} from ",
    "thomepageoptimizeman": ">\n                  {t('homepage.optimize.manage.description')}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e */}\n      <div className=",
    "thomepageoptimizeman1": ">\n                  {t('homepage.optimize.manage.description')}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e */}\n      <div className=",
    "thomepageoptimizepay": ">\n                  {t('homepage.optimize.pay.description')}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement */}\n            <div className=",
    "thomepageoptimizepay1": ">\n                  {t('homepage.optimize.pay.description')}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement */}\n            <div className=",
    "thomepagehowctabutto": ">\n                {t('homepage.how.cta')}\n              </Button>\n            </Link>\n          </div>\n\n          {/* Section Recommandations int√©gr√©e */}\n          <ProductRecommendations />\n        </div>\n      </div>\n\n      {/* Optimisez vos commandes */}\n      <div className=",
    "thomepagehowstep1des": ">\n                {t('homepage.how.step1.description')}\n              </p>\n            </div>\n\n            {/* √âtape 2 */}\n            <div className=",
    "thomepagehowstep1des1": ">\n                {t('homepage.how.step1.description')}\n              </p>\n            </div>\n\n            {/* √âtape 2 */}\n            <div className=",
    "thomepagehowstep2des": ">\n                {t('homepage.how.step2.description')}\n              </p>\n            </div>\n\n            {/* √âtape 3 */}\n            <div className=",
    "thomepagehowstep2des1": ">\n                {t('homepage.how.step2.description')}\n              </p>\n            </div>\n\n            {/* √âtape 3 */}\n            <div className=",
    "retoural4": ">\n            Retour √† l",
    "systemedeparticulesf": ">\n          {/* Syst√®me de particules flottantes */}\n          <React.Suspense fallback={null}>\n            <ParticleSystem particleCount={60} className=",
    "herosectionavecvideo": ">\n      {/* Hero Section avec vid√©o background et paysage chinois stylis√© *",
    "herosectionavecvideo1": ">\n      {/* Hero Section avec vid√©o background et paysage chinois stylis√© *",
    "herosectionavecvideo2": ">\n      {/* Hero Section avec vid√©o background et paysage chinois stylis√© */}\n      <div className=",
    "spanclassnameinlinef": ">\r\n                                            <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${backup.status === 'completed'\r\n                                                    ? 'bg-green-100 text-green-800'\r\n                                                    : backup.status === 'failed'\r\n                                                        ? 'bg-red-100 text-red-800'\r\n                                                        : 'bg-yellow-100 text-yellow-800'\r\n                                                }`}>\r\n                                                {backup.status === 'completed' ? 'Termin√©' :\r\n                                                    backup.status === 'failed' ? '√âchec' : 'En cours'}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=",
    "creerlescomptesadmin": ">\r\n                            Cr√©er les comptes administrateurs essentiels pour la production (admin principal, backup, support).\r\n                        <",
    "creerlescomptesadmin1": ">\r\n                            Cr√©er les comptes administrateurs essentiels pour la production (admin principal, backup, support).\r\n                        <",
    "creerlescomptesadmin2": ">\r\n                            Cr√©er les comptes administrateurs essentiels pour la production (admin principal, backup, support).\r\n                        </p>\r\n                        <button\r\n                            onClick={handleCreateEssentialUsers}\r\n                            disabled={isCreating}\r\n                            className=",
    "retourauxproduits1": ">\r\n                        Retour aux produits\r\n                    <",
    "retourauxproduitslin": ">\r\n                        Retour aux produits\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Calcul du prix total avec variantes et r√©ductions\r\n    const selectedImage = product.images[selectedImageIndex];\r\n    const variantPriceAddition = Object.values(selectedVariants).reduce((total, variantId) => {\r\n        const variant = product.variants?.find(v => v.id === variantId);\r\n        return total + (variant?.price || 0);\r\n    }, 0);\r\n\r\n    const unitPrice = product.price + variantPriceAddition;\r\n    const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n    const discountedPrice = hasDiscount\r\n        ? unitPrice * (1 - product.discount!.percentage / 100)\r\n        : unitPrice;\r\n    const totalPrice = discountedPrice * quantity;\r\n\r\n    // Gestion des variantes\r\n    const handleVariantChange = (type: string, variantId: string) => {\r\n        setSelectedVariants(prev => ({\r\n            ...prev,\r\n            [type]: variantId\r\n        }));\r\n    };\r\n\r\n    // Gestion de la quantit√©\r\n    const updateQuantity = (newQuantity: number) => {\r\n        if (newQuantity >= product.moq) {\r\n            setQuantity(newQuantity);\r\n        }\r\n    };\r\n\r\n    ",
    "retourauxproduitslin1": ">\r\n                        Retour aux produits\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Calcul du prix total avec variantes et r√©ductions\r\n    const selectedImage = product.images[selectedImageIndex];\r\n    const variantPriceAddition = Object.values(selectedVariants).reduce((total, variantId) => {\r\n        const variant = product.variants?.find(v => v.id === variantId);\r\n        return total + (variant?.price || 0);\r\n    }, 0);\r\n\r\n    const unitPrice = product.price + variantPriceAddition;\r\n    const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n    const discountedPrice = hasDiscount\r\n        ? unitPrice * (1 - product.discount!.percentage / 100)\r\n        : unitPrice;\r\n    const totalPrice = discountedPrice * quantity;\r\n\r\n    // Gestion des variantes\r\n    const handleVariantChange = (type: string, variantId: string) => {\r\n        setSelectedVariants(prev => ({\r\n            ...prev,\r\n            [type]: variantId\r\n        }));\r\n    };\r\n\r\n    // Gestion de la quantit√©\r\n    const updateQuantity = (newQuantity: number) => {\r\n        if (newQuantity >= product.moq) {\r\n            setQuantity(newQuantity);\r\n        }\r\n    };\r\n\r\n    // Grouper les variantes par type\r\n    const variantsByType = product.variants?.reduce((acc, variant) => {\r\n        if (!acc[variant.type]) {\r\n            acc[variant.type] = [];\r\n        }\r\n        acc[variant.type].push(variant);\r\n        return acc;\r\n    }, {} as Record<string, ProductVariant[]>) || {};\r\n\r\n    // Fonction pour ajouter au devis avec variantes\r\n    const handleAddToQuote = () => {\r\n        const productForQuote: ProductListItem = {\r\n            id: product.id!,\r\n            name: product.name,\r\n            description: product.description,\r\n            price: unitPrice, ",
    "retourauxproduitslin2": ">\r\n                        Retour aux produits\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Calcul du prix total avec variantes et r√©ductions\r\n    const selectedImage = product.images[selectedImageIndex];\r\n    const variantPriceAddition = Object.values(selectedVariants).reduce((total, variantId) => {\r\n        const variant = product.variants?.find(v => v.id === variantId);\r\n        return total + (variant?.price || 0);\r\n    }, 0);\r\n\r\n    const unitPrice = product.price + variantPriceAddition;\r\n    const hasDiscount = product.discount && quantity >= product.discount.minQty;\r\n    const discountedPrice = hasDiscount\r\n        ? unitPrice * (1 - product.discount!.percentage / 100)\r\n        : unitPrice;\r\n    const totalPrice = discountedPrice * quantity;\r\n\r\n    // Gestion des variantes\r\n    const handleVariantChange = (type: string, variantId: string) => {\r\n        setSelectedVariants(prev => ({\r\n            ...prev,\r\n            [type]: variantId\r\n        }));\r\n    };\r\n\r\n    // Gestion de la quantit√©\r\n    const updateQuantity = (newQuantity: number) => {\r\n        if (newQuantity >= product.moq) {\r\n            setQuantity(newQuantity);\r\n        }\r\n    };\r\n\r\n    // Grouper les variantes par type\r\n    const variantsByType = product.variants?.reduce((acc, variant) => {\r\n        if (!acc[variant.type]) {\r\n            acc[variant.type] = [];\r\n        }\r\n        acc[variant.type].push(variant);\r\n        return acc;\r\n    }, {} as Record<string, ProductVariant[]>) || {};\r\n\r\n    // Fonction pour ajouter au devis avec variantes\r\n    const handleAddToQuote = () => {\r\n        const productForQuote: ProductListItem = {\r\n            id: product.id!,\r\n            name: product.name,\r\n            description: product.description,\r\n            price: unitPrice, // Prix unitaire avec variantes\r\n            image: product.images[0].url, // URL de l'image principale\r\n            moq: product.moq,\r\n            category: product.category,\r\n            supplier: {\r\n                name: product.supplier.name,\r\n                location: product.supplier.location,\r\n                rating: product.supplier.rating,\r\n                verified: product.supplier.verified\r\n            },\r\n            variants: product.variants?.map(v => v.name) || [],\r\n            stock: product.stock || 0,\r\n            tags: product.tags || [],\r\n            discount: product.discount\r\n        };\r\n\r\n        addToQuote(productForQuote, quantity, selectedVariants);\r\n\r\n        // Notification de succ√®s\r\n        showToast(`${product.name} ajout√© au devis (${quantity} unit√©s)`, 'success', 'cart');\r\n    };\r\n\r\n    // V√©rifier si le produit est d√©j√† dans le devis\r\n    const isProductInQuote = getItemQuantity(product.id!) > 0;\r\n\r\n    return (\r\n        <div className=",
    "entetebackbuttonto": ">\r\n                {/* En-t√™te */}\r\n                <BackButton to=",
    "twelcomebacksubtitle": ">\r\n              {t('welcome.back.subtitle', 'Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.')}\r\n            </p>\r\n            \r\n            <div className=",
    "vousdevezetreconnect": ">\r\n            Vous devez √™tre connect√© pour voir votre profil.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Avatar fallback avec v√©rification de type\r\n  const avatar = preview || user?.avatar || `https:",
    "vousdevezetreconnect1": ">\r\n            Vous devez √™tre connect√© pour voir votre profil.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  // Avatar fallback avec v√©rification de type\r\n  const avatar = preview || user?.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=6366f1&color=fff`;\r\n\r\n  return (\r\n    <div className=",
    "backgroundanime": ">\r\n      {/* Background anim√© *",
    "backgroundanime1": ">\r\n      {/* Background anim√© *",
    "backgroundanime2": ">\r\n      {/* Background anim√© *",
    "backgroundanimedivcl": ">\r\n      {/* Background anim√© */}\r\n      <div className=",
    "backgroundanimedivcl1": ">\r\n      {/* Background anim√© */}\r\n      <div className=",
    "backgroundanimedivcl2": ">\r\n      {/* Background anim√© */}\r\n      <div className=",
    "backgroundanimespect": ">\r\n      {/* Background anim√© spectaculaire *",
    "backgroundanimespect1": ">\r\n      {/* Background anim√© spectaculaire *",
    "backgroundanimespect2": ">\r\n      {/* Background anim√© spectaculaire */}\r\n      <div className=",
    "backgroundanimespect3": ">\r\n      {/* Background anim√© spectaculaire */}\r\n      <div className=",
    "backgroundanimespect4": ">\r\n      {/* Background anim√© spectaculaire avec tous les effets *",
    "backgroundanimespect5": ">\r\n      {/* Background anim√© spectaculaire avec tous les effets */}\r\n      <div className=",
    "notificationtoastame": ">\r\n      {/* Notification Toast am√©lior√©e */}\r\n      {notification && (\r\n        <div className={`fixed top-4 right-4 z-50 px-6 py-4 rounded-xl shadow-2xl transform transition-all duration-500 border-l-4 backdrop-blur-sm ${notification.type === 'success'\r\n          ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200 border-green-500 shadow-green-500/20' :\r\n          notification.type === 'error'\r\n            ? 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200 border-red-500 shadow-red-500/20' :\r\n            'bg-blue-50 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200 border-blue-500 shadow-blue-500/20'\r\n          } animate-slide-in-right max-w-sm`}>\r\n          <div className=",
    "accueil": ">Accueil<",
    "vsperiodeprecedente": ">vs p√©riode pr√©c√©dente<",
    "vsperiodeprecedente1": ">vs p√©riode pr√©c√©dente<",
    "vsperiodeprecedente2": ">vs p√©riode pr√©c√©dente<",
    "vsperiodeprecedente3": ">vs p√©riode pr√©c√©dente<",
    "vsperiodeprecedentes": ">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <DollarSign className=",
    "vsperiodeprecedentes1": ">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <Package className=",
    "vsperiodeprecedentes2": ">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <ShoppingBag className=",
    "vsperiodeprecedentes3": ">vs p√©riode pr√©c√©dente</span>\r\n                </div>\r\n              </div>\r\n              <Users className=",
    "accueil1": "Accueil",
    "accueil2": "Accueil",
    "accueil3": "Accueil",
    "mercipourvotreretour": "Merci pour votre retour Sophie. Nous prenons note de vos remarques sur la qualit√© du coton.",
    "mercipourvotreretour1": "Merci pour votre retour Sophie. Nous prenons note de vos remarques sur la qualit√© du coton.",
    "produitprecedent": "Produit pr√©c√©dent",
    "produitprecedent1": "Produit pr√©c√©dent",
    "retourautableaudebor": "Retour au tableau de bord",
    "retourautableaudebor1": "Retour au tableau de bord",
    "retourautableaudebor2": "Retour au tableau de bord",
    "retourautableaudebor3": "Retour au tableau de bord",
    "retourautableaudebor4": "Retour au tableau de bord",
    "retourautableaudebor5": "Retour au tableau de bord",
    "retourautableaudebor6": "Retour au tableau de bord",
    "retourautableaudebor7": "Retour au tableau de bord",
    "retourautableaudebor8": "Retour au tableau de bord",
    "retourautableaudebor9": "Retour au tableau de bord",
    "retourautableaudebor10": "Retour au tableau de bord",
    "retourautableaudebor11": "Retour au tableau de bord",
    "retourautableaudebor12": "Retour au tableau de bord",
    "retourautableaudebor13": "Retour au tableau de bord",
    "retourautableaudebor14": "Retour au tableau de bord",
    "retourautableaudebor15": "Retour au tableau de bord",
    "retourautableaudebor16": "Retour au tableau de bord",
    "retourautableaudebor17": "Retour au tableau de bord",
    "retourautableaudebor18": "Retour au tableau de bord admin",
    "urldoitcontenirlebon": "URL doit contenir le bon domaine\",\n    \"socialMediaModal.close\": \"Fermer\",\n    \"socialMediaModal.cancel\": \"Annuler\",\n    \"socialMediaModal.save\": \"Valider\",\n    \"socialMediaValidation.noNetworkSelected\": \"Veuillez s√©lectionner au moins un r√©seau social\",\n    \"socialMediaValidation.noLinksProvided\": \"Veuillez renseigner les liens de vos profils\",\n\n    \"homepage.title\": \"Chine ton usine\",\n    \"homepage.subtitle\": \"√áA VA VOUS\",\n    \"homepage.subtitle.highlight\": \"PLAIRE\",\n    \"homepage.tagline\": \"Coup de foudre in√©vitable.\",\n    \"homepage.search.placeholder\": \"Recherchez un produit, une marque...\",\n    \"homepage.recommendations.badge\": \"Recommand√©\",\n    \"homepage.recommendations.title\": \"Produits recommand√©s pour vous\",\n    \"homepage.recommendations.subtitle\": \"D√©couvrez notre s√©lection personnalis√©e de produits\",\n    \"homepage.recommendations.viewAll\": \"Voir tout\",\n    \"homepage.recommendations.discover\": \"D√©couvrir\",\n\n    \"homepage.categories.home\": \"Accueil\",\n    \"homepage.categories.electronics\": \"√âlectronique\",\n    \"homepage.categories.fashion\": \"Mode\",\n    \"homepage.categories.home.category\": \"Maison\",\n    \"homepage.categories.beauty\": \"Beaut√©\",\n    \"homepage.categories.sports\": \"Sport\",\n    \"homepage.categories.automotive\": \"Auto\",\n    \"homepage.categories.tools\": \"Outils\",\n    \"homepage.categories.toys\": \"Jouets\",\n    \"homepage.categories.books\": \"Livres\",\n    \"homepage.categories.music\": \"Musique\",\n    \"homepage.categories.garden\": \"Jardin\",\n\n    \"homepage.network.badge\": \"R√©seau global\",\n    \"homepage.network.suppliers\": \"Plus de 1000 fournisseurs v√©rifi√©s\",\n\n    \"homepage.cards.technology\": \"TECHNOLOGIE\",\n    \"homepage.cards.electronics\": \"√âLECTRONIQUE\",\n    \"homepage.cards.electronics.description\": \"Composants & Gadgets\",\n    \"homepage.cards.explore\": \"Explorer\",\n    \"homepage.cards.fashion.title\": \"MODE & V√äTEMENTS\",\n    \"homepage.cards.textile\": \"TEXTILE\",\n    \"homepage.cards.textile.description\": \"Fabrication Premium\",\n    \"homepage.cards.industrial\": \"√âQUIPEMENT INDUSTRIEL\",\n    \"homepage.cards.machinery\": \"MACHINERIE\",\n    \"homepage.cards.machinery.description\": \"Performance & Innovation\",\n    \"homepage.cards.decoration\": \"D√âCORATION & MOBILIER\",\n    \"homepage.cards.home.garden\": \"MAISON & JARDIN\",\n    \"homepage.cards.home.garden.description\": \"Design & Confort\",\n    \"homepage.cards.new\": \"Nouveau\",\n    \"homepage.cards.educational\": \"√âDUCATIF & LUDIQUE\",\n    \"homepage.cards.toys.children\": \"JOUETS & ENFANTS\",\n    \"homepage.cards.toys.description\": \"Qualit√© Certifi√©e\",\n    \"homepage.cards.parts\": \"PI√àCES & ACCESSOIRES\",\n    \"homepage.cards.auto.moto\": \"AUTO & MOTO\",\n    \"homepage.cards.auto.description\": \"Pi√®ces de Qualit√©\",\n\n    \"homepage.cta.title\": \"√áA VA VOUS\",\n    \"homepage.cta.highlight\": \"PLAIRE\",\n    \"homepage.cta.subtitle\": \"Coup de foudre in√©vitable.\",\n    \"homepage.cta.button\": \"D√©couvrir tous les fournisseurs\",\n\n    \"homepage.how.title\": \"Comment √ßa marche ?\",\n    \"homepage.how.subtitle\": \"Trouvez votre usine en Chine en seulement 3 √©tapes\",\n    \"homepage.how.step1.title\": \"1. Recherchez vos produits\",\n    \"homepage.how.step1.description\": \"Utilisez nos filtres avanc√©s pour trouver exactement ce que vous cherchez parmi des millions de produits.\",\n    \"homepage.how.step2.title\": \"2. Contactez les fournisseurs\",\n    \"homepage.how.step2.description\": \"Entrez en contact direct avec des usines chinoises v√©rifi√©es et fiables, sans interm√©diaire.\",\n    \"homepage.how.step3.title\": \"3. Commandez et importez\",\n    \"homepage.how.step3.description\": \"N√©gociez vos prix, obtenez des √©chantillons et lancez votre commande en toute s√©r√©nit√©.\",\n    \"homepage.how.cta\": \"Cr√©er un compte\",\n\n    \"homepage.discover.title\": \"D√âCOUVREZ TOUS NOS\",\n    \"homepage.discover.highlight\": \"FOURNISSEURS\",\n    \"homepage.discover.subtitle\": \"Des milliers de fournisseurs v√©rifi√©s vous attendent.\",\n    \"homepage.discover.button\": \"D√©couvrir tous les fournisseurs\",\n\n    \"homepage.process.title\": \"Comment √ßa marche ?\",\n    \"homepage.process.subtitle\": \"Notre plateforme vous connecte directement avec les meilleurs fournisseurs chinois\",\n    \"homepage.process.step1.title\": \"1. Explorez\",\n    \"homepage.process.step1.description\": \"Parcourez notre catalogue de milliers de produits et fournisseurs v√©rifi√©s selon vos besoins.\",\n    \"homepage.process.step2.title\": \"2. Comparez\",\n    \"homepage.process.step2.description\": \"√âvaluez les prix, la qualit√©, les certifications et les avis pour choisir le meilleur fournisseur.\",\n    \"homepage.process.step3.title\": \"3. Contactez\",\n    \"homepage.process.step3.description\": \"√âchangez directement avec les fournisseurs pour n√©gocier les prix et demander des √©chantillons.\",\n    \"homepage.process.step4.title\": \"4. Commandez\",\n    \"homepage.process.step4.description\": \"Finalisez votre commande en toute s√©curit√© avec notre syst√®me de paiement prot√©g√©.\",\n    \"homepage.process.cta\": \"Commencer maintenant\",\n\n    \"homepage.optimize.title\": \"Optimisez votre processus d",
    "accueil4": "accueil\n          <",
    "accueil5": "accueil\r\n                        <",
    "accueil6": "accueil\r\n                        <",
    "accueil7": "accueil\r\n                    <",
    "accueil8": "accueil\r\n          <",
    "accueilwindowlocatio": "accueil\r\n    window.location.href = ",
    "accueilnncontinuer": "accueil.\\n\\nContinuer ?",
    "adminbackupchinetonu": "admin.backup@chinetonusine.com",
    "affairessupplieranal": "affaires\",\n    \"supplier.analytics.orders\": \"Commandes\",\n    \"supplier.analytics.customers\": \"Nouveaux clients\",\n    \"supplier.analytics.productViews\": \"Vues produits\",\n    \"supplier.analytics.salesEvolution\": \"√âvolution des ventes\",\n    \"supplier.analytics.vsLastMonth\": \"vs mois dernier\",\n    \"supplier.analytics.topProducts\": \"Produits les plus vendus\",\n    \"supplier.analytics.customerSatisfaction\": \"Satisfaction client\",\n    \"supplier.analytics.loading\": \"Chargement des donn√©es...\",\n    \"supplier.analytics.error\": \"Erreur lors du chargement des analyses\",\n\n    // Traductions pour les param√®tres\n    \"supplier.settings.title\": \"Param√®tres\",\n    \"supplier.settings.subtitle\": \"Configurez votre compte et vos pr√©f√©rences\",\n    \"supplier.settings.back\": \"Retour au tableau de bord\",\n    \"supplier.settings.company\": \"Entreprise\",\n    \"supplier.settings.profile\": \"Profil\",\n    \"supplier.settings.notifications\": \"Notifications\",\n    \"supplier.settings.security\": \"S√©curit√©\",\n    \"supplier.settings.billing\": \"Facturation\",\n    \"supplier.settings.companyInfo\": \"Informations de l",
    "entrepriselabeldivcl": "entreprise\r\n                                    </label>\r\n                                    <div className=\"flex items-center space-x-4\">\r\n                                        {cardData.logo && (\r\n                                            <img\r\n                                                src={cardData.logo}\r\n                                                alt=\"Logo actuel\"\r\n                                                className=\"w-16 h-16 rounded-lg object-cover border border-gray-300\"\r\n                                            />\r\n                                        )}\r\n                                        <div>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"URL du logo\"\r\n                                                value={cardData.logo}\r\n                                                onChange={(e) => updateCardData({ logo: e.target.value })}\r\n                                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white mb-2\"\r\n                                            />\r\n                                            <button className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\">\r\n                                                <Upload className=\"h-4 w-4\" />\r\n                                                <span>T√©l√©charger une image</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                                        Image de fond (optionnel)\r\n                                    </label>\r\n                                    <div className=\"flex items-center space-x-4\">\r\n                                        {cardData.backgroundImage && (\r\n                                            <img\r\n                                                src={cardData.backgroundImage}\r\n                                                alt=\"Fond actuel\"\r\n                                                className=\"w-16 h-16 rounded-lg object-cover border border-gray-300\"\r\n                                            />\r\n                                        )}\r\n                                        <div>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"URL de l",
    "estuneurlexternewind": "est une URL externe\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    } else {\r\n      // Fallback: cr√©er un PDF fictif pour les documents de d√©monstration\r\n      const link = window.document.createElement(",
    "estuneurlexternewind1": "est une URL externe\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    } else {\r\n      // Fallback: cr√©er un PDF fictif pour les documents de d√©monstration\r\n      const link = window.document.createElement(",
    "estuneurlexternewind2": "est une URL externe\r\n      window.document.body.appendChild(link);\r\n      link.click();\r\n      window.document.body.removeChild(link);\r\n    } else {\r\n      // Fallback: cr√©er un PDF fictif pour les documents de d√©monstration\r\n      const link = window.document.createElement(",
    "homepagecardsmachine": "homepage.cards.machinery",
    "homepagecardsmachine1": "homepage.cards.machinery",
    "homepagecardsmachine2": "homepage.cards.machinery",
    "homepagecardsmachine3": "homepage.cards.machinery",
    "homepagecardsmachine4": "homepage.cards.machinery.description",
    "homepagecardsmachine5": "homepage.cards.machinery.description",
    "homepagecardsmachine6": "homepage.cards.machinery.description",
    "homepagecardsmachine7": "homepage.cards.machinery.description",
    "instantretournertous": "instant, retourner tous les produits\r\n    });\r\n    setSearchResults(filtered);\r\n    console.log(",
    "objetutilisateuraret": "objet utilisateur √† retourner\r\n            const newUser: AdminUser = {\r\n                ...userDoc,\r\n                uid\r\n            };\r\n\r\n            console.log(",
    "objetutilisateuraret1": "objet utilisateur √† retourner\r\n            const newUser: AdminUser = {\r\n                ...userDoc,\r\n                uid\r\n            };\r\n\r\n            console.log(",
    "ongletdecouvrirsuppl": "onglet D√©couvrir\",\n    \"supplier.products.back\": \"Retour au tableau de bord\",\n    \"supplier.products.totalProducts\": \"Total Produits\",\n    \"supplier.products.stats.totalProducts\": \"Total Produits\",\n    \"supplier.products.stats.views\": \"Vues ce mois\",\n    \"supplier.products.stats.rating\": \"Note moyenne\",\n    \"supplier.products.stats.inStock\": \"En stock\",\n    \"supplier.products.inStock\": \"En stock\",\n    \"supplier.products.name\": \"Nom\",\n    \"supplier.products.category\": \"Cat√©gorie\",\n    \"supplier.products.price\": \"Prix d",
    "suppliermessagesback": "supplier.messages.back",
    "unfournisseurspecifi": "un fournisseur sp√©cifique\r\n   * (pour la gestion c√¥t√© fournisseur)\r\n   */\r\n  getSupplierProducts(supplierId?: string): Product[] {\r\n    const allProducts = this.getAllProducts();\r\n\r\n    // Si pas de supplierId sp√©cifi√©, retourner tous les produits pour la d√©mo\r\n    if (!supplierId) {\r\n      return allProducts;\r\n    }\r\n\r\n    // Filtrer par supplierId si disponible dans les donn√©es\r\n    return allProducts.filter(product =>\r\n      (product as any).supplierId === supplierId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Obtenir un produit par son ID (recherche dans tous les produits)\r\n   */\r\n  getProductById(id: string): Product | undefined {\r\n    const allProducts = this.getAllProducts();\r\n    return allProducts.find(product => product.id === id);\r\n  }\r\n\r\n  /**\r\n   * R√©initialiser aux produits par d√©faut\r\n   */\r\n  resetToDefault(): void {\r\n    this.saveProducts(initialProducts);\r\n  }\r\n\r\n  /**\r\n   * Synchroniser les donn√©es des fournisseurs avec la base globale\r\n   */\r\n  syncSupplierProducts(supplierProducts: Product[]): void {\r\n    const allProducts = this.getAllProducts();\r\n\r\n    // R√©cup√©rer les IDs des produits du fournisseur\r\n    const supplierProductIds = supplierProducts.map(p => p.id);\r\n\r\n    ",
    "onchangeeupdatecardd": "}\r\n                                                onChange={(e) => updateCardData({ backgroundImage: e.target.value })}\r\n                                                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white mb-2\"\r\n                                            />\r\n                                            <button className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\">\r\n                                                <Upload className=\"h-4 w-4\" />\r\n                                                <span>T√©l√©charger une image</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Footer */}\r\n                    <div className=\"p-6 border-t border-gray-200 dark:border-gray-700\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                                <button\r\n                                    onClick={() => setPreviewMode(!previewMode)}\r\n                                    className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${previewMode\r\n                                            ? ",
    "spantdtdclassnamepx6": "}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                                            <div className=\"flex items-center justify-end gap-2\">\r\n                                                <button\r\n                                                    onClick={() => downloadBackup(backup)}\r\n                                                    className=\"text-blue-600 hover:text-blue-900\"\r\n                                                    title=\"T√©l√©charger\"\r\n                                                >\r\n                                                    <Download className=\"w-4 h-4\" />\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => deleteBackup(backup.id)}\r\n                                                    className=\"text-red-600 hover:text-red-900\"\r\n                                                    title=\"Supprimer\"\r\n                                                >\r\n                                                    <Trash2 className=\"w-4 h-4\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* √âtat des tables */}\r\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\r\n                    <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\r\n                        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                            √âtat des Tables\r\n                        </h2>\r\n                    </div>\r\n\r\n                    <div className=\"overflow-x-auto\">\r\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                            <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                                <tr>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Table\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Enregistrements\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Taille\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Derni√®re mise √† jour\r\n                                    </th>\r\n                                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                                        Statut\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                                {tables.map((table) => (\r\n                                    <tr key={table.name} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\r\n                                            {table.name}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                                            {table.records.toLocaleString()}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                                            {table.size}\r\n                                        </td>\r\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                                            {table.lastUpdated.toLocaleString(",
    "editiondivclassnameh": "√©dition */}\r\n                  <div className=\"hidden sm:flex items-center gap-2\">\r\n                    {isEditing ? (\r\n                      <>\r\n                        <button\r\n                          onClick={handleSaveProfile}\r\n                          className=\"flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors duration-200\"\r\n                        >\r\n                          <Save size={16} className=\"mr-2\" />\r\n                          Sauvegarder\r\n                        </button>\r\n                        <button\r\n                          onClick={handleCancelEdit}\r\n                          className=\"flex items-center px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors duration-200\"\r\n                        >\r\n                          <X size={16} className=\"mr-2\" />\r\n                          Annuler\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => setIsEditing(true)}\r\n                        className=\"flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors duration-200\"\r\n                      >\r\n                        <Edit3 size={16} className=\"mr-2\" />\r\n                        Modifier\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Stats rapides */}\r\n                <div className=\"flex justify-center sm:justify-start gap-6 mt-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n                      {user.favorites?.length || 0}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">Favoris</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n                      {fakeOrders.length}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">Commandes</div>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n                      {fakeMessages.length}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">Messages</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navigation Tabs avec animations */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 mb-8 overflow-hidden\">\r\n          <div className=\"flex\">\r\n            {[\r\n              { id: ",
    "etatdevoscommandesen": "√©tat de vos commandes en temps r√©el depuis votre tableau de bord\",\n\n    \"homepage.final.title\": \"Pr√™t √† d√©velopper votre business ?\",\n    \"homepage.final.subtitle\": \"Commencez √† importer depuis la Chine d√®s aujourd",
    "etatdesconteneurssan": "√©tat des conteneurs sans recharger la page.\r\nconst currentContainers = new Map<string, Container>(mockContainers.map(c => [c.id, { ...c }]));\r\nconst currentContainerItems = new Map<string, ContainerItem>(mockContainerItems.map(ci => [ci.id, { ...ci }]));\r\n\r\nexport const containerService = {\r\n  /**\r\n   * R√©cup√®re la liste de tous les conteneurs.\r\n   * Dans une application r√©elle, cela ferait un appel API √† un backend.\r\n   */\r\n  getContainers(): Promise<Container[]> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(Array.from(currentContainers.values()));\r\n      }, 500); // Simule un d√©lai r√©seau\r\n    });\r\n  },\r\n\r\n  /**\r\n   * R√©cup√®re les articles pour un conteneur donn√©.\r\n   * @param containerId L"
  },
  "common": {
    "divmontagnesencouche": "\n            }}\n          ></div>\n\n          {/* Montagnes en couches (optionnel, peut √™tre gard√© pour l",
    "divmontagnesencouche1": "\n            }}\n          ></div>\n\n          {/* Montagnes en couches (optionnel, peut √™tre gard√© pour l",
    "detectersil": "\n  ];\n\n  // D√©tecter si l",
    "detectersil1": "\n  ];\n\n  // D√©tecter si l",
    "definirpardefaut": "\r\n                                                        >\r\n                                                            D√©finir par d√©faut\r\n                                                        <",
    "eyesize18buttondivba": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction *",
    "eyesize18buttondivba1": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction *",
    "eyesize18buttondivba2": "\r\n                                        >\r\n                                            <Eye size={18} />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Badge de r√©duction *",
    "featurespandivdivqua": "\r\n                                        >\r\n                                            {feature}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Quantit√© et Actions *",
    "svgdivdivperformance": "\r\n                                    />\r\n                                </svg>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Performances r√©centes *",
    "svgdivdivperformance1": "\r\n                                    />\r\n                                </svg>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Performances r√©centes *",
    "onclickclosequickvie": "\r\n                                    onClick={closeQuickView}\r\n                                >\r\n                                    Voir d√©tails\r\n                                <",
    "onclickclosequickvie1": "\r\n                                    onClick={closeQuickView}\r\n                                >\r\n                                    Voir d√©tails\r\n                                <",
    "messagecirclesize16c": "\r\n                                >\r\n                                    <MessageCircle size={16} />\r\n                                    Contacter\r\n                                <",
    "reinitialiser": "\r\n                                >\r\n                                    R√©initialiser\r\n                                <",
    "voirdetail": "\r\n                                >\r\n                                    Voir d√©tail\r\n                                <",
    "voirdetaillinklinkto": "\r\n                                >\r\n                                    Voir d√©tail\r\n                                </Link>\r\n                                <Link\r\n                                    to=",
    "trash2size16buttondi": "\r\n                          >\r\n                            <Trash2 size={16} />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>        {/* Messages *",
    "effacerlesfiltresbut": "\r\n                        >\r\n                            Effacer les filtres\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal aper√ßu rapide *",
    "effacerlesfiltresbut1": "\r\n                        >\r\n                            Effacer les filtres\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal aper√ßu rapide *",
    "reinitialiser1": "\r\n                        >\r\n                            R√©initialiser\r\n                        <",
    "downloadsize14telech": "\r\n                      >\r\n                        <Download size={14} />\r\n                        T√©l√©charger\r\n                      <",
    "messagesquaresize14": "\r\n                      >\r\n                        <MessageSquare size={14} ",
    "voirlesdetails": "\r\n                      >\r\n                        Voir les d√©tails\r\n                      <",
    "getfileiconuploadfil": "\r\n                    />\r\n                  ) : (\r\n                    getFileIcon(uploadFile.file)\r\n                  )}\r\n                </div>\r\n\r\n                {/* Informations du fichier *",
    "reessayer": "\r\n                    >\r\n                        R√©essayer\r\n                    <",
    "reessayer1": "\r\n                    >\r\n                        R√©essayer\r\n                    <",
    "reessayer2": "\r\n                    >\r\n                        R√©essayer\r\n                    <",
    "reinitialiserlareche": "\r\n                    >\r\n                        R√©initialiser la recherche\r\n                    <",
    "reinitialiserlareche1": "\r\n                    >\r\n                        R√©initialiser la recherche\r\n                    <",
    "imageetbadgeverifie": "\r\n                    >\r\n                        {/* Image et badge v√©rifi√© *",
    "messagesquaresize141": "\r\n                    >\r\n                      <MessageSquare size={14} ",
    "messagesquaresize14r": "\r\n                    >\r\n                      <MessageSquare size={14} />\r\n                      R√©pondre\r\n                    <",
    "xsize16desactiver2fa": "\r\n                    >\r\n                      <X size={16} />\r\n                      D√©sactiver 2FA\r\n                    <",
    "divcaseacocherpourac": "\r\n                  />\r\n                </div>\r\n\r\n                {/* Case √† cocher pour accepter la v√©rification *",
    "divvideodepresentati": "\r\n                  />\r\n                </div>\r\n\r\n                {/* Vid√©o de pr√©sentation *",
    "arialabelalleralapag": "\r\n                  }`}\r\n                  aria-label={`Aller √† la page ${index + 1}`}\r\n                ",
    "divlabeldivdivdivcon": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contr√¥le d",
    "divlabeldivdivdivcon1": "\r\n                  }`} />\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contr√¥le d",
    "sedeconnecter": "\r\n                >\r\n                    Se d√©connecter\r\n                <",
    "allerauprofil": "\r\n                >\r\n                    ‚Üí Aller au profil\r\n                <",
    "returnnewprogressbre": "\r\n                };\r\n                return newProgress;\r\n              });\r\n            }\r\n          );\r\n          break;\r\n      }\r\n\r\n      // Recharger les m√©dias\r\n      await loadMedia();\r\n      \r\n      alert(`${uploadedFiles.length} fichier(s) upload√©(s) avec succ√®s !`);\r\n\r\n    } catch (error) {\r\n      console.error(",
    "returnnewprogressbre1": "\r\n                };\r\n                return newProgress;\r\n              });\r\n            }\r\n          );\r\n          break;\r\n      }\r\n\r\n      // Recharger les m√©dias\r\n      await loadMedia();\r\n      \r\n      alert(`${uploadedFiles.length} fichier(s) upload√©(s) avec succ√®s !`);\r\n\r\n    } catch (error) {\r\n      console.error(",
    "4verifiersil": "\r\n                };\r\n            }\r\n\r\n            // 4. V√©rifier si l",
    "4verifiersil1": "\r\n                };\r\n            }\r\n\r\n            // 4. V√©rifier si l",
    "5creerl": "\r\n                };\r\n            }\r\n\r\n            // 5. Cr√©er l",
    "5creerl1": "\r\n                };\r\n            }\r\n\r\n            // 5. Cr√©er l",
    "5creerl2": "\r\n                };\r\n            }\r\n\r\n            // 5. Cr√©er l",
    "appelerlacloudfuncti": "\r\n                };\r\n            }\r\n\r\n            // Appeler la Cloud Function pour cr√©er l",
    "appelerlacloudfuncti1": "\r\n                };\r\n            }\r\n\r\n            // Appeler la Cloud Function pour cr√©er l",
    "appelerlacloudfuncti2": "\r\n                };\r\n            }\r\n\r\n            // Appeler la Cloud Function pour cr√©er l",
    "verifiersil": "\r\n                };\r\n            }\r\n\r\n            // V√©rifier si l",
    "verifiersil1": "\r\n                };\r\n            }\r\n\r\n            // V√©rifier si l",
    "divdivcategories": "\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cat√©gories *",
    "votrenavigateurnesup": "\r\n              >\r\n                Votre navigateur ne supporte pas la lecture vid√©o.\r\n              <",
    "votrenavigateurnesup1": "\r\n              >\r\n                Votre navigateur ne supporte pas la lecture vid√©o.\r\n              <",
    "previsualisation": "\r\n              >\r\n                {/* Pr√©visualisation *",
    "previsualisationouic": "\r\n              >\r\n                {/* Pr√©visualisation ou ic√¥ne *",
    "styleleftusedpercent": "\r\n              style={{\r\n                left: `${usedPercentage}%`,\r\n                width: `${selectedPercentage}%`\r\n              }}\r\n            />\r\n            {/* Capacit√© disponible *",
    "stylewidthavailablep": "\r\n              style={{ width: `${availablePercentage}%` }}\r\n            />\r\n          </div>\r\n\r\n          {/* L√©gende *",
    "stylewidthusedpercen": "\r\n              style={{ width: `${usedPercentage}%` }}\r\n            />\r\n            {/* Capacit√© s√©lectionn√©e *",
    "notificationmessagep": "\r\n            }\r\n          `}>\r\n            {notification.message}\r\n          </p>\r\n\r\n          {/* M√©tadonn√©es *",
    "voirtouteslescategor": "\r\n        >\r\n          Voir toutes les cat√©gories &gt;\r\n        <",
    "keystoremoveforeachk": "\r\n        ];\r\n\r\n        keysToRemove.forEach(key => {\r\n            localStorage.removeItem(key);\r\n        });\r\n\r\n        // Nettoyer sessionStorage\r\n        sessionStorage.clear();\r\n\r\n        // Nettoyer les cookies li√©s √† l",
    "keystoremoveforeachk1": "\r\n        ];\r\n\r\n        keysToRemove.forEach(key => {\r\n            localStorage.removeItem(key);\r\n        });\r\n\r\n        // Nettoyer sessionStorage\r\n        sessionStorage.clear();\r\n\r\n        // Nettoyer les cookies li√©s √† l",
    "keystoremoveforeachk2": "\r\n        ];\r\n\r\n        keysToRemove.forEach(key => {\r\n            localStorage.removeItem(key);\r\n        });\r\n\r\n        // Nettoyer sessionStorage\r\n        sessionStorage.clear();\r\n\r\n        // Nettoyer les cookies li√©s √† l",
    "returnresultsverifie": "\r\n        });\r\n      }\r\n    }\r\n    \r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si l",
    "returnresultsverifie1": "\r\n        });\r\n      }\r\n    }\r\n    \r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * V√©rifie si l",
    "returnerrormessagese": "\r\n        };\r\n\r\n        return errorMessages[error.code] || error.message || ",
    "setlinksinitiallinks": "\r\n        };\r\n      });\r\n      setLinks(initialLinks);\r\n      setErrors({} as Record<SocialNetwork, string>);\r\n      \r\n      // Focus sur le premier champ apr√®s l",
    "setlinksinitiallinks1": "\r\n        };\r\n      });\r\n      setLinks(initialLinks);\r\n      setErrors({} as Record<SocialNetwork, string>);\r\n      \r\n      // Focus sur le premier champ apr√®s l",
    "setmessagesprevprevm": "\r\n    };\r\n\r\n    setMessages(prev => [...prev, message]);\r\n    setNewMessage(",
    "motsclespourl": "\r\n  ]\r\n};\r\n\r\n// Mots-cl√©s pour l",
    "motsclespourl1": "\r\n  ]\r\n};\r\n\r\n// Mots-cl√©s pour l",
    "determineleroled": "\r\n  ];\r\n\r\n  /**\r\n   * D√©termine le r√¥le d",
    "determineleroled1": "\r\n  ];\r\n\r\n  /**\r\n   * D√©termine le r√¥le d",
    "constmessagespagerea": "\r\n  }\r\n];\r\n\r\nconst MessagesPage: React.FC = () => {\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(",
    "votrevideopersonnali": "          >\n            {/* Votre vid√©o personnalis√©e pour le site e-commerce *",
    "votrevideopersonnali1": "          >\n            {/* Votre vid√©o personnalis√©e pour le site e-commerce */}\n            <source src=",
    "imgfileifimagestoupl": " && img.file);\r\n    if (imagesToUpload.length === 0) return;\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      if (onUpload) {\r\n        const files = imagesToUpload.map(img => img.file!);\r\n        const uploadedUrls = await onUpload(files);\r\n        \r\n        // Mettre √† jour les images avec les URLs upload√©es\r\n        setImages(prev => prev.map(img => {\r\n          const index = imagesToUpload.findIndex(uploadImg => uploadImg.id === img.id);\r\n          if (index !== -1) {\r\n            return { ...img, status: ",
    "imgfileifimagestoupl1": " && img.file);\r\n    if (imagesToUpload.length === 0) return;\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      if (onUpload) {\r\n        const files = imagesToUpload.map(img => img.file!);\r\n        const uploadedUrls = await onUpload(files);\r\n        \r\n        // Mettre √† jour les images avec les URLs upload√©es\r\n        setImages(prev => prev.map(img => {\r\n          const index = imagesToUpload.findIndex(uploadImg => uploadImg.id === img.id);\r\n          if (index !== -1) {\r\n            return { ...img, status: ",
    "sizesiconstvalidatei": " + sizes[i];\r\n  };\r\n\r\n  const validateImage = (file: File): string | null => {\r\n    // V√©rifier le type de fichier\r\n    if (!file.type.startsWith(",
    "sizesiconstvalidatei1": " + sizes[i];\r\n  };\r\n\r\n  const validateImage = (file: File): string | null => {\r\n    // V√©rifier le type de fichier\r\n    if (!file.type.startsWith(",
    "typepardefautasmedia": " // Type par d√©faut\r\n          }\r\n        } as MediaFile;\r\n      });\r\n\r\n      return Promise.all(filePromises);\r\n    } catch (error) {\r\n      console.error(",
    "typepardefautasmedia1": " // Type par d√©faut\r\n          }\r\n        } as MediaFile;\r\n      });\r\n\r\n      return Promise.all(filePromises);\r\n    } catch (error) {\r\n      console.error(",
    "entete": " />\r\n\r\n        {/* En-t√™te *",
    "entete1": " />\r\n\r\n        {/* En-t√™te *",
    "entete2": " />\r\n\r\n        {/* En-t√™te *",
    "entete3": " />\r\n\r\n        {/* En-t√™te *",
    "badgecesicertifie": " />\r\n        \r\n        {/* Badge CE si certifi√© *",
    "buttondivtdtrtbodyta": " />\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* √âtat des tables *",
    "spantelechargeruneim": " />\r\n                                                <span>T√©l√©charger une image<",
    "spantelechargeruneim1": " />\r\n                                                <span>T√©l√©charger une image<",
    "creation": " />\r\n                                                Cr√©ation...\r\n                                            <",
    "spansauvegarderspanb": " />\r\n                                            <span>Sauvegarder</span>\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Panel de droite - Pr√©visualisation *",
    "spantelechargercatal": " />\r\n                                        <span>T√©l√©charger catalogue<",
    "creationencours": " />\r\n                                        Cr√©ation en cours...\r\n                                    <",
    "creerunesauvegarde": " />\r\n                                        Cr√©er une sauvegarde\r\n                                    <",
    "creerunesauvegarde1": " />\r\n                                        Cr√©er une sauvegarde\r\n                                    <",
    "buttondivdivsectiond": " />\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Section D√©tails *",
    "spancontacter": " />\r\n                                    <span>Contacter<",
    "spanmodeapercu": " />\r\n                                    <span>Mode aper√ßu<",
    "spantelecharger": " />\r\n                                    <span>T√©l√©charger<",
    "creationencours1": " />\r\n                                    Cr√©ation en cours...\r\n                                <",
    "creercomptesessentie": " />\r\n                                    Cr√©er Comptes Essentiels\r\n                                <",
    "buttondivdivinformat": " />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Informations de livraison *",
    "telechargerlesidenti": " />\r\n                                T√©l√©charger les identifiants\r\n                            <",
    "spanaumoins8caracter": " />\r\n                            <span>Au moins 8 caract√®res<",
    "creeruncompte": " />\r\n                            Cr√©er un Compte\r\n                        <",
    "creeruncompte1": " />\r\n                            Cr√©er un Compte\r\n                        <",
    "creeruncomptelinklin": " />\r\n                            Cr√©er un Compte\r\n                        </Link>\r\n\r\n                        <Link\r\n                            to=",
    "purgecomplete": " />\r\n                            Purge Compl√®te\r\n                        <",
    "buttondivtdtrtbodyta1": " />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de cr√©ation/√©dition *",
    "buttondivdivdivdivse": " />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Gestion des donn√©es personnelles *",
    "buttondivdivprofilei": " />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Profile Info Overlay *",
    "spansynchronisationf": " />\r\n                        <span>Synchronisation Firebase</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Zone de r√©sultats *",
    "devisepreferee": " />\r\n                        Devise pr√©f√©r√©e\r\n                      <",
    "languepreferee": " />\r\n                        Langue pr√©f√©r√©e\r\n                      <",
    "languepreferee1": " />\r\n                        Langue pr√©f√©r√©e\r\n                      <",
    "securise": " />\r\n                        S√©curis√©\r\n                      <",
    "buttonspandivdivspec": " />\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Sp√©cifications techniques *",
    "spanreserverdel": " />\r\n                    <span>R√©server de l",
    "creercomptesessentie1": " />\r\n                    Cr√©er Comptes Essentiels\r\n                <",
    "creercomptesessentie2": " />\r\n                    Cr√©er Comptes Essentiels\r\n                <",
    "lesystemecompletconf": " />\r\n                    Le syst√®me complet configure automatiquement :\r\n                <",
    "buttondivdivdivdivmo": " />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de pr√©visualisation *",
    "telechargerselectedf": " />\r\n                  T√©l√©charger ({selectedFiles.length} fichier{selectedFiles.length > 1 ? ",
    "buttoninformationsdu": " />\r\n                </button>\r\n\r\n                {/* Informations du fichier *",
    "spanvoirdetailsspand": " />\r\n                <span>Voir d√©tails</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Badge de priorit√© *",
    "spanmarquertoutcomme": " />\r\n              )}\r\n              <span>Marquer tout comme lu</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Liste des notifications *",
    "spanmarquertoutcomme1": " />\r\n              )}\r\n              <span>Marquer tout comme lu</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Liste des notifications *",
    "spanvaliderlareserva": " />\r\n              <span>Valider la r√©servation<",
    "spannouveauconteneur": " />\r\n            <span>Nouveau conteneur<",
    "informationstechniqu": " />\r\n          Informations techniques\r\n        <",
    "buttondivdivmessages": " />}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Messages d",
    "divdivinformationsdu": " />}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Informations du fichier *",
    "telechargerimagesfil": " : `T√©l√©charger (${images.filter(img => img.status === ",
    "telechargerimagesfil1": " : `T√©l√©charger (${images.filter(img => img.status === ",
    "conversationmessages": " ? conversationMessages[0].to : conversationMessages[0].from,\r\n      subject: `Re: ${conversationMessages[0]?.subject}`,\r\n      content: newMessage,\r\n      timestamp: new Date(),\r\n      isRead: true,\r\n      hasAttachment: false,\r\n      priority: ",
    "conversationmessages1": " ? conversationMessages[0].to : conversationMessages[0].from}\r\n                    <",
    "asconstdownloadcount": " as const,\r\n        downloadCount: 0,\r\n        category: metadata.category\r\n      }));\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      alert(`${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "asconstdownloadcount1": " as const,\r\n        downloadCount: 0,\r\n        category: metadata.category\r\n      }));\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      alert(`${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "asconstresponsiveima": " as const,\r\n    };\r\n  },\r\n\r\n  // Responsive images avec WebP support\r\n  responsiveImage: (basePath: string, alt: string = ",
    "disabledloadingmettr": " disabled={loading}>\n                  Mettre √† jour\n                <",
    "disabledloadingmettr1": " disabled={loading}>\n                  Mettre √† jour\n                <",
    "onclicksetshowcontac": " onClick={() => setShowContactForm(false)}>\n                  {t(",
    "stylestopcolor4169e1": " style={{ stopColor: '#4169E1', stopOpacity: 0.6 }} />\n              </linearGradient>\n            </defs>\n\n            {/* Montagne arri√®re */}\n            <path d=",
    "stylestopcolor4169e11": " style={{stopColor: '#4169E1', stopOpacity: 0.7}} />\n              </linearGradient>\n            </defs>\n            \n            {/* Montagne arri√®re */}\n            <path d=",
    "stylestopcolor4169e12": " style={{stopColor: '#4169E1', stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re */}\r\n            <path d=",
    "stylestopcolor4169e13": " style={{stopColor: '#4169E1', stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re */}\r\n            <path d=",
    "fsimulerleprogresd": " } : f\r\n      ));\r\n\r\n      // Simuler le progr√®s d",
    "fsimulerleprogresd1": " } : f\r\n      ));\r\n\r\n      // Simuler le progr√®s d",
    "useeffectscrolltobot": " });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    const message: Message = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      sender: ",
    "constfakemessagesid": " },\r\n  ];\r\n  const fakeMessages = [\r\n    { id: ",
    "genereruniduniquecon": " };\r\n            }\r\n\r\n            // G√©n√©rer un ID unique\r\n            const uid = `ultrasafe_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n            const now = new Date().toISOString();\r\n\r\n            ",
    "returnisvalidtrueobt": " };\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Obtient le r√¥le par d√©faut du syst√®me\r\n   * @returns Le r√¥le par d√©faut\r\n   *",
    "returnisvalidtrueval": " };\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Valide les donn√©es d",
    "returnisvalidtrueval1": " };\r\n    }\r\n\r\n    return { isValid: true };\r\n  }\r\n\r\n  /**\r\n   * Valide les donn√©es d",
    "chinetonusine": " }}>\r\n                Chine ton usine\r\n              <",
    "chinetonusine1": " }}>\r\n                Chine ton usine\r\n              <",
    "diveffetdesoleilanim": " }}></div>\n\n          {/* Effet de soleil anim√© *",
    "influenceridprofiler": ")\r\n            },\r\n            {\r\n                influencerId: profileRef.id,\r\n                referralCode: ",
    "influenceridprofiler1": ")\r\n            },\r\n            {\r\n                influencerId: profileRef.id,\r\n                referralCode: ",
    "companiescompaniesfi": ") {\r\n            companies = companies.filter(company => company.status === statusFilter);\r\n        }\r\n\r\n        return companies;\r\n    }, [allCompanies, searchResults, searchTerm, statusFilter]);\r\n\r\n    // Statistiques m√©moris√©es\r\n    const stats = useMemo(() => {\r\n        const total = filteredCompanies.length;\r\n        const active = filteredCompanies.filter(c => c.status === ",
    "companiescompaniesfi1": ") {\r\n            companies = companies.filter(company => company.status === statusFilter);\r\n        }\r\n\r\n        return companies;\r\n    }, [allCompanies, searchResults, searchTerm, statusFilter]);\r\n\r\n    // Statistiques m√©moris√©es\r\n    const stats = useMemo(() => {\r\n        const total = filteredCompanies.length;\r\n        const active = filteredCompanies.filter(c => c.status === ",
    "influenceuraffichema": ") } // Influenceur affich√© mais pas sourceur\n              ]}\n              disabled={isLoading}\n            ",
    "pourlesvideosobtenir": ")) {\r\n      // Pour les vid√©os, obtenir la dur√©e (n√©cessiterait plus de travail)\r\n      ",
    "pourlesvideosobtenir1": ")) {\r\n      // Pour les vid√©os, obtenir la dur√©e (n√©cessiterait plus de travail)\r\n      // metadata.duration = await this.getVideoDuration(file);\r\n    }\r\n\r\n    return metadata;\r\n  }\r\n\r\n  /**\r\n   * Obtenir les dimensions d",
    "pagessupplementaires": "));\r\n\r\n// Pages suppl√©mentaires\r\nconst ContainersPage = React.lazy(() => import(",
    "pagessupplementaires1": "));\r\n\r\n// Pages suppl√©mentaires\r\nconst ContainersPage = React.lazy(() => import(",
    "pagessupplementaires2": "));\r\n\r\n// Pages suppl√©mentaires\r\nconst ContainersPage = React.lazy(() => import(",
    "pagessupplementaires3": "));\r\n\r\n// Pages suppl√©mentaires\r\nconst ContainersPage = React.lazy(() => import(",
    "imgsrcurlcreateobjec": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activer/d√©sactiver le mode simulation\r\n   *",
    "imgsrcurlcreateobjec1": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activer/d√©sactiver le mode simulation\r\n   */\r\n  setMockMode(enabled: boolean) {\r\n    this.mockMode = enabled;\r\n  }\r\n\r\n  /**\r\n   * Configurer l",
    "imgsrcurlcreateobjec2": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * D√©terminer le type de fichier\r\n   *",
    "imgsrcurlcreateobjec3": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * D√©terminer le type de fichier\r\n   */\r\n  private getFileType(file: File): ",
    "imgsrcurlcreateobjec4": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * G√©n√©rer un ID unique\r\n   *",
    "imgsrcurlcreateobjec5": "));\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * G√©n√©rer un ID unique\r\n   */\r\n  private generateId(): string {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n  }\r\n\r\n  /**\r\n   * Valider la taille du fichier\r\n   */\r\n  validateFileSize(file: File, maxSizeMB: number = 100): boolean {\r\n    const maxSizeBytes = maxSizeMB * 1024 * 1024;\r\n    return file.size <= maxSizeBytes;\r\n  }\r\n\r\n  /**\r\n   * Valider le type de fichier\r\n   */\r\n  validateFileType(file: File, allowedTypes: string[]): boolean {\r\n    return allowedTypes.some(type => {\r\n      if (type.startsWith(",
    "ifvalidfileslength0r": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadFile\r\n    const newUploadFiles: UploadFile[] = [];\r\n    for (const file of validFiles) {\r\n      const preview = await createPreview(file);\r\n      newUploadFiles.push({\r\n        file,\r\n        id: generateId(),\r\n        progress: 0,\r\n        status: ",
    "ifvalidfileslength0r1": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadFile\r\n    const newUploadFiles: UploadFile[] = [];\r\n    for (const file of validFiles) {\r\n      const preview = await createPreview(file);\r\n      newUploadFiles.push({\r\n        file,\r\n        id: generateId(),\r\n        progress: 0,\r\n        status: ",
    "ifvalidfileslength0r2": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadFile\r\n    const newUploadFiles: UploadFile[] = [];\r\n    for (const file of validFiles) {\r\n      const preview = await createPreview(file);\r\n      newUploadFiles.push({\r\n        file,\r\n        id: generateId(),\r\n        progress: 0,\r\n        status: ",
    "ifvalidfileslength0r3": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadImage\r\n    const newImages: UploadImage[] = [];\r\n    for (const file of validFiles) {\r\n      try {\r\n        const preview = await createPreview(file);\r\n        newImages.push({\r\n          file,\r\n          id: generateId(),\r\n          preview,\r\n          status: ",
    "ifvalidfileslength0r4": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadImage\r\n    const newImages: UploadImage[] = [];\r\n    for (const file of validFiles) {\r\n      try {\r\n        const preview = await createPreview(file);\r\n        newImages.push({\r\n          file,\r\n          id: generateId(),\r\n          preview,\r\n          status: ",
    "ifvalidfileslength0r5": "));\r\n    }\r\n\r\n    if (validFiles.length === 0) return;\r\n\r\n    // Cr√©er les objets UploadImage\r\n    const newImages: UploadImage[] = [];\r\n    for (const file of validFiles) {\r\n      try {\r\n        const preview = await createPreview(file);\r\n        newImages.push({\r\n          file,\r\n          id: generateId(),\r\n          preview,\r\n          status: ",
    "influencerprofilecon": "), influencerProfile);\r\n        console.log(",
    "profilecreatedatnowu": "), {\r\n                ...profile,\r\n                createdAt: now,\r\n                updatedAt: now\r\n            });\r\n            return docRef.id;\r\n        } catch (error) {\r\n            console.error(",
    "lengthconstinactivet": ").length;\r\n        const inactive = total - active;\r\n\r\n        return { total, active, inactive };\r\n    }, [filteredCompanies]);\r\n\r\n    // Rendu des items pour la liste virtualis√©e\r\n    const renderCompanyItem = ({ index, data }: { index: number; data: Company[] }) => (\r\n        <CompanyItem company={data[index]} ",
    "setmessagesenttruese": ");\n    setMessageSent(true);\n    \n    setTimeout(() => {\n      setMessageSent(false);\n      setShowSampleForm(false);\n    }, 3000);\n  };\n  \n  const getDescription = () => {\n    if (language === ",
    "constisloadingsetisl": ");\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Nouveaux √©tats pour les champs sp√©cifiques aux influenceurs\n  const [socialMediaLinks, setSocialMediaLinks] = useState(",
    "constisloadingsetisl1": ");\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Nouveaux √©tats pour les champs sp√©cifiques aux influenceurs\n  const [socialMediaLinks, setSocialMediaLinks] = useState(",
    "constisloadingsetisl2": ");\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Nouveaux √©tats pour les champs sp√©cifiques aux influenceurs\n  const [socialMediaLinks, setSocialMediaLinks] = useState(",
    "constmessagesentsetm": ");\n  const [messageSent, setMessageSent] = useState(false);\n  const [showAllSpecs, setShowAllSpecs] = useState(false);\n  const [showVideo, setShowVideo] = useState(false);\n  \n  ",
    "constsuggestionssets": ");\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "constsuggestionssets1": ");\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "constsuggestionssets2": ");\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n\n  // Hook personnalis√© pour les notifications - uniquement si l",
    "creerl": ");\r\n\r\n                // Cr√©er l",
    "creerl1": ");\r\n\r\n                // Cr√©er l",
    "creerl2": ");\r\n\r\n                // Cr√©er l",
    "7creerl": ");\r\n\r\n            // 7. Cr√©er l",
    "9verifierquel": ");\r\n\r\n            // 9. V√©rifier que l",
    "9verifierquel1": ");\r\n\r\n            // 9. V√©rifier que l",
    "tryarreterlasurveill": ");\r\n\r\n        try {\r\n            // Arr√™ter la surveillance de session\r\n            this.stopSessionMonitoring();\r\n\r\n            // D√©connecter de Firebase\r\n            await signOut(auth);\r\n\r\n            // Nettoyer l",
    "utiliserleservicesec": ");\r\n\r\n      // Utiliser le service s√©curis√© qui n",
    "utiliserleservicesec1": ");\r\n\r\n      // Utiliser le service s√©curis√© qui n",
    "constdataprofilesuse": ");\r\n\r\n    const { data: profiles } = useOptimizedQuery<CompanyProfile>(",
    "setisnotificationcen": ");\r\n              setIsNotificationCenterOpen(false);\r\n            }}\r\n            onUnreadCountChange={() => refreshNotifications()}\r\n          ",
    "elsecreerl": ");\r\n            } else {\r\n                // Cr√©er l",
    "consolelogverificati": ");\r\n        console.log(`V√©rification de l",
    "consolelogverificati1": ");\r\n        console.log(`V√©rification de l",
    "returncreerl": ");\r\n        return;\r\n      }\r\n\r\n      // Cr√©er l",
    "returncreerl1": ");\r\n        return;\r\n      }\r\n\r\n      // Cr√©er l",
    "returncreerl2": ");\r\n        return;\r\n      }\r\n\r\n      // Cr√©er l",
    "returnifvalidfilesle": ");\r\n        return;\r\n      }\r\n\r\n      if (validFiles.length !== fileArray.length) {\r\n        alert(`${fileArray.length - validFiles.length} fichier(s) ignor√©(s) - type non support√©`);\r\n      }\r\n\r\n      let uploadedFiles: MediaFile[] = [];\r\n\r\n      ",
    "logdesdonneesinfluen": ");\r\n        }\r\n      }      // Log des donn√©es influenceur si n√©cessaire\r\n      if (selectedRole === ",
    "logdesdonneesinfluen1": ");\r\n        }\r\n      }      // Log des donn√©es influenceur si n√©cessaire\r\n      if (selectedRole === ",
    "finallysetloadingfal": ");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [\r\n        formData,\r\n        prospect.id,\r\n        profile,\r\n        companyMutation,\r\n        profileMutation,\r\n        optimisticUpdateCompany,\r\n        onClose\r\n    ]);\r\n\r\n    ",
    "constshowfilterssets": ");\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Requ√™te optimis√©e avec cache intelligent\r\n    const { data: allCompanies, loading, isStale } = useOptimizedQuery<Company>(",
    "constshowfilterssets1": ");\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    // Requ√™te optimis√©e avec cache intelligent\r\n    const { data: allCompanies, loading, isStale } = useOptimizedQuery<Company>(",
    "constshowunreadonlys": ");\r\n    const [showUnreadOnly, setShowUnreadOnly] = useState(false);\r\n\r\n    // Donn√©es fictives pour d√©monstration\r\n    const mockAlerts: Alert[] = [\r\n        {\r\n            id: ",
    "constshowunreadonlys1": ");\r\n    const [showUnreadOnly, setShowUnreadOnly] = useState(false);\r\n\r\n    // Donn√©es fictives pour d√©monstration\r\n    const mockAlerts: Alert[] = [\r\n        {\r\n            id: ",
    "constprofilemutation": ");\r\n    const profileMutation = useOptimizedMutation(",
    "setisloadingtruetryv": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es d",
    "setisloadingtruetryv1": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es d",
    "setisloadingtruetryv2": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es d",
    "setisloadingtruetryv3": ");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Validation des donn√©es d",
    "validationspecifique": ");\r\n    }\r\n    \r\n    // Validation sp√©cifique selon le r√©seau\r\n    const domain = socialNetworkData[network].placeholder.split(",
    "validationspecifique1": ");\r\n    }\r\n    \r\n    // Validation sp√©cifique selon le r√©seau\r\n    const domain = socialNetworkData[network].placeholder.split(",
    "quantityavailablecap": ");\r\n    }\r\n  }, [quantity, availableCapacity]);\r\n  const handleSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(e.target.value);\r\n    setQuantity(value);\r\n\r\n    // Animation de la quantit√©\r\n    setQuantityAnimating(true);\r\n    setTimeout(() => setQuantityAnimating(false), 200);\r\n\r\n    ",
    "fermeraveclatoucheec": ");\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "fermeraveclatoucheec1": ");\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "remetazerolestatutd": ");\r\n  }\r\n  /**\r\n   * Remet √† z√©ro le statut d",
    "remetazerolestatutd1": ");\r\n  }\r\n  /**\r\n   * Remet √† z√©ro le statut d",
    "exportconstmessagess": ");\r\nexport const messagesService = new FirestoreCrudService<FirestoreMessage>(",
    "exportconstnotificat": ");\r\nexport const notificationsService = new FirestoreCrudService<FirestoreNotification>(",
    "helperpourobtenirune": ");\r\n};\r\n\r\n// Helper pour obtenir une URL de pr√©visualisation\r\nexport const getPreviewUrl = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!isImageFile(file)) {\r\n      reject(new Error(",
    "helperpourobtenirune1": ");\r\n};\r\n\r\n// Helper pour obtenir une URL de pr√©visualisation\r\nexport const getPreviewUrl = (file: File): Promise<string> => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!isImageFile(file)) {\r\n      reject(new Error(",
    "rolepardefautconster": "); // R√¥le par d√©faut\n  const [error, setError] = useState(",
    "rolepardefautconster1": "); // R√¥le par d√©faut\n  const [error, setError] = useState(",
    "pdivdivdivmessageper": ")}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Message personnalis√© pour les sourceurs avec animation *",
    "pdivdivdivmessageper1": ")}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Message personnalis√© pour les sourceurs avec animation */}\n            {role === ",
    "minlength6disabledis": ")}\n                  minLength={6}\n                  disabled={isLoading}\n                />\n              </div>\n            )}\n\n            {/* Champs sp√©cifiques pour les influenceurs",
    "minlength6disabledis1": ")}\n                  minLength={6}\n                  disabled={isLoading}\n                />\n              </div>\n            )}\n\n            {/* Champs sp√©cifiques pour les influenceurs/sourceurs */}\n            {role === ",
    "pdivdivgerezfacileme": ")}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement *",
    "pdivdivgerezfacileme1": ")}\n                </p>\n              </div>\n            </div>\n\n            {/* G√©rez facilement *",
    "buttonlinkdivsection": ")}\n              </Button>\n            </Link>\n          </div>\n\n          {/* Section Recommandations int√©gr√©e *",
    "pdivetape2": ")}\n              </p>\n            </div>\n\n            {/* √âtape 2 *",
    "pdivetape21": ")}\n              </p>\n            </div>\n\n            {/* √âtape 2 *",
    "pdivetape3": ")}\n              </p>\n            </div>\n\n            {/* √âtape 3 *",
    "pdivetape31": ")}\n              </p>\n            </div>\n\n            {/* √âtape 3 *",
    "pbarrederecherche": ")}\n            </p>\n\n            {/* Barre de recherche *",
    "pbarrederecherche1": ")}\n            </p>\n\n            {/* Barre de recherche *",
    "pdiv3etapesprincipal": ")}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales *",
    "pdiv3etapesprincipal1": ")}\n            </p>\n          </div>\n\n          {/* 3 √©tapes principales *",
    "contactinfo": ")}\r\n                            />\r\n\r\n                            {/* Contact Info *",
    "pdivdivdivmodaldesai": ")}\r\n            </p>          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de saisie des liens r√©seaux sociaux *",
    "utiliselememetitrequ": ")} {/* Utilise le m√™me titre que sourceur *",
    "tousdroitsreserves": ")} ‚Ä¢ Tous droits r√©serv√©s\r\n            <",
    "pdivdivmessageperson": ")}</p>\r\n                    </div>\r\n                  </div>\r\n                )}                {/* Message personnalis√© pour les influenceurs *",
    "pdivdivmessageperson1": ")}</p>\r\n                    </div>\r\n                  </div>\r\n                )}                {/* Message personnalis√© pour les influenceurs */}\r\n                {selectedRole === ",
    "spandivgooglesigninb": ")}</span>\r\n            </div>\r\n            \r\n            <GoogleSignInButton\r\n              onSuccess={() => {\r\n                // La redirection sera g√©r√©e automatiquement par l",
    "spandivgooglesigninb1": ")}</span>\r\n            </div>\r\n            \r\n            <GoogleSignInButton\r\n              onSuccess={() => {\r\n                // La redirection sera g√©r√©e automatiquement par l",
    "traductionspourlesfi": ",\n\n    // Traductions pour les filtres de recherche\n    ",
    "traductionspourlesme": ",\n\n    // Traductions pour les messages\n    ",
    "traducescomuns": ",\n\n    // Tradu√ß√µes comuns\n    ",
    "traducescomuns1": ",\n\n    // Tradu√ß√µes comuns\n    ",
    "traducesdeconteinere": ",\n\n    // Tradu√ß√µes de cont√™ineres\n    ",
    "traducesdeconteinere1": ",\n\n    // Tradu√ß√µes de cont√™ineres\n    ",
    "favoritesbrowsinghis": ",\n            favorites: [],\n            browsingHistory: [],\n            messages: [],\n            created_at: ",
    "favoritesbrowsinghis1": ",\n        favorites: [],\n        browsingHistory: [],\n        messages: [],\n        subscription: ",
    "favoritesbrowsinghis2": ",\n        favorites: [],\n        browsingHistory: [],\n        messages: [],\n        subscription: ",
    "favoritesmessagesbro": ",\n        favorites: [],\n        messages: [],\n        browsingHistory: [],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      await setDoc(doc(db, ",
    "informationsdetaille": ",\r\n\r\n        // Informations d√©taill√©es du profil\r\n        monthlySalesVolume: profile?.monthly_sales_volume || ",
    "informationsdetaille1": ",\r\n\r\n        // Informations d√©taill√©es du profil\r\n        monthlySalesVolume: profile?.monthly_sales_volume || ",
    "informationsdetaille2": ",\r\n\r\n        // Informations d√©taill√©es du profil\r\n        monthlySalesVolume: profile?.monthly_sales_volume || ",
    "favoritesbrowsinghis3": ",\r\n                        favorites: [],\r\n                        browsingHistory: [],\r\n                        messages: [],\r\n                        subscription: ",
    "contactperson": ",\r\n                    contactPerson: ",
    "favoritesbrowsinghis4": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "favoritesbrowsinghis5": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "favoritesbrowsinghis6": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "favoritesbrowsinghis7": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "favoritesbrowsinghis8": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "favoritesbrowsinghis9": ",\r\n                    favorites: [],\r\n                    browsingHistory: [],\r\n                    messages: [],\r\n                    subscription: ",
    "textcreationpartiell": ",\r\n                    text: `Cr√©ation partielle: ${result.created.length} cr√©√©s, ${result.failed.length} √©checs`\r\n                });\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "textcreationpartiell1": ",\r\n                    text: `Cr√©ation partielle: ${result.created.length} cr√©√©s, ${result.failed.length} √©checs`\r\n                });\r\n            }\r\n\r\n        } catch (error: any) {\r\n            console.error(",
    "favoritesbrowsinghis10": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis11": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis12": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis13": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis14": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis15": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis16": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis17": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis18": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "favoritesbrowsinghis19": ",\r\n                favorites: [],\r\n                browsingHistory: [],\r\n                messages: [],\r\n                subscription: ",
    "cachekeycompaniessea": ",\r\n            cacheKey: `companies-search-${searchTerm}`,\r\n            cacheTTL: 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n\r\n    ",
    "cachekeycompaniessea1": ",\r\n            cacheKey: `companies-search-${searchTerm}`,\r\n            cacheTTL: 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n\r\n    // Filtrage m√©moris√© pour √©viter les recalculs inutiles\r\n    const filteredCompanies = useMemo(() => {\r\n        let companies = searchTerm ? searchResults : allCompanies;\r\n\r\n        if (!companies) return [];\r\n\r\n        if (statusFilter !== ",
    "cachekeycompaniessea2": ",\r\n            cacheKey: `companies-search-${searchTerm}`,\r\n            cacheTTL: 60000 // 1 minute pour les recherches\r\n        }\r\n    );\r\n\r\n    // Filtrage m√©moris√© pour √©viter les recalculs inutiles\r\n    const filteredCompanies = useMemo(() => {\r\n        let companies = searchTerm ? searchResults : allCompanies;\r\n\r\n        if (!companies) return [];\r\n\r\n        if (statusFilter !== ",
    "commission80constcop": ",\r\n            commission: 80\r\n        }\r\n    ];\r\n\r\n    const copyToClipboard = (text: string, type: string) => {\r\n        navigator.clipboard.writeText(text);\r\n        showToast(`${type} copi√© dans le presse-papier !`, ",
    "commission80constcop1": ",\r\n            commission: 80\r\n        }\r\n    ];\r\n\r\n    const copyToClipboard = (text: string, type: string) => {\r\n        navigator.clipboard.writeText(text);\r\n        showToast(`${type} copi√© dans le presse-papier !`, ",
    "maxwidth1200maxheigh": ",\r\n          maxWidth: 1200,\r\n          maxHeight: 1200,\r\n          quality: 0.8,\r\n          maxSize: 5 // 5MB max par image\r\n        }\r\n      );      const uploadedUrls = results\r\n        .filter(result => result.success)\r\n        .map(result => result.url!)\r\n        .filter(Boolean);\r\n\r\n      // Mettre √† jour les images du formulaire\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, ...uploadedUrls]\r\n      }));\r\n\r\n      return uploadedUrls;\r\n    } catch (error) {\r\n      console.error(",
    "maxwidth1200maxheigh1": ",\r\n          maxWidth: 1200,\r\n          maxHeight: 1200,\r\n          quality: 0.8,\r\n          maxSize: 5 // 5MB max par image\r\n        }\r\n      );      const uploadedUrls = results\r\n        .filter(result => result.success)\r\n        .map(result => result.url!)\r\n        .filter(Boolean);\r\n\r\n      // Mettre √† jour les images du formulaire\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        images: [...prev.images, ...uploadedUrls]\r\n      }));\r\n\r\n      return uploadedUrls;\r\n    } catch (error) {\r\n      console.error(",
    "cachettl3000005minut": ",\r\n        cacheTTL: 300000, // 5 minutes\r\n        enableRealtime: true\r\n    });\r\n\r\n    // Recherche avec debounce pour √©viter trop de requ√™tes\r\n    const { data: searchResults } = useDebouncedSearch<Company>(\r\n        ",
    "cachettl3000005minut1": ",\r\n        cacheTTL: 300000, // 5 minutes\r\n        enableRealtime: true\r\n    });\r\n\r\n    // Recherche avec debounce pour √©viter trop de requ√™tes\r\n    const { data: searchResults } = useDebouncedSearch<Company>(\r\n        ",
    "cachettl3000005minut2": ",\r\n        cacheTTL: 300000, // 5 minutes\r\n        enableRealtime: true\r\n    });\r\n\r\n    // Recherche avec debounce pour √©viter trop de requ√™tes\r\n    const { data: searchResults } = useDebouncedSearch<Company>(\r\n        ",
    "contactperson1": ",\r\n        contactPerson: ",
    "contactpersonprospec": ",\r\n        contactPerson: prospect.contact_person || ",
    "favoritesbrowsinghis20": ",\r\n        favorites: [],\r\n        browsingHistory: [],\r\n        messages: [],\r\n        subscription: ",
    "favoritesbrowsinghis21": ",\r\n        favorites: [],\r\n        browsingHistory: [],\r\n        messages: [],\r\n        subscription: ",
    "favoritesbrowsinghis22": ",\r\n        favorites: [],\r\n        browsingHistory: [],\r\n        messages: [],\r\n        subscription: ",
    "favoritesbrowsinghis23": ",\r\n        favorites: [],\r\n        browsingHistory: [],\r\n        messages: [],\r\n        subscription: ",
    "haslogisticsvehicles": ",\r\n        hasLogisticsVehicles: profile?.has_logistics_vehicles || false,\r\n        vehicleCount: profile?.vehicle_count?.toString() || ",
    "hasmerchandisingprof": ",\r\n        hasMerchandising: profile?.has_merchandising || false,\r\n        isTopImporter: profile?.is_top_importer || false,\r\n        hasWarehouses: profile?.has_warehouses || false,\r\n        warehouseCount: profile?.warehouse_count?.toString() || ",
    "isreadfalsetryawaitm": ",\r\n        isRead: false\r\n      }\r\n    ];\r\n\r\n    try {\r\n      await messagesService.createBatch(testMessages);\r\n      console.log(",
    "longdescriptioncesac": ",\r\n        longDescription: `Ce sac √† dos business combine fonctionnalit√© et √©l√©gance pour r√©pondre aux besoins des professionnels modernes.\r\n\r\nCon√ßu avec un compartiment d√©di√© pour ordinateurs portables jusqu",
    "notesprofilenotes": ",\r\n        notes: profile?.notes || ",
    "verifiedfalseconstsh": ",\r\n        verified: false\r\n    });\r\n    const [showFilters, setShowFilters] = useState(false);\r\n\r\n    const influencers: InfluencerProfile[] = [\r\n        {\r\n            id: ",
    "contentnewmessagetim": ",\r\n      content: newMessage,\r\n      timestamp: new Date(),\r\n      isRead: false,\r\n    };\r\n\r\n    setMessages((prev) => [...prev, message]);\r\n    setNewMessage(",
    "toconversationmessag": ",\r\n      to: conversationMessages[0]?.fromType === ",
    "contactperson2": ",\r\n    contactPerson: ",
    "rolepardefautisactiv": ", // R√¥le par d√©faut\r\n                    isActive: true,\r\n                    language: ",
    "rolepardefautisactiv1": ", // R√¥le par d√©faut\r\n                    isActive: true,\r\n                    language: ",
    "rolepardefautisactiv2": ", // R√¥le par d√©faut\r\n                isActive: true,\r\n                language: ",
    "rolepardefautisactiv3": ", // R√¥le par d√©faut\r\n                isActive: true,\r\n                language: ",
    "seraremplaceparl": ", // Sera remplac√© par l",
    "seraremplaceparl1": ", // Sera remplac√© par l",
    "collabrefidcreerquel": ", collabRef.id);\r\n        }\r\n\r\n        // Cr√©er quelques filleuls de test\r\n        const referrals = [\r\n            {\r\n                influencerId: profileRef.id,\r\n                referralCode: ",
    "errmarquertouteslesn": ", err);\r\n    }\r\n  };\r\n\r\n  // Marquer toutes les notifications comme lues\r\n  const handleMarkAllAsRead = async () => {\r\n    if (markingAllAsRead) return;\r\n\r\n    setMarkingAllAsRead(true);\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      setNotifications(prev =>\r\n        prev.map(notification => ({ ...notification, isRead: true }))\r\n      );\r\n      setUnreadCount(0);\r\n      onUnreadCountChange(0);\r\n    } catch (err) {\r\n      console.error(",
    "errmarquertouteslesn1": ", err);\r\n    }\r\n  };\r\n\r\n  // Marquer toutes les notifications comme lues\r\n  const handleMarkAllAsRead = async () => {\r\n    if (markingAllAsRead) return;\r\n\r\n    setMarkingAllAsRead(true);\r\n    try {\r\n      await notificationService.markAllAsRead();\r\n      setNotifications(prev =>\r\n        prev.map(notification => ({ ...notification, isRead: true }))\r\n      );\r\n      setUnreadCount(0);\r\n      onUnreadCountChange(0);\r\n    } catch (err) {\r\n      console.error(",
    "errfinallysetloading": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fermeture avec √âchap\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ",
    "errfinallysetloading1": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fermeture avec √âchap\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ",
    "errfinallysetloading2": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fermeture avec √âchap\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ",
    "errfinallysetloading3": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fermeture avec √âchap\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ",
    "errfinallysetmarking": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  ",
    "errfinallysetmarking1": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  ",
    "errfinallysetmarking2": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  ",
    "errfinallysetmarking3": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  ",
    "errfinallysetmarking4": ", err);\r\n    } finally {\r\n      setMarkingAllAsRead(false);\r\n    }\r\n  };\r\n\r\n  // G√©rer le clic sur une notification\r\n  const handleNotificationClick = (notification: Notification) => {\r\n    if (notification.actionUrl) {\r\n      navigate(notification.actionUrl);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Rafra√Æchir les notifications\r\n  const handleRefresh = () => {\r\n    setPage(1);\r\n    loadNotifications(true);\r\n  };\r\n\r\n  // Gestion des filtres\r\n  const handleFilterChange = (newFilters: Partial<NotificationFilters>) => {\r\n    setFilters(prev => ({ ...prev, ...newFilters }));\r\n    setPage(1);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({});\r\n    setPage(1);\r\n  };\r\n  if (!isOpen) return null;\r\n\r\n  console.log(",
    "errorthrowerrormetaj": ", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Met √† jour le r√¥le d",
    "errorthrowerrormetaj1": ", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Met √† jour le r√¥le d",
    "errorreturnnulldeter": ", error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D√©terminer la redirection selon le r√¥le\r\n     *",
    "errorreturnsuccessfa": ", error);\r\n            return {\r\n                success: false,\r\n                message: `Erreur: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * V√©rifier le statut de l",
    "errorreturnsuccessfa1": ", error);\r\n            return {\r\n                success: false,\r\n                message: `Erreur: ${error.message}`\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * V√©rifier le statut de l",
    "errorthrowerrorservi": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// Service pour le parrainage\r\nexport const referralService = {\r\n    // R√©cup√©rer les filleuls d",
    "errorthrowerrorservi1": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// Service pour le parrainage\r\nexport const referralService = {\r\n    // R√©cup√©rer les filleuls d",
    "errorthrowerrorservi2": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// Service pour les profils influenceur\r\nexport const influencerService = {\r\n    // R√©cup√©rer le profil d",
    "errorthrowerrorservi3": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// Service pour les profils influenceur\r\nexport const influencerService = {\r\n    // R√©cup√©rer le profil d",
    "errorthrowerrorservi4": ", error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// Service pour les profils influenceur\r\nexport const influencerService = {\r\n    // R√©cup√©rer le profil d",
    "errorthrowerrorcreer": ", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Cr√©er un nouveau filleul\r\n    async createReferral(referral: Omit<ReferralData, ",
    "errorthrowerrorcreer1": ", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Cr√©er un profil influenceur\r\n    async createInfluencerProfile(profile: Omit<InfluencerProfile, ",
    "errorthrowerrorcreer2": ", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Cr√©er une nouvelle collaboration\r\n    async createCollaboration(collaboration: Omit<Collaboration, ",
    "errorthrowerrormettr": ", error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Mettre √† jour un profil influenceur\r\n    async updateInfluencerProfile(id: string, updates: Partial<InfluencerProfile>): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, ",
    "errorthrowerrorcreer3": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Cr√©er et exporter l",
    "errorreturnsuccessfa2": ", error);\r\n    return {\r\n      success: false,\r\n      error: error\r\n    };\r\n  }\r\n};\r\n\r\n// Fonction pour nettoyer les donn√©es de test (si n√©cessaire)\r\nexport const cleanupTestData = async () => {\r\n  try {\r\n    console.log(",
    "errorreturnsuccessfa3": ", error);\r\n    return {\r\n      success: false,\r\n      error: error\r\n    };\r\n  }\r\n};\r\n\r\n// Fonction pour nettoyer les donn√©es de test (si n√©cessaire)\r\nexport const cleanupTestData = async () => {\r\n  try {\r\n    console.log(",
    "errorreturnsuccessfa4": ", error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\n/**\r\n * V√©rifie l",
    "errorreturnsuccessfa5": ", error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\n/**\r\n * V√©rifie l",
    "handleclickoutsidede": ", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Debug des √©tats\r\n  useEffect(() => {\r\n    console.log(",
    "handleclickoutsidede1": ", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Debug des √©tats\r\n  useEffect(() => {\r\n    console.log(",
    "handlekeydownempeche": ", handleKeyDown);\r\n      // Emp√™cher le scroll du body\r\n      document.body.style.overflow = ",
    "handlekeydownempeche1": ", handleKeyDown);\r\n      // Emp√™cher le scroll du body\r\n      document.body.style.overflow = ",
    "handlescrollloadingh": ", handleScroll);\r\n    }\r\n  }, [loading, hasMore]);\r\n\r\n  // Marquer une notification comme lue\r\n  const handleMarkAsRead = async (notificationId: string) => {\r\n    try {\r\n      await notificationService.markAsRead([notificationId]);\r\n      setNotifications(prev =>\r\n        prev.map(notification =>\r\n          notification.id === notificationId\r\n            ? { ...notification, isRead: true }\r\n            : notification\r\n        )\r\n      );\r\n      \r\n      const newUnreadCount = Math.max(0, unreadCount - 1);\r\n      setUnreadCount(newUnreadCount);\r\n      onUnreadCountChange(newUnreadCount);\r\n    } catch (err) {\r\n      console.error(",
    "handlescrollloadingh1": ", handleScroll);\r\n    }\r\n  }, [loading, hasMore]);\r\n\r\n  // Marquer une notification comme lue\r\n  const handleMarkAsRead = async (notificationId: string) => {\r\n    try {\r\n      await notificationService.markAsRead([notificationId]);\r\n      setNotifications(prev =>\r\n        prev.map(notification =>\r\n          notification.id === notificationId\r\n            ? { ...notification, isRead: true }\r\n            : notification\r\n        )\r\n      );\r\n      \r\n      const newUnreadCount = Math.max(0, unreadCount - 1);\r\n      setUnreadCount(newUnreadCount);\r\n      onUnreadCountChange(newUnreadCount);\r\n    } catch (err) {\r\n      console.error(",
    "handlestoragechangek": ", handleStorageChange);\r\n    }, [key, options.syncAcrossTabs]);\r\n\r\n    return [storedValue, setValue] as const;\r\n}\r\n\r\n// Hook pour intersection observer optimis√©\r\nexport function useIntersectionObserver(\r\n    ref: React.RefObject<Element>,\r\n    options: IntersectionObserverInit = {}\r\n) {\r\n    const [isIntersecting, setIsIntersecting] = useState(false);\r\n    const [hasIntersected, setHasIntersected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const element = ref.current;\r\n        if (!element) return;\r\n\r\n        const observer = new IntersectionObserver(([entry]) => {\r\n            setIsIntersecting(entry.isIntersecting);\r\n            if (entry.isIntersecting && !hasIntersected) {\r\n                setHasIntersected(true);\r\n            }\r\n        }, {\r\n            threshold: 0.1,\r\n            rootMargin: ",
    "handlestoragechangek1": ", handleStorageChange);\r\n    }, [key, options.syncAcrossTabs]);\r\n\r\n    return [storedValue, setValue] as const;\r\n}\r\n\r\n// Hook pour intersection observer optimis√©\r\nexport function useIntersectionObserver(\r\n    ref: React.RefObject<Element>,\r\n    options: IntersectionObserverInit = {}\r\n) {\r\n    const [isIntersecting, setIsIntersecting] = useState(false);\r\n    const [hasIntersected, setHasIntersected] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const element = ref.current;\r\n        if (!element) return;\r\n\r\n        const observer = new IntersectionObserver(([entry]) => {\r\n            setIsIntersecting(entry.isIntersecting);\r\n            if (entry.isIntersecting && !hasIntersected) {\r\n                setHasIntersected(true);\r\n            }\r\n        }, {\r\n            threshold: 0.1,\r\n            rootMargin: ",
    "initerrorcontinuerme": ", initError);\n          // Continuer m√™me si l",
    "initerrorcontinuerme1": ", initError);\n          // Continuer m√™me si l",
    "messagestringsetnoti": ", message: string) => {\r\n    setNotification({ type, message });\r\n  };\r\n\r\n  // Fonctions pour la gestion du profil\r\n  const handleClickChangePhoto = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleProfilePicChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    ",
    "metadatasimulerundel": ", metadata);\r\n\r\n      // Simuler un d√©lai d",
    "metadatasimulerundel1": ", metadata);\r\n\r\n      // Simuler un d√©lai d",
    "profilerefidcreerque": ", profileRef.id);\r\n\r\n        // Cr√©er quelques collaborations de test\r\n        const collaborations = [\r\n            {\r\n                influencerId: profileRef.id,\r\n                brand: ",
    "progress0imgsimulerl": ", progress: 0 } : img\r\n      ));\r\n\r\n      // Simuler le progr√®s d",
    "progress0imgsimulerl1": ", progress: 0 } : img\r\n      ));\r\n\r\n      // Simuler le progr√®s d",
    "stopopacity06linearg": ", stopOpacity: 0.6 }} />\n              </linearGradient>\n            </defs>\n\n            {/* Montagne arri√®re *",
    "stopopacity07linearg": ", stopOpacity: 0.7}} />\n              </linearGradient>\n            </defs>\n            \n            {/* Montagne arri√®re *",
    "stopopacity07linearg1": ", stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re *",
    "stopopacity07linearg2": ", stopOpacity: 0.7}} />\r\n              </linearGradient>\r\n            </defs>\r\n            \r\n            {/* Montagne arri√®re *",
    "unreadcounttostrings": ", unreadCount.toString())\r\n              }\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notifications List *",
    "stylesprofileanimati": "../styles/profile-animations.css",
    "stylesnotificationsc": "./styles/notifications.css",
    "stylesnotificationsc1": "./styles/notifications.css",
    "svgdivdivdivcategori": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie d",
    "svgdivdivdivdepotded": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* D√©p√¥t de documents *",
    "svgdivdivdivmessaged": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Message de pr√©sentation *",
    "svgdivdivdivnumerod": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Num√©ro d",
    "svgdivdivdivdepotded1": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* D√©p√¥t de documents *",
    "svgdivdivdivmethodes": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>                {/* M√©thodes de contr√¥le qualit√© *",
    "svgdivdivdivchampssp": "/>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}            {/* Champs sp√©cifiques pour les influenceurs *",
    "svgdivdivdivselecteu": "/>\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* S√©lecteur de r√¥le *",
    "categoriesmachinerys": "/categories/machinery.svg",
    "contact": "/contact",
    "cookies": "/cookies",
    "profile": "/profile",
    "profile1": "/profile",
    "profile2": "/profile",
    "profile3": "/profile",
    "profile4": "/profile",
    "profile5": "/profile",
    "publiccategoriesmach": "/public/categories/machinery.svg",
    "1reeldedeballage": "1 reel de d√©ballage",
    "1reeldedeballage1": "1 reel de d√©ballage",
    "1reeldedeballage2": "1 reel de d√©ballage",
    "1reeldedeballage3": "1 reel de d√©ballage",
    "1etoile": "1 √©toile",
    "1etoile1": "1 √©toile",
    "123ruedelapaix75001p": "123 Rue de la Paix, 75001 Paris, France",
    "123ruedelapaix75001p1": "123 Rue de la Paix, 75001 Paris, France",
    "123ruedelapaix75001p2": "123 Rue de la Paix, 75001 Paris, France",
    "123technologystreetn": "123 Technology Street, Nanshan District, Shenzhen, Chine",
    "13mmgraphene": "13mm graph√®ne",
    "13mmgraphene1": "13mm graph√®ne",
    "2litigesenattenteder": "2 litiges en attente de r√©solution",
    "2litigesenattenteder1": "2 litiges en attente de r√©solution",
    "2etoiles": "2 √©toiles",
    "2etoiles1": "2 √©toiles",
    "2fadesactiveevotreco": "2FA d√©sactiv√©e. Votre compte est moins s√©curis√©.",
    "2fadesactiveevotreco1": "2FA d√©sactiv√©e. Votre compte est moins s√©curis√©.",
    "3nouveauxmessages": "3 nouveaux messages",
    "3nouveauxmessages1": "3 nouveaux messages",
    "3etoiles": "3 √©toiles",
    "3etoiles1": "3 √©toiles",
    "3contact": "3. Contact",
    "3contactez": "3. Contactez",
    "321ruedelabeaute3300": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "321ruedelabeaute33001": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "321ruedelabeaute33002": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "321ruedelabeaute33003": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "321ruedelabeaute33004": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "321ruedelabeaute33005": "321 Rue de la Beaut√©, 33000 Bordeaux, France",
    "4etoiles": "4 √©toiles",
    "4etoiles1": "4 √©toiles",
    "456avenuedeschamps69": "456 Avenue des Champs, 69000 Lyon, France",
    "456avenuedeschamps691": "456 Avenue des Champs, 69000 Lyon, France",
    "456avenuedeschamps692": "456 Avenue des Champs, 69000 Lyon, France",
    "5etoiles": "5 √©toiles",
    "5etoiles1": "5 √©toiles",
    "5gparecouteur": "5g par √©couteur",
    "5gparecouteur1": "5g par √©couteur",
    "654placeducommerce59": "654 Place du Commerce, 59000 Lille, France",
    "654placeducommerce591": "654 Place du Commerce, 59000 Lille, France",
    "789boulevardindustri": "789 Boulevard Industriel, 13000 Marseille, France",
    "789boulevardindustri1": "789 Boulevard Industriel, 13000 Marseille, France",
    "pourlessourceursetin": ":\n            // Pour les sourceurs et influenceurs, on affiche un message de confirmation plut√¥t que de rediriger\n            alert(t(",
    "pourlessourceursetin1": ":\n            // Pour les sourceurs et influenceurs, on affiche un message de confirmation plut√¥t que de rediriger\n            alert(t(",
    "exchangeratesrelativ": ";\n\n// Exchange rates relative to CNY (Chinese Yuan)\nexport const exchangeRates: ExchangeRates = {\n  CNY: 1.00,   ",
    "importbarchart3packa": ";\nimport { BarChart3, Package, TruckIcon, AlertCircle, DollarSign, Star, MessageSquare, FileText } from ",
    "importchevronlefthea": ";\nimport { ChevronLeft, Heart, MessageSquare, Package, ChevronDown, ChevronUp, Play } from ",
    "importmessagesquarec": ";\nimport { MessageSquare, Clock, Heart } from ",
    "importusenotificatio": ";\nimport { useNotifications } from ",
    "messagesd": ";\r\n\r\n            // Messages d",
    "creeroumettreajourl": ";\r\n\r\n    /**\r\n     * Cr√©er ou mettre √† jour l",
    "creeroumettreajourl1": ";\r\n\r\n    /**\r\n     * Cr√©er ou mettre √† jour l",
    "servicepourgererl": ";\r\n\r\n/**\r\n * Service pour g√©rer l",
    "servicepourgererl1": ";\r\n\r\n/**\r\n * Service pour g√©rer l",
    "cettemapsimuleunstoc": ";\r\n\r\n// Cette map simule un stockage en m√©moire qui serait une base de donn√©es en r√©alit√©.\r\n",
    "composantprincipalop": ";\r\n\r\n// Composant principal optimis√©\r\nconst OptimizedCompaniesPage: React.FC = memo(() => {\r\n    const [searchTerm, setSearchTerm] = useState(",
    "composantprincipalop1": ";\r\n\r\n// Composant principal optimis√©\r\nconst OptimizedCompaniesPage: React.FC = memo(() => {\r\n    const [searchTerm, setSearchTerm] = useState(",
    "configurationfirebas": ";\r\n\r\n// Configuration Firebase (m√™me que l",
    "configurationfirebas1": ";\r\n\r\n// Configuration Firebase (m√™me que l",
    "hookpourdebounceopti": ";\r\n\r\n// Hook pour debounce (optimisation des recherches)\r\nexport const useDebounce = <T>(value: T, delay: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\n",
    "hookpourdebounceopti1": ";\r\n\r\n// Hook pour debounce (optimisation des recherches)\r\nexport const useDebounce = <T>(value: T, delay: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\n// Hook pour intersection observer (lazy loading optimis√©)\r\nexport const useIntersectionObserver = (\r\n  ref: React.RefObject<Element>,\r\n  options: IntersectionObserverInit = {}\r\n) => {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      setIsIntersecting(entry.isIntersecting);\r\n    }, options);\r\n\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n    };\r\n  }, [ref, options]);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\n",
    "interfacepourlacreat": ";\r\n\r\n// Interface pour la cr√©ation d",
    "interfacepourlacreat1": ";\r\n\r\n// Interface pour la cr√©ation d",
    "stockagedesnotificat": ";\r\n\r\n// Stockage des notifications (vide par d√©faut)\r\nlet mockNotifications: Notification[] = [];\r\n\r\nclass NotificationService {\r\n  async getNotifications(\r\n    page: number = 1,\r\n    limit: number = 20,\r\n    filters?: NotificationFilters\r\n  ): Promise<NotificationResponse> {\r\n    ",
    "stockagedesnotificat1": ";\r\n\r\n// Stockage des notifications (vide par d√©faut)\r\nlet mockNotifications: Notification[] = [];\r\n\r\nclass NotificationService {\r\n  async getNotifications(\r\n    page: number = 1,\r\n    limit: number = 20,\r\n    filters?: NotificationFilters\r\n  ): Promise<NotificationResponse> {\r\n    ",
    "stockagedesnotificat2": ";\r\n\r\n// Stockage des notifications (vide par d√©faut)\r\nlet mockNotifications: Notification[] = [];\r\n\r\nclass NotificationService {\r\n  async getNotifications(\r\n    page: number = 1,\r\n    limit: number = 20,\r\n    filters?: NotificationFilters\r\n  ): Promise<NotificationResponse> {\r\n    // Simulation d",
    "typespourlesdonneesi": ";\r\n\r\n// Types pour les donn√©es influenceur\r\nexport interface Collaboration {\r\n    id?: string;\r\n    influencerId: string;\r\n    brand: string;\r\n    campaign: string;\r\n    status: ",
    "typespourlesdonneesi1": ";\r\n\r\n// Types pour les donn√©es influenceur\r\nexport interface Collaboration {\r\n    id?: string;\r\n    influencerId: string;\r\n    brand: string;\r\n    campaign: string;\r\n    status: ",
    "conststatssectionrea": ";\r\n\r\nconst StatsSection: React.FC = () => {\r\n    // Donn√©es pour les graphiques\r\n    const viewsData = [\r\n        { month: ",
    "conststatssectionrea1": ";\r\n\r\nconst StatsSection: React.FC = () => {\r\n    // Donn√©es pour les graphiques\r\n    const viewsData = [\r\n        { month: ",
    "interfacecontextprov": ";\r\n\r\ninterface ContextProvidersProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\n// Composant optimis√© pour regrouper tous les providers\r\n// et √©viter les re-renders inutiles\r\nconst ContextProviders: React.FC<ContextProvidersProps> = ({ children }) => {\r\n  // M√©morisation de la structure des providers pour √©viter les re-renders\r\n  const providers = useMemo(() => [\r\n    AuthProvider,\r\n    LanguageProvider,\r\n    CurrencyProvider,\r\n    ThemeProvider,\r\n    ToastProvider,\r\n    NotificationProvider\r\n  ], []);\r\n\r\n  // R√©duction des providers en une seule structure\r\n  return providers.reduceRight(\r\n    (acc, Provider) => <Provider>{acc}<",
    "interfacenotificatio": ";\r\n\r\ninterface NotificationPreviewProps {\r\n  notifications: Notification[];\r\n  unreadCount: number;\r\n  onViewAll: () => void;\r\n  onNotificationClick: (notification: Notification) => void;\r\n  isVisible: boolean;\r\n}\r\n\r\nconst NotificationPreview: React.FC<NotificationPreviewProps> = ({\r\n  notifications,\r\n  unreadCount,\r\n  onViewAll,\r\n  onNotificationClick,\r\n  isVisible\r\n}) => {\r\n  const { t } = useLanguage();\r\n\r\n  const formatTimeAgo = (date: Date) => {\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) ",
    "divcontactperson": ";\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n\r\n                {/* Contact Person *",
    "elseiferrormessageer": ";\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n\r\n            return {\r\n                success: false,\r\n                message: errorMessage\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valider les donn√©es de cr√©ation d",
    "elseiferrormessageer1": ";\r\n            } else if (error.message) {\r\n                errorMessage = error.message;\r\n            }\r\n\r\n            return {\r\n                success: false,\r\n                message: errorMessage\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Valider les donn√©es de cr√©ation d",
    "constupdatedcontaine": ";\r\n        }\r\n\r\n        const updatedContainer = {\r\n          ...container,\r\n          usedCapacity: newUsedCapacity,\r\n          status: newStatus,\r\n        };\r\n\r\n        currentContainers.set(containerId, updatedContainer);\r\n        resolve(updatedContainer);\r\n      }, 300); // Simule un d√©lai r√©seau\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Ajoute un article √† un conteneur.\r\n   * @param containerId L",
    "constupdatedcontaine1": ";\r\n        }\r\n\r\n        const updatedContainer = {\r\n          ...container,\r\n          usedCapacity: newUsedCapacity,\r\n          status: newStatus,\r\n        };\r\n\r\n        currentContainers.set(containerId, updatedContainer);\r\n        resolve(updatedContainer);\r\n      }, 300); // Simule un d√©lai r√©seau\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Ajoute un article √† un conteneur.\r\n   * @param containerId L",
    "commissionnumberjoin": ";\r\n    commission: number;\r\n    joinDate: Date;\r\n}\r\n\r\n// Service pour les collaborations\r\nexport const collaborationService = {\r\n    // R√©cup√©rer toutes les collaborations d",
    "commissionnumberjoin1": ";\r\n    commission: number;\r\n    joinDate: Date;\r\n}\r\n\r\n// Service pour les collaborations\r\nexport const collaborationService = {\r\n    // R√©cup√©rer toutes les collaborations d",
    "privatesecondaryappa": ";\r\n    private secondaryApp: any = null;\r\n    private secondaryAuth: any = null;\r\n    private secondaryDb: any = null;\r\n\r\n    /**\r\n     * Initialise une instance Firebase secondaire pour la cr√©ation d",
    "privatesecondaryappa1": ";\r\n    private secondaryApp: any = null;\r\n    private secondaryAuth: any = null;\r\n    private secondaryDb: any = null;\r\n\r\n    /**\r\n     * Initialise une instance Firebase secondaire pour la cr√©ation d",
    "fermeraveclatoucheec2": ";\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "fermeraveclatoucheec3": ";\r\n    };\r\n\r\n    // Fermer avec la touche √âchap\r\n    React.useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === ",
    "isopenvalidationente": ";\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Validation en temps r√©el\r\n  useEffect(() => {\r\n    if (quantity > availableCapacity) {\r\n      setError(`Quantit√© maximale disponible: ${availableCapacity} CBM`);\r\n    } else if (quantity <= 0) {\r\n      setError(",
    "isopenvalidationente1": ";\r\n    };\r\n  }, [isOpen]);\r\n\r\n  // Validation en temps r√©el\r\n  useEffect(() => {\r\n    if (quantity > availableCapacity) {\r\n      setError(`Quantit√© maximale disponible: ${availableCapacity} CBM`);\r\n    } else if (quantity <= 0) {\r\n      setError(",
    "downloadcountnumberc": ";\r\n  downloadCount: number;\r\n  category: string;\r\n  url?: string; // URL du fichier upload√©\r\n}\r\n\r\nconst mockDocuments: Document[] = [\r\n  {\r\n    id: ",
    "downloadcountnumberc1": ";\r\n  downloadCount: number;\r\n  category: string;\r\n  url?: string; // URL du fichier upload√©\r\n}\r\n\r\nconst mockDocuments: Document[] = [\r\n  {\r\n    id: ",
    "previewstringconstfi": ";\r\n  preview?: string;\r\n}\r\n\r\nconst FileUpload: React.FC<FileUploadProps> = ({\r\n  onFileSelect,\r\n  onUpload,\r\n  maxFiles = 10,\r\n  maxSizePerFile = 50, // 50MB par d√©faut\r\n  acceptedTypes = [",
    "previewstringconstfi1": ";\r\n  preview?: string;\r\n}\r\n\r\nconst FileUpload: React.FC<FileUploadProps> = ({\r\n  onFileSelect,\r\n  onUpload,\r\n  maxFiles = 10,\r\n  maxSizePerFile = 50, // 50MB par d√©faut\r\n  acceptedTypes = [",
    "sizenumberuploadedat": ";\r\n  size: number;\r\n  uploadedAt: Date;\r\n  path: string;\r\n  metadata?: {\r\n    width?: number;\r\n    height?: number;\r\n    duration?: number; // pour les vid√©os\r\n    contentType?: string;\r\n  };\r\n}\r\n\r\nexport interface UploadProgress {\r\n  bytesTransferred: number;\r\n  totalBytes: number;\r\n  progress: number; ",
    "sizenumberuploadedat1": ";\r\n  size: number;\r\n  uploadedAt: Date;\r\n  path: string;\r\n  metadata?: {\r\n    width?: number;\r\n    height?: number;\r\n    duration?: number; // pour les vid√©os\r\n    contentType?: string;\r\n  };\r\n}\r\n\r\nexport interface UploadProgress {\r\n  bytesTransferred: number;\r\n  totalBytes: number;\r\n  progress: number; // 0-100\r\n  state: ",
    "determinerletypedefi": ";\r\n  }\r\n\r\n  /**\r\n   * D√©terminer le type de fichier √† partir du chemin\r\n   *",
    "determinerletypedefi1": ";\r\n  }\r\n\r\n  /**\r\n   * D√©terminer le type de fichier √† partir du chemin\r\n   */\r\n  private getFileTypeFromPath(path: string): ",
    "extrairelesmetadonne": ";\r\n  }\r\n\r\n  /**\r\n   * Extraire les m√©tadonn√©es du fichier\r\n   *",
    "extrairelesmetadonne1": ";\r\n  }\r\n\r\n  /**\r\n   * Extraire les m√©tadonn√©es du fichier\r\n   */\r\n  private async extractMetadata(file: File): Promise<any> {\r\n    const metadata: any = {\r\n      contentType: file.type\r\n    };\r\n\r\n    if (file.type.startsWith(",
    "importsfirebasepourl": ";\r\n// Imports Firebase pour la cr√©ation manuelle\r\nimport { db, auth } from ",
    "importsfirebasepourl1": ";\r\n// Imports Firebase pour la cr√©ation manuelle\r\nimport { db, auth } from ",
    "typespourlacreationd": ";\r\n// Types pour la cr√©ation d",
    "typespourlacreationd1": ";\r\n// Types pour la cr√©ation d",
    "composantsdetestdesa": ";\r\n// üö® COMPOSANTS DE TEST D√âSACTIV√âS - ils utilisent des services avec Auth Firebase\r\n",
    "importcollaborations": ";\r\nimport {\r\n    collaborationService,\r\n    influencerService,\r\n    referralService,\r\n    Collaboration,\r\n    InfluencerProfile,\r\n    ReferralData\r\n} from ",
    "importnotificationse": ";\r\nimport { notificationService } from ",
    "importnotificationse1": ";\r\nimport { notificationService } from ",
    "importnotificationse2": ";\r\nimport { notificationService } from ",
    "importnotificationse3": ";\r\nimport { notificationService } from ",
    "importusenotificatio1": ";\r\nimport { useNotifications } from ",
    "importusenotificatio2": ";\r\nimport { useNotifications } from ",
    "templatespredefinise": ";\r\n}\r\n\r\n// Templates pr√©d√©finis\r\nexport const businessCardTemplates = [\r\n    {\r\n        id: ",
    "templatespredefinise1": ";\r\n}\r\n\r\n// Templates pr√©d√©finis\r\nexport const businessCardTemplates = [\r\n    {\r\n        id: ",
    "interfaceconversatio": ";\r\n}\r\n\r\ninterface Conversation {\r\n  id: string;\r\n  participants: string[];\r\n  lastMessage: Message;\r\n  unreadCount: number;\r\n  subject: string;\r\n}\r\n\r\n// Mock data for demonstration (moved outside component)\r\nconst mockMessages: Message[] = [\r\n  {\r\n    id: ",
    "fonctionaappelersil": ";\r\n};\r\n\r\n// Fonction √† appeler si l",
    "fonctionaappelersil1": ";\r\n};\r\n\r\n// Fonction √† appeler si l",
    "lili4deconnectezvous": "</li>\r\n                    <li>4. D√©connectez-vous et reconnectez-vous pour tester<",
    "explorezparcategorie": ">\n                Explorez par cat√©gorie\n              <",
    "reseauglobal": ">\n                R√©seau global\n              <",
    "reseauglobal1": ">\n                R√©seau global\n              <",
    "effetdebrillanceanim": ">\n                {/* Effet de brillance anim√© *",
    "effetdebrillanceanim1": ">\n                {/* Effet de brillance anim√© *",
    "explorezparcategorie1": ">\n              Explorez par cat√©gorie\n            <",
    "recherchezdesoffres": ">\n            {/* Recherchez des offres *",
    "recherchezdesoffres1": ">\n            {/* Recherchez des offres *",
    "etape1": ">\n            {/* √âtape 1 *",
    "etape11": ">\n            {/* √âtape 1 *",
    "recommande": ">\n          Recommand√©\n        <",
    "systemedeparticulesf": ">\n          {/* Syst√®me de particules flottantes *",
    "lapagequevousrecherc": ">\n        La page que vous recherchez n",
    "elementsdecoratifsde": ">\n        {/* √âl√©ments d√©coratifs de fond *",
    "elementsdecoratifsde1": ">\n        {/* √âl√©ments d√©coratifs de fond *",
    "creeelecardcreatedat": ">\r\n                                                            Cr√©√©e le {card.createdAt.toLocaleDateString()} ‚Ä¢ Modifi√©e le {card.updatedAt.toLocaleDateString()}\r\n                                                        <",
    "nouveau": ">\r\n                                                            Nouveau\r\n                                                        <",
    "spancarddownloadstel": ">\r\n                                                        <span>{card.downloads} t√©l√©chargements<",
    "repondre": ">\r\n                                                        R√©pondre\r\n                                                    <",
    "carddatacontactperso": ">\r\n                                                        {card.data.contactPerson} ‚Ä¢ {card.data.position}\r\n                                                    <",
    "shieldsize12verifie": ">\r\n                                                <Shield size={12} />\r\n                                                V√©rifi√©\r\n                                            <",
    "spanmodifieelecardup": ">\r\n                                                <span>Modifi√©e le {card.updatedAt.toLocaleDateString()}<",
    "livraisonatemps": ">\r\n                                                Livraison √† temps\r\n                                            <",
    "tempsdereponse": ">\r\n                                                Temps de r√©ponse\r\n                                            <",
    "messagecirclesize16c1": ">\r\n                                            <MessageCircle size={16} />\r\n                                            Contacter\r\n                                        <",
    "messagecirclesize16c2": ">\r\n                                            <MessageCircle size={16} />\r\n                                            Contacter\r\n                                        <",
    "shieldsize12verifie1": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        <",
    "shieldsize12verifie2": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        <",
    "shieldsize12verifie3": ">\r\n                                            <Shield size={12} />\r\n                                            V√©rifi√©\r\n                                        <",
    "caracteristiques": ">\r\n                                            Caract√©ristiques\r\n                                        <",
    "contacter": ">\r\n                                            Contacter\r\n                                        <",
    "quantite": ">\r\n                                            Quantit√©\r\n                                        <",
    "quantite1": ">\r\n                                            Quantit√©\r\n                                        <",
    "quantite2": ">\r\n                                            Quantit√©\r\n                                        <",
    "role": ">\r\n                                            R√¥le *\r\n                                        <",
    "categorie": ">\r\n                                        Cat√©gorie\r\n                                    <",
    "categorie1": ">\r\n                                        Cat√©gorie\r\n                                    <",
    "categorie2": ">\r\n                                        Cat√©gorie\r\n                                    <",
    "dernieremiseajour": ">\r\n                                        Derni√®re mise √† jour\r\n                                    <",
    "moqquantiteminimum": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    <",
    "moqquantiteminimum1": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    <",
    "moqquantiteminimum2": ">\r\n                                        MOQ (Quantit√© minimum)\r\n                                    <",
    "specialites": ">\r\n                                        Sp√©cialit√©s\r\n                                    <",
    "aproposdel": ">\r\n                                        √Ä propos de l",
    "aproposdel1": ">\r\n                                        √Ä propos de l",
    "nouveau1": ">\r\n                                        ‚ú® Nouveau\r\n                                    <",
    "donneesencache": ">\r\n                                    (Donn√©es en cache)\r\n                                <",
    "optionpostinstagramo": ">\r\n                                    <option>Post Instagram</option>\r\n                                    <option>Story Instagram</option>\r\n                                    <option>Campagne compl√®te<",
    "strongprochainesetap": ">\r\n                                    <strong>üîó Prochaines √©tapes :<",
    "budgetpropose": ">\r\n                                    Budget propos√©\r\n                                <",
    "budgetproposelabelin": ">\r\n                                    Budget propos√©\r\n                                </label>\r\n                                <input\r\n                                    type=",
    "caracteristiquesprin": ">\r\n                                    Caract√©ristiques principales\r\n                                <",
    "contacter1": ">\r\n                                    Contacter\r\n                                <",
    "informationsdecontac": ">\r\n                                    Informations de contact\r\n                                <",
    "informationsentrepri": ">\r\n                                    Informations entreprise\r\n                                <",
    "periode": ">\r\n                                    P√©riode\r\n                                <",
    "quantitesouhaitee": ">\r\n                                    Quantit√© souhait√©e\r\n                                <",
    "quantitesouhaiteelab": ">\r\n                                    Quantit√© souhait√©e\r\n                                </label>\r\n                                <input\r\n                                    type=",
    "notifications": ">\r\n                                    {notifications}\r\n                                <",
    "eyesize16voirdetails": ">\r\n                                <Eye size={16} />\r\n                                Voir d√©tails\r\n                            <",
    "share2size16partager": ">\r\n                                <Share2 size={16} />\r\n                                Partager\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Liste des filleuls r√©cents *",
    "share2size16partager1": ">\r\n                                <Share2 size={16} />\r\n                                Partager\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Liste des filleuls r√©cents *",
    "apercurapide": ">\r\n                                Aper√ßu rapide\r\n                            <",
    "categorie3": ">\r\n                                Cat√©gorie\r\n                            <",
    "chinetonusine2": ">\r\n                                ChineTonUsine\r\n                            <",
    "comptescreescreateda": ">\r\n                                Comptes cr√©√©s ({createdAccounts.length})\r\n                            <",
    "comptesverifiesuniqu": ">\r\n                                Comptes v√©rifi√©s uniquement\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats *",
    "previsualisation1": ">\r\n                                Pr√©visualisation\r\n                            <",
    "categorie4": ">\r\n                                {/* Cat√©gorie *",
    "categorie5": ">\r\n                                {/* Cat√©gorie *",
    "categorie6": ">\r\n                                {/* Cat√©gorie *",
    "paragraphtrimpdivdiv": ">\r\n                                {paragraph.trim()}\r\n                            </p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Sp√©cifications *",
    "rechargezlapageetree": ">\r\n                                üí° Rechargez la page et r√©essayez, ou utilisez la console du navigateur.\r\n                            <",
    "clocksize12livraison": ">\r\n                              <Clock size={12} />\r\n                              Livraison pr√©vue: {formatDate(shipment.estimatedDelivery)}\r\n                            <",
    "trucksize12expedieef": ">\r\n                              <Truck size={12} />\r\n                              Exp√©di√©e: {formatDate(shipment.shippedAt)}\r\n                            <",
    "calendarsize12creeef": ">\r\n                            <Calendar size={12} />\r\n                            Cr√©√©e: {formatDate(shipment.createdAt)}\r\n                          <",
    "downloadsize12docdow": ">\r\n                            <Download size={12} />\r\n                            {doc.downloads} t√©l√©chargements\r\n                          <",
    "filtresderecherche": ">\r\n                            Filtres de recherche\r\n                        <",
    "implementezvotreprop": ">\r\n                            Impl√©mentez votre propre version de cette page selon vos besoins sp√©cifiques.\r\n                        <",
    "implementezvotreprop1": ">\r\n                            Impl√©mentez votre propre version de cette page selon vos besoins sp√©cifiques.\r\n                        <",
    "lesavantagesquifontl": ">\r\n                            Les avantages qui font la diff√©rence\r\n                        <",
    "marquerlubuttondivdi": ">\r\n                            Marquer lu\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Activit√© r√©cente am√©lior√©e *",
    "marquerlubuttondivdi1": ">\r\n                            Marquer lu\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Activit√© r√©cente am√©lior√©e *",
    "nouveau2": ">\r\n                            Nouveau\r\n                          <",
    "repondre1": ">\r\n                            R√©pondre\r\n                          <",
    "role1": ">\r\n                            R√¥le\r\n                        <",
    "specificationstechni": ">\r\n                            Sp√©cifications techniques\r\n                        <",
    "verifie": ">\r\n                            V√©rifi√©\r\n                          <",
    "selecteurdequantite": ">\r\n                            {/* S√©lecteur de quantit√© *",
    "etatdestables": ">\r\n                            √âtat des Tables\r\n                        <",
    "activeele15juin2024": ">\r\n                          Activ√©e le 15 juin 2024\r\n                        <",
    "votrecompteestproteg": ">\r\n                          Votre compte est prot√©g√© par l",
    "filtercomponentdivdi": ">\r\n                        <FilterComponent />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Liste virtualis√©e avec recherche int√©gr√©e *",
    "filtercomponentdivdi1": ">\r\n                        <FilterComponent />\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Liste virtualis√©e avec recherche int√©gr√©e *",
    "heartsize16favorisfa": ">\r\n                        <Heart size={16} />\r\n                        Favoris ({favorites.size})\r\n                    <",
    "accedezavotreespacec": ">\r\n                        Acc√©dez √† votre espace Chine Ton Usine\r\n                    <",
    "accedezavotreespacec1": ">\r\n                        Acc√©dez √† votre espace Chine Ton Usine\r\n                    <",
    "aucuninfluenceurtrou": ">\r\n                        Aucun influenceur trouv√©\r\n                    <",
    "caracteristiques1": ">\r\n                        Caract√©ristiques\r\n                    <",
    "categoriespopulaires": ">\r\n                        Cat√©gories Populaires\r\n                    <",
    "cemoisdivdivdivgraph": ">\r\n                        Ce mois\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Graphiques simplifi√©s *",
    "cettepageestencoursd": ">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir des fonctionnalit√©s de recherche avanc√©es.\r\n                    <",
    "cettepageestencoursd1": ">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir des fonctionnalit√©s de recherche avanc√©es.\r\n                    <",
    "cettepageestencoursd2": ">\r\n                        Cette page est en cours de d√©veloppement pour vous offrir une exp√©rience personnalis√©e.\r\n                    <",
    "descriptiondetaillee": ">\r\n                        Description d√©taill√©e\r\n                    <",
    "decouvreznoscategori": ">\r\n                        D√©couvrez nos cat√©gories les plus demand√©es\r\n                    <",
    "gestiondelabasededon": ">\r\n                        Gestion de la Base de Donn√©es\r\n                    <",
    "nouvellepagerecherch": ">\r\n                        Nouvelle Page Recherche\r\n                    <",
    "performancesrecentes": ">\r\n                        Performances r√©centes\r\n                    <",
    "performancesrecentes1": ">\r\n                        Performances r√©centes\r\n                    <",
    "pretacommencer": ">\r\n                        Pr√™t √† Commencer ?\r\n                    <",
    "specificationstechni1": ">\r\n                        Sp√©cifications techniques\r\n                    <",
    "suppressiondefinitiv": ">\r\n                        Suppression d√©finitive de toutes les donn√©es\r\n                      <",
    "surveillezetgereztou": ">\r\n                        Surveillez et g√©rez toutes les alertes syst√®me en temps r√©el\r\n                    <",
    "surveillezetgerezvot": ">\r\n                        Surveillez et g√©rez votre base de donn√©es, cr√©ez des sauvegardes et analysez les performances\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Statistiques g√©n√©rales *",
    "systemeultimed": ">\r\n                        Syst√®me Ultime d",
    "telechargeztoutesvos": ">\r\n                        T√©l√©chargez toutes vos donn√©es personnelles\r\n                      <",
    "voirquellesdonneesno": ">\r\n                        Voir quelles donn√©es nous stockons\r\n                      <",
    "filtercomponentdivdi2": ">\r\n                        {filterComponent}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Indicateur de r√©sultats *",
    "formatdateconvlastme": ">\r\n                        {formatDate(conv.lastMessage.timestamp)}\r\n                        {conv.lastMessage.hasAttachment && (\r\n                          <Paperclip size={12} />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Messages Area *",
    "resultspredivafficha": ">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* Affichage des comptes cr√©√©s *",
    "resultspredivresulta": ">\r\n                        {results}\r\n                    </pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* R√©sultats du syst√®me ultime *",
    "evolutiondesvues7der": ">\r\n                        √âvolution des vues (7 derniers mois)\r\n                    <",
    "metriquesdeperforman": ">\r\n                        üìä M√©triques de Performance\r\n                    <",
    "spansignaleparitemre": ">\r\n                      <span>Signal√© par: {item.reportedBy}<",
    "avecconversationmess": ">\r\n                      Avec {conversationMessages[0]?.fromType === ",
    "datecreation": ">\r\n                      Date cr√©ation\r\n                    <",
    "expedition": ">\r\n                      Exp√©dition\r\n                    <",
    "role2": ">\r\n                      R√¥le\r\n                    <",
    "conversationmessages2": ">\r\n                      {conversationMessages[0]?.subject}\r\n                    <",
    "fakemessageslength": ">\r\n                      {fakeMessages.length}\r\n                    <",
    "formatfilesizeimagef": ">\r\n                      {formatFileSize(image.file.size)}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal de pr√©visualisation *",
    "moreverticalsize20bu": ">\r\n                    <MoreVertical size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Messages List *",
    "divtailleformatfiles": ">\r\n                    <div>Taille: {formatFileSize(file.size)}</div>\r\n                    <div>Ajout√©: {file.uploadedAt.toLocaleDateString()}<",
    "capacite": ">\r\n                    Capacit√©\r\n                  <",
    "capacitetotalecbm": ">\r\n                    Capacit√© totale (CBM)\r\n                  <",
    "capacitetotalecbmlab": ">\r\n                    Capacit√© totale (CBM)\r\n                  </label>\r\n                  <input\r\n                    type=",
    "capaciteutiliseecbm": ">\r\n                    Capacit√© utilis√©e (CBM)\r\n                  <",
    "capaciteutiliseecbml": ">\r\n                    Capacit√© utilis√©e (CBM)\r\n                  </label>\r\n                  <input\r\n                    type=",
    "datededepartestimee": ">\r\n                    Date de d√©part estim√©e\r\n                  <",
    "datededepartestimeel": ">\r\n                    Date de d√©part estim√©e\r\n                  </label>\r\n                  <input\r\n                    type=",
    "departestime": ">\r\n                    D√©part estim√©\r\n                  <",
    "filleulsrecents": ">\r\n                    Filleuls r√©cents\r\n                <",
    "filleulsrecents1": ">\r\n                    Filleuls r√©cents\r\n                <",
    "itineraire": ">\r\n                    Itin√©raire\r\n                  <",
    "lieudarriveelabelinp": ">\r\n                    Lieu d'arriv√©e\r\n                  </label>\r\n                  <input\r\n                    type=",
    "lieudedepart": ">\r\n                    Lieu de d√©part\r\n                  <",
    "lieudedepartlabelinp": ">\r\n                    Lieu de d√©part\r\n                  </label>\r\n                  <input\r\n                    type=",
    "rechercheruninfluenc": ">\r\n                    Rechercher un influenceur\r\n                <",
    "telechargements": ">\r\n                    T√©l√©chargements\r\n                  <",
    "telechargements1": ">\r\n                    T√©l√©chargements\r\n                  <",
    "champderecherche": ">\r\n                    {/* Champ de recherche *",
    "notifications1": ">\r\n                    {/* Notifications *",
    "filteredinfluencersl": ">\r\n                    {filteredInfluencers.length} r√©sultat(s) trouv√©(s)\r\n                <",
    "filteredinfluencersl1": ">\r\n                    {filteredInfluencers.length} r√©sultat(s) trouv√©(s)\r\n                </div>\r\n            </div>\r\n\r\n            {/* Barre de recherche *",
    "formatfilesizeupload": ">\r\n                    {formatFileSize(uploadFile.file.size)}\r\n                  </p>\r\n                  \r\n                  {/* Barre de progr√®s *",
    "influencerstarslengt": ">\r\n                    {influencerStars.length} c√©l√©brit√©s disponibles\r\n                <",
    "messagetimestamptolo": ">\r\n                    {message.timestamp.toLocaleTimeString()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} ",
    "categorie7": ">\r\n                  Cat√©gorie\r\n                <",
    "categorie8": ">\r\n                  Cat√©gorie *\r\n                <",
    "choisissezuneconvers": ">\r\n                  Choisissez une conversation pour voir les messages\r\n                <",
    "materiau": ">\r\n                  Mat√©riau\r\n                <",
    "materiaulabelinputva": ">\r\n                  Mat√©riau\r\n                </label>\r\n                <Input\r\n                  value={formData.material}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, material: e.target.value }))}\r\n                  placeholder=",
    "numerodemodele": ">\r\n                  Num√©ro de mod√®le\r\n                <",
    "numerodemodelelabeli": ">\r\n                  Num√©ro de mod√®le\r\n                </label>\r\n                <Input\r\n                  value={formData.modelNumber}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, modelNumber: e.target.value }))}\r\n                  placeholder=",
    "selectionnezuneconve": ">\r\n                  S√©lectionnez une conversation\r\n                <",
    "touteslesnotificatio": ">\r\n                  Toutes les notifications ont √©t√© charg√©es\r\n                <",
    "touteslesnotificatio1": ">\r\n                  Toutes les notifications ont √©t√© charg√©es\r\n                <",
    "touteslesnotificatio2": ">\r\n                  Toutes les notifications ont √©t√© charg√©es\r\n                <",
    "touteslesnotificatio3": ">\r\n                  Toutes les notifications ont √©t√© charg√©es\r\n                <",
    "nouveauboutondereser": ">\r\n                  {/* Nouveau bouton de r√©servation interactif *",
    "nouveauboutondereser1": ">\r\n                  {/* Nouveau bouton de r√©servation interactif *",
    "documentsreducetotal": ">\r\n                  {documents.reduce((total, doc) => total + doc.downloadCount, 0)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filtres et recherche *",
    "documentsreducetotal1": ">\r\n                  {documents.reduce((total, doc) => total + doc.downloadCount, 0)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>        {/* Filtres et recherche *",
    "accessimplifie": ">\r\n                  üöÄ Acc√®s Simplifi√©\r\n                <",
    "plussize16nouveau": ">\r\n                <Plus size={16} />\r\n                Nouveau\r\n              <",
    "divfavorislocalstora": ">\r\n                <div>Favoris: {localStorage.getItem(",
    "categorie9": ">\r\n                Cat√©gorie *\r\n              <",
    "disponibleavailablec": ">\r\n                Disponible ({availableCapacity - quantity} CBM)\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>          {/* Informations dynamiques *",
    "formatsacceptes": ">\r\n                Formats accept√©s\r\n              <",
    "notifications2": ">\r\n                Notifications\r\n              <",
    "notifications3": ">\r\n                Notifications\r\n              <",
    "plusbesoindechoisirv": ">\r\n                Plus besoin de choisir votre r√¥le. Connectez-vous directement avec vos identifiants.\r\n              <",
    "selectionnequantityc": ">\r\n                S√©lectionn√© ({quantity} CBM)\r\n              <",
    "utilisecontainerused": ">\r\n                Utilis√© ({container.usedCapacity} CBM)\r\n              <",
    "entete4": ">\r\n                {/* En-t√™te *",
    "entete5": ">\r\n                {/* En-t√™te *",
    "entete6": ">\r\n                {/* En-t√™te *",
    "entete7": ">\r\n                {/* En-t√™te *",
    "paneldegaucheediteur": ">\r\n                {/* Panel de gauche - √âditeur *",
    "evolutiondesvues": ">\r\n                {/* √âvolution des vues *",
    "evolutiondesrevenus": ">\r\n                √âvolution des Revenus\r\n              <",
    "span0spanspanavailab": ">\r\n              <span>0</span>\r\n              <span>{availableCapacity} CBM</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Barre de progression des capacit√©s *",
    "activiterecente": ">\r\n              Activit√© R√©cente\r\n            <",
    "activiterecente1": ">\r\n              Activit√© R√©cente\r\n            <",
    "aucundocumentnecorre": ">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            <",
    "aucundocumentnecorre1": ">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            <",
    "aucundocumentnecorre2": ">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            <",
    "aucundocumentnecorre3": ">\r\n              Aucun document ne correspond √† vos crit√®res de recherche.\r\n            <",
    "configurezvotrecompt": ">\r\n              Configurez votre compte et vos pr√©f√©rences\r\n            <",
    "configurezvotrecompt1": ">\r\n              Configurez votre compte et vos pr√©f√©rences\r\n            <",
    "coupdefoudreinevitab": ">\r\n              Coup de foudre in√©vitable.\r\n            <",
    "coupdefoudreinevitab1": ">\r\n              Coup de foudre in√©vitable.\r\n            <",
    "coupdefoudreinevitab2": ">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche *",
    "coupdefoudreinevitab3": ">\r\n              Coup de foudre in√©vitable.\r\n            </p>\r\n\r\n            {/* Barre de recherche *",
    "dureedeverrouillagem": ">\r\n              Dur√©e de verrouillage (minutes)\r\n            <",
    "dureedeverrouillagem1": ">\r\n              Dur√©e de verrouillage (minutes)\r\n            </label>\r\n            <input\r\n              type=",
    "delaid": ">\r\n              D√©lai d",
    "delaid1": ">\r\n              D√©lai d",
    "delaidexpirationdese": ">\r\n              D√©lai d'expiration de session (minutes)\r\n            </label>\r\n            <input\r\n              type=",
    "fichiersselectionnes": ">\r\n              Fichiers s√©lectionn√©s ({uploadFiles.length})\r\n            <",
    "glissezdeposezvosfic": ">\r\n              Glissez-d√©posez vos fichiers ici ou cliquez pour s√©lectionner\r\n            <",
    "gerezlesconteneurset": ">\r\n              G√©rez les conteneurs et leurs capacit√©s\r\n            <",
    "gereztouslesdocument": ">\r\n              G√©rez tous les documents de la plateforme\r\n            <",
    "gerezvosdocumentsetf": ">\r\n              G√©rez vos documents et fichiers\r\n            <",
    "gerezvosdocumentsetf1": ">\r\n              G√©rez vos documents et fichiers\r\n            <",
    "nouveau3": ">\r\n              NOUVEAU\r\n            <",
    "reserverdel": ">\r\n              R√©server de l",
    "informationspersonne": ">\r\n              {/* Informations personnelles avec √©dition inline *",
    "informationspersonne1": ">\r\n              {/* Informations personnelles avec √©dition inline *",
    "languageselectoravec": ">\r\n              {/* Language selector avec isolation compl√®te *",
    "preferenceslinguisti": ">\r\n              {/* Pr√©f√©rences linguistiques et r√©gionales *",
    "preferenceslinguisti1": ">\r\n              {/* Pr√©f√©rences linguistiques et r√©gionales *",
    "activetabimagesforma": ">\r\n              {activeTab === 'images' && 'Formats: JPG, PNG, GIF, WEBP | Max 10MB par image'}\r\n              {activeTab === 'videos' && 'Formats: MP4, MOV, AVI, WEBM | Max 100MB par vid√©o'}\r\n              {activeTab === 'documents' && 'Formats: PDF, DOC, XLS, PPT | Max 50MB par document'}\r\n            </p>\r\n          </div>\r\n\r\n          <input\r\n            id={`file-input-${activeTab}`}\r\n            type=",
    "uploadsize16telechar": ">\r\n            <Upload size={16} />\r\n            T√©l√©charger un document\r\n          <",
    "strongnotestrongactu": ">\r\n            <strong>Note :</strong> Actuellement en mode simulation. Les fichiers ne sont pas r√©ellement stock√©s. \r\n            Pour activer l",
    "consultezetrepondeza": ">\r\n            Consultez et r√©pondez aux avis de vos clients\r\n          <",
    "coupdefoudreinevitab4": ">\r\n            Coup de foudre in√©vitable.\r\n          <",
    "coupdefoudreinevitab5": ">\r\n            Coup de foudre in√©vitable.\r\n          <",
    "deposezvosimagesici": ">\r\n            D√©posez vos images ici\r\n          <",
    "desactivel": ">\r\n            D√©sactive l",
    "envoyerdesnotificati": ">\r\n            Envoyer des notifications par SMS\r\n          <",
    "gerezlessignalements": ">\r\n            G√©rez les signalements et mod√©rez le contenu de la plateforme\r\n          <",
    "gerezvosrelationscli": ">\r\n            G√©rez vos relations clients et suivez leur activit√©\r\n          <",
    "mesexpeditions": ">\r\n            Mes Exp√©ditions\r\n          <",
    "moderation": ">\r\n            Mod√©ration\r\n          <",
    "quantiteareserver": ">\r\n            Quantit√© √† r√©server\r\n          <",
    "repartitiondelacapac": ">\r\n            R√©partition de la capacit√©\r\n          <",
    "repartitiondesnotes": ">\r\n            R√©partition des notes\r\n          <",
    "suivezetgereztoutesv": ">\r\n            Suivez et g√©rez toutes vos exp√©ditions\r\n          <",
    "vousdevezetreconnect": ">\r\n            Vous devez √™tre connect√© pour voir votre profil.\r\n          <",
    "oucliquezpourselecti": ">\r\n            ou cliquez pour s√©lectionner des images\r\n          <",
    "barrederechercheetfi": ">\r\n            {/* Barre de recherche et filtres *",
    "capaciteutilisee": ">\r\n            {/* Capacit√© utilis√©e *",
    "enteteavecfiltres": ">\r\n            {/* En-t√™te avec filtres *",
    "enteteavecfiltres1": ">\r\n            {/* En-t√™te avec filtres *",
    "enteteavecstatistiqu": ">\r\n            {/* En-t√™te avec statistiques *",
    "metadonnees": ">\r\n            {/* M√©tadonn√©es *",
    "devisepardefaut": ">\r\n          Devise par d√©faut\r\n        <",
    "demonstrationupload": ">\r\n          D√©monstration Upload\r\n        <",
    "deposezvosfichiersic": ">\r\n          D√©posez vos fichiers ici\r\n        <",
    "formatsacceptesaccep": ">\r\n          Formats accept√©s: {acceptedTypes.join(",
    "formatsacceptesaccep1": ">\r\n          Formats accept√©s: {acceptedTypes.join(', ')} | Taille max: {maxSizePerFile}MB par fichier\r\n        </p>\r\n      </div>\r\n\r\n      <input\r\n        ref={fileInputRef}\r\n        type=",
    "languepardefaut": ">\r\n          Langue par d√©faut\r\n        <",
    "languepardefaut1": ">\r\n          Langue par d√©faut\r\n        <",
    "testezlesfonctionnal": ">\r\n          Testez les fonctionnalit√©s d",
    "typesdefichiersautor": ">\r\n          Types de fichiers autoris√©s\r\n        <",
    "oucliquezpourselecti1": ">\r\n          ou cliquez pour s√©lectionner des fichiers\r\n        <",
    "iconederecherche": ">\r\n          {/* Ic√¥ne de recherche *",
    "iconederecherche1": ">\r\n          {/* Ic√¥ne de recherche *",
    "informationsdebase": ">\r\n          {/* Informations de base *",
    "selectedconversation": ">\r\n          {selectedConversation ? (\r\n            <>\r\n              {/* Messages Header *",
    "entete8": ">\r\n        {/* En-t√™te *",
    "headeravecavataramel": ">\r\n        {/* Header avec avatar am√©lior√© *",
    "icone": ">\r\n        {/* Ic√¥ne *",
    "informationsduconten": ">\r\n        {/* Informations du conteneur *",
    "particulesflottantes": ">\r\n        {/* Particules flottantes am√©lior√©es *",
    "notificationtoastame": ">\r\n      {/* Notification Toast am√©lior√©e *",
    "politiquesdemotsdepa": ">\r\n      {/* Politiques de mots de passe *",
    "selecteurdereseauxso": ">                {/* S√©lecteur de r√©seaux sociaux *",
    "unite": ">/unit√©<",
    "1etoile2": ">1 √©toile<",
    "2etoiles2": ">2 √©toiles<",
    "2etoilesoptionoption": ">2 √©toiles</option>\r\n                <option value=",
    "2faactivee": ">2FA activ√©e<",
    "3etoiles2": ">3 √©toiles<",
    "3etoilesoptionoption": ">3 √©toiles</option>\r\n                <option value=",
    "4etoiles2": ">4 √©toiles<",
    "4etoilesoptionoption": ">4 √©toiles</option>\r\n                <option value=",
    "5etoiles2": ">5 √©toiles<",
    "5etoilesoptionoption": ">5 √©toiles</option>\r\n                <option value=",
    "divblobsmorphiquesde": "></div>\n\n          {/* Blobs morphiques d√©coratifs *",
    "divgradientoverlayan": "></div>\n\n          {/* Gradient overlay anim√© pour garder l",
    "divparticulesdelumie": "></div>\r\n        \r\n        {/* Particules de lumi√®re *",
    "divpulsationsenerget": "></div>\r\n        \r\n        {/* Pulsations √©nerg√©tiques *",
    "divsauvegardeautomat": "></div>\r\n                Sauvegarde automatique activ√©e\r\n              <",
    "divsynchroniseavecl": "></div>\r\n                Synchronis√© avec l",
    "divspanreservation": "></div>\r\n              <span>R√©servation...<",
    "divsauvegardeautomat1": "></div>\r\n              Sauvegarde automatique activ√©e\r\n            <",
    "divsynchroniseavecl1": "></div>\r\n              Synchronis√© avec l",
    "accesrefuse": ">Acc√®s refus√©<",
    "actualites": ">Actualit√©s<",
    "annulee": ">Annul√©e<",
    "annulees": ">Annul√©es<",
    "approuve": ">Approuv√©<",
    "approuveoptionoption": ">Approuv√©</option>\r\n                <option value=",
    "approuves": ">Approuv√©s<",
    "approuves1": ">Approuv√©s<",
    "approuves2": ">Approuv√©s<",
    "approuves3": ">Approuv√©s<",
    "approuves4": ">Approuv√©s<",
    "approuvesoptionoptio": ">Approuv√©s</option>\r\n                <option value=",
    "approuvesoptionoptio1": ">Approuv√©s</option>\r\n                <option value=",
    "arrivee": ">Arriv√©e<",
    "aumoinsuncaracteresp": ">Au moins un caract√®re sp√©cial<",
    "aucundocumenttrouve": ">Aucun document trouv√©<",
    "aucundocumenttrouve1": ">Aucun document trouv√©<",
    "authentificationadeu": ">Authentification √† deux facteurs<",
    "authentificationadeu1": ">Authentification √† deux facteurs<",
    "captchaactive": ">CAPTCHA activ√©<",
    "ceoptionselectdivqua": ">CE</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Quantit√© minimale *",
    "capacitedisponible": ">Capacit√© disponible<",
    "capacitetotale": ">Capacit√© totale<",
    "capaciteslogistiques": ">Capacit√©s logistiques<",
    "carrieres": ">Carri√®res<",
    "carriereslinklililin": ">Carri√®res</Link></li>\r\n              <li><Link to=",
    "cataloguepersonnalis": ">Catalogue personnalis√©<",
    "categorienontrouvee": ">Cat√©gorie non trouv√©e<",
    "changementsdeprofil": ">Changements de profil<",
    "chargementdesdonnees": ">Chargement des donn√©es...<",
    "chargementduprofil": ">Chargement du profil...<",
    "chargementduprofil1": ">Chargement du profil...<",
    "chinetonusine3": ">Chine Ton Usine<",
    "chinetonusine4": ">Chine ton usine<",
    "chinetonusine5": ">Chine ton usine<",
    "chinetonusine6": ">Chine ton usine<",
    "chinetonusine7": ">Chine ton usine<",
    "conditions": ">Conditions<",
    "confidentialite": ">Confidentialit√©<",
    "confidentialite1": ">Confidentialit√©<",
    "confidentialitelinkl": ">Confidentialit√©</Link></li>\r\n              <li><Link to=",
    "configuree": ">Configur√©e<",
    "confirmee": ">Confirm√©e<",
    "confirmeeoptionoptio": ">Confirm√©e</option>\r\n                <option value=",
    "confirmees": ">Confirm√©es<",
    "confirmees1": ">Confirm√©es<",
    "confirmeesoptionopti": ">Confirm√©es</option>\r\n              <option value=",
    "contact1": ">Contact<",
    "controled": ">Contr√¥le d",
    "cookieslinkliuldivco": ">Cookies</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 5: Contact *",
    "datededepart": ">Date de d√©part<",
    "debugpanelh3favoris": ">Debug Panel</h3>\r\n\r\n            {/* Favoris *",
    "dernieresauvegarde": ">Derni√®re sauvegarde<",
    "donneescollectees": ">Donn√©es collect√©es<",
    "depart": ">D√©part<",
    "detectionautomatique": ">D√©tection automatique des attaques<",
    "employes": ">Employ√©s<",
    "exploreznoscategorie": ">Explorez nos cat√©gories<",
    "exportermesdonnees": ">Exporter mes donn√©es<",
    "expeditionsous2448hp": ">Exp√©dition sous 24-48h partout en France<",
    "expeditionsous2448hp1": ">Exp√©dition sous 24-48h partout en France<",
    "expeditionsous2448hp2": ">Exp√©dition sous 24-48h partout en France<",
    "expeditionsous2448hp3": ">Exp√©dition sous 24-48h partout en France<",
    "expeditions": ">Exp√©ditions<",
    "expeditions1": ">Exp√©ditions<",
    "expeditionsoptionopt": ">Exp√©ditions</option>\r\n                <option value=",
    "expeditionsoptionopt1": ">Exp√©ditions</option>\r\n                <option value=",
    "expediee": ">Exp√©di√©e<",
    "expediee1": ">Exp√©di√©e<",
    "expedieeoptionoption": ">Exp√©di√©e</option>\r\n                <option value=",
    "expedieeoptionoption1": ">Exp√©di√©e</option>\r\n                <option value=",
    "expediees": ">Exp√©di√©es<",
    "expediees1": ">Exp√©di√©es<",
    "expediees2": ">Exp√©di√©es<",
    "expediees3": ">Exp√©di√©es<",
    "expedieesoptionoptio": ">Exp√©di√©es</option>\r\n              <option value=",
    "favoris": ">Favoris<",
    "ferme": ">Ferm√©<",
    "fermes": ">Ferm√©s<",
    "fichiersuploadesuplo": ">Fichiers upload√©s ({uploadedFiles.length})<",
    "filtrespersonnalises": ">Filtres personnalis√©s<",
    "fondeeen": ">Fond√©e en<",
    "formatssupportesipun": ">Formats support√©s: IP unique (192.168.1.1) ou plage CIDR (192.168.1.0",
    "formatssupportesipun1": ">Formats support√©s: IP unique (192.168.1.1) ou plage CIDR (192.168.1.0",
    "francais": ">Fran√ßais<",
    "francais1": ">Fran√ßais<",
    "francais2": ">Fran√ßais<",
    "francais3": ">Fran√ßais<",
    "francaisoptionoption": ">Fran√ßais</option>\r\n                      <option value=",
    "francaisoptionoption1": ">Fran√ßais</option>\r\n          <option value=",
    "guideslinkliuldivcol": ">Guides</Link></li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Colonne 4: L√©gal *",
    "imagesuploadees": ">Images upload√©es<",
    "informationscommerci": ">Informations commerciales<",
    "informationsdebase1": ">Informations de base<",
    "informationsdel": ">Informations de l",
    "informations": ">Informations<",
    "informations1": ">Informations<",
    "informations2": ">Informations<",
    "informations3": ">Informations<",
    "lacategoriequevousre": ">La cat√©gorie que vous recherchez n",
    "lacategoriequevousre1": ">La cat√©gorie que vous recherchez n",
    "lacategoriequevousre2": ">La cat√©gorie que vous recherchez n'existe pas.</p>\r\n          <Link \r\n            to=",
    "livraisongratuitedes": ">Livraison gratuite d√®s 50‚Ç¨<",
    "livresterlingoptions": ">Livre sterling (¬£)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Notifications am√©lior√©es *",
    "livresterlingoptions1": ">Livre sterling (¬£)</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </Section>\r\n\r\n              {/* Notifications am√©lior√©es *",
    "livree": ">Livr√©e<",
    "livree1": ">Livr√©e<",
    "livreeoptionoptionva": ">Livr√©e</option>\r\n                <option value=",
    "livreeoptionoptionva1": ">Livr√©e</option>\r\n                <option value=",
    "livrees": ">Livr√©es<",
    "livrees1": ">Livr√©es<",
    "livrees2": ">Livr√©es<",
    "livreesoptionoptionv": ">Livr√©es</option>\r\n              <option value=",
    "legal": ">L√©gal<",
    "messagesnonlus": ">Messages non lus<",
    "messages": ">Messages<",
    "messages1": ">Messages<",
    "nonverifies": ">Non v√©rifi√©s<",
    "notificationssms": ">Notifications SMS<",
    "notificationsentemps": ">Notifications en temps r√©el<",
    "notificationsentemps1": ">Notifications en temps r√©el<",
    "notificationspush": ">Notifications push<",
    "nouscontacter": ">Nous contacter<",
    "pagenontrouvee": ">Page non trouv√©e<",
    "paiementsecurise": ">Paiement S√©curis√©<",
    "paiementsecurise1": ">Paiement S√©curis√©<",
    "partagerlesdonneesd": ">Partager les donn√©es d",
    "politiquesdemotsdepa1": ">Politiques de mots de passe<",
    "possededesentrepots": ">Poss√®de des entrep√¥ts<",
    "possededesentrepotsl": ">Poss√®de des entrep√¥ts</label>\r\n                                    {formData.hasWarehouses && (\r\n                                        <Input\r\n                                            type=",
    "prioriteelevee": ">Priorit√© √©lev√©e<",
    "profilpublic": ">Profil public<",
    "preparation": ">Pr√©paration<",
    "preparation1": ">Pr√©paration<",
    "preparationoptionopt": ">Pr√©paration</option>\r\n                <option value=",
    "previsualisationnond": ">Pr√©visualisation non disponible pour ce type de fichier.<",
    "prets": ">Pr√™ts<",
    "qualite": ">Qualit√©<",
    "qualitelinklililinkt": ">Qualit√©</Link></li>\r\n              <li><Link to=",
    "quantite3": ">Quantit√©:<",
    "rapidespanbuttondivf": ">Rapide</span>\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Fonctionnalit√©s *",
    "rechercheavancee": ">Recherche avanc√©e<",
    "rechercheavancee1": ">Recherche avanc√©e<",
    "rechercheglobale": ">Recherche globale<",
    "rechercheintelligent": ">Recherche intelligente<",
    "recommande8caractere": ">Recommand√©: 8 caract√®res minimum<",
    "recommande1": ">Recommand√©<",
    "rejete": ">Rejet√©<",
    "rejetes": ">Rejet√©s<",
    "rejetes1": ">Rejet√©s<",
    "rejetes2": ">Rejet√©s<",
    "resultats": ">R√©sultats :<",
    "resultats1": ">R√©sultats :<",
    "resultats2": ">R√©sultats :<",
    "role3": ">R√¥le:<",
    "role4": ">R√¥le<",
    "roleththscope": ">R√¥le</th>\n                <th scope=",
    "sansreponse": ">Sans r√©ponse<",
    "specificationstechni2": ">Sp√©cifications techniques<",
    "succes": ">Succ√®s<",
    "support24": ">Support 24",
    "support241": ">Support 24",
    "systeme": ">Syst√®me<",
    "systeme1": ">Syst√®me<",
    "systemeoptionoptionv": ">Syst√®me</option>\r\n                <option value=",
    "systemeoptionoptionv1": ">Syst√®me</option>\r\n                <option value=",
    "selectionnerunecateg": ">S√©lectionner une cat√©gorie<",
    "selectionnerunecateg1": ">S√©lectionner une cat√©gorie<",
    "taillemaxdivdivdivdi": ">Taille max</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Informations techniques *",
    "tauxdereussite": ">Taux de r√©ussite<",
    "tempsderecherche": ">Temps de recherche:<",
    "tentativesbloquees": ">Tentatives bloqu√©es<",
    "testsdedebogagefireb": ">Tests de d√©bogage Firebase<",
    "totaldepense": ">Total d√©pens√©<",
    "touslesroles": ">Tous les r√¥les<",
    "touslesrolesoptionop": ">Tous les r√¥les</option>\r\n                <option value=",
    "touteslescategories": ">Toutes les cat√©gories<",
    "touteslescategories1": ">Toutes les cat√©gories<",
    "toutespriorites": ">Toutes priorit√©s<",
    "toutesprioritesoptio": ">Toutes priorit√©s</option>\r\n                                <option value=",
    "transactionsprotegee": ">Transactions prot√©g√©es et garanties<",
    "transactionsprotegee1": ">Transactions prot√©g√©es et garanties<",
    "triavance": ">Tri avanc√©<",
    "tresbon": ">Tr√®s bon<",
    "telechargements2": ">T√©l√©chargements<",
    "telechargements3": ">T√©l√©chargements<",
    "telechargements4": ">T√©l√©chargements<",
    "uneequipededieeavotr": ">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e ",
    "uneequipededieeavotr1": ">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e ",
    "uneequipededieeavotr2": ">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e ",
    "uneequipededieeavotr3": ">Une √©quipe d√©di√©e √† votre service</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section unifi√©e ",
    "vehiculeslogistiques": ">V√©hicules logistiques<",
    "vehiculeslogistiques1": ">V√©hicules logistiques</label>\r\n                                    {formData.hasLogisticsVehicles && (\r\n                                        <Input\r\n                                            type=",
    "verificationdelasess": ">V√©rification de la session...<",
    "verifies": ">V√©rifi√©s<",
    "verifiesoptionoption": ">V√©rifi√©s</option>\r\n                <option value=",
    "yuanchinois": ">Yuan Chinois (¬•)<",
    "yuanchinois1": ">Yuan chinois (¬•)<",
    "availablecapacitycbm": ">{availableCapacity} CBM</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slider de s√©lection *",
    "categoriesfindcckeya": ">{categories.find(c => c.key === activeCategory)?.label}</span>\r\n    </nav>\r\n  ) : null;\r\n\r\n  // Gestion du clic sur une cat√©gorie\r\n  const handleCategoryClick = (catKey: string) => {\r\n    navigate(`",
    "categoriesfindcckeya1": ">{categories.find(c => c.key === activeCategory)?.label}</span>\r\n    </nav>\r\n  ) : null;\r\n\r\n  // Gestion du clic sur une cat√©gorie\r\n  const handleCategoryClick = (catKey: string) => {\r\n    navigate(`/search?category=${catKey}`);\r\n  };\r\n\r\n  // Bouton ",
    "unreadcountpdivdivdi": ">{unreadCount}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Filtres et recherche *",
    "apropos": ">√Ä propos<",
    "apropos1": ">√Ä propos<",
    "aproposlinklililinkt": ">√Ä propos</Link></li>\r\n              <li><Link to=",
    "echap": ">√âchap<",
    "elevee": ">√âlev√©e<",
    "eleveeoptionoptionva": ">√âlev√©e</option>\r\n                                <option value=",
    "divpaucunfichierdans": ">üìÅ</div>\r\n            <p>Aucun fichier dans cette cat√©gorie<",
    "abscuirsynthetiquemo": "ABS, Cuir synth√©tique, Mousse √† m√©moire de forme",
    "abscuirsynthetiquemo1": "ABS, Cuir synth√©tique, Mousse √† m√©moire de forme",
    "absmetalbrosse": "ABS, M√©tal bross√©",
    "absmetalbrosse1": "ABS, M√©tal bross√©",
    "accepte": "Accept√©",
    "accepte1": "Accept√©",
    "accessoireselectroni": "Accessoires √©lectroniques",
    "accessoireselectroni1": "Accessoires √©lectroniques",
    "accesillimiteaucatal": "Acc√®s illimit√© au catalogue",
    "accesillimiteaucatal1": "Acc√®s illimit√© au catalogue",
    "accedezavotrecompte": "Acc√©dez √† votre compte",
    "accedezavotrecompte1": "Acc√©dez √† votre compte",
    "accedezavotrecompte2": "Acc√©dez √† votre compte",
    "accedezavotrecompte3": "Acc√©dez √† votre compte",
    "accedezavotreespacep": "Acc√©dez √† votre espace personnel",
    "accedezavotreespacep1": "Acc√©dez √† votre espace personnel",
    "aceitoostermosecondi": "Aceito os termos e condi√ß√µes",
    "aceitoostermosecondi1": "Aceito os termos e condi√ß√µes",
    "aceptolosterminosyco": "Acepto los t√©rminos y condiciones",
    "aceptolosterminosyco1": "Acepto los t√©rminos y condiciones",
    "actionsensiblecontac": "Action sensible ! Contactez le support pour cette demande.",
    "activiterecente2": "Activit√© r√©cente",
    "activiterecente3": "Activit√© r√©cente",
    "activiterecente4": "Activit√© r√©cente",
    "actualitesetpromotio": "Actualit√©s et promotions",
    "actualitesetpromotio1": "Actualit√©s et promotions",
    "agentpersonneldedie": "Agent personnel d√©di√©",
    "agentpersonneldedie1": "Agent personnel d√©di√©",
    "ajoute": "Ajout√©",
    "ajoute1": "Ajout√©",
    "alertesdeprofildesac": "Alertes de profil d√©sactiv√©es",
    "alertesdeprofildesac1": "Alertes de profil d√©sactiv√©es",
    "alertesdeprofildesac2": "Alertes de profil d√©sactiv√©es",
    "alertesdesessionacti": "Alertes de session activ√©es",
    "alertesdesessionacti1": "Alertes de session activ√©es",
    "allnotificationshave": "All notifications have been loaded",
    "allemagne": "Allemagne",
    "alliageultraleger": "Alliage ultra-l√©ger",
    "alliageultraleger1": "Alliage ultra-l√©ger",
    "anglais": "Anglais",
    "anglais1": "Anglais",
    "anglais2": "Anglais",
    "anglais3": "Anglais",
    "anglais4": "Anglais",
    "anglais5": "Anglais",
    "annuleparleclient": "Annul√© par le client",
    "annuleparleclient1": "Annul√© par le client",
    "annulee1": "Annul√©e",
    "annulee2": "Annul√©e",
    "annulee3": "Annul√©e",
    "annulee4": "Annul√©e",
    "annee": "Ann√©e",
    "annee1": "Ann√©e",
    "annee2": "Ann√©e",
    "annee3": "Ann√©e",
    "aocontinuarvoceaceit": "Ao continuar, voc√™ aceita nossos",
    "aocontinuarvoceaceit1": "Ao continuar, voc√™ aceita nossos",
    "aout": "Ao√ªt",
    "aout1": "Ao√ªt",
    "apercupleinecran": "Aper√ßu plein √©cran",
    "apercupleinecran1": "Aper√ßu plein √©cran",
    "apercupleinecranfonc": "Aper√ßu plein √©cran (fonctionnalit√© √† impl√©menter)",
    "apercupleinecranfonc1": "Aper√ßu plein √©cran (fonctionnalit√© √† impl√©menter)",
    "approuve1": "Approuv√©",
    "approuve2": "Approuv√©",
    "approuve3": "Approuv√©",
    "approuve4": "Approuv√©",
    "approuve5": "Approuv√©",
    "approuve6": "Approuv√©",
    "armacodeculosdetitan": "Arma√ß√£o de √≥culos de tit√¢nio",
    "armacodeculosdetitan1": "Arma√ß√£o de √≥culos de tit√¢nio",
    "aspiradorrobointelig": "Aspirador Rob√¥ Inteligente",
    "aspiradorrobointelig1": "Aspirador Rob√¥ Inteligente",
    "aspiradorrobointelig2": "Aspirador rob√¥ inteligente",
    "aspiradorrobointelig3": "Aspirador rob√¥ inteligente",
    "aspiradorrobointelig4": "Aspirador rob√¥ inteligente",
    "aspiradorrobointelig5": "Aspirador rob√¥ inteligente",
    "aspiradorrobointelig6": "Aspirador rob√¥ inteligente com navega√ß√£o a laser e esta√ß√£o de carregamento autom√°tico.",
    "aspiradorrobointelig7": "Aspirador rob√¥ inteligente com navega√ß√£o a laser e esta√ß√£o de carregamento autom√°tico.",
    "assistancededieeenfr": "Assistance d√©di√©e en fran√ßais",
    "assistancededieeenfr1": "Assistance d√©di√©e en fran√ßais",
    "assistancededieeenfr2": "Assistance d√©di√©e en fran√ßais",
    "aucunfichiervalidese": "Aucun fichier valide s√©lectionn√©",
    "aucunfichiervalidese1": "Aucun fichier valide s√©lectionn√©",
    "aucunelementtrouve": "Aucun √©l√©ment trouv√©",
    "aucunelementtrouve1": "Aucun √©l√©ment trouv√©",
    "aucunealertenecorres": "Aucune alerte ne correspond aux filtres appliqu√©s.",
    "aucunealertenecorres1": "Aucune alerte ne correspond aux filtres appliqu√©s.",
    "aucunedonnee": "Aucune donn√©e",
    "aucunedonnee1": "Aucune donn√©e",
    "aucuneentreprisetrou": "Aucune entreprise trouv√©e",
    "aucuneentreprisetrou1": "Aucune entreprise trouv√©e",
    "authentificationadeu2": "Authentification √† deux facteurs",
    "authentificationadeu3": "Authentification √† deux facteurs",
    "authentificationadeu4": "Authentification √† deux facteurs (2FA)",
    "authentificationadeu5": "Authentification √† deux facteurs (2FA)",
    "autresetgeneral": "Autres et g√©n√©ral",
    "autresetgeneral1": "Autres et g√©n√©ral",
    "avezvousreculedevis": "Avez-vous re√ßu le devis ?",
    "avezvousreculedevis1": "Avez-vous re√ßu le devis ?",
    "aviscontenantunlanga": "Avis contenant un langage inappropri√©",
    "aviscontenantunlanga1": "Avis contenant un langage inappropri√©",
    "avisinapproprie": "Avis inappropri√©",
    "avisinapproprie1": "Avis inappropri√©",
    "avisvalideapresrevis": "Avis valid√© apr√®s r√©vision - pas de contenu inappropri√© d√©tect√©.",
    "avisvalideapresrevis1": "Avis valid√© apr√®s r√©vision - pas de contenu inappropri√© d√©tect√©.",
    "basededonnees": "Base de donn√©es",
    "basededonnees1": "Base de donn√©es",
    "basededonneesdejaini": "Base de donn√©es d√©j√† initialis√©e",
    "beaute": "Beaut√©",
    "beaute1": "Beaut√©",
    "beaute2": "Beaut√©",
    "beaute3": "Beaut√©",
    "beaute4": "Beaut√©",
    "beaute5": "Beaut√©",
    "beaute6": "Beaut√©",
    "beaute7": "Beaut√©",
    "beaute8": "Beaut√©",
    "beaute9": "Beaut√©",
    "beaute10": "Beaut√©",
    "beaute11": "Beaut√©",
    "beaute12": "Beaut√©",
    "beaute13": "Beaut√©",
    "beaute14": "Beaut√©",
    "beaute15": "Beaut√©",
    "beaute16": "Beaut√©",
    "beaute17": "Beaut√©",
    "beaute18": "Beaut√©",
    "beaute19": "Beaut√©",
    "beautesante": "Beaut√© & Sant√©",
    "beautesante1": "Beaut√© & Sant√©",
    "beijingmachinerywork": "Beijing Machinery Works",
    "beijingmachinerywork1": "Beijing Machinery Works",
    "beijingmachinerywork2": "Beijing Machinery Works",
    "beijingchine": "Beijing, Chine",
    "beijingchine1": "Beijing, Chine",
    "beijingchine2": "Beijing, Chine",
    "berlinallemagne": "Berlin, Allemagne",
    "beyonce": "Beyonc√©",
    "beyonce1": "Beyonc√©",
    "biologischevochtinbr": "Biologische vochtinbrengende cr√®me",
    "biologischevochtinbr1": "Biologische vochtinbrengende cr√®me",
    "biologischevochtinbr2": "Biologische vochtinbrengende cr√®me",
    "biologischevochtinbr3": "Biologische vochtinbrengende cr√®me",
    "bleuocean": "Bleu oc√©an",
    "bonnequalitesonore": "Bonne qualit√© sonore",
    "bonnequalitesonore1": "Bonne qualit√© sonore",
    "bordeauxfrance": "Bordeaux, France",
    "boiteaoutils": "Bo√Æte √† Outils",
    "boiteaoutils1": "Bo√Æte √† Outils",
    "boitierdechargeouver": "Bo√Ætier de charge ouvert",
    "boitierdechargeouver1": "Bo√Ætier de charge ouvert",
    "brasarticuleenaction": "Bras articul√© en action",
    "brasarticuleenaction1": "Bras articul√© en action",
    "bresil": "Br√©sil",
    "bresil1": "Br√©sil",
    "campagneete2024": "Campagne √©t√© 2024",
    "campagneete20241": "Campagne √©t√© 2024",
    "campagneete20242": "Campagne √©t√© 2024",
    "campagneete20243": "Campagne √©t√© 2024",
    "camera": "Cam√©ra",
    "camera1": "Cam√©ra",
    "canapesmodulaires": "Canap√©s modulaires",
    "canapesmodulaires1": "Canap√©s modulaires",
    "capacite1": "Capacit√©",
    "capacite2": "Capacit√©",
    "capacitedisponible1": "Capacit√© disponible",
    "capacitedisponible2": "Capacit√© disponible",
    "capacitedisponible3": "Capacit√© disponible",
    "capacitedisponible4": "Capacit√© disponible",
    "capacitelaptop": "Capacit√© laptop",
    "capacitelaptop1": "Capacit√© laptop",
    "capacitetotale1": "Capacit√© totale",
    "capacitetotale2": "Capacit√© totale",
    "capaciteutilisee1": "Capacit√© utilis√©e",
    "capaciteutilisee2": "Capacit√© utilis√©e",
    "cardiaquegpsaccelero": "Cardiaque, GPS, Acc√©l√©rom√®tre",
    "cardiaquegpsaccelero1": "Cardiaque, GPS, Acc√©l√©rom√®tre",
    "carregandoconteinere": "Carregando cont√™ineres...",
    "carregandoconteinere1": "Carregando cont√™ineres...",
    "casqueaudiosansfilav": "Casque audio sans fil avec une qualit√© sonore √©lev√©e et un ajustement confortable.",
    "casqueaudiosansfilav1": "Casque audio sans fil avec une qualit√© sonore √©lev√©e et un ajustement confortable.",
    "categorie10": "Cat√©gorie",
    "categorie11": "Cat√©gorie",
    "categorie12": "Cat√©gorie",
    "categorie13": "Cat√©gorie",
    "categorie14": "Cat√©gorie",
    "categorie15": "Cat√©gorie",
    "categoried": "Cat√©gorie d",
    "categoriedinfluence": "Cat√©gorie d'influence",
    "cecompteaetedesactiv": "Ce compte a √©t√© d√©sactiv√©",
    "cecompteaetedesactiv1": "Ce compte a √©t√© d√©sactiv√©",
    "ceconteneurestclotur": "Ce conteneur est cl√¥tur√© et n",
    "ceconteneurestclotur1": "Ce conteneur est cl√¥tur√© et n'est plus r√©servable.",
    "ceconteneurestdispon": "Ce conteneur est disponible pour de nouvelles r√©servations.",
    "ceconteneurestdispon1": "Ce conteneur est disponible pour de nouvelles r√©servations.",
    "ceconteneurestpresqu": "Ce conteneur est presque plein, r√©servez vite !",
    "ceconteneurestpresqu1": "Ce conteneur est presque plein, r√©servez vite !",
    "certificatsdequalite": "Certificats de qualit√© Q4 2023.pdf",
    "certificatsdequalite1": "Certificats de qualit√© Q4 2023.pdf",
    "certificatsdequalite2": "Certificats de qualit√© pour le Q4 2023",
    "certificatsdequalite3": "Certificats de qualit√© pour le Q4 2023",
    "certifiece": "Certifi√© CE",
    "certifiece1": "Certifi√© CE",
    "changerlalangue": "Changer la langue",
    "changerlalangue1": "Changer la langue",
    "changerletheme": "Changer le th√®me",
    "changerletheme1": "Changer le th√®me",
    "changerletheme2": "Changer le th√®me",
    "changerletheme3": "Changer le th√®me",
    "chargementdesdonnees1": "Chargement des donn√©es...",
    "chargementdesdonnees2": "Chargement des donn√©es...",
    "chargeursansfilvuede": "Chargeur sans fil vue de profil",
    "chine": "Chine",
    "chine1": "Chine",
    "chine2": "Chine",
    "chine3": "Chine",
    "chinetonusine8": "Chine Ton Usine",
    "chinetonusine9": "Chine Ton Usine",
    "chinetonusinesupport": "Chine Ton Usine Support",
    "chinetonusine10": "Chine ton usine",
    "chinetonusine11": "Chine ton usine",
    "chinetonusine12": "ChineTonUsine",
    "chinetonusine13": "ChineTonUsine",
    "chinetonusine14": "ChineTonUsine",
    "clubdefootballprofes": "Club de football professionnel fran√ßais",
    "clubdefootballprofes1": "Club de football professionnel fran√ßais",
    "clubdefootballprofes2": "Club de football professionnel fran√ßais",
    "cloture": "Cl√¥tur√©",
    "cloture1": "Cl√¥tur√©",
    "collaborationcreee": "Collaboration cr√©√©e:",
    "collaborationcreee1": "Collaboration cr√©√©e:",
    "commencezaimporterde": "Commencez √† importer depuis la Chine d√®s aujourd",
    "commencezaimporterde1": "Commencez √† importer depuis la Chine d√®s aujourd",
    "commencezaimporterde2": "Commencez √† importer depuis la Chine d√®s aujourd'hui.",
    "commentcamarche": "Comment √ßa marche ?",
    "commentcamarche1": "Comment √ßa marche ?",
    "commentcamarche2": "Comment √ßa marche ?",
    "commentcamarche3": "Comment √ßa marche ?",
    "communicationmultime": "Communication, Multim√©dia",
    "communicationmultime1": "Communication, Multim√©dia",
    "communicationsmarket": "Communications marketing d√©sactiv√©es",
    "communicationsmarket1": "Communications marketing d√©sactiv√©es",
    "compartimentsinterie": "Compartiments int√©rieurs",
    "compartimentsinterie1": "Compartiments int√©rieurs",
    "compatibilite": "Compatibilit√©",
    "compatibilite1": "Compatibilit√©",
    "compatibilite2": "Compatibilit√©",
    "compatibilite3": "Compatibilit√©",
    "composantselectroniq": "Composants √©lectroniques",
    "composantselectroniq1": "Composants √©lectroniques",
    "composantselectroniq2": "Composants √©lectroniques",
    "composantselectroniq3": "Composants √©lectroniques",
    "comptedesactiveconta": "Compte d√©sactiv√©. Contactez l\\",
    "comptedesactiveconta1": "Compte d√©sactiv√©. Contactez l\\",
    "comptedesactiveconta2": "Compte d√©sactiv√©. Contactez l\\",
    "conditionsd": "Conditions d\\",
    "conditionsd1": "Conditions d\\",
    "conditionsgeneralesp": "Conditions g√©n√©rales.pdf",
    "conditionsgeneralesp1": "Conditions g√©n√©rales.pdf",
    "conditionsgeneralesp2": "Conditions g√©n√©rales.pdf",
    "conditionsgeneralesp3": "Conditions g√©n√©rales.pdf",
    "conditionsgeneralesp4": "Conditions g√©n√©rales.pdf",
    "conditionsgeneralesp5": "Conditions g√©n√©rales.pdf",
    "configurezvotrecompt2": "Configurez votre compte et vos pr√©f√©rences",
    "configurezvotrecompt3": "Configurez votre compte et vos pr√©f√©rences",
    "configurezvotrecompt4": "Configurez votre compte et vos pr√©f√©rences",
    "confirmarprepedido": "Confirmar pr√©-pedido",
    "confirmarprepedido1": "Confirmar pr√©-pedido",
    "confirmee1": "Confirm√©e",
    "confirmee2": "Confirm√©e",
    "connectezvouspouracc": "Connectez-vous pour acc√©der √† votre compte",
    "connectezvouspouracc1": "Connectez-vous pour acc√©der √† votre compte",
    "connectezvouspouracc2": "Connectez-vous pour acc√©der √† votre espace",
    "connectezvouspouracc3": "Connectez-vous pour acc√©der √† votre espace",
    "connectezvouspouracc4": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales",
    "connectezvouspouracc5": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales",
    "connectezvouspouracc6": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectezvouspouracc7": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectezvouspouracc8": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectezvouspouracc9": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectezvouspouracc10": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectezvouspouracc11": "Connectez-vous pour acc√©der √† votre espace et d√©couvrir les derni√®res opportunit√©s commerciales avec la Chine.",
    "connectivite": "Connectivit√©",
    "connectivite1": "Connectivit√©",
    "connectivite2": "Connectivit√©",
    "connectivite3": "Connectivit√©",
    "consoledejeunouvelle": "Console de jeu nouvelle g√©n√©ration",
    "consoledejeunouvelle1": "Console de jeu nouvelle g√©n√©ration",
    "consultezetrepondeza1": "Consultez et r√©pondez aux avis de vos clients",
    "consultezetrepondeza2": "Consultez et r√©pondez aux avis de vos clients",
    "conteneurchineberlin": "Conteneur Chine-Berlin #002",
    "conteneurchinelondre": "Conteneur Chine-Londres #004",
    "conteneurchinenewyor": "Conteneur Chine-New York #003",
    "conteneurchineparis0": "Conteneur Chine-Paris #001",
    "conteneurchinesydney": "Conteneur Chine-Sydney #005",
    "conteneurcreeavecsuc": "Conteneur cr√©√© avec succ√®s",
    "conteneurcreeavecsuc1": "Conteneur cr√©√© avec succ√®s",
    "conteneurmisajourave": "Conteneur mis √† jour avec succ√®s",
    "conteneurnondisponib": "Conteneur non disponible ou cl√¥tur√©",
    "conteneurnondisponib1": "Conteneur non disponible ou cl√¥tur√©",
    "conteneurnontrouve": "Conteneur non trouv√©",
    "conteneursupprimeave": "Conteneur supprim√© avec succ√®s",
    "conteneursupprimeave1": "Conteneur supprim√© avec succ√®s",
    "conteneurspersonnali": "Conteneurs personnalis√©s",
    "conteneurspersonnali1": "Conteneurs personnalis√©s",
    "conteineres": "Cont√™ineres",
    "conteineres1": "Cont√™ineres",
    "cosmetiques": "Cosm√©tiques",
    "cosmetiques1": "Cosm√©tiques",
    "cosmetiques2": "Cosm√©tiques",
    "cosmetiques3": "Cosm√©tiques",
    "cosmetiquessoinsetbe": "Cosm√©tiques, soins et beaut√©.",
    "cosmetiquessoinsetbe1": "Cosm√©tiques, soins et beaut√©.",
    "coupdefoudreinevitab6": "Coup de foudre in√©vitable.",
    "coupdefoudreinevitab7": "Coup de foudre in√©vitable.",
    "coupdefoudreinevitab8": "Coup de foudre in√©vitable.",
    "coupdefoudreinevitab9": "Coup de foudre in√©vitable.",
    "coussindecoratif": "Coussin D√©coratif",
    "coussindecoratif1": "Coussin D√©coratif",
    "cremehidratanteorgan": "Creme hidratante org√¢nico",
    "cremehidratanteorgan1": "Creme hidratante org√¢nico",
    "cremehidratanteorgan2": "Creme hidratante org√¢nico",
    "cremehidratanteorgan3": "Creme hidratante org√¢nico",
    "criesuacontaparacome": "Crie sua conta para come√ßar",
    "criesuacontaparacome1": "Crie sua conta para come√ßar",
    "cremehydratante": "Cr√®me Hydratante",
    "cremehydratante1": "Cr√®me Hydratante",
    "cremehydratanteantia": "Cr√®me hydratante anti-√¢ge",
    "cremehydratanteantia1": "Cr√®me hydratante anti-√¢ge",
    "cremehydratanteantia2": "Cr√®me hydratante anti-√¢ge",
    "cremehydratanteantia3": "Cr√®me hydratante anti-√¢ge",
    "cremehydratanteantia4": "Cr√®me hydratante anti-√¢ge",
    "cremehydratanteantia5": "Cr√®me hydratante anti-√¢ge",
    "cremehydratantebio": "Cr√®me hydratante bio",
    "cremehydratantebio1": "Cr√®me hydratante bio",
    "cremehydratantebio2": "Cr√®me hydratante bio",
    "cremehydratantebio3": "Cr√®me hydratante bio",
    "cremehydratantebio4": "Cr√®me hydratante bio",
    "cremehydratantebio5": "Cr√®me hydratante bio",
    "createurdecontenulif": "Cr√©ateur de contenu lifestyle et voyages",
    "createurdecontenulif1": "Cr√©ateur de contenu lifestyle et voyages",
    "creatif": "Cr√©atif",
    "creatif1": "Cr√©atif",
    "creationducompte": "Cr√©ation du compte...",
    "creationducompte1": "Cr√©ation du compte...",
    "creation1": "Cr√©ation...",
    "creation2": "Cr√©ation...",
    "creation3": "Cr√©ation...",
    "creation4": "Cr√©ation...",
    "creation5": "Cr√©ation...",
    "creation6": "Cr√©ation...",
    "creation7": "Cr√©ation...",
    "creation8": "Cr√©ation...",
    "creation9": "Cr√©ation...",
    "creation10": "Cr√©ation...",
    "creation11": "Cr√©ation...",
    "creation12": "Cr√©ation...",
    "creation13": "Cr√©ation...",
    "creation14": "Cr√©ation...",
    "creer": "Cr√©er",
    "creer1": "Cr√©er",
    "creer2": "Cr√©er",
    "creerl3": "Cr√©er l\\",
    "creerl4": "Cr√©er l\\",
    "creerl5": "Cr√©er l\\",
    "creermoncompte": "Cr√©er mon compte",
    "creermoncompte1": "Cr√©er mon compte",
    "creermoncompte2": "Cr√©er mon compte",
    "creermoncompte3": "Cr√©er mon compte",
    "creermoncompte4": "Cr√©er mon compte",
    "creermoncompte5": "Cr√©er mon compte",
    "creeruncompte2": "Cr√©er un compte",
    "creeruncompte3": "Cr√©er un compte",
    "creeruncompte4": "Cr√©er un compte",
    "creeruncompte5": "Cr√©er un compte",
    "creeruncompte6": "Cr√©er un compte",
    "creeruncompte7": "Cr√©er un compte",
    "creeruncompte8": "Cr√©er un compte",
    "creeruncompte9": "Cr√©er un compte",
    "creeruncompte10": "Cr√©er un compte",
    "creeruncompte11": "Cr√©er un compte",
    "creeruncompte12": "Cr√©er un compte",
    "creeruncompte13": "Cr√©er un compte",
    "creeruncompte14": "Cr√©er un compte",
    "creeruncompte15": "Cr√©er un compte",
    "creeruncompte16": "Cr√©er un compte",
    "creeruncomptegratuit": "Cr√©er un compte gratuitement",
    "creeruncomptegratuit1": "Cr√©er un compte gratuitement",
    "creeruncomptegratuit2": "Cr√©er un compte gratuitement",
    "creezvotrecompteenqu": "Cr√©ez votre compte en quelques √©tapes",
    "creezvotrecompteenqu1": "Cr√©ez votre compte en quelques √©tapes",
    "creezvotrecompteetde": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d",
    "creezvotrecompteetde1": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d",
    "creezvotrecompteetde2": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d'affaires avec la Chine",
    "creezvotrecompteetde3": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d'affaires avec la Chine",
    "creezvotrecompteetde4": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d\\",
    "creezvotrecompteetde5": "Cr√©ez votre compte et d√©couvrez toutes les opportunit√©s d\\",
    "creezvotrecomptepour": "Cr√©ez votre compte pour commencer",
    "creezvotrecomptepour1": "Cr√©ez votre compte pour commencer",
    "cablesusbc": "C√¢bles USB-C",
    "cablesusbc1": "C√¢bles USB-C",
    "camera2": "C√¢mera",
    "camera3": "C√¢mera",
    "datededepartestimee1": "Date de d√©part estim√©e",
    "datededepartestimee2": "Date de d√©part estim√©e",
    "daterecue": "Date re√ßue:",
    "daterecue1": "Date re√ßue:",
    "debesaceptarlostermi": "Debes aceptar los t√©rminos y condiciones",
    "debesaceptarlostermi1": "Debes aceptar los t√©rminos y condiciones",
    "designartistiqueetco": "Design artistique et color√©",
    "designartistiqueetco1": "Design artistique et color√©",
    "designepureavecgradi": "Design √©pur√© avec gradients",
    "designepureavecgradi1": "Design √©pur√© avec gradients",
    "devisepreferee1": "Devise pr√©f√©r√©e",
    "devisepreferee2": "Devise pr√©f√©r√©e",
    "dinaralgerienda": "Dinar Alg√©rien (DA)",
    "dinaralgerienda1": "Dinar Alg√©rien (DA)",
    "diversetgeneral": "Divers et g√©n√©ral.",
    "diversetgeneral1": "Divers et g√©n√©ral.",
    "documentsupprimeavec": "Document supprim√© avec succ√®s !",
    "documentsapprouves": "Documents approuv√©s",
    "documentsapprouves1": "Documents approuv√©s",
    "documentsuploades": "Documents upload√©s:",
    "documentsuploades1": "Documents upload√©s:",
    "dollaramericain": "Dollar am√©ricain",
    "dollaramericain1": "Dollar am√©ricain",
    "dongguanchine": "Dongguan, Chine",
    "dongguanchine1": "Dongguan, Chine",
    "donneespersonnellese": "Donn√©es personnelles et confidentialit√©",
    "donneespersonnellese1": "Donn√©es personnelles et confidentialit√©",
    "donneespersonnellese2": "Donn√©es personnelles et confidentialit√©",
    "donneespresentes": "Donn√©es pr√©sentes",
    "donneespresentes1": "Donn√©es pr√©sentes",
    "donneesrestaureesaux": "Donn√©es restaur√©es aux valeurs par d√©faut !",
    "donneesrestaureesaux1": "Donn√©es restaur√©es aux valeurs par d√©faut !",
    "decorationmobilier": "D√âCORATION & MOBILIER",
    "decorationmobilier1": "D√âCORATION & MOBILIER",
    "decorationmobilier2": "D√âCORATION & MOBILIER",
    "decorationmobilier3": "D√âCORATION & MOBILIER",
    "decorationmobilier4": "D√âCORATION & MOBILIER",
    "decorationmobilier5": "D√âCORATION & MOBILIER",
    "decouvreztousnos": "D√âCOUVREZ TOUS NOS",
    "decouvreztousnos1": "D√âCOUVREZ TOUS NOS",
    "dec": "D√©c",
    "dec1": "D√©c",
    "deconnecte": "D√©connect√©",
    "deconnecte1": "D√©connect√©",
    "decouvrir": "D√©couvrir",
    "decouvrir1": "D√©couvrir",
    "decouvrir2": "D√©couvrir",
    "decouvrir3": "D√©couvrir",
    "decrivezvotreprojet": "D√©crivez votre projet...",
    "decrivezvotreprojet1": "D√©crivez votre projet...",
    "dejadansledevis": "D√©j√† dans le devis",
    "dejadansledevis1": "D√©j√† dans le devis",
    "dejadansledevis2": "D√©j√† dans le devis",
    "dejadansledevis3": "D√©j√† dans le devis",
    "dejadansledevis4": "D√©j√† dans le devis",
    "dejadansledevis5": "D√©j√† dans le devis",
    "dejauncompte": "D√©j√† un compte ?",
    "dejauncompte1": "D√©j√† un compte ?",
    "delaid2": "D√©lai d",
    "delaidexpirationdese1": "D√©lai d'expiration de session",
    "deposezvosimagesici1": "D√©posez vos images ici",
    "deposezvosimagesici2": "D√©posez vos images ici",
    "detaillant": "D√©taillant",
    "detaillant1": "D√©taillant",
    "decudelabatterie": "D√©√ßu de la batterie",
    "decudelabatterie1": "D√©√ßu de la batterie",
    "effectuezvospaiement": "Effectuez vos paiements en toute confiance avec notre syst√®me s√©curis√©",
    "effectuezvospaiement1": "Effectuez vos paiements en toute confiance avec notre syst√®me s√©curis√©",
    "eletronicos": "Eletr√¥nicos",
    "eletronicos1": "Eletr√¥nicos",
    "emballagebiodegradab": "Emballage biod√©gradable",
    "emballagebiodegradab1": "Emballage biod√©gradable",
    "emballagesbeaute": "Emballages beaut√©",
    "emballagesbeaute1": "Emballages beaut√©",
    "encontinuantvousacce": "En continuant, vous acceptez nos conditions d",
    "encontinuantvousacce1": "En continuant, vous acceptez nos conditions d'utilisation et notre politique de confidentialit√©.",
    "entrepreneurinfluenc": "Entrepreneur, influenceuse mode et beaut√©",
    "entrepreneurinfluenc1": "Entrepreneur, influenceuse mode et beaut√©",
    "entreprisesolutionsf": "Entreprise Solutions France",
    "entreprisesolutionsf1": "Entreprise Solutions France",
    "entrezencontactdirec": "Entrez en contact direct avec des usines chinoises v√©rifi√©es et fiables, sans interm√©diaire.",
    "entrezencontactdirec1": "Entrez en contact direct avec des usines chinoises v√©rifi√©es et fiables, sans interm√©diaire.",
    "entrezencontactdirec2": "Entrez en contact direct avec des usines chinoises v√©rifi√©es et fiables, sans interm√©diaire.",
    "erreurchargementresu": "Erreur chargement r√©sum√©:",
    "erreurchargementresu1": "Erreur chargement r√©sum√©:",
    "erreurdemiseajourfir": "Erreur de mise √† jour Firebase:",
    "erreurdemiseajourfir1": "Erreur de mise √† jour Firebase:",
    "erreurdemiseajourinc": "Erreur de mise √† jour inconnue.",
    "erreurdemiseajourinc1": "Erreur de mise √† jour inconnue.",
    "erreurlorsdelacreati": "Erreur lors de la cr√©ation",
    "erreurlorsdelacreati1": "Erreur lors de la cr√©ation",
    "erreurlorsdelacreati2": "Erreur lors de la cr√©ation",
    "erreurlorsdelacreati3": "Erreur lors de la cr√©ation",
    "erreurlorsdelacreati4": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati5": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati6": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati7": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati8": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati9": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati10": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati11": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati12": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati13": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati14": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati15": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati16": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati17": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati18": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati19": "Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati20": "Erreur lors de la cr√©ation de la collaboration:",
    "erreurlorsdelacreati21": "Erreur lors de la cr√©ation de la collaboration:",
    "erreurlorsdelacreati22": "Erreur lors de la cr√©ation de la pr√©visualisation:",
    "erreurlorsdelacreati23": "Erreur lors de la cr√©ation de la pr√©visualisation:",
    "erreurlorsdelacreati24": "Erreur lors de la cr√©ation de la r√©servation",
    "erreurlorsdelacreati25": "Erreur lors de la cr√©ation de la r√©servation",
    "erreurlorsdelacreati26": "Erreur lors de la cr√©ation du blob",
    "erreurlorsdelacreati27": "Erreur lors de la cr√©ation du blob",
    "erreurlorsdelacreati28": "Erreur lors de la cr√©ation du blob",
    "erreurlorsdelacreati29": "Erreur lors de la cr√©ation du blob",
    "erreurlorsdelacreati30": "Erreur lors de la cr√©ation du filleul:",
    "erreurlorsdelacreati31": "Erreur lors de la cr√©ation du filleul:",
    "erreurlorsdelacreati32": "Erreur lors de la cr√©ation du profil influenceur:",
    "erreurlorsdelacreati33": "Erreur lors de la cr√©ation du profil influenceur:",
    "erreurlorsdelacreati34": "Erreur lors de la cr√©ation:",
    "erreurlorsdelacreati35": "Erreur lors de la cr√©ation:",
    "erreurlorsdelamiseaj": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj1": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj2": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj3": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj4": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj5": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj6": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj7": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj8": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj9": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj10": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj11": "Erreur lors de la mise √† jour de l\\",
    "erreurlorsdelamiseaj12": "Erreur lors de la mise √† jour de la collaboration:",
    "erreurlorsdelamiseaj13": "Erreur lors de la mise √† jour de la collaboration:",
    "erreurlorsdelamiseaj14": "Erreur lors de la mise √† jour du profil influenceur:",
    "erreurlorsdelamiseaj15": "Erreur lors de la mise √† jour du profil influenceur:",
    "erreurlorsdelamiseaj16": "Erreur lors de la mise √† jour du profil influenceur:",
    "erreurlorsdelamiseaj17": "Erreur lors de la mise √† jour du profil:",
    "erreurlorsdelamiseaj18": "Erreur lors de la mise √† jour du profil:",
    "erreurlorsdelamiseaj19": "Erreur lors de la mise √† jour du profil:",
    "erreurlorsdelamiseaj20": "Erreur lors de la mise √† jour du prospect",
    "erreurlorsdelamiseaj21": "Erreur lors de la mise √† jour du prospect",
    "erreurlorsdelamiseaj22": "Erreur lors de la mise √† jour du r√¥le:",
    "erreurlorsdelamiseaj23": "Erreur lors de la mise √† jour du r√¥le:",
    "erreurlorsdelamiseaj24": "Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj25": "Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj26": "Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj27": "Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj28": "Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj29": "Erreur lors de la mise √† jour:",
    "erreurlorsdelarecher": "Erreur lors de la recherche",
    "erreurlorsdelarecher1": "Erreur lors de la recherche d\\",
    "erreurlorsdelarecher2": "Erreur lors de la recherche:",
    "erreurlorsdelarecupe": "Erreur lors de la r√©cup√©ration de l\\",
    "erreurlorsdelarecupe1": "Erreur lors de la r√©cup√©ration de l\\",
    "erreurlorsdelarecupe2": "Erreur lors de la r√©cup√©ration de l\\",
    "erreurlorsdelarecupe3": "Erreur lors de la r√©cup√©ration de l\\",
    "erreurlorsdelarecupe4": "Erreur lors de la r√©cup√©ration des cat√©gories:",
    "erreurlorsdelarecupe5": "Erreur lors de la r√©cup√©ration des cat√©gories:",
    "erreurlorsdelarecupe6": "Erreur lors de la r√©cup√©ration des cat√©gories:",
    "erreurlorsdelarecupe7": "Erreur lors de la r√©cup√©ration des cat√©gories:",
    "erreurlorsdelarecupe8": "Erreur lors de la r√©cup√©ration des collaborations:",
    "erreurlorsdelarecupe9": "Erreur lors de la r√©cup√©ration des collaborations:",
    "erreurlorsdelarecupe10": "Erreur lors de la r√©cup√©ration des filleuls:",
    "erreurlorsdelarecupe11": "Erreur lors de la r√©cup√©ration des filleuls:",
    "erreurlorsdelarecupe12": "Erreur lors de la r√©cup√©ration des fonctionnalit√©s:",
    "erreurlorsdelarecupe13": "Erreur lors de la r√©cup√©ration des fonctionnalit√©s:",
    "erreurlorsdelarecupe14": "Erreur lors de la r√©cup√©ration des marques:",
    "erreurlorsdelarecupe15": "Erreur lors de la r√©cup√©ration des marques:",
    "erreurlorsdelarecupe16": "Erreur lors de la r√©cup√©ration des marques:",
    "erreurlorsdelarecupe17": "Erreur lors de la r√©cup√©ration des marques:",
    "erreurlorsdelarecupe18": "Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelarecupe19": "Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelarecupe20": "Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelarecupe21": "Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelarecupe22": "Erreur lors de la r√©cup√©ration du profil influenceur:",
    "erreurlorsdelarecupe23": "Erreur lors de la r√©cup√©ration du profil influenceur:",
    "erreurlorsdelareserv": "Erreur lors de la r√©servation. Veuillez r√©essayer.",
    "erreurlorsdelasauveg": "Erreur lors de la sauvegarde du profil",
    "erreurlorsdelasauveg1": "Erreur lors de la sauvegarde en base de donn√©es",
    "erreurlorsdelasauveg2": "Erreur lors de la sauvegarde en base de donn√©es",
    "erreurlorsdelaverifi": "Erreur lors de la v√©rification de l\\",
    "erreurlorsdelaverifi1": "Erreur lors de la v√©rification de l\\",
    "erreurlorsdelaverifi2": "Erreur lors de la v√©rification de l\\",
    "erreurlorsdelaverifi3": "Erreur lors de la v√©rification de l\\",
    "erreurlorsdelaverifi4": "Erreur lors de la v√©rification du statut d\\",
    "erreurlorsdelaverifi5": "Erreur lors de la v√©rification du statut d\\",
    "erreurlorsduchargeme": "Erreur lors du chargement des donn√©es",
    "erreurlorsduchargeme1": "Erreur lors du chargement des donn√©es",
    "erreurlorsduchargeme2": "Erreur lors du chargement des donn√©es:",
    "erreurlorsduchargeme3": "Erreur lors du chargement des donn√©es:",
    "erreurlorsduchargeme4": "Erreur lors du chargement des exp√©ditions",
    "erreurlorsduchargeme5": "Erreur lors du chargement des exp√©ditions",
    "erreurlorsduchargeme6": "Erreur lors du chargement des favoris:",
    "erreurlorsduchargeme7": "Erreur lors du chargement des messages",
    "erreurlorsduchargeme8": "Erreur lors du chargement des messages",
    "erreurlorsduchargeme9": "Erreur lors du chargement des notifications",
    "erreurlorsduchargeme10": "Erreur lors du chargement des √©l√©ments",
    "erreurlorsduchargeme11": "Erreur lors du chargement des √©l√©ments",
    "erreurlorsduchargeme12": "Erreur lors du chargement du profil",
    "erreurlorsdutraiteme": "Erreur lors du traitement de la r√©ponse du serveur",
    "erreurlorsdutraiteme1": "Erreur lors du traitement de la r√©ponse du serveur",
    "erreurlorsdutelechar": "Erreur lors du t√©l√©chargement des documents",
    "erreurlorsdutelechar1": "Erreur lors du t√©l√©chargement des documents",
    "erreurlorsdutelechar2": "Erreur lors du t√©l√©chargement:",
    "erreurlorsdutelechar3": "Erreur lors du t√©l√©chargement:",
    "erreurreseaulorsdel": "Erreur r√©seau lors de l\\",
    "erreurreseaulorsdel1": "Erreur r√©seau lors de l\\",
    "errorfetchingnotific": "Error fetching notifications:",
    "errorloadingnotifica": "Error loading notifications",
    "errorloadingnotifica1": "Error loading notifications:",
    "errorloadingnotifica2": "Error loading notifications:",
    "espagne": "Espagne",
    "espagne1": "Espagne",
    "espagnol": "Espagnol",
    "espressocoffeemachin": "Espresso Coffee Machine",
    "espressokoffiemachin": "Espresso koffiemachine",
    "esteconteinerestdisp": "Este cont√™iner est√° dispon√≠vel para novas reservas.",
    "esteconteinerestdisp1": "Este cont√™iner est√° dispon√≠vel para novas reservas.",
    "esteconteinerestfech": "Este cont√™iner est√° fechado e n√£o pode mais ser reservado.",
    "esteconteinerestfech1": "Este cont√™iner est√° fechado e n√£o pode mais ser reservado.",
    "esteconteinerestquas": "Este cont√™iner est√° quase cheio, reserve rapidamente!",
    "esteconteinerestquas1": "Este cont√™iner est√° quase cheio, reserve rapidamente!",
    "exchinefrance": "Ex. Chine, France...",
    "explastiquemetal": "Ex. Plastique, M√©tal...",
    "explastiquemetal1": "Ex. Plastique, M√©tal...",
    "exchinefrance1": "Ex: Chine, France...",
    "explastiquemetal2": "Ex: Plastique, M√©tal...",
    "expeditions2": "Exp√©ditions",
    "expeditions3": "Exp√©ditions",
    "expediee2": "Exp√©di√©e",
    "expediee3": "Exp√©di√©e",
    "expediee4": "Exp√©di√©e",
    "expediee5": "Exp√©di√©e",
    "facultatifutilepoure": "Facultatif, utile pour √©valuer l",
    "facultatifutilepoure1": "Facultatif, utile pour √©valuer l'interaction",
    "favoris1": "Favoris",
    "favoris2": "Favoris",
    "fermerechap": "Fermer (√âchap)",
    "fermerechap1": "Fermer (√âchap)",
    "fichiersupprimeavecs": "Fichier supprim√© avec succ√®s !",
    "fichiersupprimeavecs1": "Fichier supprim√© avec succ√®s !",
    "filleulcree": "Filleul cr√©√©:",
    "filleulcree1": "Filleul cr√©√©:",
    "flexibel100wzonnepan": "Flexibel 100W zonnepaneel, hoge effici√´ntie, eenvoudige installatie.",
    "flexibel100wzonnepan1": "Flexibel 100W zonnepaneel, hoge effici√´ntie, eenvoudige installatie.",
    "fonctionnalitedetele": "Fonctionnalit√© de t√©l√©chargement √† impl√©menter avec html2canvas",
    "fonctionnaliteavenir": "Fonctionnalit√© √† venir",
    "fonctionnaliteavenir1": "Fonctionnalit√© √† venir",
    "formatsacceptesjpgjp": "Formats accept√©s: JPG, JPEG, PNG, GIF | Taille max: 5MB par image",
    "formatsacceptesjpgjp1": "Formats accept√©s: JPG, JPEG, PNG, GIF | Taille max: 5MB par image",
    "formatsmp4movaviwebm": "Formats: MP4, MOV, AVI, WEBM | Max 100MB par vid√©o",
    "formatsmp4movaviwebm1": "Formats: MP4, MOV, AVI, WEBM | Max 100MB par vid√©o",
    "france": "France",
    "france1": "France",
    "france2": "France",
    "france3": "France",
    "france4": "France",
    "france5": "France",
    "francais4": "Fran√ßais",
    "francais5": "Fran√ßais",
    "francais6": "Fran√ßais",
    "francais7": "Fran√ßais",
    "francais8": "Fran√ßais",
    "francais9": "Fran√ßais",
    "francais10": "Fran√ßais",
    "francais11": "Fran√ßais",
    "francais12": "Fran√ßais",
    "francais13": "Fran√ßais",
    "francais14": "Fran√ßais",
    "francais15": "Fran√ßais",
    "francais16": "Fran√ßais",
    "francais17": "Fran√ßais",
    "francais18": "Fran√ßais",
    "fev": "F√©v",
    "fev1": "F√©v",
    "gestionlogistiquecom": "Gestion logistique compl√®te",
    "gestionlogistiquecom1": "Gestion logistique compl√®te",
    "getindirectcontactwi": "Get in direct contact with verified and reliable Chinese factories, without intermediaries.",
    "glissezetdeposezunfi": "Glissez et d√©posez un fichier ici",
    "glissezetdeposezunfi1": "Glissez et d√©posez un fichier ici",
    "glissezetdeposezunfi2": "Glissez et d√©posez un fichier ici",
    "glissezetdeposezunfi3": "Glissez et d√©posez un fichier ici",
    "griselegant": "Gris √©l√©gant",
    "griselegant1": "Gris √©l√©gant",
    "guangzhouchine": "Guangzhou, Chine",
    "guangzhouchine1": "Guangzhou, Chine",
    "guangzhouchine2": "Guangzhou, Chine",
    "guangzhouchine3": "Guangzhou, Chine",
    "guangzhouchine4": "Guangzhou, Chine",
    "guangzhouchine5": "Guangzhou, Chine",
    "guangzhouguangdongch": "Guangzhou, Guangdong, Chine",
    "general": "G√©n√©ral",
    "general1": "G√©n√©ral",
    "generateurselectriqu": "G√©n√©rateurs √©lectriques",
    "generateurselectriqu1": "G√©n√©rateurs √©lectriques",
    "gerervosdocuments": "G√©rer vos documents",
    "gerervosdocuments1": "G√©rer vos documents",
    "gerervosdocuments2": "G√©rer vos documents",
    "gerervosdocuments3": "G√©rer vos documents",
    "gerezvosdocumentsetf2": "G√©rez vos documents et fichiers",
    "gerezvosdocumentsetf3": "G√©rez vos documents et fichiers",
    "gerezvosrelationscli1": "G√©rez vos relations clients et suivez leur activit√©",
    "gerezvosrelationscli2": "G√©rez vos relations clients et suivez leur activit√©",
    "gerezvotrecatalogue": "G√©rez votre catalogue",
    "gerezvotrecatalogue1": "G√©rez votre catalogue",
    "halteres5kg": "Halt√®res 5kg",
    "halteres5kg1": "Halt√®res 5kg",
    "hangzhouchine": "Hangzhou, Chine",
    "hangzhouchine1": "Hangzhou, Chine",
    "iacceptthetermsandco": "I accept the terms and conditions",
    "idduconteneuramettre": "ID du conteneur √† mettre √† jour.\r\n   * @param newUsedCapacity La nouvelle capacit√© utilis√©e.\r\n   */\r\n  updateContainerCapacity(containerId: string, newUsedCapacity: number): Promise<Container> {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        const container = currentContainers.get(containerId);\r\n        if (!container) {\r\n          return reject(new Error(",
    "idduconteneurgetcont": "ID du conteneur.\r\n   */\r\n  getContainerItems(containerId: string): Promise<ContainerItem[]> {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const items = Array.from(currentContainerItems.values()).filter(item => item.containerId === containerId);\r\n        resolve(items);\r\n      }, 300); // Simule un d√©lai r√©seau\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Met √† jour la capacit√© utilis√©e d",
    "impermeabilite": "Imperm√©abilit√©",
    "impermeabilite1": "Imperm√©abilit√©",
    "impermeable": "Imperm√©able",
    "impermeable1": "Imperm√©able",
    "impermeable2": "Imperm√©able",
    "impermeable3": "Imperm√©able",
    "impossibledecreerl": "Impossible de cr√©er l\\",
    "impossibledecreerl1": "Impossible de cr√©er l\\",
    "impossibledecreerl2": "Impossible de cr√©er l\\",
    "impossibledemettreaj": "Impossible de mettre √† jour l\\",
    "impossibledemettreaj1": "Impossible de mettre √† jour l\\",
    "impossiblederecupere": "Impossible de r√©cup√©rer l\\",
    "impossiblederecupere1": "Impossible de r√©cup√©rer l\\",
    "indonesie": "Indon√©sie",
    "indonesie1": "Indon√©sie",
    "influenceusemodeetli": "Influenceuse mode et lifestyle avec une communaut√© engag√©e",
    "influenceusemodeetli1": "Influenceuse mode et lifestyle avec une communaut√© engag√©e",
    "informations4": "Informations",
    "informationsdecontac1": "Informations de contact",
    "informationsdel1": "Informations de l",
    "informationspersonne2": "Informations personnelles",
    "innovationtechnologi": "Innovation technologique de qualit√©",
    "innovationtechnologi1": "Innovation technologique de qualit√©",
    "integre": "Int√©gr√©",
    "integre1": "Int√©gr√©",
    "italie": "Italie",
    "italie1": "Italie",
    "italien": "Italien",
    "itensdoconteiner": "Itens do cont√™iner",
    "itensdoconteiner1": "Itens do cont√™iner",
    "jacceptedepartagerme": "J'accepte de partager mes statistiques d√©taill√©es sur demande",
    "jacceptelescondition": "J'accepte les conditions g√©n√©rales",
    "jacceptequemesinform": "J'accepte que mes informations soient v√©rifi√©es",
    "jouetspuericultureet": "Jouets, pu√©riculture et enfants.",
    "jouetspuericultureet1": "Jouets, pu√©riculture et enfants.",
    "kitdefiltresahuile": "Kit de filtres √† huile",
    "kitdefiltresahuile1": "Kit de filtres √† huile",
    "kitdefiltresahuile2": "Kit de filtres √† huile",
    "kitdefiltresahuile3": "Kit de filtres √† huile",
    "kitmedia": "Kit m√©dia",
    "kitmedia1": "Kit m√©dia",
    "kitmedia2": "Kit m√©dia",
    "kitmedia3": "Kit m√©dia",
    "kitmedia4": "Kit m√©dia",
    "kitmedia5": "Kit m√©dia",
    "ledhauteefficacite": "LED haute efficacit√©",
    "ledhauteefficacite1": "LED haute efficacit√©",
    "lacategorieestrequis": "La cat√©gorie est requise",
    "lacategorieestrequis1": "La cat√©gorie est requise",
    "lasauvegardequotidie": "La sauvegarde quotidienne de la base de donn√©es s\\",
    "lasauvegardequotidie1": "La sauvegarde quotidienne de la base de donn√©es s\\",
    "lampeavececlairagech": "Lampe avec √©clairage chaud",
    "lampeavececlairagech1": "Lampe avec √©clairage chaud",
    "lampedebureauledavec": "Lampe de bureau LED avec bras articul√©, 3 modes de couleur et dimmer tactile.",
    "lampedebureauledavec1": "Lampe de bureau LED avec bras articul√©, 3 modes de couleur et dimmer tactile.",
    "lampedebureauledavec2": "Lampe de bureau LED avec bras articul√©, 3 modes de couleur, dimmer tactile et port USB pour recharge.",
    "lampedebureauledavec3": "Lampe de bureau LED avec bras articul√©, 3 modes de couleur, dimmer tactile et port USB pour recharge.",
    "lesamsunggalaxys24re": "Le Samsung Galaxy S24 red√©finit l\\",
    "lesamsunggalaxys24re1": "Le Samsung Galaxy S24 red√©finit l\\",
    "lecasquesansfilsonyw": "Le casque sans fil Sony WH-1000XM4 avec r√©duction de bruit leader de l\\",
    "lecasquesansfilsonyw1": "Le casque sans fil Sony WH-1000XM4 avec r√©duction de bruit leader de l\\",
    "lestocknepeutpasetre": "Le stock ne peut pas √™tre n√©gatif",
    "lestocknepeutpasetre1": "Le stock ne peut pas √™tre n√©gatif",
    "letshirtestcorrectma": "Le t-shirt est correct mais la qualit√© du coton n\\",
    "letshirtestcorrectma1": "Le t-shirt est correct mais la qualit√© du coton n\\",
    "lesdonneesserontaffi": "Les donn√©es seront affich√©es ici",
    "lesdonneesserontaffi1": "Les donn√©es seront affich√©es ici",
    "lesdonneesserontaffi2": "Les donn√©es seront affich√©es ici",
    "lesdonneesserontaffi3": "Les donn√©es seront affich√©es ici",
    "lesecouteursontunetr": "Les √©couteurs ont une tr√®s bonne qualit√© sonore et l\\",
    "lesecouteursontunetr1": "Les √©couteurs ont une tr√®s bonne qualit√© sonore et l\\",
    "liencopiedanslepress": "Lien copi√© dans le presse-papiers !",
    "liencopiedanslepress1": "Lien copi√© dans le presse-papiers !",
    "liendepartagecopieda": "Lien de partage copi√© dans le presse-papiers !",
    "liendepartagecopieda1": "Lien de partage copi√© dans le presse-papiers !",
    "liendevotreprofil": "Lien de votre profil",
    "liensdevosprofils": "Liens de vos profils",
    "liensverslesreseauxs": "Liens vers les r√©seaux sociaux",
    "liensverslesreseauxs1": "Liens vers les r√©seaux sociaux",
    "lieudarrivee": "Lieu d'arriv√©e",
    "lieudedepart1": "Lieu de d√©part",
    "lieudedepart2": "Lieu de d√©part",
    "linktoyourprofile": "Link to your profile",
    "listadeconteineres": "Lista de cont√™ineres",
    "listadeconteineres1": "Lista de cont√™ineres",
    "livraisonurgentedema": "Livraison urgente demand√©e",
    "livraisonurgentedema1": "Livraison urgente demand√©e",
    "livredeveloppement": "Livre D√©veloppement",
    "livredeveloppement1": "Livre D√©veloppement",
    "livre": "Livr√©",
    "livre1": "Livr√©",
    "livree2": "Livr√©e",
    "livree3": "Livr√©e",
    "livree4": "Livr√©e",
    "livree5": "Livr√©e",
    "lunettesdesoleilavec": "Lunettes de soleil avec protection UV400, monture en ac√©tate de qualit√© sup√©rieure. Design moderne et confortable.",
    "lunettesdesoleilavec1": "Lunettes de soleil avec protection UV400, monture en ac√©tate de qualit√© sup√©rieure. Design moderne et confortable.",
    "lunettesdesoleilpola": "Lunettes de soleil polaris√©es avec protection UV400 et monture en alliage l√©ger.",
    "lunettesdesoleilpola1": "Lunettes de soleil polaris√©es avec protection UV400 et monture en alliage l√©ger.",
    "lunettesdesoleilport": "Lunettes de soleil port√©es",
    "lunettesdesoleilport1": "Lunettes de soleil port√©es",
    "lyonfrance": "Lyon, France",
    "lyonfrance1": "Lyon, France",
    "legal1": "L√©gal",
    "legal2": "L√©gal",
    "legal3": "L√©gal",
    "legal4": "L√©gal",
    "legal5": "L√©gal",
    "legal6": "L√©gal",
    "leger": "L√©ger",
    "leger1": "L√©ger",
    "leger2": "L√©ger",
    "leger3": "L√©ger",
    "machinerie": "MACHINERIE",
    "machinerie1": "MACHINERIE",
    "machinerie2": "MACHINERIE",
    "machinery": "MACHINERY",
    "modevetements": "MODE & V√äTEMENTS",
    "modevetements1": "MODE & V√äTEMENTS",
    "modevetements2": "MODE & V√äTEMENTS",
    "modevetements3": "MODE & V√äTEMENTS",
    "modevetements4": "MODE & V√äTEMENTS",
    "modevetements5": "MODE & V√äTEMENTS",
    "machineacafeexpresso": "Machine √† caf√© expresso",
    "machineacafeexpresso1": "Machine √† caf√© expresso",
    "machineacafeexpresso2": "Machine √† caf√© expresso",
    "machineacafeexpresso3": "Machine √† caf√© expresso",
    "machineacafeexpresso4": "Machine √† caf√© expresso",
    "machineacafeexpresso5": "Machine √† caf√© expresso",
    "machineacoudreindust": "Machine √† coudre industrielle",
    "machineacoudreindust1": "Machine √† coudre industrielle",
    "machineacoudreindust2": "Machine √† coudre industrielle",
    "machinerie3": "Machinerie",
    "machinerie4": "Machinerie",
    "machinerie5": "Machinerie",
    "machinerie6": "Machinerie",
    "machinery1": "Machinery",
    "machines": "Machines",
    "machines1": "Machines",
    "machinesetequipement": "Machines et √©quipements",
    "machinesetequipement1": "Machines et √©quipements",
    "machinesetequipement2": "Machines et √©quipements",
    "machinesetequipement3": "Machines et √©quipements industriels.",
    "machinesetequipement4": "Machines et √©quipements industriels.",
    "machinesetequipement5": "Machines et √©quipements industriels.",
    "machinesindustrielle": "Machines industrielles",
    "machinesindustrielle1": "Machines industrielles",
    "machinespourlindustr": "Machines pour l‚Äôindustrie.",
    "machinestextiles": "Machines textiles",
    "marseillefrance": "Marseille, France",
    "marseillefrance1": "Marseille, France",
    "materiau1": "Mat√©riau",
    "materiau2": "Mat√©riau",
    "materiau3": "Mat√©riau",
    "materiau4": "Mat√©riau",
    "materiau5": "Mat√©riau",
    "materiau6": "Mat√©riau",
    "materiau7": "Mat√©riau",
    "materiau8": "Mat√©riau",
    "materiau9": "Mat√©riau",
    "materiau10": "Mat√©riau",
    "materiau11": "Mat√©riau",
    "materiau12": "Mat√©riau",
    "materiaunonspecifie": "Mat√©riau non sp√©cifi√©",
    "materiaunonspecifie1": "Mat√©riau non sp√©cifi√©",
    "materiaunonspecifie2": "Mat√©riau non sp√©cifi√©",
    "materiaunonspecifie3": "Mat√©riau non sp√©cifi√©",
    "materiaunonspecifie4": "Mat√©riau non sp√©cifi√©",
    "materiaunonspecifie5": "Mat√©riau non sp√©cifi√©",
    "materielmedical": "Mat√©riel m√©dical",
    "materielmedical1": "Mat√©riel m√©dical",
    "mercipourvotremessag": "Merci pour votre message. Je vous r√©pondrai dans les plus brefs d√©lais.",
    "mercipourvotremessag1": "Merci pour votre message. Je vous r√©pondrai dans les plus brefs d√©lais.",
    "mesaergonomicaajustv": "Mesa ergon√¥mica ajust√°vel",
    "mesaergonomicaajustv1": "Mesa ergon√¥mica ajust√°vel",
    "messagecommercialnon": "Message commercial non sollicit√©",
    "messagecommercialnon1": "Message commercial non sollicit√©",
    "messagedepresentatio": "Message de pr√©sentation de l",
    "messagedepresentatio1": "Message de pr√©sentation de l'entreprise",
    "messages2": "Messages",
    "messages3": "Messages",
    "messages4": "Messages",
    "messages5": "Messages",
    "messages6": "Messages",
    "messages7": "Messages",
    "messagesnonlus1": "Messages non lus",
    "messagesrecents": "Messages r√©cents",
    "messagesrecents1": "Messages r√©cents",
    "messagesrecents2": "Messages r√©cents",
    "mettreajour": "Mettre √† jour",
    "mettreajour1": "Mettre √† jour",
    "mettreajour2": "Mettre √† jour",
    "mettreajour3": "Mettre √† jour",
    "minimum6caracteres": "Minimum 6 caract√®res",
    "minimum6caracteres1": "Minimum 6 caract√®res",
    "minimum6caracteres2": "Minimum 6 caract√®res",
    "minimum6caracteres3": "Minimum 6 caract√®res",
    "minimum8caracteres": "Minimum 8 caract√®res",
    "minimum8caracteres1": "Minimum 8 caract√®res",
    "miseajourdel": "Mise √† jour de l\\",
    "miseajourdel1": "Mise √† jour de l\\",
    "miseajourdesconditio": "Mise √† jour des conditions de vente",
    "miseajourdesconditio1": "Mise √† jour des conditions de vente",
    "miseajourdesconditio2": "Mise √† jour des conditions de vente",
    "miseajourdesconditio3": "Mise √† jour des conditions de vente",
    "miseajourdesconditio4": "Mise √† jour des conditions de vente",
    "miseajour": "Mise √† jour...",
    "mobilierhotelier": "Mobilier h√¥telier",
    "mobilierhotelier1": "Mobilier h√¥telier",
    "modebeaute": "Mode & Beaut√©",
    "modebeaute1": "Mode & Beaut√©",
    "modebeaute2": "Mode & Beaut√©",
    "modebeaute3": "Mode & Beaut√©",
    "modebeaute4": "Mode & Beaut√©",
    "modebeaute5": "Mode & Beaut√©",
    "modebeaute6": "Mode & Beaut√©",
    "modebeaute7": "Mode & Beaut√©",
    "modevetementsetacces": "Mode, v√™tements et accessoires.",
    "modevetementsetacces1": "Mode, v√™tements et accessoires.",
    "moderation1": "Mod√©ration",
    "moderation2": "Mod√©ration",
    "monprofil": "Mon profil",
    "monprofil1": "Mon profil",
    "monprofil2": "Mon profil",
    "montreconnectee": "Montre Connect√©e",
    "montreconnectee1": "Montre Connect√©e",
    "montreconnecteesmart": "Montre Connect√©e Smartwatch Pro X1",
    "montreconnecteesmart1": "Montre Connect√©e Smartwatch Pro X1",
    "montreconnecteeapple": "Montre connect√©e Apple Watch",
    "montreconnecteeapple1": "Montre connect√©e Apple Watch",
    "montreconnecteeavecb": "Montre connect√©e avec bracelet",
    "montreconnecteeavecb1": "Montre connect√©e avec bracelet",
    "montreconnecteehautd": "Montre connect√©e haut de gamme avec √©cran AMOLED, GPS int√©gr√© et monitoring cardiaque.",
    "montreconnecteehautd1": "Montre connect√©e haut de gamme avec √©cran AMOLED, GPS int√©gr√© et monitoring cardiaque.",
    "montreconnecteevuede": "Montre connect√©e vue de face",
    "montreconnecteevuede1": "Montre connect√©e vue de face",
    "montreconnecteevuede2": "Montre connect√©e vue de profil",
    "montreconnecteevuede3": "Montre connect√©e vue de profil",
    "montreconnecteevuede4": "Montre connect√©e vue de profil",
    "montreconnecteeecran": "Montre connect√©e √©cran allum√©",
    "montreconnecteeecran1": "Montre connect√©e √©cran allum√©",
    "montresconnectees": "Montres connect√©es",
    "montresconnectees1": "Montres connect√©es",
    "mquinadecafeespresso": "M√°quina de caf√© espresso",
    "mquinadecafeespresso1": "M√°quina de caf√© espresso",
    "mquinadecafeexpresso": "M√°quina de caf√© expresso",
    "mquinadecafeexpresso1": "M√°quina de caf√© expresso",
    "mereenfantsetjouets": "M√®re, enfants et jouets",
    "mereenfantsetjouets1": "M√®re, enfants et jouets",
    "medical": "M√©dical",
    "medical1": "M√©dical",
    "medical2": "M√©dical",
    "medical3": "M√©dical",
    "memoire": "M√©moire",
    "memoire1": "M√©moire",
    "methodesdecontrolequ": "M√©thodes de contr√¥le qualit√©",
    "methodesdecontrolequ1": "M√©thodes de contr√¥le qualit√©",
    "nantesfrance": "Nantes, France",
    "nenhumitemnesteconte": "Nenhum item neste cont√™iner",
    "nenhumitemnesteconte1": "Nenhum item neste cont√™iner",
    "ningbochine": "Ningbo, Chine",
    "nonotifications": "No notifications",
    "nonconnecte": "Non connect√©",
    "nonconnecte1": "Non connect√©",
    "nonconnecte2": "Non connect√©",
    "nonconnecte3": "Non connect√©",
    "nonconnecte4": "Non connect√©",
    "nonconnecte5": "Non connect√©",
    "nonconnecte6": "Non connect√©",
    "nonconnecte7": "Non connect√©",
    "nondefini": "Non d√©fini",
    "nondefini1": "Non d√©fini",
    "nondefini2": "Non d√©fini",
    "nondefini3": "Non d√©fini",
    "nonverifies1": "Non v√©rifi√©s",
    "nonverifies2": "Non v√©rifi√©s",
    "notessupplementaires": "Notes suppl√©mentaires...",
    "notessupplementaires1": "Notes suppl√©mentaires...",
    "notifications4": "Notifications",
    "notifications5": "Notifications",
    "notifications6": "Notifications",
    "notifications7": "Notifications",
    "notifications8": "Notifications",
    "notifications9": "Notifications",
    "notifications10": "Notifications",
    "notificationsmobiles": "Notifications mobiles",
    "notificationspush1": "Notifications push",
    "notificationspushsur": "Notifications push sur l\\",
    "noussommesdesolespou": "Nous sommes d√©sol√©s pour ce probl√®me Pierre. Contactez-nous en priv√© pour que nous puissions vous aider √† r√©soudre ce probl√®me de batterie.",
    "noussommesdesolespou1": "Nous sommes d√©sol√©s pour ce probl√®me Pierre. Contactez-nous en priv√© pour que nous puissions vous aider √† r√©soudre ce probl√®me de batterie.",
    "noussommesdesolespou2": "Nous sommes d√©sol√©s pour ce probl√®me Pierre. Contactez-nous en priv√© pour que nous puissions vous aider √† r√©soudre ce probl√®me de batterie.",
    "nouveau4": "Nouveau",
    "nouveau5": "Nouveau",
    "nouveau6": "Nouveau",
    "nouveau7": "Nouveau",
    "nouveauconteneur": "Nouveau conteneur",
    "nouveaumessage": "Nouveau message",
    "nouveaumessagerecu": "Nouveau message re√ßu",
    "nouveaumessagerecu1": "Nouveau message re√ßu",
    "nouveaumessagerecu2": "Nouveau message re√ßu",
    "nouveauxavis": "Nouveaux avis",
    "nouveauxavis1": "Nouveaux avis",
    "nouveauxavis2": "Nouveaux avis",
    "nouveauxclients": "Nouveaux clients",
    "nouveauxclients1": "Nouveaux clients",
    "nouveauxmessages": "Nouveaux messages",
    "nouveauxmessages1": "Nouveaux messages",
    "nouveauxmessages2": "Nouveaux messages",
    "nouveauxmessages3": "Nouveaux messages",
    "numerod": "Num√©ro d",
    "numerodenregistremen": "Num√©ro d'enregistrement l√©gal",
    "numerodemodele1": "Num√©ro de mod√®le",
    "numerodemodele2": "Num√©ro de mod√®le",
    "orangeenergie": "Orange √©nergie",
    "orangeenergie1": "Orange √©nergie",
    "outilsdebeaute": "Outils de beaut√©",
    "outilsdebeaute1": "Outils de beaut√©",
    "outilsetmateriel": "Outils et mat√©riel",
    "outilsetmateriel1": "Outils et mat√©riel",
    "outilsmecaniques": "Outils m√©caniques",
    "outilsmecaniques1": "Outils m√©caniques",
    "outilsprofessionnels": "Outils professionnels et mat√©riel.",
    "outilsprofessionnels1": "Outils professionnels et mat√©riel.",
    "outilselectriques": "Outils √©lectriques",
    "outilselectriques1": "Outils √©lectriques",
    "outilselectriques2": "Outils √©lectriques",
    "outilselectriques3": "Outils √©lectriques",
    "ouverturedelapagedes": "Ouverture de la page des donn√©es collect√©es",
    "ouverturedelapagedes1": "Ouverture de la page des donn√©es collect√©es",
    "piecesaccessoires": "PI√àCES & ACCESSOIRES",
    "piecesaccessoires1": "PI√àCES & ACCESSOIRES",
    "piecesaccessoires2": "PI√àCES & ACCESSOIRES",
    "piecesaccessoires3": "PI√àCES & ACCESSOIRES",
    "piecesaccessoires4": "PI√àCES & ACCESSOIRES",
    "piecesaccessoires5": "PI√àCES & ACCESSOIRES",
    "painelsolarflexvelde": "Painel solar flex√≠vel de 100W, alta efici√™ncia, instala√ß√£o f√°cil.",
    "painelsolarflexvelde1": "Painel solar flex√≠vel de 100W, alta efici√™ncia, instala√ß√£o f√°cil.",
    "panneausolaireflexib": "Panneau solaire flexible de 100W, haute efficacit√©, installation facile.",
    "panneausolaireflexib1": "Panneau solaire flexible de 100W, haute efficacit√©, installation facile.",
    "parfumspersonnalises": "Parfums personnalis√©s",
    "parfumspersonnalises1": "Parfums personnalis√©s",
    "parisfrance": "Paris, France",
    "parisfrance1": "Paris, France",
    "parisfrance2": "Paris, France",
    "partagedesstatistiqu": "Partage des statistiques activ√©",
    "partagedesstatistiqu1": "Partage des statistiques activ√©",
    "perceuseelectrique18": "Perceuse √©lectrique 18V",
    "perceuseelectrique181": "Perceuse √©lectrique 18V",
    "perceuseelectrique182": "Perceuse √©lectrique 18V",
    "perceuseelectrique183": "Perceuse √©lectrique 18V",
    "permissionsinsuffisa": "Permissions insuffisantes pour √©crire en base",
    "permissionsinsuffisa1": "Permissions insuffisantes pour √©crire en base",
    "permissionsinsuffisa2": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore",
    "permissionsinsuffisa3": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore",
    "permissionsinsuffisa4": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore.",
    "permissionsinsuffisa5": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore.",
    "permissionsinsuffisa6": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore.",
    "permissionsinsuffisa7": "Permissions insuffisantes. V√©rifiez les r√®gles Firestore.",
    "personnedecontact": "Personne de contact",
    "photodeprofilmiseajo": "Photo de profil mise √† jour avec succ√®s !",
    "photodeprofilmiseajo1": "Photo de profil mise √† jour avec succ√®s !",
    "photodeprofilmiseajo2": "Photo de profil mise √† jour avec succ√®s !",
    "piecesautomobiles": "Pi√®ces automobiles",
    "piecesautomobiles1": "Pi√®ces automobiles",
    "piecesdequalite": "Pi√®ces de Qualit√©",
    "piecesdequalite1": "Pi√®ces de Qualit√©",
    "piecesdequalite2": "Pi√®ces de Qualit√©",
    "piecesdequalite3": "Pi√®ces de Qualit√©",
    "piecesdequalite4": "Pi√®ces de Qualit√©",
    "piecesdequalite5": "Pi√®ces de Qualit√©",
    "piecesdetacheesetacc": "Pi√®ces d√©tach√©es et accessoires automobiles.",
    "piecesdetacheesetacc1": "Pi√®ces d√©tach√©es et accessoires automobiles.",
    "piecesetaccessoiresa": "Pi√®ces et accessoires auto",
    "piecesetaccessoiresa1": "Pi√®ces et accessoires auto",
    "plastiqueabsmetal": "Plastique ABS, M√©tal",
    "plastiqueabsmetal1": "Plastique ABS, M√©tal",
    "plateformeb2bpourlec": "Plateforme B2B pour le commerce avec la Chine",
    "pleaseprovidethelink": "Please provide the links to your profiles",
    "pleaseprovidethelink1": "Please provide the links to your profiles for each selected social network:",
    "polarise": "Polaris√©",
    "polarise1": "Polaris√©",
    "polarise2": "Polaris√©",
    "polarise3": "Polaris√©",
    "polarisesantireflet": "Polaris√©s anti-reflet",
    "polarisesantireflet1": "Polaris√©s anti-reflet",
    "politiquedeconfident": "Politique de confidentialit√©",
    "politiquedeconfident1": "Politique de confidentialit√©",
    "politiquedeconfident2": "Politique de confidentialit√©",
    "politiquedeconfident3": "Politique de confidentialit√©",
    "politiquedeconfident4": "Politique de confidentialit√©",
    "politiquedeconfident5": "Politique de confidentialit√©",
    "polyesterrecyclepfcf": "Polyester recycl√©, PFC-free DWR",
    "polyesterrecyclepfcf1": "Polyester recycl√©, PFC-free DWR",
    "portugal": "Portugal",
    "portugues": "Portugu√™s",
    "portugues1": "Portugu√™s",
    "powerbankportablede1": "Powerbank portable de 10000mAh avec charge rapide et connectivit√© multiple.",
    "powerbankportablede11": "Powerbank portable de 10000mAh avec charge rapide et connectivit√© multiple.",
    "profil": "Profil",
    "profil1": "Profil",
    "profilinfluenceurcre": "Profil influenceur cr√©√©:",
    "profilinfluenceurcre1": "Profil influenceur cr√©√©:",
    "profilmisajour": "Profil mis √† jour",
    "profilmisajour1": "Profil mis √† jour",
    "profilmisajour2": "Profil mis √† jour",
    "profilmisajouravecsu": "Profil mis √† jour avec succ√®s !",
    "profilmisajouravecsu1": "Profil mis √† jour avec succ√®s !",
    "profilmisajouravecsu2": "Profil mis √† jour avec succ√®s !",
    "promotiondesvetement": "Promotion des v√™tements de sport √©t√© Adidas",
    "promotiondesvetement1": "Promotion des v√™tements de sport √©t√© Adidas",
    "promotiondesvetement2": "Promotion des v√™tements de sport √©t√© Adidas",
    "promotiondesvetement3": "Promotion des v√™tements de sport √©t√© Adidas",
    "prepedidodeespacoemc": "Pr√©-pedido de espa√ßo em cont√™iner",
    "prepedidodeespacoemc1": "Pr√©-pedido de espa√ßo em cont√™iner",
    "prepedir": "Pr√©-pedir",
    "prepedir1": "Pr√©-pedir",
    "preferencesdenotific": "Pr√©f√©rences de notification",
    "preferencesdenotific1": "Pr√©f√©rences de notification",
    "preferencesdenotific2": "Pr√©f√©rences de notification",
    "preferenceslinguisti2": "Pr√©f√©rences linguistiques et r√©gionales",
    "preferenceslinguisti3": "Pr√©f√©rences linguistiques et r√©gionales",
    "preferenceslinguisti4": "Pr√©f√©rences linguistiques et r√©gionales",
    "preparation2": "Pr√©paration",
    "preparation3": "Pr√©paration",
    "presentezvousbrievem": "Pr√©sentez-vous bri√®vement",
    "presentezvousbrievem1": "Pr√©sentez-vous bri√®vement",
    "previsualisation2": "Pr√©visualisation",
    "previsualisation3": "Pr√©visualisation",
    "previsualisation4": "Pr√©visualisation",
    "previsualisation5": "Pr√©visualisation",
    "previsualiser": "Pr√©visualiser",
    "previsualiser1": "Pr√©visualiser",
    "previsualiser2": "Pr√©visualiser",
    "previsualiser3": "Pr√©visualiser",
    "previsualiser4": "Pr√©visualiser",
    "previsualiser5": "Pr√©visualiser",
    "previsualiser6": "Pr√©visualiser",
    "previsualiser7": "Pr√©visualiser",
    "pretadeveloppervotre": "Pr√™t √† d√©velopper votre business ?",
    "pretadeveloppervotre1": "Pr√™t √† d√©velopper votre business ?",
    "puzzle1000pieces": "Puzzle 1000 pi√®ces",
    "puzzle1000pieces1": "Puzzle 1000 pi√®ces",
    "qingdaochine": "Qingdao, Chine",
    "qualitecertifiee": "Qualit√© Certifi√©e",
    "qualitecertifiee1": "Qualit√© Certifi√©e",
    "qualitecertifiee2": "Qualit√© Certifi√©e",
    "qualitecertifiee3": "Qualit√© Certifi√©e",
    "qualitecertifiee4": "Qualit√© Certifi√©e",
    "qualitecertifiee5": "Qualit√© Certifi√©e",
    "qualitegarantie": "Qualit√© Garantie",
    "qualitegarantie1": "Qualit√© Garantie",
    "qualitemoyenne": "Qualit√© moyenne",
    "qualitemoyenne1": "Qualit√© moyenne",
    "quantite4": "Quantit√©",
    "quantite5": "Quantit√©",
    "quantitecbm": "Quantit√© (CBM)",
    "quantitecbm1": "Quantit√© (CBM)",
    "quantiteminimummoq": "Quantit√© minimum (MOQ)",
    "quantiteminimummoq1": "Quantit√© minimum (MOQ)",
    "quanzhouchine": "Quanzhou, Chine",
    "rafraichir": "Rafra√Æchir",
    "rafraichir1": "Rafra√Æchir",
    "rafraichir2": "Rafra√Æchir",
    "rafraichir3": "Rafra√Æchir",
    "randonneesportcasual": "Randonn√©e, Sport, Casual",
    "randonneesportcasual1": "Randonn√©e, Sport, Casual",
    "rapportactivitejanvi": "Rapport activit√© janvier 2024.docx",
    "rapportactivitejanvi1": "Rapport activit√© janvier 2024.docx",
    "recevoirlesdernieres": "Recevoir les derni√®res nouvelles et offres",
    "recevoirlesdernieres1": "Recevoir les derni√®res nouvelles et offres",
    "recevoirunenotificat": "Recevoir une notification push pour chaque nouveau message",
    "rechercheavanceeavec": "Recherche avanc√©e avec tous les filtres",
    "rechercheavanceeavec1": "Recherche avanc√©e avec tous les filtres",
    "rechercheavanceeavec2": "Recherche avanc√©e avec tous les filtres",
    "recherchedebase": "Recherche de base",
    "recherche": "Recherche:",
    "recherche1": "Recherche:",
    "recherche2": "Recherche:",
    "recherche3": "Recherche:",
    "rechercher": "Rechercher",
    "rechercher1": "Rechercher",
    "rechercher2": "Rechercher",
    "rechercher3": "Rechercher",
    "rechercherconversati": "Rechercher conversations...",
    "rechercherdanslesale": "Rechercher dans les alertes...",
    "rechercherdanslesavi": "Rechercher dans les avis...",
    "rechercherdanslesavi1": "Rechercher dans les avis...",
    "rechercherparcliento": "Rechercher par client ou num√©ro...",
    "rechercherparcliento1": "Rechercher par client ou num√©ro...",
    "rechercherparcliento2": "Rechercher par client ou num√©ro...",
    "rechercherundocument": "Rechercher un document...",
    "rechercherundocument1": "Rechercher un document...",
    "rechercherundocument2": "Rechercher un document...",
    "rechercheruninfluenc1": "Rechercher un influenceur",
    "rechercherunmessage": "Rechercher un message...",
    "rechercher4": "Rechercher...",
    "rechercher5": "Rechercher...",
    "recherchezefficaceme": "Recherchez efficacement",
    "recommande2": "Recommand√©",
    "recommande3": "Recommand√©",
    "refuse": "Refus√©",
    "refuse1": "Refus√©",
    "rejete1": "Rejet√©",
    "rejete2": "Rejet√©",
    "rejete3": "Rejet√©",
    "rejete4": "Rejet√©",
    "rejete5": "Rejet√©",
    "rejete6": "Rejet√©",
    "reserveseuespaconest": "Reserve seu espa√ßo neste cont√™iner antes que fique cheio.",
    "reserveseuespaconest1": "Reserve seu espa√ßo neste cont√™iner antes que fique cheio.",
    "restaurerpardefaut": "Restaurer par d√©faut",
    "restaurerpardefaut1": "Restaurer par d√©faut",
    "robeelegantezara": "Robe √âl√©gante Zara",
    "robeelegantezara1": "Robe √âl√©gante Zara",
    "robeelegantepourtout": "Robe √©l√©gante pour toutes occasions",
    "robeelegantepourtout1": "Robe √©l√©gante pour toutes occasions",
    "robottelecommande": "Robot T√©l√©command√©",
    "robottelecommande1": "Robot T√©l√©command√©",
    "rougealevresmat": "Rouge √† L√®vres Mat",
    "rougealevresmat1": "Rouge √† L√®vres Mat",
    "reductionbruit": "R√©duction bruit",
    "reductionbruit1": "R√©duction bruit",
    "reductiondebruit": "R√©duction de bruit",
    "reductiondebruit1": "R√©duction de bruit",
    "reductiondebruit2": "R√©duction de bruit",
    "reductiondebruit3": "R√©duction de bruit",
    "reinitialiser2": "R√©initialiser",
    "reinitialiser3": "R√©initialiser",
    "repondre2": "R√©pondre",
    "repondre3": "R√©pondre",
    "repondre4": "R√©pondre",
    "repondre5": "R√©pondre",
    "repondusaujourd": "R√©pondus aujourd",
    "repondusaujourdhui": "R√©pondus aujourd'hui",
    "reponse": "R√©ponse",
    "reponse1": "R√©ponse",
    "reseauglobal2": "R√©seau global",
    "reseauglobal3": "R√©seau global",
    "reseauxsociaux": "R√©seaux sociaux",
    "reseauxsociaux1": "R√©seaux sociaux",
    "reservezvotreespaced": "R√©servez votre espace dans ce conteneur avant qu",
    "reservezvotreespaced1": "R√©servez votre espace dans ce conteneur avant qu'il ne soit complet.",
    "resistance": "R√©sistance",
    "resistance1": "R√©sistance",
    "resultatsvisiblesrap": "R√©sultats visibles rapidement",
    "resultatsvisiblesrap1": "R√©sultats visibles rapidement",
    "role5": "R√¥le",
    "role6": "R√¥le",
    "role7": "R√¥le",
    "role8": "R√¥le",
    "role9": "R√¥le",
    "role10": "R√¥le",
    "role11": "R√¥le",
    "role12": "R√¥le",
    "roleinvalide": "R√¥le invalide",
    "roleinvalide1": "R√¥le invalide",
    "sacadosbusinesslapto": "Sac √† Dos Business Laptop",
    "sacadosbusinesslapto1": "Sac √† Dos Business Laptop",
    "sacadosordinateurbus": "Sac √† Dos Ordinateur Business",
    "sacadosordinateurbus1": "Sac √† Dos Ordinateur Business",
    "sacadosbusinessnoir": "Sac √† dos business noir",
    "sacadosbusinessnoir1": "Sac √† dos business noir",
    "sacadosporte": "Sac √† dos port√©",
    "sacadosporte1": "Sac √† dos port√©",
    "sacadosprofessionnel": "Sac √† dos professionnel avec compartiment laptop 15.6",
    "sacadosprofessionnel1": "Sac √† dos professionnel avec compartiment laptop 15.6",
    "sacadosprofessionnel2": "Sac √† dos professionnel avec compartiment laptop 15.6\" et port USB.",
    "sante": "Sant√©",
    "sante1": "Sant√©",
    "sante2": "Sant√©",
    "sante3": "Sant√©",
    "sauvegardeautomatiqu": "Sauvegarde automatique activ√©e",
    "sauvegardeautomatiqu1": "Sauvegarde automatique activ√©e",
    "sauvegardeterminee": "Sauvegarde termin√©e",
    "sauvegardeterminee1": "Sauvegarde termin√©e",
    "seuprepedidofoiregis": "Seu pr√©-pedido foi registrado com sucesso!",
    "seuprepedidofoiregis1": "Seu pr√©-pedido foi registrado com sucesso!",
    "shanghaichine": "Shanghai, Chine",
    "shanghaichine1": "Shanghai, Chine",
    "shanghaichine2": "Shanghai, Chine",
    "shanghaichine3": "Shanghai, Chine",
    "shenzhenchine": "Shenzhen, Chine",
    "shenzhenchine1": "Shenzhen, Chine",
    "shenzhenchine2": "Shenzhen, Chine",
    "shenzhenchine3": "Shenzhen, Chine",
    "shenzhenchine4": "Shenzhen, Chine",
    "shenzhenchine5": "Shenzhen, Chine",
    "shenzhenchine6": "Shenzhen, Chine",
    "shenzhenchine7": "Shenzhen, Chine",
    "shenzhenchine8": "Shenzhen, Chine",
    "shenzhenguangdongchi": "Shenzhen, Guangdong, Chine",
    "specialisteencomposa": "Sp√©cialiste en composants √©lectroniques et appareils grand public",
    "specialisteencomposa1": "Sp√©cialiste en composants √©lectroniques et appareils grand public",
    "specificationstechni3": "Sp√©cifications techniques",
    "specificationstechni4": "Sp√©cifications techniques",
    "stockfaibledetecte": "Stock faible d√©tect√©",
    "stockfaibledetecte1": "Stock faible d√©tect√©",
    "stylecorporateserieu": "Style corporate s√©rieux",
    "stylecorporateserieu1": "Style corporate s√©rieux",
    "styletraditionnelete": "Style traditionnel et √©l√©gant",
    "styletraditionnelete1": "Style traditionnel et √©l√©gant",
    "support": "Support",
    "support242": "Support 24",
    "supportchinetonusine": "Support ChineTonUsine",
    "supportchinetonusine1": "Support ChineTonUsine",
    "supportprioritaire": "Support prioritaire",
    "supportteam2024": "SupportTeam2024!",
    "synchroniseavecl": "Synchronis√© avec l",
    "synchroniseaveclongl": "Synchronis√© avec l'onglet D√©couvrir",
    "systeme2": "Syst√®me",
    "systeme3": "Syst√®me",
    "secateurpro": "S√©cateur Pro",
    "secateurpro1": "S√©cateur Pro",
    "selecteurdelangue": "S√©lecteur de langue",
    "selecteurdelangue1": "S√©lecteur de langue",
    "selecteurdelangue2": "S√©lecteur de langue",
    "selectionnezunecateg": "S√©lectionnez une cat√©gorie",
    "selectionnezunecateg1": "S√©lectionnez une cat√©gorie",
    "selectionnezvosresea": "S√©lectionnez vos r√©seaux sociaux",
    "selectionnezvosresea1": "S√©lectionnez vos r√©seaux sociaux",
    "serumantiage": "S√©rum Anti-√Çge",
    "serumantiage1": "S√©rum Anti-√Çge",
    "serumvitaminec": "S√©rum vitamine C",
    "serumvitaminec1": "S√©rum vitamine C",
    "serumvitaminec2": "S√©rum vitamine C",
    "serumvitaminec3": "S√©rum vitamine C",
    "tauxdereponse": "Taux de r√©ponse",
    "tauxdereponse1": "Taux de r√©ponse",
    "telescpioastronomico": "Telesc√≥pio astron√¥mico 150mm",
    "telescpioastronomico1": "Telesc√≥pio astron√¥mico 150mm",
    "termine": "Termin√©",
    "termine1": "Termin√©",
    "termine2": "Termin√©",
    "termine3": "Termin√©",
    "testcreation": "Test Cr√©ation",
    "testcreation1": "Test Cr√©ation",
    "testetpresentationdu": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "testetpresentationdu1": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "testetpresentationdu2": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "testetpresentationdu3": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "testetpresentationdu4": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "testetpresentationdu5": "Test et pr√©sentation du nouveau Galaxy S24 Ultra",
    "thailande": "Tha√Ølande",
    "thailande1": "Tha√Ølande",
    "thevertpremium": "Th√© Vert Premium",
    "thevertpremium1": "Th√© Vert Premium",
    "totalmessages": "Total Messages",
    "totaldepense1": "Total d√©pens√©",
    "totaldepense2": "Total d√©pens√©",
    "touslesroles1": "Tous les r√¥les",
    "touslesroles2": "Tous les r√¥les",
    "touteslescategories2": "Toutes les cat√©gories",
    "touteslescategories3": "Toutes les cat√©gories",
    "touteslescategories4": "Toutes les cat√©gories",
    "touteslescategories5": "Toutes les cat√©gories",
    "touteslescategories6": "Toutes les cat√©gories",
    "touteslescategories7": "Toutes les cat√©gories",
    "touteslescategories8": "Toutes les cat√©gories",
    "touteslescategories9": "Toutes les cat√©gories",
    "touteslescategories10": "Toutes les cat√©gories",
    "touteslescategories11": "Toutes les cat√©gories",
    "touteslescategories12": "Toutes les cat√©gories",
    "touteslescategories13": "Toutes les cat√©gories",
    "touteslesnotificatio4": "Toutes les notifications ont √©t√© charg√©es",
    "touteslesnotificatio5": "Toutes les notifications ont √©t√© charg√©es",
    "touteslesnotificatio6": "Toutes les notifications ont √©t√© charg√©es",
    "traductionautomatiqu": "Traduction automatique des messages",
    "triplecamera": "Triple cam√©ra",
    "triplecamera1": "Triple cam√©ra",
    "trouvezvotreusineenc": "Trouvez votre usine en Chine en seulement 3 √©tapes",
    "trouvezvotreusineenc1": "Trouvez votre usine en Chine en seulement 3 √©tapes",
    "trouvezvotreusineenc2": "Trouvez votre usine en Chine en seulement 3 √©tapes",
    "typedactivite": "Type d'activit√©",
    "telechargements5": "T√©l√©chargements",
    "telechargements6": "T√©l√©chargements",
    "telechargements7": "T√©l√©chargements",
    "telechargements8": "T√©l√©chargements",
    "telecharger": "T√©l√©charger",
    "telecharger1": "T√©l√©charger",
    "telecharger2": "T√©l√©charger",
    "telecharger3": "T√©l√©charger",
    "telecharger4": "T√©l√©charger",
    "telecharger5": "T√©l√©charger",
    "telecharger6": "T√©l√©charger",
    "telecharger7": "T√©l√©charger",
    "telecharger8": "T√©l√©charger",
    "telecharger9": "T√©l√©charger",
    "telecharger10": "T√©l√©charger",
    "telecharger11": "T√©l√©charger",
    "telecharger12": "T√©l√©charger",
    "telecharger13": "T√©l√©charger",
    "telechargerundocumen": "T√©l√©charger un document",
    "telechargerundocumen1": "T√©l√©charger un document",
    "urlpourletelechargem": "URL pour le t√©l√©chargement\r\n        };\r\n      });\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      const successCount = results.filter(r => r.success).length;\r\n      alert(`${successCount}/${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "urlpourletelechargem1": "URL pour le t√©l√©chargement\r\n        };\r\n      });\r\n\r\n      setDocuments(prev => [...newDocuments, ...prev]);\r\n      \r\n      // Afficher un message de succ√®s\r\n      const successCount = results.filter(r => r.success).length;\r\n      alert(`${successCount}/${files.length} document(s) t√©l√©charg√©(s) avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "validationreussie": "Validation r√©ussie",
    "validationreussie1": "Validation r√©ussie",
    "vaseceramique": "Vase C√©ramique",
    "vaseceramique1": "Vase C√©ramique",
    "vesteimpermeablefabr": "Veste imperm√©able fabriqu√©e √† partir de mat√©riaux recycl√©s, respectueuse de l\\",
    "vesteimpermeablefabr1": "Veste imperm√©able fabriqu√©e √† partir de mat√©riaux recycl√©s, respectueuse de l\\",
    "vesteimpermeablerecy": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy1": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy2": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy3": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy4": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy5": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy6": "Veste imperm√©able recycl√©e",
    "vesteimpermeablerecy7": "Veste imperm√©able recycl√©e",
    "veuillezrenseignerle": "Veuillez renseigner les liens de vos profils",
    "veuillezrenseignerle1": "Veuillez renseigner les liens de vos profils pour chaque r√©seau social s√©lectionn√© :",
    "veuillezrenseignerle2": "Veuillez renseigner les liens de vos profils pour chaque r√©seau social s√©lectionn√© :",
    "veuillezrenseignerle3": "Veuillez renseigner les liens de vos profils pour chaque r√©seau social s√©lectionn√© :",
    "veuillezselectionner": "Veuillez s√©lectionner au moins un r√©seau social",
    "veuillezselectionner1": "Veuillez s√©lectionner au moins un r√©seau social",
    "veuillezselectionner2": "Veuillez s√©lectionner une image valide",
    "veuillezselectionner3": "Veuillez s√©lectionner une image valide",
    "videodepresentationo": "Vid√©o de pr√©sentation ou lien YouTube (optionnel)",
    "videodepresentationo1": "Vid√©o de pr√©sentation ou lien YouTube (optionnel)",
    "visibiliteduprofilmo": "Visibilit√© du profil modifi√©e",
    "visibiliteduprofilmo1": "Visibilit√© du profil modifi√©e",
    "visibiliteduprofilmo2": "Visibilit√© du profil modifi√©e",
    "vocedeveaceitaroster": "Voc√™ deve aceitar os termos e condi√ß√µes",
    "vocedeveaceitaroster1": "Voc√™ deve aceitar os termos e condi√ß√µes",
    "voirlesdetails1": "Voir les d√©tails",
    "voirlesdetails2": "Voir les d√©tails",
    "voirtouteslescategor1": "Voir toutes les cat√©gories",
    "votrecompteseravalid": "Votre compte sera valid√© manuellement par notre √©quipe",
    "votrecompteseravalid1": "Votre compte sera valid√© manuellement par notre √©quipe",
    "votrecompteseravalid2": "Votre compte sera valid√© manuellement par notre √©quipe",
    "votrecompteseravalid3": "Votre compte sera valid√© manuellement par notre √©quipe",
    "votredemandeaeteenvo": "Votre demande a √©t√© envoy√©e pour validation",
    "votredemandeaeteenvo1": "Votre demande a √©t√© envoy√©e pour validation",
    "votredemandeaeteenvo2": "Votre demande a √©t√© envoy√©e pour validation",
    "votredemandeaeteenvo3": "Votre demande a √©t√© envoy√©e pour validation",
    "vousavezdejauncompte": "Vous avez d√©j√† un compte ?",
    "vousavezdejauncompte1": "Vous avez d√©j√† un compte ?",
    "vousdevezaccepterlav": "Vous devez accepter la v√©rification de vos informations",
    "vousdevezaccepterlav1": "Vous devez accepter la v√©rification de vos informations",
    "vousdevezaccepterlav2": "Vous devez accepter la v√©rification de vos informations",
    "vousdevezaccepterles": "Vous devez accepter les conditions g√©n√©rales",
    "vousdevezaccepterles1": "Vous devez accepter les conditions g√©n√©rales",
    "vousdevezaccepterles2": "Vous devez accepter les conditions g√©n√©rales",
    "vousdevezetreconnect1": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect2": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect3": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect4": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect5": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect6": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect7": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect8": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect9": "Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect10": "Vous devez √™tre connect√© en tant qu\\",
    "vuedensembledevotrea": "Vue d'ensemble de votre activit√©",
    "vuedensembledevotrea1": "Vue d'ensemble de votre activit√©",
    "verificationdelasess1": "V√©rification de la session...",
    "verificationdelasess2": "V√©rification de la session...",
    "verificationdelasess3": "V√©rification de la session...",
    "verificationdelasess4": "V√©rification de la session...",
    "verificationqualitep": "V√©rification qualit√© pr√©-exp√©dition",
    "verificationqualitep1": "V√©rification qualit√© pr√©-exp√©dition",
    "verifie1": "V√©rifi√©",
    "verifie2": "V√©rifi√©",
    "verifies1": "V√©rifi√©s",
    "verifies2": "V√©rifi√©s",
    "vetements": "V√™tements",
    "vetements1": "V√™tements",
    "vetements2": "V√™tements",
    "vetements3": "V√™tements",
    "vetements4": "V√™tements",
    "vetements5": "V√™tements",
    "vetements6": "V√™tements",
    "vetements7": "V√™tements",
    "vetements8": "V√™tements",
    "vetements9": "V√™tements",
    "vetements10": "V√™tements",
    "vetements11": "V√™tements",
    "vetementsdetravail": "V√™tements de travail",
    "vetementsdetravail1": "V√™tements de travail",
    "vetementsetaccessoir": "V√™tements et accessoires",
    "vetementsetaccessoir1": "V√™tements et accessoires",
    "youhavenonotificatio": "You have no notifications at the moment",
    "youmustaccepttheterm": "You must accept the terms and conditions",
    "youwillbecontactedto": "You will be contacted to finalize your sourcer registration",
    "yourprofilelinks": "Your Profile Links",
    "yuanchinois2": "Yuan chinois",
    "zhongshanchine": "Zhongshan, Chine",
    "zhongshanchine1": "Zhongshan, Chine",
    "nutilisezcesidentifi": "\\nüí° Utilisez ces identifiants pour tester les diff√©rents r√¥les de l\\",
    "nutilisezcesidentifi1": "\\nüí° Utilisez ces identifiants pour tester les diff√©rents r√¥les de l\\",
    "nverificationenfires": "\\nüíæ V√©rification en Firestore...",
    "nverificationenfires1": "\\nüíæ V√©rification en Firestore...",
    "nverificationdel": "\\nüì± V√©rification de l\\",
    "nidentifiantscrees": "\\nüîê === IDENTIFIANTS CR√â√âS ===",
    "fileindexprogresscon": "]\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}%`);\r\n        }\r\n      );\r\n\r\n      const successUrls = results\r\n        .filter(result => result.success)\r\n        .map(result => result.url!)\r\n        .filter(Boolean);\r\n\r\n      setUploadedFiles(prev => [...prev, ...successUrls]);\r\n      \r\n      alert(`${successUrls.length}/${files.length} fichiers upload√©s avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "fileindexprogresscon1": "]\r\n        },\r\n        (fileIndex, progress) => {\r\n          console.log(`Fichier ${fileIndex + 1}: ${progress}%`);\r\n        }\r\n      );\r\n\r\n      const successUrls = results\r\n        .filter(result => result.success)\r\n        .map(result => result.url!)\r\n        .filter(Boolean);\r\n\r\n      setUploadedFiles(prev => [...prev, ...successUrls]);\r\n      \r\n      alert(`${successUrls.length}/${files.length} fichiers upload√©s avec succ√®s !`);\r\n    } catch (error) {\r\n      console.error(",
    "createdatnewdateupda": "],\r\n                createdAt: new Date(),\r\n                updatedAt: new Date()\r\n            },\r\n            {\r\n                influencerId: profileRef.id,\r\n                brand: ",
    "createdatnewdateupda1": "],\r\n                createdAt: new Date(),\r\n                updatedAt: new Date()\r\n            },\r\n            {\r\n                influencerId: profileRef.id,\r\n                brand: ",
    "lastmessagemockmessa": "],\r\n    lastMessage: mockMessages[1],\r\n    unreadCount: 0,\r\n    subject: ",
    "lastmessagemockmessa1": "],\r\n    lastMessage: mockMessages[2],\r\n    unreadCount: 1,\r\n    subject: ",
    "lastmessagemockmessa2": "],\r\n    lastMessage: mockMessages[3],\r\n    unreadCount: 0,\r\n    subject: ",
    "imagepardefautsipasd": "], // Image par d√©faut si pas d",
    "imagepardefautsipasd1": "], // Image par d√©faut si pas d",
    "datefromdatedatetoda": "];\r\n  dateFrom?: Date;\r\n  dateTo?: Date;\r\n}\r\n\r\nexport interface NotificationResponse {\r\n  notifications: Notification[];\r\n  total: number;\r\n  unreadCount: number;\r\n  hasMore: boolean;\r\n}\r\n\r\nexport interface CreateNotificationRequest {\r\n  title: string;\r\n  message: string;\r\n  type: Notification[",
    "onsearchsetsearchter": "]}\r\n                    onSearch={setSearchTerm}\r\n                    filterComponent={<FilterComponent />}\r\n                    emptyMessage=\"Aucune entreprise trouv√©e\"\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n\r\n            {/* Indicateurs de performance (development only) */}\r\n            {process.env.NODE_ENV === ",
    "divinformationsurles": "]}\r\n              />\r\n            </div>\r\n\r\n            {/* Information sur les formats accept√©s *",
    "divlistedesfichiersu": "]}\r\n            />\r\n          </div>\r\n\r\n          {/* Liste des fichiers upload√©s *",
    "divdivstrongtypessup": "]}\r\n          </div>\r\n          <div>\r\n            <strong>Types support√©s :<",
    "divdivstrongtypessup1": "]}\r\n          </div>\r\n          <div>\r\n            <strong>Types support√©s :<",
    "divlisteavecpaginati": "`}\r\n            </div>\r\n\r\n            {/* Liste avec pagination pour √©viter la virtualisation complexe *",
    "abonnes": "abonn√©s *",
    "abordcreerdanssupaba": "abord cr√©er dans Supabase Auth\r\n            const { data, error } = await fetch(",
    "abordcreerdanssupaba1": "abord cr√©er dans Supabase Auth\r\n            const { data, error } = await fetch(",
    "abordleprofilinfluen": "abord le profil influenceur pour avoir l",
    "abordleprofilinfluen1": "abord le profil influenceur pour avoir l",
    "acceptedepartagermes": "accepte de partager mes statistiques d√©taill√©es sur demande",
    "acceptelesconditions": "accepte les conditions g√©n√©rales",
    "acceptelesconditions1": "accepte les conditions g√©n√©rales",
    "acceptequemesinforma": "accepte que mes informations soient v√©rifi√©es",
    "acceptequemesinforma1": "accepte que mes informations soient v√©rifi√©es",
    "accessibiliteclavier": "accessibilit√© clavier\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === ",
    "accessibiliteclavier1": "accessibilit√© clavier\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === ",
    "accountingchinetousi": "accounting@chinetousine.com",
    "accesacertainesip": "acc√®s √† certaines IP<",
    "activite": "activit√©",
    "activite1": "activit√©",
    "activite2": "activit√©",
    "activite3": "activit√©",
    "activite4": "activit√©",
    "activee": "activ√©e",
    "activee1": "activ√©e",
    "adapteatouslesstyles": "adapte √† tous les styles, que ce soit pour un usage professionnel ou d√©contract√©. Ces lunettes sont parfaites pour la revente en boutiques d",
    "adapteatouslesstyles1": "adapte √† tous les styles, que ce soit pour un usage professionnel ou d√©contract√©. Ces lunettes sont parfaites pour la revente en boutiques d",
    "adapteratousvosbesoi": "adapter √† tous vos besoins : lecture, travail sur √©cran, ou d√©tente. Le dimmer tactile permet un r√©glage pr√©cis de l",
    "adapteratousvosbesoi1": "adapter √† tous vos besoins : lecture, travail sur √©cran, ou d√©tente. Le dimmer tactile permet un r√©glage pr√©cis de l",
    "affairesaveclachine": "affaires avec la Chine",
    "affairesaveclachine1": "affaires avec la Chine",
    "affairesaveclachine2": "affaires avec la Chine",
    "affichagereeliffilet": "affichage r√©el\r\n          if (file.type.startsWith(",
    "aide": "aide",
    "aide1": "aide<",
    "ajoutedition": "ajout/√©dition *",
    "ajoutedition1": "ajout/√©dition *",
    "ajoutedition2": "ajout/√©dition *",
    "ajoutealalisteifresu": "ajoute √† la liste\r\n                        if (result.message.includes(",
    "ajoutealalisteifresu1": "ajoute √† la liste\r\n                        if (result.message.includes(",
    "ancienneversionpourc": "ancienne version pour comparaison *",
    "ancienneversionpourc1": "ancienne version pour comparaison *",
    "apercurapide1": "aper√ßu rapide *",
    "arrivee1": "arriv√©e",
    "arrivee2": "arriv√©e\r\n                  <",
    "arriveecontainersest": "arriv√©e\",\n    \"containers.estimatedDeparture\": \"Date de d√©part estim√©e\",\n    \"containers.status\": \"Statut\",\n    \"containers.status.active\": \"Actif\",\n    \"containers.status.closed\": \"Cl√¥tur√©\",\n    \"containers.capacity\": \"Capacit√©\",\n    \"containers.usedCapacity\": \"Capacit√© utilis√©e\",\n    \"containers.availableCapacity\": \"Capacit√© disponible\",\n    \"containers.totalCapacity\": \"Capacit√© totale\",\n    \"containers.closedMessage\": \"Ce conteneur est cl√¥tur√© et n",
    "assurequeusedcapacit": "assure que usedCapacity ne d√©passe pas totalCapacity\r\n          newStatus = ",
    "assurequeusedcapacit1": "assure que usedCapacity ne d√©passe pas totalCapacity\r\n          newStatus = ",
    "authentificationpriv": "authentification\r\n     */\r\n    private formatAuthError(error: AuthError): string {\r\n        const errorMessages: Record<string, string> = {\r\n            ",
    "authentificationarre": "authentification arr√™t√©e",
    "authentificationarre1": "authentification arr√™t√©e",
    "authentificationsecu": "authentification s√©curis√©...",
    "authentificationsecu1": "authentification s√©curis√©...",
    "authentificationsecu2": "authentification s√©curis√©...",
    "authentificationsecu3": "authentification s√©curis√©...",
    "avezpasdenotificatio": "avez pas de notifications pour le moment\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {notifications.map((notification) => (\r\n                <NotificationItem\r\n                  key={notification.id}\r\n                  notification={notification}\r\n                  onMarkAsRead={handleMarkAsRead}\r\n                  onNotificationClick={handleNotificationClick}\r\n                ",
    "avezpasdenotificatio1": "avez pas de notifications pour le moment\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {notifications.map((notification) => (\r\n                <NotificationItem\r\n                  key={notification.id}\r\n                  notification={notification}\r\n                  onMarkAsRead={handleMarkAsRead}\r\n                  onNotificationClick={handleNotificationClick}\r\n                ",
    "chinetonusine2c999": "chine-ton-usine-2c999",
    "chinetonusine2c9991": "chine-ton-usine-2c999",
    "chinetonusine2c999fi": "chine-ton-usine-2c999.firebaseapp.com",
    "chinetonusine2c999fi1": "chine-ton-usine-2c999.firebaseapp.com",
    "chinetonusine2c999fi2": "chine-ton-usine-2c999.firebasestorage.app",
    "chinetonusine2c999fi3": "chine-ton-usine-2c999.firebasestorage.app",
    "chinetonusinefavorit": "chine-ton-usine-favorites",
    "chinetonusinequote": "chine-ton-usine-quote",
    "chinetonusinequote1": "chine-ton-usine-quote",
    "clientchinetonusinec": "client@chinetonusine.com",
    "clientchinetonusinec1": "client@chinetonusine.com",
    "conditionsd2": "conditions d",
    "conditionsd3": "conditions d",
    "contactecowearcn": "contact@ecowear.cn",
    "contactshanghaielect": "contact@shanghai-electronics.com",
    "contactshenzhenaudio": "contact@shenzhenaudiotech.com",
    "contacttechsupplypro": "contact@techsupplypro.com",
    "contactperson3": "contactPerson",
    "cosmetique": "cosm√©tique",
    "cosmetique1": "cosm√©tique",
    "desactivee": "d√©sactiv√©e",
    "desactivee1": "d√©sactiv√©e",
    "ensembledevotreactiv": "ensemble de votre activit√©",
    "ensembledevotreactiv1": "ensemble de votre activit√©",
    "entrepriseavecoptimi": "entreprise avec optimistic update\r\n            await companyMutation.update(\r\n                prospect.id,\r\n                companyData,\r\n                optimisticUpdateCompany\r\n            );\r\n\r\n            // Mise √† jour du profil\r\n            if (profile) {\r\n                await profileMutation.update(profile.id, profileData);\r\n            } else {\r\n                await profileMutation.insert({\r\n                    ...profileData,\r\n                    company_id: prospect.id,\r\n                    created_at: new Date().toISOString()\r\n                });\r\n            }\r\n\r\n            onClose();\r\n        } catch (err) {\r\n            console.error(",
    "entrepriseavecoptimi1": "entreprise avec optimistic update\r\n            await companyMutation.update(\r\n                prospect.id,\r\n                companyData,\r\n                optimisticUpdateCompany\r\n            );\r\n\r\n            // Mise √† jour du profil\r\n            if (profile) {\r\n                await profileMutation.update(profile.id, profileData);\r\n            } else {\r\n                await profileMutation.insert({\r\n                    ...profileData,\r\n                    company_id: prospect.id,\r\n                    created_at: new Date().toISOString()\r\n                });\r\n            }\r\n\r\n            onClose();\r\n        } catch (err) {\r\n            console.error(",
    "entrepriseavecoptimi2": "entreprise avec optimistic update\r\n            await companyMutation.update(\r\n                prospect.id,\r\n                companyData,\r\n                optimisticUpdateCompany\r\n            );\r\n\r\n            // Mise √† jour du profil\r\n            if (profile) {\r\n                await profileMutation.update(profile.id, profileData);\r\n            } else {\r\n                await profileMutation.insert({\r\n                    ...profileData,\r\n                    company_id: prospect.id,\r\n                    created_at: new Date().toISOString()\r\n                });\r\n            }\r\n\r\n            onClose();\r\n        } catch (err) {\r\n            console.error(",
    "erreurenfrancais": "erreur en fran√ßais\r\n     *",
    "erreurenfrancais1": "erreur en fran√ßais\r\n     *",
    "erreurenfrancaispriv": "erreur en fran√ßais\r\n     */\r\n    private getErrorMessage(errorMessage: string): string {\r\n        const errorMap: Record<string, string> = {\r\n            ",
    "erreuretdesucces": "erreur et de succ√®s *",
    "erreurspecifiquesife": "erreur sp√©cifiques\r\n            if (error.code === ",
    "erreurspecifiquesife1": "erreur sp√©cifiques\r\n            if (error.code === ",
    "estencoursverifierl": "est en cours\r\n\r\n        // V√©rifier l",
    "estencoursverifierl1": "est en cours\r\n\r\n        // V√©rifier l",
    "estpasautorisereturn": "est pas autoris√©`\r\n        };\r\n      }\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n  ",
    "estpasautorisereturn1": "est pas autoris√©`\r\n        };\r\n      }\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n  /**\r\n   * Simulation d",
    "estpasfacilementacce": "est pas facilement accessible\r\n          uploadedAt: new Date(), // Date par d√©faut\r\n          path: itemRef.fullPath,\r\n          metadata: {\r\n            contentType: ",
    "estpasfacilementacce1": "est pas facilement accessible\r\n          uploadedAt: new Date(), // Date par d√©faut\r\n          path: itemRef.fullPath,\r\n          metadata: {\r\n            contentType: ",
    "estpasuneimageverifi": "est pas une image`;\r\n    }\r\n\r\n    // V√©rifier la taille\r\n    if (file.size > maxSizePerImage * 1024 * 1024) {\r\n      return `L",
    "estpasuneimageverifi1": "est pas une image`;\r\n    }\r\n\r\n    // V√©rifier la taille\r\n    if (file.size > maxSizePerImage * 1024 * 1024) {\r\n      return `L",
    "excellenceindustriel": "excellence industrielle chinoise\r\n                        <",
    "existepasouaetedepla": "existe pas ou a √©t√© d√©plac√©e.\n      <",
    "execution": "ex√©cution :<",
    "httpschinetousinecom": "https://chinetousine.com",
    "httpsfacebookcomvotr": "https://facebook.com/votre-profil",
    "httpsinstagramcomvot": "https://instagram.com/votre-profil",
    "httpslinkedincominvo": "https://linkedin.com/in/votre-profil",
    "httpstiktokcomvotrep": "https://tiktok.com/@votre-profil",
    "httpstwitchtvvotrepr": "https://twitch.tv/votre-profil",
    "httpsxcomvotreprofil": "https://x.com/votre-profil",
    "imageuploadeeconstup": "image upload√©e\r\n          const uploadedUrl = `https:",
    "imagesavecredimensio": "images avec redimensionnement automatique\r\n   */\r\n  async uploadImages(\r\n    files: File[],\r\n    options: UploadOptions & {\r\n      maxWidth?: number;\r\n      maxHeight?: number;\r\n      quality?: number;\r\n    } = {},\r\n    onProgress?: (fileIndex: number, progress: number) => void\r\n  ): Promise<UploadResult[]> {\r\n    const processedFiles: File[] = [];\r\n\r\n    // Redimensionner les images si n√©cessaire\r\n    for (const file of files) {\r\n      if (file.type.startsWith(",
    "imagesavecredimensio1": "images avec redimensionnement automatique\r\n   */\r\n  async uploadImages(\r\n    files: File[],\r\n    options: UploadOptions & {\r\n      maxWidth?: number;\r\n      maxHeight?: number;\r\n      quality?: number;\r\n    } = {},\r\n    onProgress?: (fileIndex: number, progress: number) => void\r\n  ): Promise<UploadResult[]> {\r\n    const processedFiles: File[] = [];\r\n\r\n    // Redimensionner les images si n√©cessaire\r\n    for (const file of files) {\r\n      if (file.type.startsWith(",
    "indexdufichiersinece": "index du fichier si n√©cessaire\r\n            });\r\n          }\r\n        });\r\n\r\n        result.successful.push(mediaFile);\r\n        result.totalUploaded++;\r\n      } catch (error) {\r\n        result.failed.push({\r\n          file,\r\n          error: error instanceof Error ? error.message : ",
    "initialisationautoma": "initialisation automatique d√©sactiv√© pour √©viter les erreurs Auth",
    "initialisationautoma1": "initialisation automatique d√©sactiv√© pour √©viter les erreurs Auth",
    "initialisationsecuri": "initialisation s√©curis√© qui n",
    "initialisationsecuri1": "initialisation s√©curis√© qui n",
    "initialisationsecuri2": "initialisation s√©curis√©e:",
    "initialisationsecuri3": "initialisation s√©curis√©e:",
    "initializewithsample": "initializeWithSampleData appel√©e - version simplifi√©e",
    "initializewithsample1": "initializeWithSampleData appel√©e - version simplifi√©e",
    "interfaceconstselect": "interface\r\n    const [selectedImageIndex, setSelectedImageIndex] = useState(0);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [selectedVariants, setSelectedVariants] = useState<Record<string, string>>({});\r\n    const [showImageZoom, setShowImageZoom] = useState(false);\r\n    const [showContactForm, setShowContactForm] = useState(false);\r\n\r\n    ",
    "integrationfirebase": "int√©gration Firebase...",
    "integrationfirebase1": "int√©gration Firebase...",
    "interet": "int√©r√™t\r\n                            <",
    "machine": "machine",
    "machinery2": "machinery",
    "machinery3": "machinery",
    "machinery4": "machinery",
    "machinery5": "machinery",
    "mailtocontactchineto": "mailto:contact@chinetonusine.com",
    "manageprofile": "manage_profile",
    "managerchinetousinec": "manager@chinetousine.com",
    "messagesentconfirmat": "messageSentConfirmation",
    "messages8": "messages",
    "messages9": "messages",
    "messages10": "messages",
    "messages11": "messages",
    "moderatorchinetousin": "moderator@chinetousine.com",
    "myprofile": "myProfile",
    "medical4": "m√©dical",
    "medical5": "m√©dical",
    "notifications11": "notifications",
    "notifications12": "notifications",
    "notifications13": "notifications",
    "notifications14": "notifications",
    "notifications15": "notifications",
    "notificationsall": "notifications.all",
    "notificationsall1": "notifications.all",
    "notificationsallload": "notifications.allLoaded",
    "notificationsallload1": "notifications.allLoaded",
    "notificationsalltype": "notifications.allTypes",
    "notificationsalltype1": "notifications.allTypes",
    "notificationsalltype2": "notifications.allTypes",
    "notificationsclearfi": "notifications.clearFilters",
    "notificationsclearfi1": "notifications.clearFilters",
    "notificationscountpl": "notifications.count.plural",
    "notificationscountpl1": "notifications.count.plural",
    "notificationscountpl2": "notifications.count.plural",
    "notificationscountsi": "notifications.count.singular",
    "notificationscountsi1": "notifications.count.singular",
    "notificationscountsi2": "notifications.count.singular",
    "notificationserror": "notifications.error",
    "notificationserror1": "notifications.error",
    "notificationserrors": "notifications.errors",
    "notificationserrors1": "notifications.errors",
    "notificationsfilters": "notifications.filters",
    "notificationsfilters1": "notifications.filters",
    "notificationsinfo": "notifications.info",
    "notificationsinfo1": "notifications.info",
    "notificationsloading": "notifications.loading",
    "notificationsloading1": "notifications.loading",
    "notificationsmarkall": "notifications.markAllAsRead",
    "notificationsmarkall1": "notifications.markAllAsRead",
    "notificationsmarkasr": "notifications.markAsRead",
    "notificationsmarkasr1": "notifications.markAsRead",
    "notificationsnonotif": "notifications.noNotifications",
    "notificationsnonotif1": "notifications.noNotifications",
    "notificationsnonotif2": "notifications.noNotificationsMessage",
    "notificationsnonotif3": "notifications.noNotificationsMessage",
    "notificationsnonotif4": "notifications.noNotificationsMessage",
    "notificationspayment": "notifications.payments",
    "notificationspayment1": "notifications.payments",
    "notificationspriorit": "notifications.priority.high",
    "notificationspriorit1": "notifications.priority.high",
    "notificationspriorit2": "notifications.priority.low",
    "notificationspriorit3": "notifications.priority.low",
    "notificationspriorit4": "notifications.priority.medium",
    "notificationspriorit5": "notifications.priority.medium",
    "notificationspriorit6": "notifications.priority.urgent",
    "notificationspriorit7": "notifications.priority.urgent",
    "notificationsread": "notifications.read",
    "notificationsread1": "notifications.read",
    "notificationsrefresh": "notifications.refresh",
    "notificationsrefresh1": "notifications.refresh",
    "notificationsseedeta": "notifications.seeDetails",
    "notificationsseedeta1": "notifications.seeDetails",
    "notificationsshipmen": "notifications.shipments",
    "notificationsshipmen1": "notifications.shipments",
    "notificationsstatus": "notifications.status",
    "notificationsstatus1": "notifications.status",
    "notificationssystem": "notifications.system",
    "notificationssystem1": "notifications.system",
    "notificationstimeago": "notifications.timeAgo.days",
    "notificationstimeago1": "notifications.timeAgo.days",
    "notificationstimeago2": "notifications.timeAgo.days",
    "notificationstimeago3": "notifications.timeAgo.hours",
    "notificationstimeago4": "notifications.timeAgo.hours",
    "notificationstimeago5": "notifications.timeAgo.hours",
    "notificationstimeago6": "notifications.timeAgo.minutes",
    "notificationstimeago7": "notifications.timeAgo.minutes",
    "notificationstimeago8": "notifications.timeAgo.minutes",
    "notificationstimeago9": "notifications.timeAgo.now",
    "notificationstimeago10": "notifications.timeAgo.now",
    "notificationstimeago11": "notifications.timeAgo.now",
    "notificationstitle": "notifications.title",
    "notificationstitle1": "notifications.title",
    "notificationstitle2": "notifications.title",
    "notificationstype": "notifications.type",
    "notificationstype1": "notifications.type",
    "notificationsunread": "notifications.unread",
    "notificationsunread1": "notifications.unread",
    "notificationswarning": "notifications.warnings",
    "notificationswarning1": "notifications.warnings",
    "offresadapteesauxbes": "offres adapt√©es aux besoins de votre entreprise<",
    "ontpaspuetrecrees": "ont pas pu √™tre cr√©√©s",
    "ontpaspuetrecrees1": "ont pas pu √™tre cr√©√©s",
    "ontpaspuetrecreesils": "ont pas pu √™tre cr√©√©s (ils existent peut-√™tre d√©j√†)",
    "ontpaspuetrecreesils1": "ont pas pu √™tre cr√©√©s (ils existent peut-√™tre d√©j√†)",
    "operation": "op√©ration",
    "operation1": "op√©ration",
    "orienterlalumiereexa": "orienter la lumi√®re exactement o√π vous en avez besoin. Le port USB int√©gr√© vous permet de charger vos appareils directement depuis la lampe.\r\n\r\nConstruction robuste en alliage d",
    "orienterlalumiereexa1": "orienter la lumi√®re exactement o√π vous en avez besoin. Le port USB int√©gr√© vous permet de charger vos appareils directement depuis la lampe.\r\n\r\nConstruction robuste en alliage d",
    "oucliquezpourselecti2": "ou cliquez pour s√©lectionner",
    "oucliquezpourselecti3": "ou cliquez pour s√©lectionner",
    "oucliquezpourselecti4": "ou cliquez pour s√©lectionner",
    "oucliquezpourselecti5": "ou cliquez pour s√©lectionner",
    "oucliquezpourselecti6": "ou cliquez pour s√©lectionner des images",
    "oucliquezpourselecti7": "ou cliquez pour s√©lectionner des images",
    "personnalise": "personnalis√©",
    "personnalise1": "personnalis√©",
    "politiquedeconfident6": "politique de confidentialit√©",
    "politiquedeconfident7": "politique de confidentialit√©",
    "politiquedeconfident8": "politique de confidentialit√©",
    "profile6": "profile",
    "profile7": "profile",
    "pushmessages": "pushMessages",
    "qualitychinetousinec": "quality@chinetousine.com",
    "qualite1": "qualit√©",
    "qualite2": "qualit√©",
    "reussie": "r√©ussie",
    "reussie1": "r√©ussie",
    "reussie2": "r√©ussie",
    "reussie3": "r√©ussie",
    "salesbeijingmachiner": "sales@beijing-machinery.com",
    "sourcerchinetonusine": "sourcer@chinetonusine.com",
    "supportchinetonusine2": "support@chinetonusine.com",
    "supportchinetousinec": "support@chinetousine.com",
    "termosdeservico": "termos de servi√ßo",
    "termosdeservico1": "termos de servi√ßo",
    "terminosdeservicio": "t√©rminos de servicio",
    "terminosdeservicio1": "t√©rminos de servicio",
    "terminosdeuso": "t√©rminos de uso",
    "terminosdeuso1": "t√©rminos de uso",
    "unappelapiawaitnewpr": "un appel API\r\n    await new Promise(resolve => setTimeout(resolve, 200));\r\n    \r\n    mockNotifications = mockNotifications.filter(n => n.id !== notificationId);\r\n  }\r\n  ",
    "unappelapiawaitnewpr1": "un appel API\r\n    await new Promise(resolve => setTimeout(resolve, 200));\r\n    \r\n    mockNotifications = mockNotifications.map(notification => \r\n      notificationIds.includes(notification.id) \r\n        ? { ...notification, isRead: true, updatedAt: new Date() }\r\n        : notification\r\n    );\r\n  }\r\n\r\n  async markAllAsRead(): Promise<void> {\r\n    ",
    "unappelapiawaitnewpr2": "un appel API\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    \r\n    let filteredNotifications = [...mockNotifications];\r\n\r\n    // Appliquer les filtres\r\n    if (filters) {\r\n      if (filters.isRead !== undefined) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.isRead === filters.isRead);\r\n      }\r\n      if (filters.type) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.type === filters.type);\r\n      }\r\n      if (filters.priority) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.priority === filters.priority);\r\n      }\r\n      if (filters.dateFrom) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.createdAt >= filters.dateFrom!);\r\n      }\r\n      if (filters.dateTo) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.createdAt <= filters.dateTo!);\r\n      }\r\n    }\r\n\r\n    // Trier par date d√©croissante\r\n    filteredNotifications.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n\r\n    ",
    "unappelapiawaitnewpr3": "un appel API\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    \r\n    let filteredNotifications = [...mockNotifications];\r\n\r\n    // Appliquer les filtres\r\n    if (filters) {\r\n      if (filters.isRead !== undefined) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.isRead === filters.isRead);\r\n      }\r\n      if (filters.type) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.type === filters.type);\r\n      }\r\n      if (filters.priority) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.priority === filters.priority);\r\n      }\r\n      if (filters.dateFrom) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.createdAt >= filters.dateFrom!);\r\n      }\r\n      if (filters.dateTo) {\r\n        filteredNotifications = filteredNotifications.filter(n => n.createdAt <= filters.dateTo!);\r\n      }\r\n    }\r\n\r\n    // Trier par date d√©croissante\r\n    filteredNotifications.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n\r\n    // Pagination\r\n    const startIndex = (page - 1) * limit;\r\n    const endIndex = startIndex + limit;\r\n    const paginatedNotifications = filteredNotifications.slice(startIndex, endIndex);\r\n\r\n    const unreadCount = mockNotifications.filter(n => !n.isRead).length;\r\n\r\n    return {\r\n      notifications: paginatedNotifications,\r\n      total: filteredNotifications.length,\r\n      unreadCount,\r\n      hasMore: endIndex < filteredNotifications.length\r\n    };\r\n  }\r\n\r\n  async markAsRead(notificationIds: string[]): Promise<void> {\r\n    ",
    "unappelapiawaitnewpr4": "un appel API\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    \r\n    mockNotifications = mockNotifications.map(notification => ({\r\n      ...notification,\r\n      isRead: true,\r\n      updatedAt: new Date()\r\n    }));\r\n  }\r\n\r\n  async createNotification(request: CreateNotificationRequest): Promise<Notification> {\r\n    ",
    "unchargeursansfilsta": "un chargeur sans fil standard. Le design ultra-fin et √©l√©gant s",
    "unchargeursansfilsta1": "un chargeur sans fil standard. Le design ultra-fin et √©l√©gant s",
    "unconteneuretpotenti": "un conteneur et potentiellement son statut.\r\n   * Dans une application r√©elle, cela ferait un appel API pour mettre √† jour la base de donn√©es.\r\n   * @param containerId L",
    "undesrolesspecifies": "un des r√¥les sp√©cifi√©s\r\n     *",
    "unecranamoledhdde14p": "un √©cran AMOLED HD de 1.4 pouces, elle offre une clart√© exceptionnelle m√™me en plein soleil. Le syst√®me GPS int√©gr√© permet un suivi pr√©cis de vos activit√©s sportives, tandis que le capteur de fr√©quence cardiaque surveille votre sant√© 24h",
    "unemiseajourdenoscon": "une mise √† jour de nos conditions g√©n√©rales de vente qui entrera en vigueur le 1er f√©vrier 2024.",
    "unemiseajourdenoscon1": "une mise √† jour de nos conditions g√©n√©rales de vente qui entrera en vigueur le 1er f√©vrier 2024.",
    "unemiseajourdenoscon2": "une mise √† jour de nos conditions g√©n√©rales de vente qui entrera en vigueur le 1er f√©vrier 2024.",
    "unequalitesonoreprem": "une qualit√© sonore premium et d\\",
    "unequalitesonoreprem1": "une qualit√© sonore premium et d\\",
    "unites": "unit√©s",
    "unites1": "unit√©s",
    "uploadprivatemockmod": "upload\r\n  private mockMode = true; // Activer le mode simulation\r\n\r\n  /**\r\n   * Upload un seul fichier\r\n   */\r\n  async uploadFile(\r\n    file: File, \r\n    options: UploadOptions = {},\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<UploadResult> {\r\n    try {\r\n      // Validation du fichier\r\n      const validation = this.validateFile(file, options);\r\n      if (!validation.valid) {\r\n        return { success: false, error: validation.error };\r\n      }\r\n\r\n      if (this.mockMode) {\r\n        return this.simulateUpload(file, options, onProgress);\r\n      }\r\n\r\n      // Upload r√©el avec FormData\r\n      const formData = new FormData();\r\n      formData.append(",
    "uploadprivatemockmod1": "upload\r\n  private mockMode = true; // Activer le mode simulation\r\n\r\n  /**\r\n   * Upload un seul fichier\r\n   */\r\n  async uploadFile(\r\n    file: File, \r\n    options: UploadOptions = {},\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<UploadResult> {\r\n    try {\r\n      // Validation du fichier\r\n      const validation = this.validateFile(file, options);\r\n      if (!validation.valid) {\r\n        return { success: false, error: validation.error };\r\n      }\r\n\r\n      if (this.mockMode) {\r\n        return this.simulateUpload(file, options, onProgress);\r\n      }\r\n\r\n      // Upload r√©el avec FormData\r\n      const formData = new FormData();\r\n      formData.append(",
    "uploadpourlestestspr": "upload pour les tests\r\n   */\r\n  private simulateUpload(\r\n    file: File,\r\n    options: UploadOptions,\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<UploadResult> {\r\n    return new Promise((resolve) => {\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += Math.random() * 25;\r\n        if (progress >= 100) {\r\n          progress = 100;\r\n          clearInterval(interval);\r\n          \r\n          // Pour les images, cr√©er un data URL pour l",
    "uploadpourlestestspr1": "upload pour les tests\r\n   */\r\n  private simulateUpload(\r\n    file: File,\r\n    options: UploadOptions,\r\n    onProgress?: (progress: number) => void\r\n  ): Promise<UploadResult> {\r\n    return new Promise((resolve) => {\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += Math.random() * 25;\r\n        if (progress >= 100) {\r\n          progress = 100;\r\n          clearInterval(interval);\r\n          \r\n          // Pour les images, cr√©er un data URL pour l",
    "useauthdoitetreutili": "useAuth doit √™tre utilis√© dans un AuthProvider",
    "useauthdoitetreutili1": "useAuth doit √™tre utilis√© dans un AuthProvider",
    "useauthdoitetreutili2": "useAuth doit √™tre utilis√© dans un AuthProvider",
    "useauthdoitetreutili3": "useAuth doit √™tre utilis√© dans un AuthProvider",
    "usurequotidiennelesm": "usure quotidienne. Les multiples compartiments organisent efficacement vos affaires : documents, c√¢bles, power bank, et accessoires.\r\n\r\nParfait pour les voyages d",
    "utilisationetnotrepo": "utilisation et notre politique de confidentialit√©.",
    "utilisationetnotrepo1": "utilisation et notre politique de confidentialit√©.\",\n    \"termsOfUse\": \"conditions d",
    "utilisecettecremedep": "utilise cette cr√®me depuis 3 semaines et je vois d√©j√† des r√©sultats. Ma peau est plus hydrat√©e et plus ferme.",
    "utilisecettecremedep1": "utilise cette cr√®me depuis 3 semaines et je vois d√©j√† des r√©sultats. Ma peau est plus hydrat√©e et plus ferme.",
    "yauraaucunappelafire": "y aura AUCUN appel √† Firebase Auth\r\n *",
    "yauraaucunappelafire1": "y aura AUCUN appel √† Firebase Auth\r\n */\r\n\r\nimport { doc, setDoc } from ",
    "prochainesetapes1dec": "}\r\n\r\nüéØ Prochaines √©tapes:\r\n1. D√©connectez-vous de votre session actuelle\r\n2. Connectez-vous avec ces identifiants\r\n3. Vous devriez √™tre redirig√© vers ",
    "buttondivdivdivdivde": "}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Description d√©taill√©e *",
    "spandivcontactinfo": "}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Contact Info *",
    "createdaccountselser": "}`,\r\n                createdAccounts\r\n            };\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: `Aucun compte cr√©√©. Erreurs: ${errors.join(",
    "createdaccountselser1": "}`,\r\n                createdAccounts\r\n            };\r\n        } else {\r\n            return {\r\n                success: false,\r\n                message: `Aucun compte cr√©√©. Erreurs: ${errors.join(",
    "actualiserbuttondivd": "}`} />\r\n                                Actualiser\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Messages *",
    "reinitialisationcomp": "}`} />\r\n                    R√©initialisation Compl√®te\r\n                <",
    "headeravecbarrederec": "}`}>\r\n      {/* Header avec barre de recherche *",
    "headeravecbarrederec1": "}`}>\r\n      {/* Header avec barre de recherche *",
    "tupreordenhasidoregi": "¬°Tu preorden ha sido registrada con √©xito!",
    "tupreordenhasidoregi1": "¬°Tu preorden ha sido registrada con √©xito!",
    "al": "√Ä l",
    "alinstant": "√Ä l'instant",
    "al1": "√Ä l\\",
    "al2": "√Ä l\\",
    "cavavous": "√áA VA VOUS",
    "cavavous1": "√áA VA VOUS",
    "cavavous2": "√áA VA VOUS",
    "cavavous3": "√áA VA VOUS",
    "cavavousplaire": "√áa va vous plaire",
    "cavavousplaire1": "√áa va vous plaire",
    "cavavousplaire2": "√áa va vous plaire",
    "cavavousplaire3": "√áa va vous plaire",
    "cavavousplaire4": "√áa va vous plaire",
    "cavavousplaire5": "√áa va vous plaire",
    "cavavousplaire6": "√áa va vous plaire",
    "cavavousplaire7": "√áa va vous plaire",
    "educatifludique": "√âDUCATIF & LUDIQUE",
    "educatifludique1": "√âDUCATIF & LUDIQUE",
    "educatifludique2": "√âDUCATIF & LUDIQUE",
    "educatifludique3": "√âDUCATIF & LUDIQUE",
    "educatifludique4": "√âDUCATIF & LUDIQUE",
    "educatifludique5": "√âDUCATIF & LUDIQUE",
    "electronique": "√âLECTRONIQUE",
    "electronique1": "√âLECTRONIQUE",
    "electronique2": "√âLECTRONIQUE",
    "electronique3": "√âLECTRONIQUE",
    "electronique4": "√âLECTRONIQUE",
    "electronique5": "√âLECTRONIQUE",
    "equipementindustriel": "√âQUIPEMENT INDUSTRIEL",
    "equipementindustriel1": "√âQUIPEMENT INDUSTRIEL",
    "equipementindustriel2": "√âQUIPEMENT INDUSTRIEL",
    "equipementindustriel3": "√âQUIPEMENT INDUSTRIEL",
    "equipementindustriel4": "√âQUIPEMENT INDUSTRIEL",
    "equipementindustriel5": "√âQUIPEMENT INDUSTRIEL",
    "echec": "√âchec",
    "echec1": "√âchec",
    "echecdelasuppression": "√âchec de la suppression: ",
    "echecdelasuppression1": "√âchec de la suppression: ",
    "echecdepaiementcriti": "√âchec de paiement critique",
    "echecdepaiementcriti1": "√âchec de paiement critique",
    "echecdesynchronisati": "√âchec de synchronisation avec l\\",
    "echecdesynchronisati1": "√âchec de synchronisation avec l\\",
    "ecouteursbluetooth": "√âcouteurs Bluetooth",
    "ecouteursbluetooth1": "√âcouteurs Bluetooth",
    "ecouteursbluetooth2": "√âcouteurs Bluetooth",
    "ecouteursbluetooth3": "√âcouteurs Bluetooth",
    "ecouteursbluetooth4": "√âcouteurs Bluetooth",
    "ecouteursbluetooth5": "√âcouteurs Bluetooth",
    "ecouteursbluetooth6": "√âcouteurs Bluetooth",
    "ecouteursbluetooth7": "√âcouteurs Bluetooth",
    "ecouteursbluetooth8": "√âcouteurs Bluetooth",
    "ecouteursbluetooth9": "√âcouteurs Bluetooth",
    "ecouteursbluetooth50": "√âcouteurs Bluetooth 5.0 TWS Pro",
    "ecouteursbluetooth501": "√âcouteurs Bluetooth 5.0 TWS Pro",
    "ecouteursbluetoothpr": "√âcouteurs Bluetooth Premium",
    "ecouteursbluetoothpr1": "√âcouteurs Bluetooth Premium",
    "ecouteursbluetoothsa": "√âcouteurs Bluetooth Sans Fil",
    "ecouteursbluetoothsa1": "√âcouteurs Bluetooth Sans Fil",
    "ecouteursbluetoothda": "√âcouteurs Bluetooth dans leur bo√Ætier",
    "ecouteursbluetoothda1": "√âcouteurs Bluetooth dans leur bo√Ætier",
    "ecouteursbluetooth10": "√âcouteurs bluetooth",
    "ecouteursbluetooth11": "√âcouteurs bluetooth",
    "ecouteursencoursd": "√âcouteurs en cours d\\",
    "ecouteursencoursd1": "√âcouteurs en cours d\\",
    "ecran": "√âcran",
    "ecran1": "√âcran",
    "ecran2": "√âcran",
    "ecran3": "√âcran",
    "electronique6": "√âlectronique",
    "electronique7": "√âlectronique",
    "electronique8": "√âlectronique",
    "electronique9": "√âlectronique",
    "electronique10": "√âlectronique",
    "electronique11": "√âlectronique",
    "electronique12": "√âlectronique",
    "electronique13": "√âlectronique",
    "electronique14": "√âlectronique",
    "electronique15": "√âlectronique",
    "electronique16": "√âlectronique",
    "electronique17": "√âlectronique",
    "electronique18": "√âlectronique",
    "electronique19": "√âlectronique",
    "electronique20": "√âlectronique",
    "electronique21": "√âlectronique",
    "electronique22": "√âlectronique",
    "electronique23": "√âlectronique",
    "electronique24": "√âlectronique",
    "electronique25": "√âlectronique",
    "electronique26": "√âlectronique",
    "electronique27": "√âlectronique",
    "electronique28": "√âlectronique",
    "electronique29": "√âlectronique",
    "electronique30": "√âlectronique",
    "electronique31": "√âlectronique",
    "electronique32": "√âlectronique",
    "electronique33": "√âlectronique",
    "electronique34": "√âlectronique",
    "electronique35": "√âlectronique",
    "electronique36": "√âlectronique",
    "electronique37": "√âlectronique",
    "electronique38": "√âlectronique",
    "electronique39": "√âlectronique",
    "electronique40": "√âlectronique",
    "electronique41": "√âlectronique",
    "electronique42": "√âlectronique",
    "electronique43": "√âlectronique",
    "electronique44": "√âlectronique",
    "electronique45": "√âlectronique",
    "electronique46": "√âlectronique",
    "electronique47": "√âlectronique",
    "electronique48": "√âlectronique",
    "electronique49": "√âlectronique",
    "electronique50": "√âlectronique",
    "electronique51": "√âlectronique",
    "electronique52": "√âlectronique",
    "electronique53": "√âlectronique",
    "electronique54": "√âlectronique",
    "electronique55": "√âlectronique",
    "electronique56": "√âlectronique",
    "electronique57": "√âlectronique",
    "electronique58": "√âlectronique",
    "electronique59": "√âlectronique",
    "electronique60": "√âlectronique",
    "electronique61": "√âlectronique",
    "electronique62": "√âlectronique",
    "electronique63": "√âlectronique",
    "electroniqueetgadget": "√âlectronique et gadgets.",
    "electroniqueetgadget1": "√âlectronique et gadgets.",
    "electroniquegrandpub": "√âlectronique grand public",
    "electroniquegrandpub1": "√âlectronique grand public",
    "electroniquegrandpub2": "√âlectronique grand public",
    "electroniquegrandpub3": "√âlectronique grand public",
    "eleve": "√âlev√©",
    "eleve1": "√âlev√©",
    "epaisseur": "√âpaisseur",
    "epaisseur1": "√âpaisseur",
    "epicesdumonde": "√âpices du Monde",
    "epicesdumonde1": "√âpices du Monde",
    "epicesetcondiments": "√âpices et condiments",
    "epicesetcondiments1": "√âpices et condiments",
    "equipesupport": "√âquipe Support",
    "equipesupport1": "√âquipe Support",
    "equipesupport2": "√âquipe Support",
    "equipeventes": "√âquipe Ventes",
    "equipeventes1": "√âquipe Ventes",
    "equipementsaudio": "√âquipements audio",
    "equipementsaudio1": "√âquipements audio",
    "equipementsculinaire": "√âquipements culinaires",
    "equipementsculinaire1": "√âquipements culinaires",
    "equipementsdesoudage": "√âquipements de soudage",
    "equipementsdesoudage1": "√âquipements de soudage",
    "equipementsgarage": "√âquipements garage",
    "equipementsgarage1": "√âquipements garage",
    "etageresindustrielle": "√âtag√®res industrielles",
    "etageresindustrielle1": "√âtag√®res industrielles",
    "etanche": "√âtanche",
    "etanche1": "√âtanche",
    "etancheip68": "√âtanche IP68",
    "etancheip681": "√âtanche IP68",
    "etancheite": "√âtanch√©it√©",
    "etancheite1": "√âtanch√©it√©",
    "etatsunis": "√âtats-Unis",
    "etatsunis1": "√âtats-Unis",
    "etatsunis2": "√âtats-Unis",
    "etatsunis3": "√âtats-Unis",
    "etatsunis4": "√âtats-Unis",
    "etatsunis5": "√âtats-Unis",
    "etatsunis6": "√âtats-Unis",
    "etatsunis7": "√âtats-Unis",
    "etatsunis8": "√âtats-Unis",
    "etatsunis9": "√âtats-Unis",
    "etatsunis10": "√âtats-Unis",
    "etatsunis11": "√âtats-Unis",
    "evolutiondesventes": "√âvolution des ventes",
    "evolutiondesventes1": "√âvolution des ventes",
    "a156poucesiloffreune": "√† 15.6 pouces, il offre une protection optimale gr√¢ce √† son rembourrage haute densit√©. Le port USB int√©gr√© permet de charger vos appareils en d√©placement.\r\n\r\nFabriqu√© en tissu imperm√©able haute qualit√©, il r√©siste aux intemp√©ries et √† l",
    "a8imagesformatsaccep": "√† 8 images. Formats accept√©s: JPG, PNG, GIF. Taille max par image.",
    "eblouissementetameli": "√©blouissement et am√©liorent le contraste pour une vision claire en toutes circonstances. La monture en alliage ultra-l√©ger garantit un confort de port exceptionnel m√™me lors d",
    "eblouissementetameli1": "√©blouissement et am√©liorent le contraste pour une vision claire en toutes circonstances. La monture en alliage ultra-l√©ger garantit un confort de port exceptionnel m√™me lors d",
    "echouee": "√©chou√©e",
    "echouee1": "√©chou√©e",
    "echouee2": "√©chou√©e",
    "echouee3": "√©chou√©e",
    "ecoute": "√©coute.",
    "ecoute1": "√©coute.",
    "ecouteurmisenplaceif": "√©couteur mis en place\n        if (mounted) {\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(",
    "ecouteurmisenplaceif1": "√©couteur mis en place\n        if (mounted) {\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(",
    "ecouteuronauthstatec": "√©couteur onAuthStateChanged s",
    "ecouteuronauthstatec1": "√©couteur onAuthStateChanged s",
    "ecouteuronauthstatec2": "√©couteur onAuthStateChanged s",
    "ecouteuronauthstatec3": "√©couteur onAuthStateChanged s",
    "ecranconstgetvisible": "√©cran\r\n  const getVisibleCount = () => {\r\n    if (typeof window === ",
    "ecriredansfirestoree": "√©crire dans Firestore et RIEN d",
    "ecriredansfirestoree1": "√©crire dans Firestore et RIEN d",
    "edition": "√©dition *",
    "editionmobiles": "√©dition mobiles *",
    "electronique64": "√©lectronique",
    "electronique65": "√©lectronique",
    "electronique66": "√©lectronique",
    "electronique67": "√©lectronique",
    "energie": "√©nergie *",
    "energie1": "√©nergie *",
    "equipeduportugal": "√©quipe du Portugal",
    "equipeduportugal1": "√©quipe du Portugal",
    "equipeduportugal2": "√©quipe du Portugal",
    "equipement": "√©quipement",
    "equipement1": "√©quipement",
    "equipementselectroni": "√©quipements √©lectroniques et de composants high-tech",
    "equipementselectroni1": "√©quipements √©lectroniques et de composants high-tech",
    "etancheiteip68cettem": "√©tanch√©it√© IP68, cette montre vous accompagne dans toutes vos aventures. Compatible avec iOS et Android, elle synchronise automatiquement vos donn√©es de sant√© et notifications.\r\n\r\nParfaite pour les professionnels actifs et les sportifs exigeants, cette montre connect√©e red√©finit les standards de l",
    "etancheiteip68cettem1": "√©tanch√©it√© IP68, cette montre vous accompagne dans toutes vos aventures. Compatible avec iOS et Android, elle synchronise automatiquement vos donn√©es de sant√© et notifications.\r\n\r\nParfaite pour les professionnels actifs et les sportifs exigeants, cette montre connect√©e red√©finit les standards de l",
    "etat": "√©tat ",
    "etat1": "√©tat ",
    "etat2": "√©tat ",
    "etat3": "√©tat ",
    "etatfirebasedetecte": "√©tat Firebase d√©tect√©:",
    "etatfirebasedetecte1": "√©tat Firebase d√©tect√©:",
    "etatd": "√©tat d",
    "etatd1": "√©tat d",
    "etatd2": "√©tat d",
    "etatd3": "√©tat d",
    "etatd4": "√©tat d",
    "etatduserviceconsthe": "√©tat du service\n        const health = await firebaseAuthService.checkHealth();\n        console.log(",
    "etatduserviceconsthe1": "√©tat du service\n        const health = await firebaseAuthService.checkHealth();\n        console.log(",
    "etatlocalsetnotifica": "√©tat local\r\n      setNotifications(prev =>\r\n        prev.map(notification =>\r\n          notification.id === notificationId\r\n            ? { ...notification, isRead: true }\r\n            : notification\r\n        )\r\n      );\r\n      \r\n      ",
    "etatlocalsetnotifica1": "√©tat local\r\n      setNotifications(prev =>\r\n        prev.map(notification => ({ ...notification, isRead: true }))\r\n      );\r\n      \r\n      setUnreadCount(0);\r\n      return true;\r\n    } catch (err) {\r\n      console.error(",
    "messagesdetestdejaex": "‚ÑπÔ∏è Messages de test d√©j√† existants ou erreur:",
    "messagesdetestdejaex1": "‚ÑπÔ∏è Messages de test d√©j√† existants ou erreur:",
    "messagesdetestdejaex2": "‚ÑπÔ∏è Messages de test d√©j√† existants ou erreur:",
    "erreurmiseajouractiv": "‚ö†Ô∏è Erreur mise √† jour activit√©:",
    "erreurmiseajouractiv1": "‚ö†Ô∏è Erreur mise √† jour activit√©:",
    "diagnostictermine": "‚úÖ === DIAGNOSTIC TERMIN√â ===",
    "diagnostictermine1": "‚úÖ === DIAGNOSTIC TERMIN√â ===",
    "basededonneesreiniti": "‚úÖ Base de donn√©es r√©initialis√©e avec succ√®s !",
    "basededonneesreiniti1": "‚úÖ Base de donn√©es r√©initialis√©e avec succ√®s !",
    "correctionautomatiqu": "‚úÖ Correction automatique termin√©e - Reconnectez-vous",
    "donneesdedemonstrati": "‚úÖ Donn√©es de d√©monstration initialis√©es",
    "donneesdedemonstrati1": "‚úÖ Donn√©es de d√©monstration initialis√©es",
    "donneesdetestcreeesa": "‚úÖ Donn√©es de test cr√©√©es avec succ√®s",
    "donneesdetestcreeesa1": "‚úÖ Donn√©es de test cr√©√©es avec succ√®s",
    "donneesdetestnettoye": "‚úÖ Donn√©es de test nettoy√©es",
    "donneesdetestnettoye1": "‚úÖ Donn√©es de test nettoy√©es",
    "donneesinfluenceurde": "‚úÖ Donn√©es influenceur de test cr√©√©es avec succ√®s !",
    "donneesinfluenceurde1": "‚úÖ Donn√©es influenceur de test cr√©√©es avec succ√®s !",
    "listerechargeeavecsu": "‚úÖ Liste recharg√©e avec succ√®s",
    "listerechargeeavecsu1": "‚úÖ Liste recharg√©e avec succ√®s",
    "messagesdetestcrees": "‚úÖ Messages de test cr√©√©s",
    "messagesdetestcrees1": "‚úÖ Messages de test cr√©√©s",
    "servicesfirebasedete": "‚úÖ Services Firebase d√©tect√©s\\n",
    "servicesfirebasedete1": "‚úÖ Services Firebase d√©tect√©s\\n",
    "testultimedocumentcr": "‚úÖ TEST ULTIME: Document cr√©√© avec API pure",
    "testultimedocumentcr1": "‚úÖ TEST ULTIME: Document cr√©√© avec API pure",
    "testultimesuccesdocu": "‚úÖ TEST ULTIME: Succ√®s - Document cr√©√©",
    "testultimesuccesdocu1": "‚úÖ TEST ULTIME: Succ√®s - Document cr√©√©",
    "erreurcreationdirect": "‚ùå Erreur cr√©ation directe:",
    "erreurcreationdirect1": "‚ùå Erreur cr√©ation directe:",
    "erreurlorsdelacreati36": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati37": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati38": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati39": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati40": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati41": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati42": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati43": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati44": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati45": "‚ùå Erreur lors de la cr√©ation de l\\",
    "erreurlorsdelacreati46": "‚ùå Erreur lors de la cr√©ation des donn√©es de test:",
    "erreurlorsdelacreati47": "‚ùå Erreur lors de la cr√©ation des donn√©es de test:",
    "erreurlorsdelacreati48": "‚ùå Erreur lors de la cr√©ation des donn√©es test:",
    "erreurlorsdelacreati49": "‚ùå Erreur lors de la cr√©ation des donn√©es test:",
    "erreurlorsdelacreati50": "‚ùå Erreur lors de la cr√©ation directe:",
    "erreurlorsdelacreati51": "‚ùå Erreur lors de la cr√©ation directe:",
    "erreurlorsdelacreati52": "‚ùå Erreur lors de la cr√©ation via Cloud Functions:",
    "erreurlorsdelacreati53": "‚ùå Erreur lors de la cr√©ation via Cloud Functions:",
    "erreurlorsdelacreati54": "‚ùå Erreur lors de la cr√©ation:",
    "erreurlorsdelacreati55": "‚ùå Erreur lors de la cr√©ation:",
    "erreurlorsdelamiseaj30": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj31": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj32": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj33": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj34": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelamiseaj35": "‚ùå Erreur lors de la mise √† jour:",
    "erreurlorsdelarecupe24": "‚ùå Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelarecupe25": "‚ùå Erreur lors de la r√©cup√©ration des statistiques:",
    "erreurlorsdelareinit": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelareinit1": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelareinit2": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelareinit3": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelareinit4": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelareinit5": "‚ùå Erreur lors de la r√©initialisation:",
    "erreurlorsdelasuppre": "‚ùå Erreur lors de la suppression du profil:",
    "erreurlorsdelaverifi6": "‚ùå Erreur lors de la v√©rification Firestore:",
    "erreurlorsdelaverifi7": "‚ùå Erreur lors de la v√©rification Firestore:",
    "erreurlorsdelaverifi8": "‚ùå Erreur lors de la v√©rification du r√¥le:",
    "erreurlorsdelaverifi9": "‚ùå Erreur lors de la v√©rification du r√¥le:",
    "erreurlorsdelaverifi10": "‚ùå Erreur lors de la v√©rification:",
    "erreurlorsdelaverifi11": "‚ùå Erreur lors de la v√©rification:",
    "erreurlorsdunettoyag": "‚ùå Erreur lors du nettoyage des donn√©es:",
    "erreurlorsdunettoyag1": "‚ùå Erreur lors du nettoyage des donn√©es:",
    "erreurobtentionresum": "‚ùå Erreur obtention r√©sum√©:",
    "erreurobtentionresum1": "‚ùå Erreur obtention r√©sum√©:",
    "impossibledecreerl3": "‚ùå Impossible de cr√©er l\\",
    "impossibledecreerl4": "‚ùå Impossible de cr√©er l\\",
    "impossibledecreerl5": "‚ùå Impossible de cr√©er l\\",
    "vousdevezetreconnect11": "‚ùå Vous devez √™tre connect√© en tant qu\\",
    "vousdevezetreconnect12": "‚ùå Vous devez √™tre connect√© en tant qu\\",
    "migrationtermineeave": "üéâ Migration termin√©e avec succ√®s !",
    "migrationtermineeave1": "üéâ Migration termin√©e avec succ√®s !",
    "documentfirestorecre": "üìÑ Document Firestore cr√©√© avec succ√®s",
    "documentfirestorecre1": "üìÑ Document Firestore cr√©√© avec succ√®s",
    "documentfirestorecre2": "üìÑ Document Firestore cr√©√© sur instance principale",
    "documentfirestorecre3": "üìÑ Document Firestore cr√©√© sur instance principale",
    "donneessauvegardees": "üìä Donn√©es sauvegard√©es:",
    "donneessauvegardees1": "üìä Donn√©es sauvegard√©es:",
    "donnees": "üìä Donn√©es:",
    "donnees1": "üìä Donn√©es:",
    "verificationdel": "üìä V√©rification de l\\",
    "verificationdel1": "üìä V√©rification de l\\",
    "etatdelabasededonnee": "üìä √âtat de la base de donn√©es:",
    "etatdelabasededonnee1": "üìä √âtat de la base de donn√©es:",
    "ajoutdesnouvellesdon": "üìù Ajout des nouvelles donn√©es de d√©monstration...",
    "initialisationdesdon": "üìù Initialisation des donn√©es de d√©monstration...",
    "initialisationdesdon1": "üìù Initialisation des donn√©es de d√©monstration...",
    "creationdesdonneesde": "üì¶ Cr√©ation des donn√©es de test...",
    "creationdesdonneesde1": "üì¶ Cr√©ation des donn√©es de test...",
    "creationdel": "üîÑ Cr√©ation de l\\",
    "creationdel1": "üîÑ Cr√©ation de l\\",
    "instancefirebaseseco": "üîÑ Instance Firebase secondaire initialis√©e pour cr√©ation d\\",
    "instancefirebaseseco1": "üîÑ Instance Firebase secondaire initialis√©e pour cr√©ation d\\",
    "miseajourdel2": "üîÑ Mise √† jour de l\\",
    "miseajourdel3": "üîÑ Mise √† jour de l\\",
    "miseajourdel4": "üîÑ Mise √† jour de l\\",
    "surveillancedesessio": "üîÑ Surveillance de session d√©marr√©e",
    "surveillancedesessio1": "üîÑ Surveillance de session d√©marr√©e",
    "creationfirebaseauth": "üîê Cr√©ation Firebase Auth sur instance secondaire...",
    "creationfirebaseauth1": "üîê Cr√©ation Firebase Auth sur instance secondaire...",
    "garantieaucunappelfi": "üîí GARANTIE: Aucun appel Firebase Auth effectu√©",
    "garantieaucunappelfi1": "üîí GARANTIE: Aucun appel Firebase Auth effectu√©",
    "creationd": "üî• Cr√©ation d\\",
    "creationd1": "üî• Cr√©ation d\\",
    "creationd2": "üî• Cr√©ation d\\",
    "creationd3": "üî• Cr√©ation d\\",
    "creationd4": "üî• Cr√©ation d\\",
    "creationd5": "üî• Cr√©ation d\\",
    "creationd6": "üî• Cr√©ation d\\",
    "creationd7": "üî• Cr√©ation d\\",
    "creationdirected": "üî• Cr√©ation directe d\\",
    "creationdirected1": "üî• Cr√©ation directe d\\",
    "debutdelareinitialis": "üöÄ D√©but de la r√©initialisation compl√®te...\\n\\n",
    "debutdelareinitialis1": "üöÄ D√©but de la r√©initialisation compl√®te...\\n\\n",
    "demarragedusystemeul": "üöÄ D√©marrage du syst√®me ultime...\\n",
    "demarragedusystemeul1": "üöÄ D√©marrage du syst√®me ultime...\\n",
    "initialisationdelaba": "üöÄ Initialisation de la base de donn√©es Firebase...",
    "initialisationdelaba1": "üöÄ Initialisation de la base de donn√©es Firebase...",
    "nouvelleinterfaceenc": "üöß Nouvelle interface en cours de d√©veloppement...",
    "nouvelleinterfaceenc1": "üöß Nouvelle interface en cours de d√©veloppement...",
    "surveillancedesessio2": "üõë Surveillance de session arr√™t√©e",
    "surveillancedesessio3": "üõë Surveillance de session arr√™t√©e",
    "creationd8": "üß™ Cr√©ation d\\",
    "creationd9": "üß™ Cr√©ation d\\",
    "creationd10": "üß™ Cr√©ation d\\",
    "creationd11": "üß™ Cr√©ation d\\",
    "testultimedebutecrit": "üß™ TEST ULTIME: D√©but - √âcriture Firestore pure",
    "testultimedebutecrit1": "üß™ TEST ULTIME: D√©but - √âcriture Firestore pure",
    "testdecreationd": "üß™ Test de cr√©ation d\\",
    "testdecreationd1": "üß™ Test de cr√©ation d\\",
    "instancefirebaseseco2": "üßπ Instance Firebase secondaire nettoy√©e",
    "instancefirebaseseco3": "üßπ Instance Firebase secondaire nettoy√©e",
    "nettoyagedesdonneesc": "üßπ Nettoyage des donn√©es corrompues...",
    "nettoyagedesdonneesc1": "üßπ Nettoyage des donn√©es corrompues..."
  },
  "ecommerce": {
    "variantspandivdivdiv": "\r\n                                                >\r\n                                                    {variant}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* D√©tails du produit *",
    "divdivdivdivdivdivgr": "\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits *",
    "divdivdivdivdivdivgr1": "\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits *",
    "divdivdivdivdivdivgr2": "\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Grille de produits *",
    "buttondivdivinformat": "\r\n                                    />\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Informations produit *",
    "creermapremierecarte": "\r\n                                >\r\n                                    Cr√©er ma premi√®re carte\r\n                                <",
    "creermapremierecarte1": "\r\n                                >\r\n                                    Cr√©er ma premi√®re carte\r\n                                <",
    "tagspandivdivproduit": "\r\n                            >\r\n                                {tag}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Produits similaires *",
    "gerermescartes": "\r\n                    >\r\n                        G√©rer mes cartes ‚Üí\r\n                    <",
    "alleralapageproduits": "\r\n                >\r\n                    Aller √† la page produits B2B\r\n                <",
    "alleralapageproduits1": "\r\n                >\r\n                    Aller √† la page produits B2B\r\n                <",
    "genererunuidsimuleen": "\r\n                };\r\n            }\r\n\r\n            // G√©n√©rer un UID simul√© (en production, utiliseriez l",
    "genererunuidsimuleen1": "\r\n                };\r\n            }\r\n\r\n            // G√©n√©rer un UID simul√© (en production, utiliseriez l",
    "setproductslistprevn": "\r\n          }\r\n        };\r\n        \r\n        setProductsList(prev => [newProduct, ...prev]);\r\n        success(`Nouveau produit ",
    "voirtouteslescategor": "\r\n        >\r\n          Voir toutes les cat√©gories &gt;\r\n        </button>\r\n      </div>\r\n      {/* Animation d‚Äôouverture des produits *",
    "fonctionpourmigrerle": "\r\n        }\r\n    }\r\n];\r\n\r\n// Fonction pour migrer les donn√©es vers Firebase\r\nexport const migrateProductsToFirebase = async (): Promise<void> => {\r\n    console.log(",
    "fonctionpourmigrerle1": "\r\n        }\r\n    }\r\n];\r\n\r\n// Fonction pour migrer les donn√©es vers Firebase\r\nexport const migrateProductsToFirebase = async (): Promise<void> => {\r\n    console.log(",
    "verifiedtruegoldsupp": "\r\n    ],\r\n    verified: true,\r\n    goldSupplier: true\r\n};\r\n\r\nconst SupplierProfilePage: React.FC = () => {\r\n    const { supplierId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [supplier, setSupplier] = useState<SupplierProfile | null>(null);\r\n    const [activeTab, setActiveTab] = useState(",
    "productdescriptionnu": " && product.description !== null) {\r\n    return product.description[language] || \r\n           product.description.fr || \r\n           product.description.en || \r\n           product.description.chinese || \r\n           product.description.english || \r\n           product.description.french ||\r\n           Object.values(product.description)[0] || \r\n           ",
    "divdivdivdivcartemac": " />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Carte Machinerie *",
    "divdivdivdivcartemac1": " />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Carte Machinerie *",
    "contacterlefournisse": " />\r\n                                            Contacter le fournisseur\r\n                                        <",
    "spancontacterlefourn": " />\r\n                                    <span>Contacter le fournisseur<",
    "spanvoirproduits": " />\r\n                                    <span>Voir produits<",
    "spanediteurdecartede": " />\r\n                                <span>√âditeur de Carte de Visite<",
    "environnementdeprodu": " />\r\n                        Environnement de production s√©curis√©\r\n                    <",
    "donneesfictivespouri": " />;\r\n  };\r\n\r\n  // Donn√©es fictives pour illustration\r\n  const fakeOrders = [\r\n    { id: ",
    "productpriceproductp": " ? product.price : product.price.cny,\r\n        category: product.category,\r\n        images: product.images || [],\r\n        stock: 100, // Valeur par d√©faut\r\n        sku: product.id || ",
    "productpriceproductp1": " ? product.price : product.price.cny,\r\n        category: product.category,\r\n        images: product.images || [],\r\n        stock: 100, // Valeur par d√©faut\r\n        sku: product.id || ",
    "elementsupplierprofi": " element={<SupplierProfilePage ",
    "elementsupplierprofi1": " element={<SupplierProfilePage ",
    "modifieavecsuccesels": " modifi√© avec succ√®s !`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "modifieavecsuccesels1": " modifi√© avec succ√®s !`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "styleanimationdelayi": " style={{ animationDelay: `${index * 100}ms` }}>\r\n                          <ProductCard product={product} />\r\n                        </div>\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Messages r√©cents am√©lior√©s *",
    "styleanimationdelayi1": " style={{ animationDelay: `${index * 100}ms` }}>\r\n                          <ProductCard product={product} />\r\n                        </div>\r\n                      ) : null;\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </Section>\r\n\r\n              {/* Messages r√©cents am√©lior√©s *",
    "fonctionutilitairepo": " },\r\n];\r\n\r\n// Fonction utilitaire pour compter les produits par cat√©gorie\r\nfunction getProductCount(categoryKey: string) {\r\n  const allProducts = productsService.getAllProducts();\r\n  return allProducts.filter((p: Product) => p.category === categoryKey).length;\r\n}\r\n\r\nconst CategoriesSection: React.FC<{ onCategorySelect?: (key: string|null) => void }> = ({ onCategorySelect }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\r\n  const [showProducts, setShowProducts] = useState(false);\r\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\r\n  // Charger les produits depuis le service centralis√©\r\n  useEffect(() => {\r\n    const loadProducts = () => {\r\n      const allProducts = productsService.getAllProducts();\r\n      setFilteredProducts(allProducts);\r\n    };\r\n    \r\n    // Charger les produits initialement\r\n    loadProducts();\r\n    \r\n    ",
    "setproductslistprodu": "))) {\r\n      setProductsList(products);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      // R√©initialiser aussi le service global\r\n      productsService.resetToDefault();\r\n      success(t(",
    "setproductslistprodu1": "))) {\r\n      setProductsList(products);\r\n      localStorage.removeItem(STORAGE_KEY);\r\n      // R√©initialiser aussi le service global\r\n      productsService.resetToDefault();\r\n      success(t(",
    "validationspecifique": "));\r\n        }\r\n      }\r\n\r\n      // Validation sp√©cifique pour les fournisseurs\r\n      if (selectedRole === ",
    "validationspecifique1": "));\r\n        }\r\n      }\r\n\r\n      // Validation sp√©cifique pour les fournisseurs\r\n      if (selectedRole === ",
    "validationspecifique2": "));\r\n        }\r\n      }\r\n\r\n      // Validation sp√©cifique pour les fournisseurs\r\n      if (selectedRole === ",
    "constsuppliermessage": "));\r\nconst SupplierMessagesPage = React.lazy(() => import(",
    "constsuppliermessage1": "));\r\nconst SupplierMessagesPage = React.lazy(() => import(",
    "constsupplierprofile": "));\r\nconst SupplierProfilePage = React.lazy(() => import(",
    "constsupplierprofile1": "));\r\nconst SupplierProfilePage = React.lazy(() => import(",
    "creerdesfournisseurs": ");\r\n\r\n      // Cr√©er des fournisseurs de test\r\n      await this.createTestSuppliers();\r\n      \r\n      // Cr√©er des produits de test\r\n      await this.createTestProducts();\r\n      \r\n      // Cr√©er des commandes de test\r\n      await this.createTestOrders();\r\n        // Cr√©er des messages de test\r\n      await this.createTestMessages();\r\n\r\n      console.log(",
    "simulerunereponseduf": ");\r\n\r\n    // Simuler une r√©ponse du fournisseur\r\n    setTimeout(() => {\r\n      const response: Message = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        sender: ",
    "simulerunereponseduf1": ");\r\n\r\n    // Simuler une r√©ponse du fournisseur\r\n    setTimeout(() => {\r\n      const response: Message = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        sender: ",
    "verifierquelesprodui": ");\r\n\r\n    // V√©rifier que les produits initiaux sont bien import√©s\r\n    if (!initialProducts || !Array.isArray(initialProducts) || initialProducts.length === 0) {\r\n      console.error(",
    "verifierquelesprodui1": ");\r\n\r\n    // V√©rifier que les produits initiaux sont bien import√©s\r\n    if (!initialProducts || !Array.isArray(initialProducts) || initialProducts.length === 0) {\r\n      console.error(",
    "verifierquelesprodui2": ");\r\n\r\n    // V√©rifier que les produits initiaux sont bien import√©s\r\n    if (!initialProducts || !Array.isArray(initialProducts) || initialProducts.length === 0) {\r\n      console.error(",
    "useeffectsimulerlech": ");\r\n\r\n    useEffect(() => {\r\n        // Simuler le chargement des donn√©es\r\n        setTimeout(() => {\r\n            setSupplier(mockSupplier);\r\n            setIsLoaded(true);\r\n        }, 300);\r\n    }, [supplierId]);\r\n\r\n    useEffect(() => {\r\n        ",
    "useeffectsimulerlech1": ");\r\n\r\n    useEffect(() => {\r\n        // Simuler le chargement des donn√©es\r\n        setTimeout(() => {\r\n            setSupplier(mockSupplier);\r\n            setIsLoaded(true);\r\n        }, 300);\r\n    }, [supplierId]);\r\n\r\n    useEffect(() => {\r\n        // Animation d",
    "2recuperertouslespro": ");\r\n    \r\n    // 2. R√©cup√©rer tous les produits\r\n    console.log(",
    "consolelogmockproduc": ");\r\n        console.log(`üìä ${mockProductsData.length} produits ont √©t√© ajout√©s √† Firebase`);\r\n\r\n    } catch (error) {\r\n        console.error(",
    "mettreajourunproduit": ");\r\n        }\r\n    }\r\n\r\n    // Mettre √† jour un produit\r\n    static async updateProduct(productId: string, updates: Partial<Product>): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, PRODUCTS_COLLECTION, productId);\r\n            await updateDoc(docRef, {\r\n                ...updates,\r\n                updatedAt: new Date(),\r\n            });\r\n        } catch (error) {\r\n            console.error(",
    "mettreajourunproduit1": ");\r\n        }\r\n    }\r\n\r\n    // Mettre √† jour un produit\r\n    static async updateProduct(productId: string, updates: Partial<Product>): Promise<void> {\r\n        try {\r\n            const docRef = doc(db, PRODUCTS_COLLECTION, productId);\r\n            await updateDoc(docRef, {\r\n                ...updates,\r\n                updatedAt: new Date(),\r\n            });\r\n        } catch (error) {\r\n            console.error(",
    "recupererlesproduits": ");\r\n        }\r\n    }\r\n\r\n    // R√©cup√©rer les produits par cat√©gorie\r\n    static async getProductsByCategory(category: string): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION),\r\n                where(",
    "recupererlesproduits1": ");\r\n        }\r\n    }\r\n\r\n    // R√©cup√©rer les produits par cat√©gorie\r\n    static async getProductsByCategory(category: string): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION),\r\n                where(",
    "recupererlesproduits2": ");\r\n        }\r\n    }\r\n\r\n    // R√©cup√©rer les produits similaires\r\n    static async getSimilarProducts(productId: string, category: string, limitCount: number = 3): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION),\r\n                where(",
    "recupererlesproduits3": ");\r\n        }\r\n    }\r\n\r\n    // R√©cup√©rer les produits similaires\r\n    static async getSimilarProducts(productId: string, category: string, limitCount: number = 3): Promise<ProductListItem[]> {\r\n        try {\r\n            const q = query(\r\n                collection(db, PRODUCTS_COLLECTION),\r\n                where(",
    "consolelogsearchresu": ");\r\n    console.log(`‚úÖ ${searchResults.length} produits trouv√©s pour ",
    "consolelogsearchresu1": ");\r\n    console.log(`‚úÖ ${searchResults.length} produits trouv√©s pour ",
    "consolelogsearchresu2": ");\r\n    console.log(`‚úÖ ${searchResults.length} produits trouv√©s pour \"Samsung\"`);\r\n    \r\n    // 5. Tester la r√©cup√©ration par ID\r\n    if (products.length > 0) {\r\n      const firstProduct = products[0];\r\n      if (firstProduct.id) {\r\n        console.log(",
    "constcategoriesawait": ");\r\n    const categories = await productService.getCategories();\r\n    const brands = await productService.getBrands();\r\n    const features = await productService.getFeatures();\r\n    \r\n    console.log(`‚úÖ ${categories.length} cat√©gories trouv√©es:`, categories);\r\n    console.log(`‚úÖ ${brands.length} marques trouv√©es:`, brands);\r\n    console.log(`‚úÖ ${features.length} fonctionnalit√©s trouv√©es:`, features);\r\n    \r\n    ",
    "constcategoriesawait1": ");\r\n    const categories = await productService.getCategories();\r\n    const brands = await productService.getBrands();\r\n    const features = await productService.getFeatures();\r\n    \r\n    console.log(`‚úÖ ${categories.length} cat√©gories trouv√©es:`, categories);\r\n    console.log(`‚úÖ ${brands.length} marques trouv√©es:`, brands);\r\n    console.log(`‚úÖ ${features.length} fonctionnalit√©s trouv√©es:`, features);\r\n    \r\n    // 4. Tester la recherche\r\n    console.log(",
    "constcategoriesawait2": ");\r\n    const categories = await productService.getCategories();\r\n    const brands = await productService.getBrands();\r\n    const features = await productService.getFeatures();\r\n    \r\n    console.log(`‚úÖ ${categories.length} cat√©gories trouv√©es:`, categories);\r\n    console.log(`‚úÖ ${brands.length} marques trouv√©es:`, brands);\r\n    console.log(`‚úÖ ${features.length} fonctionnalit√©s trouv√©es:`, features);\r\n    \r\n    // 4. Tester la recherche\r\n    console.log(",
    "constproductsawaitpr": ");\r\n    const products = await productService.getAllProducts();\r\n    console.log(`‚úÖ ${products.length} produits r√©cup√©r√©s`);\r\n    \r\n    ",
    "quantityavailablecap": ");\r\n    }\r\n  }, [quantity, availableCapacity]);\r\n  const handleSliderChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(e.target.value);\r\n    setQuantity(value);\r\n\r\n    // Animation de la quantit√©\r\n    setQuantityAnimating(true);\r\n    setTimeout(() => setQuantityAnimating(false), 200);\r\n\r\n    // Animation du prix\r\n    setPriceAnimating(true);\r\n    setTimeout(() => setPriceAnimating(false), 300);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (quantity <= 0 || quantity > availableCapacity) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      // Simulation d",
    "constissubmittingset": ");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n  // Initialiser le formulaire avec les donn√©es du produit √† √©diter\r\n  useEffect(() => {\r\n    if (product) {      // Extraire la description fran√ßaise ou utiliser la premi√®re disponible\r\n      let description = ",
    "constissubmittingset1": ");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n  // Initialiser le formulaire avec les donn√©es du produit √† √©diter\r\n  useEffect(() => {\r\n    if (product) {      // Extraire la description fran√ßaise ou utiliser la premi√®re disponible\r\n      let description = ",
    "constissubmittingset2": ");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n  // Initialiser le formulaire avec les donn√©es du produit √† √©diter\r\n  useEffect(() => {\r\n    if (product) {      // Extraire la description fran√ßaise ou utiliser la premi√®re disponible\r\n      let description = ",
    "constissubmittingset3": ");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [priceAnimating, setPriceAnimating] = useState(false);\r\n  const [quantityAnimating, setQuantityAnimating] = useState(false);\r\n\r\n  // Calculs en temps r√©el\r\n  const availableCapacity = container.totalCapacity - container.usedCapacity;\r\n  const pricePerCBM = 150; // Prix par CBM en euros\r\n  const estimatedPrice = quantity * pricePerCBM;\r\n  const reservationDeadline = new Date();\r\n  reservationDeadline.setDate(reservationDeadline.getDate() + 7); // 7 jours pour r√©server\r\n\r\n  ",
    "constissubmittingset4": ");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [priceAnimating, setPriceAnimating] = useState(false);\r\n  const [quantityAnimating, setQuantityAnimating] = useState(false);\r\n\r\n  // Calculs en temps r√©el\r\n  const availableCapacity = container.totalCapacity - container.usedCapacity;\r\n  const pricePerCBM = 150; // Prix par CBM en euros\r\n  const estimatedPrice = quantity * pricePerCBM;\r\n  const reservationDeadline = new Date();\r\n  reservationDeadline.setDate(reservationDeadline.getDate() + 7); // 7 jours pour r√©server\r\n\r\n  // Pourcentages pour la barre de progression\r\n  const usedPercentage = (container.usedCapacity / container.totalCapacity) * 100;\r\n  const selectedPercentage = (quantity / container.totalCapacity) * 100;\r\n  const availablePercentage = 100 - usedPercentage - selectedPercentage;\r\n\r\n  // Animation d",
    "constisuploadingseti": ");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress[]>([]);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\r\n\r\n  // Charger les m√©dias existants\r\n  useEffect(() => {\r\n    loadMedia();\r\n  }, [productId]);\r\n\r\n  const loadMedia = async () => {\r\n    try {\r\n      const productMedia = await productService.getProductMedia(productId);\r\n      setMedia(productMedia);\r\n      onMediaUpdate?.(productMedia);\r\n    } catch (error) {\r\n      console.error(",
    "constisuploadingseti1": ");\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress[]>([]);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\r\n\r\n  // Charger les m√©dias existants\r\n  useEffect(() => {\r\n    loadMedia();\r\n  }, [productId]);\r\n\r\n  const loadMedia = async () => {\r\n    try {\r\n      const productMedia = await productService.getProductMedia(productId);\r\n      setMedia(productMedia);\r\n      onMediaUpdate?.(productMedia);\r\n    } catch (error) {\r\n      console.error(",
    "pdivdivdivdivdivsect": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e *",
    "pdivdivdivdivdivsect1": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e *",
    "pdivdivdivdivdivsect2": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e *",
    "pdivdivdivdivdivsect3": ")}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section D√©couvrez tous nos fournisseurs - Repositionn√©e et am√©lior√©e *",
    "buttonlinkdivsection": ")}\n              </Button>\n            </Link>\n          </div>\n\n          {/* Section Recommandations int√©gr√©e */}\n          <ProductRecommendations />\n        </div>\n      </div>\n\n      {/* Optimisez vos commandes *",
    "buttonlinkdivdivdivo": ")}\n              </Button>\n            </Link>          </div>\n        </div>\n      </div>\n\n      {/* Optimisez vos commandes *",
    "linkongletconteneurs": ")}\n              </Link>\n              {/* Onglet Conteneurs visible uniquement pour les fournisseurs connect√©s *",
    "linkongletconteneurs1": ")}\n              </Link>\n              {/* Onglet Conteneurs visible uniquement pour les fournisseurs connect√©s *",
    "expedierbuttondivtdt": ")}\r\n                        >\r\n                          Exp√©dier\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal d√©tails commande *",
    "pdivcarrouseldeprodu": ")}\r\n          </p>\r\n        </div>{/* Carrousel de produits *",
    "utiliselamemedescrip": ")} {/* Utilise la m√™me description que sourceur */}\n              </p>\n            </div>\n\n            {/* Message personnalis√© pour les fournisseurs avec animation *",
    "utiliselamemedescrip1": ")} {/* Utilise la m√™me description que sourceur */}\n              </p>\n            </div>\n\n            {/* Message personnalis√© pour les fournisseurs avec animation *",
    "utiliselamemedescrip2": ")} {/* Utilise la m√™me description que sourceur */}\n              </p>\n            </div>\n\n            {/* Message personnalis√© pour les fournisseurs avec animation */}\n            {role === ",
    "optionselectdivcapac": ")}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {/* Capacit√© de production mensuelle *",
    "spanbuttondivdivdivm": ")}</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>      {/* Modal de pr√©commande */}\r\n      {selectedContainer && (\r\n        <PreorderContainerModal\r\n          container={selectedContainer}\r\n          isOpen={isModalOpen}\r\n          onClose={handleCloseModal}\r\n          onPreorder={handlePreorderSubmit}\r\n        />\r\n      )}\r\n\r\n      {/* Nouveau modal de r√©servation interactif *",
    "spanbuttondivdivdivm1": ")}</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>      {/* Modal de pr√©commande */}\r\n      {selectedContainer && (\r\n        <PreorderContainerModal\r\n          container={selectedContainer}\r\n          isOpen={isModalOpen}\r\n          onClose={handleCloseModal}\r\n          onPreorder={handlePreorderSubmit}\r\n        />\r\n      )}\r\n\r\n      {/* Nouveau modal de r√©servation interactif *",
    "spanlabeldivdivchamp": ")}</span>\r\n                  </label>                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Champs sp√©cifiques pour les fournisseurs *",
    "spanlabeldivdivchamp1": ")}</span>\r\n                  </label>                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Champs sp√©cifiques pour les fournisseurs *",
    "traductionspourlages": ",\n\n    // Traductions pour la gestion des produits\n    ",
    "interestedproductspr": ",\r\n        interestedProducts: prospect.interested_products || [],\r\n        businessType: profile?.business_type || ",
    "engagementratelogdes": ", engagementRate);\r\n      }\r\n\r\n      // Log des donn√©es fournisseur si n√©cessaire\r\n      if (selectedRole === ",
    "engagementratelogdes1": ", engagementRate);\r\n      }\r\n\r\n      // Log des donn√©es fournisseur si n√©cessaire\r\n      if (selectedRole === ",
    "errdefinircommecarte": ", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // D√©finir comme carte par d√©faut\r\n    const handleSetDefault = async (cardId: string) => {\r\n        try {\r\n            await updateCard(cardId, { isDefault: true });\r\n        } catch (err) {\r\n            console.error(",
    "errdefinircommecarte1": ", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    // D√©finir comme carte par d√©faut\r\n    const handleSetDefault = async (cardId: string) => {\r\n        try {\r\n            await updateCard(cardId, { isDefault: true });\r\n        } catch (err) {\r\n            console.error(",
    "errfinallysetloading": ", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return { product, loading, error, refetch };\r\n};\r\n\r\n// Hook pour r√©cup√©rer les produits similaires\r\nexport const useSimilarProducts = (productId: string | undefined, category: string | undefined) => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!productId || !category) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchSimilarProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const similarProducts = await ProductService.getSimilarProducts(productId, category, 3);\r\n        setProducts(similarProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "errfinallysetloading1": ", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return { product, loading, error, refetch };\r\n};\r\n\r\n// Hook pour r√©cup√©rer les produits similaires\r\nexport const useSimilarProducts = (productId: string | undefined, category: string | undefined) => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!productId || !category) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchSimilarProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const similarProducts = await ProductService.getSimilarProducts(productId, category, 3);\r\n        setProducts(similarProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "errfinallysetloading2": ", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return { product, loading, error, refetch };\r\n};\r\n\r\n// Hook pour r√©cup√©rer les produits similaires\r\nexport const useSimilarProducts = (productId: string | undefined, category: string | undefined) => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!productId || !category) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchSimilarProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const similarProducts = await ProductService.getSimilarProducts(productId, category, 3);\r\n        setProducts(similarProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "errfinallysetloading3": ", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSimilarProducts();\r\n  }, [productId, category]);\r\n\r\n  return { products, loading, error };\r\n};\r\n\r\n// Hook pour les filtres de produits (c√¥t√© client)\r\nexport const useProductFilters = (products: ProductListItem[]) => {\r\n  const [filteredProducts, setFilteredProducts] = useState<ProductListItem[]>(products);\r\n  const [filters, setFilters] = useState({\r\n    category: ",
    "errfinallysetloading4": ", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSimilarProducts();\r\n  }, [productId, category]);\r\n\r\n  return { products, loading, error };\r\n};\r\n\r\n// Hook pour les filtres de produits (c√¥t√© client)\r\nexport const useProductFilters = (products: ProductListItem[]) => {\r\n  const [filteredProducts, setFilteredProducts] = useState<ProductListItem[]>(products);\r\n  const [filters, setFilters] = useState({\r\n    category: ",
    "errfinallysetloading5": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { products, loading, error, refetch };\r\n};\r\n\r\n// Hook pour r√©cup√©rer un produit par ID\r\nexport const useProduct = (productId: string | undefined) => {\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!productId) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchProduct = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const fetchedProduct = await ProductService.getProductById(productId);\r\n        setProduct(fetchedProduct);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "errfinallysetloading6": ", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { products, loading, error, refetch };\r\n};\r\n\r\n// Hook pour r√©cup√©rer un produit par ID\r\nexport const useProduct = (productId: string | undefined) => {\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!productId) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchProduct = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const fetchedProduct = await ProductService.getProductById(productId);\r\n        setProduct(fetchedProduct);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "errorthrowerrorfonct": ", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fonction pour tester la r√©cup√©ration des produits\r\nexport const testFirebaseProducts = async (): Promise<void> => {\r\n    console.log(",
    "errorthrowerrorfonct1": ", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fonction pour tester la r√©cup√©ration des produits\r\nexport const testFirebaseProducts = async (): Promise<void> => {\r\n    console.log(",
    "errorthrowerrorfonct2": ", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fonction pour tester la r√©cup√©ration des produits\r\nexport const testFirebaseProducts = async (): Promise<void> => {\r\n    console.log(",
    "errorthrowerrorcreed": ", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cr√©e des fournisseurs de test\r\n   *",
    "errorobtenirtouslesp": ", error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtenir tous les produits (initiaux + ajout√©s par fournisseurs)\r\n   *",
    "errorobtenirtouslesp1": ", error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtenir tous les produits (initiaux + ajout√©s par fournisseurs)\r\n   *",
    "errorreturnsuccessfa": ", error);\r\n    return { success: false, error };\r\n  }\r\n};\r\n\r\n/**\r\n * Ajoute des produits suppl√©mentaires pour les tests\r\n *",
    "errorpremierefoisoue": ", error);\r\n    }\r\n\r\n    // Premi√®re fois ou erreur : initialiser avec les produits par d√©faut\r\n    console.log(",
    "errorpremierefoisoue1": ", error);\r\n    }\r\n\r\n    // Premi√®re fois ou erreur : initialiser avec les produits par d√©faut\r\n    console.log(",
    "errorpremierefoisoue2": ", error);\r\n    }\r\n\r\n    // Premi√®re fois ou erreur : initialiser avec les produits par d√©faut\r\n    console.log(",
    "filtersverifiedconst": ", filters.verified));\r\n            }\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            let results = querySnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n                createdAt: doc.data().createdAt.toDate(),\r\n                updatedAt: doc.data().updatedAt.toDate()\r\n            } as InfluencerProfile));\r\n\r\n            // Filtrer par prix maximum c√¥t√© client (Firestore ne permet pas les requ√™tes sur des champs imbriqu√©s)\r\n            if (filters.maxPrice) {\r\n                results = results.filter(profile => profile.pricing.postPrice <= filters.maxPrice!);\r\n            }\r\n\r\n            return results;\r\n        } catch (error) {\r\n            console.error(",
    "filtersverifiedconst1": ", filters.verified));\r\n            }\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            let results = querySnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n                createdAt: doc.data().createdAt.toDate(),\r\n                updatedAt: doc.data().updatedAt.toDate()\r\n            } as InfluencerProfile));\r\n\r\n            // Filtrer par prix maximum c√¥t√© client (Firestore ne permet pas les requ√™tes sur des champs imbriqu√©s)\r\n            if (filters.maxPrice) {\r\n                results = results.filter(profile => profile.pricing.postPrice <= filters.maxPrice!);\r\n            }\r\n\r\n            return results;\r\n        } catch (error) {\r\n            console.error(",
    "filtersverifiedconst2": ", filters.verified));\r\n            }\r\n\r\n            const querySnapshot = await getDocs(q);\r\n\r\n            let results = querySnapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n                createdAt: doc.data().createdAt.toDate(),\r\n                updatedAt: doc.data().updatedAt.toDate()\r\n            } as InfluencerProfile));\r\n\r\n            // Filtrer par prix maximum c√¥t√© client (Firestore ne permet pas les requ√™tes sur des champs imbriqu√©s)\r\n            if (filters.maxPrice) {\r\n                results = results.filter(profile => profile.pricing.postPrice <= filters.maxPrice!);\r\n            }\r\n\r\n            return results;\r\n        } catch (error) {\r\n            console.error(",
    "formdataenproduction": ", formData);\r\n        // En production, ceci ferait un appel API pour cr√©er\r\n      }\r\n      \r\n      setShowCreateModal(false);\r\n      loadContainers(); ",
    "formdataenproduction1": ", formData);\r\n        // En production, ceci ferait un appel API pour cr√©er\r\n      }\r\n      \r\n      setShowCreateModal(false);\r\n      loadContainers(); ",
    "svgdivdivdivcategori": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie de produits *",
    "svgdivdivdivcategori1": "/>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cat√©gorie de produits *",
    "suppliermessages": "/supplier/messages",
    "suppliermessages1": "/supplier/messages",
    "suppliermessages2": "/supplier/messages",
    "suppliermessages3": "/supplier/messages",
    "1demandedecontactfou": "1 demande de contact fournisseur",
    "1recherchezvosprodui": "1. Recherchez vos produits",
    "2contactsuppliers": "2. Contact suppliers",
    "2contactezlesfournis": "2. Contactez les fournisseurs",
    "5produitsenrupturede": "5 produits en rupture de stock",
    "pourlesfournisseurso": ":\n            // Pour les fournisseurs, on affiche un message de confirmation plut√¥t que de rediriger\n            alert(t(",
    "pourlesfournisseurso1": ":\n            // Pour les fournisseurs, on affiche un message de confirmation plut√¥t que de rediriger\n            alert(t(",
    "pourlesfournisseurso2": ":\n            // Pour les fournisseurs, on affiche un message de confirmation plut√¥t que de rediriger\n            alert(t(",
    "servicecentralisedeg": ";\r\n\r\n/**\r\n * Service centralis√© de gestion des produits\r\n * Permet de synchroniser les produits entre la gestion fournisseur et la d√©couverte\r\n */\r\nclass ProductsService {\r\n  private static instance: ProductsService;\r\n  private listeners: Array<() => void> = [];\r\n\r\n  static getInstance(): ProductsService {\r\n    if (!ProductsService.instance) {\r\n      ProductsService.instance = new ProductsService();\r\n    }\r\n    return ProductsService.instance;\r\n  }\r\n\r\n  /**\r\n   * √âcouter les changements dans la liste des produits\r\n   *",
    "convertirundocumentf": ";\r\n\r\n// Convertir un document Firestore en objet Product\r\nconst convertFirestoreProduct = (doc: QueryDocumentSnapshot<DocumentData>): Product => {\r\n    const data = doc.data();\r\n    return {\r\n        id: doc.id,\r\n        ...data,\r\n        createdAt: data.createdAt?.toDate(),\r\n        updatedAt: data.updatedAt?.toDate(),\r\n    } as Product;\r\n};\r\n\r\n// Convertir un Product en donn√©es pour Firestore\r\nconst convertProductForFirestore = (product: Omit<Product, ",
    "convertirundocumentf1": ";\r\n\r\n// Convertir un document Firestore en objet Product\r\nconst convertFirestoreProduct = (doc: QueryDocumentSnapshot<DocumentData>): Product => {\r\n    const data = doc.data();\r\n    return {\r\n        id: doc.id,\r\n        ...data,\r\n        createdAt: data.createdAt?.toDate(),\r\n        updatedAt: data.updatedAt?.toDate(),\r\n    } as Product;\r\n};\r\n\r\n// Convertir un Product en donn√©es pour Firestore\r\nconst convertProductForFirestore = (product: Omit<Product, ",
    "donneesdecategoriesa": ";\r\n\r\n// Donn√©es de cat√©gories avec des produits d",
    "donneesdecategoriesa1": ";\r\n\r\n// Donn√©es de cat√©gories avec des produits d",
    "donneesdecategoriesa2": ";\r\n\r\n// Donn√©es de cat√©gories avec des produits d",
    "donneesmockamigrerve": ";\r\n\r\n// Donn√©es mock √† migrer vers Firebase\r\nconst mockProductsData: Omit<Product, ",
    "donneesmockamigrerve1": ";\r\n\r\n// Donn√©es mock √† migrer vers Firebase\r\nconst mockProductsData: Omit<Product, ",
    "hookpourrecuperertou": ";\r\n\r\n// Hook pour r√©cup√©rer tous les produits\r\nexport const useProducts = () => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const fetchedProducts = await ProductService.getAllProducts();\r\n        setProducts(fetchedProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "hookpourrecuperertou1": ";\r\n\r\n// Hook pour r√©cup√©rer tous les produits\r\nexport const useProducts = () => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const fetchedProducts = await ProductService.getAllProducts();\r\n        setProducts(fetchedProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "hookpourrecuperertou2": ";\r\n\r\n// Hook pour r√©cup√©rer tous les produits\r\nexport const useProducts = () => {\r\n  const [products, setProducts] = useState<ProductListItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const fetchedProducts = await ProductService.getAllProducts();\r\n        setProducts(fetchedProducts);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : ",
    "mockproductdataversi": ";\r\n\r\n// Mock product data - Version simplifi√©e et corrig√©e\r\nexport const products: Product[] = [\r\n  {\r\n    id: ",
    "mockproductdataversi1": ";\r\n\r\n// Mock product data - Version simplifi√©e et corrig√©e\r\nexport const products: Product[] = [\r\n  {\r\n    id: ",
    "scriptsdemaintenance": ";\r\n\r\n// üõ†Ô∏è Scripts de maintenance pour Firebase\r\n\r\n/**\r\n * R√©initialise compl√®tement la base de donn√©es produits\r\n *",
    "scriptsdemaintenance1": ";\r\n\r\n// üõ†Ô∏è Scripts de maintenance pour Firebase\r\n\r\n/**\r\n * R√©initialise compl√®tement la base de donn√©es produits\r\n *",
    "scriptsdemaintenance2": ";\r\n\r\n// üõ†Ô∏è Scripts de maintenance pour Firebase\r\n\r\n/**\r\n * R√©initialise compl√®tement la base de donn√©es produits\r\n */\r\nexport const resetProductsDatabase = async () => {\r\n  try {\r\n    console.log(",
    "interfacebusinesscar": ";\r\n\r\ninterface BusinessCardGalleryProps {\r\n    supplierId?: string;\r\n}\r\n\r\nconst BusinessCardGallery: React.FC<BusinessCardGalleryProps> = ({ supplierId }) => {\r\n    // Utiliser les donn√©es d",
    "interfacebusinesscar1": ";\r\n\r\ninterface BusinessCardGalleryProps {\r\n    supplierId?: string;\r\n}\r\n\r\nconst BusinessCardGallery: React.FC<BusinessCardGalleryProps> = ({ supplierId }) => {\r\n    // Utiliser les donn√©es d",
    "seterrorerrormessage": ";\r\n        setError(errorMessage);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchContainers();\r\n    // Refresh data every 10 seconds to simulate real-time updates\r\n    const interval = setInterval(fetchContainers, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  const handlePreorder = (container: Container) => {\r\n    setSelectedContainer(container);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleReserveSpace = (container: Container) => {\r\n    setReservationContainer(container);\r\n    setIsReservationModalOpen(true);\r\n  };\r\n\r\n  const handleReservationSubmit = async (containerId: string, quantity: number, estimatedPrice: number) => {\r\n    try {\r\n      // In a real app, this would make an API call to create the reservation\r\n      console.log(`Reservation for container ${containerId}: ${quantity} CBM at ${estimatedPrice}‚Ç¨`);\r\n      alert(`R√©servation confirm√©e!\\n${quantity} CBM r√©serv√©s pour ${estimatedPrice}‚Ç¨`);\r\n      \r\n      ",
    "seterrorerrormessage1": ";\r\n        setError(errorMessage);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchContainers();\r\n    // Refresh data every 10 seconds to simulate real-time updates\r\n    const interval = setInterval(fetchContainers, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  const handlePreorder = (container: Container) => {\r\n    setSelectedContainer(container);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleReserveSpace = (container: Container) => {\r\n    setReservationContainer(container);\r\n    setIsReservationModalOpen(true);\r\n  };\r\n\r\n  const handleReservationSubmit = async (containerId: string, quantity: number, estimatedPrice: number) => {\r\n    try {\r\n      // In a real app, this would make an API call to create the reservation\r\n      console.log(`Reservation for container ${containerId}: ${quantity} CBM at ${estimatedPrice}‚Ç¨`);\r\n      alert(`R√©servation confirm√©e!\\n${quantity} CBM r√©serv√©s pour ${estimatedPrice}‚Ç¨`);\r\n      \r\n      // Refresh containers to get updated data\r\n      const data = await containerService.getContainers();\r\n      setContainers(data);\r\n      setIsReservationModalOpen(false);\r\n      setReservationContainer(null);\r\n    } catch (err) {\r\n      console.error(",
    "importproductsservic": ";\r\nimport { \r\n  productsService, \r\n  ordersService, \r\n  suppliersService, \r\n  messagesService,\r\n  FirestoreProduct,\r\n  FirestoreOrder,\r\n  FirestoreSupplier,\r\n  FirestoreMessage\r\n} from ",
    "carteelectronique": ">\n            {/* Carte √âlectronique *",
    "carteelectronique1": ">\n            {/* Carte √âlectronique *",
    "variantpricetofixed2": ">\r\n                                                    +{variant.price.toFixed(2)}‚Ç¨\r\n                                                </span>\r\n                                            )}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                        {/* S√©lecteur de quantit√© *",
    "excellentfournisseur": ">\r\n                                                    Excellent fournisseur ! Qualit√© des produits irr√©prochable et livraison tr√®s rapide. Je recommande vivement.\r\n                                                <",
    "excellentfournisseur1": ">\r\n                                                    Excellent fournisseur ! Qualit√© des produits irr√©prochable et livraison tr√®s rapide. Je recommande vivement.\r\n                                                <",
    "productsupplierratin": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© *",
    "productsupplierratin1": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© *",
    "productsupplierratin2": ">\r\n                                                    {product.supplier.rating}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* S√©lecteur de quantit√© *",
    "commandesrealisees": ">\r\n                                                Commandes r√©alis√©es\r\n                                            <",
    "commandesrealisees1": ">\r\n                                                Commandes r√©alis√©es\r\n                                            <",
    "moqproductmoqdivdivd": ">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur *",
    "moqproductmoqdivdivd1": ">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur *",
    "moqproductmoqdivdivd2": ">\r\n                                                MOQ: {product.moq}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Informations fournisseur *",
    "reductiondeproductdi": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            <",
    "reductiondeproductdi1": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            <",
    "reductiondeproductdi2": ">\r\n                                                R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                            <",
    "suppliercontactwebsi": ">\r\n                                                {supplier.contact.website}\r\n                                            <",
    "productdiscountperce": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© *",
    "productdiscountperce1": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© *",
    "productdiscountperce2": ">\r\n                                            -{product.discount!.percentage}%\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Badge v√©rifi√© *",
    "clocksize14repondenp": ">\r\n                                            <Clock size={14} />\r\n                                            R√©pond en {product.supplier.responseTime}\r\n                                        <",
    "productdiscountperce3": ">\r\n                                        -{product.discount!.percentage}% d√®s {product.discount!.minQty} pcs\r\n                                    <",
    "produitssupplierprod": ">\r\n                                        Produits ({supplier.products.total})\r\n                                    <",
    "reductiondeproductdi3": ">\r\n                                    R√©duction de {product.discount!.percentage}% appliqu√©e\r\n                                <",
    "cartedevisiteentemps": ">\r\n                                Carte de visite en temps r√©el\r\n                            <",
    "creezetgerezvoscarte": ">\r\n                                Cr√©ez et g√©rez vos cartes de visite personnalis√©es\r\n                            <",
    "produitsb2b": ">\r\n                                Produits B2B\r\n                            <",
    "produitsb2b1": ">\r\n                                Produits B2B\r\n                            <",
    "produitsd": ">\r\n                                Produits d",
    "quantitemoqproductmo": ">\r\n                                Quantit√© (MOQ: {product.moq})\r\n                            <",
    "totalpricequantityto": ">\r\n                                {(totalPrice / quantity).toFixed(2)}‚Ç¨ par unit√©\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* D√©lai de livraison *",
    "filteredproductsleng": ">\r\n                                {filteredProducts.length} produits disponibles\r\n                            <",
    "filteredproductsleng1": ">\r\n                                {filteredProducts.length} produits disponibles\r\n                            <",
    "filteredproductsleng2": ">\r\n                                {filteredProducts.length} produits disponibles\r\n                            <",
    "productdescriptionpc": ">\r\n                                {product.description}\r\n                            </p>\r\n                        )}\r\n\r\n                        {/* Caract√©ristiques *",
    "shoppingbagsize12der": ">\r\n                            <ShoppingBag size={12} />\r\n                            Derni√®re commande: {formatDate(customer.lastOrderDate)}\r\n                          <",
    "trucksize20spanlivra": ">\r\n                            <Truck size={20} />\r\n                            <span>\r\n                                Livraison estim√©e: {product.deliveryTime.min}-{product.deliveryTime.max} {product.deliveryTime.unit === ",
    "aucunproduittrouve": ">\r\n                            Aucun produit trouv√©\r\n                        <",
    "aucunproduittrouve1": ">\r\n                            Aucun produit trouv√©\r\n                        <",
    "nouvellepageproduits": ">\r\n                        Nouvelle Page Produits\r\n                    <",
    "produitssimilaires": ">\r\n                        Produits similaires\r\n                    <",
    "reponsedufournisseur": ">\r\n                        R√©ponse du fournisseur\r\n                      <",
    "enteteproduit": ">\r\n                        {/* En-t√™te produit *",
    "enteteproduit1": ">\r\n                        {/* En-t√™te produit *",
    "supplierorderscomman": ">\r\n                        {supplier.orders} commandes\r\n                      <",
    "strongastucestrongte": ">\r\n                        üí° <strong>Astuce :</strong> T√©l√©chargez cette carte pour avoir toutes les informations de contact √† port√©e de main !\r\n                    <",
    "strongastucestrongte1": ">\r\n                        üí° <strong>Astuce :</strong> T√©l√©chargez cette carte pour avoir toutes les informations de contact √† port√©e de main !\r\n                    <",
    "exploreznotrecatalog": ">\r\n                      Explorez notre catalogue et ajoutez vos produits pr√©f√©r√©s !\r\n                    <",
    "exploreznotrecatalog1": ">\r\n                      Explorez notre catalogue et ajoutez vos produits pr√©f√©r√©s !\r\n                    <",
    "produits": ">\r\n                      Produits\r\n                    <",
    "pourproductmoqunites": ">\r\n                    pour {product.moq} unit√©s\r\n                  <",
    "pourproductmoqunites1": ">\r\n                    pour {product.moq} unit√©s\r\n                  <",
    "formatpriceunitprice": ">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  <",
    "formatpriceunitprice1": ">\r\n                    {formatPrice(unitPriceConverted, currency)}/unit√©\r\n                  <",
    "moqproductmoqspandiv": ">\r\n                MOQ: {product.moq}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Rating √©toiles *",
    "evolutiondescommande": ">\r\n                √âvolution des Commandes\r\n              <",
    "evolutiondescommande1": ">\r\n                √âvolution des Commandes\r\n              <",
    "spanmoqproductmoquni": ">\r\n              <span>MOQ: {product.moq} unit√©s<",
    "spanmoqproductmoquni1": ">\r\n              <span>MOQ: {product.moq} unit√©s<",
    "aucunproduitdanscett": ">\r\n              Aucun produit dans cette cat√©gorie.\r\n            <",
    "decouvrirtouslesfour": ">\r\n              D√©couvrir tous les fournisseurs\r\n            <",
    "decouvrirtouslesfour1": ">\r\n              D√©couvrir tous les fournisseurs\r\n            <",
    "decouvrirtouslesfour2": ">\r\n              D√©couvrir tous les fournisseurs\r\n            <",
    "decouvrirtouslesfour3": ">\r\n              D√©couvrir tous les fournisseurs\r\n            <",
    "detailsdelacommandes": ">\r\n              D√©tails de la commande {selectedOrder.id}\r\n            <",
    "gestiondescommandes": ">\r\n              Gestion des Commandes\r\n            <",
    "gestiondesfournisseu": ">\r\n              Gestion des Fournisseurs\r\n            <",
    "gereztouslesfourniss": ">\r\n              G√©rez tous les fournisseurs de la plateforme\r\n            <",
    "gereztouslesfourniss1": ">\r\n              G√©rez tous les fournisseurs de la plateforme\r\n            <",
    "suivezetgereztoutesl": ">\r\n              Suivez et g√©rez toutes les commandes de la plateforme\r\n            <",
    "suivezetgereztoutesl1": ">\r\n              Suivez et g√©rez toutes les commandes de la plateforme\r\n            <",
    "topfournisseurs": ">\r\n              Top Fournisseurs\r\n            <",
    "plussize16nouveaufou": ">\r\n            <Plus size={16} />\r\n            Nouveau fournisseur\r\n          <",
    "commandesfilteredord": ">\r\n            Commandes ({filteredOrders.length})\r\n          <",
    "produitsfilteredprod": ">\r\n            Produits ({filteredProducts.length})\r\n          <",
    "productdescriptionpf": ">\r\n            {productDescription}\r\n          </p>\r\n          \r\n          {/* Fonctionnalit√©s principales *",
    "topproduits": ">\r\n          {/* Top produits *",
    "accedezrapidementavo": ">Acc√©dez rapidement √† vos commandes, produits, statistiques et plus encore.<",
    "accedezrapidementavo1": ">Acc√©dez rapidement √† vos commandes, produits, statistiques et plus encore.<",
    "annuleesoptionselect": ">Annul√©es</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des commandes *",
    "chargementdesrecomma": ">Chargement des recommandations...</div>}>\n            <ProductRecommendations />\n          </React.Suspense>\n        </div>\n      </div>\n\n      {/* Section des cartes produits *",
    "commandestotales": ">Commandes totales<",
    "commandes": ">Commandes<",
    "commandes1": ">Commandes<",
    "commandes2": ">Commandes<",
    "commandes3": ">Commandes<",
    "commandes4": ">Commandes<",
    "commandes5": ">Commandes<",
    "commandes6": ">Commandes<",
    "commandes7": ">Commandes<",
    "decouvrirlesproduits": ">D√©couvrir les produits<",
    "decouvrirlesproduits1": ">D√©couvrir les produits<",
    "fournisseurs": ">Fournisseurs<",
    "fournisseurs1": ">Fournisseurs<",
    "fournisseurs2": ">Fournisseurs<",
    "fournisseurs3": ">Fournisseurs<",
    "fournisseurs4": ">Fournisseurs<",
    "gereztoutesvoscomman": ">G√©rez toutes vos commandes ici.<",
    "gereztoutesvoscomman1": ">G√©rez toutes vos commandes ici.<",
    "gerezvosfournisseurs": ">G√©rez vos fournisseurs ici.<",
    "gerezvosfournisseurs1": ">G√©rez vos fournisseurs ici.<",
    "gerezvosproduitsici": ">G√©rez vos produits ici.<",
    "gerezvosproduitsici1": ">G√©rez vos produits ici.<",
    "plusde1000fournisseu": ">Plus de 1000 fournisseurs v√©rifi√©s<",
    "plusde1000fournisseu1": ">Plus de 1000 fournisseurs v√©rifi√©s<",
    "plusde1000fournisseu2": ">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© *",
    "plusde1000fournisseu3": ">Plus de 1000 fournisseurs v√©rifi√©s</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Section processus d√©taill√© *",
    "prixestime": ">Prix estim√©<",
    "produitcertifiespand": ">Produit certifi√©</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Sp√©cifications techniques *",
    "produitdequaliteprem": ">Produit de qualit√© premium<",
    "produitnontrouve": ">Produit non trouv√©<",
    "produitnontrouve1": ">Produit non trouv√©<",
    "produitnontrouveh2li": ">Produit non trouv√©</h2>\r\n                    <Link to=",
    "produitsdisponiblesd": ">Produits disponibles dans Firebase<",
    "produits1": ">Produits<",
    "produits2": ">Produits<",
    "produits3": ">Produits<",
    "totalproduits": ">Total Produits<",
    "mathfloorproductslis": ">{Math.floor(productsList.length * 0.8)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des produits *",
    "mathfloorproductslis1": ">{Math.floor(productsList.length * 0.8)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des produits *",
    "mathfloorproductslis2": ">{Math.floor(productsList.length * 0.8)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Liste des produits *",
    "errorsdescriptionpdi": ">{errors.description}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Prix et cat√©gorie *",
    "productpricetofixed2": ">{product.price.toFixed(2)}‚Ç¨ / unit√©<",
    "acceslimiteaucatalog": "Acc√®s limit√© au catalogue (20 produits",
    "acceslimiteaucatalog1": "Acc√®s limit√© au catalogue (20 produits",
    "acceslimiteaucatalog2": "Acc√®s limit√© au catalogue (20 produits/jour)",
    "acheterdesproduitsau": "Acheter des produits aux fournisseurs",
    "aiderlesclientsatrou": "Aider les clients √† trouver les meilleurs fournisseurs",
    "aiderlesclientsatrou1": "Aider les clients √† trouver les meilleurs fournisseurs",
    "aiderlesclientsatrou2": "Aider les clients √† trouver les meilleurs fournisseurs",
    "aucunproduittrouve2": "Aucun produit trouv√©",
    "aucunproduittrouve3": "Aucun produit trouv√©",
    "aucunecartetrouvee": "Aucune carte trouv√©e",
    "aucunecartetrouvee1": "Aucune carte trouv√©e",
    "bonjourouinousavonsb": "Bonjour ! Oui, nous avons bien 100 unit√©s en stock. Le d√©lai de livraison est de 14 jours ouvr√©s. Souhaitez-vous proc√©der √† la commande ?",
    "bonjourouinousavonsb1": "Bonjour ! Oui, nous avons bien 100 unit√©s en stock. Le d√©lai de livraison est de 14 jours ouvr√©s. Souhaitez-vous proc√©der √† la commande ?",
    "bonjourouinousavonsb2": "Bonjour ! Oui, nous avons bien 100 unit√©s en stock. Le d√©lai de livraison est de 14 jours ouvr√©s. Souhaitez-vous proc√©der √† la commande ?",
    "bonjourmarievotrecom": "Bonjour Marie, votre commande a bien √©t√© exp√©di√©e et sera livr√©e demain avant 18h. Vous recevrez un SMS de confirmation.",
    "bonjourmarievotrecom1": "Bonjour Marie, votre commande a bien √©t√© exp√©di√©e et sera livr√©e demain avant 18h. Vous recevrez un SMS de confirmation.",
    "bonjourmarievotrecom2": "Bonjour Marie, votre commande a bien √©t√© exp√©di√©e et sera livr√©e demain avant 18h. Vous recevrez un SMS de confirmation.",
    "bonjourjerepresenteu": "Bonjour, je repr√©sente une boutique de mode et je souhaiterais obtenir un devis pour une commande de 100 articles textiles. Pouvez-vous me faire une offre personnalis√©e ?",
    "bonjourjerepresenteu1": "Bonjour, je repr√©sente une boutique de mode et je souhaiterais obtenir un devis pour une commande de 100 articles textiles. Pouvez-vous me faire une offre personnalis√©e ?",
    "bonjourjerepresenteu2": "Bonjour, je repr√©sente une boutique de mode et je souhaiterais obtenir un devis pour une commande de 100 articles textiles. Pouvez-vous me faire une offre personnalis√©e ?",
    "bonjourjesuisinteres": "Bonjour, je suis int√©ress√© par ce produit...",
    "bonjourjesuisinteres1": "Bonjour, je suis int√©ress√© par ce produit...",
    "bonjourjesuisinteres2": "Bonjour, je suis int√©ress√© par ce produit...",
    "capacitedeproduction": "Capacit√© de production mensuelle",
    "capacitedeproduction1": "Capacit√© de production mensuelle",
    "categoriedeproduits": "Cat√©gorie de produits",
    "categoriedeproduits1": "Cat√©gorie de produits",
    "categoriedeproduits2": "Cat√©gorie de produits",
    "certificatcemanquant": "Certificat CE manquant pour 2 produits",
    "certificationdesprod": "Certification des produits",
    "commandecmd001passee": "Commande #CMD-001 pass√©e",
    "commandecmd001passee1": "Commande #CMD-001 pass√©e",
    "commandelivreeajeanm": "Commande livr√©e √† Jean Martin",
    "commandelivreeajeanm1": "Commande livr√©e √† Jean Martin",
    "commandes8": "Commandes",
    "commandes9": "Commandes",
    "commandes10": "Commandes",
    "commandes11": "Commandes",
    "commandes12": "Commandes",
    "comparezlesfournisse": "Comparez les fournisseurs selon vos crit√®res de qualit√© et de prix",
    "comparezlesfournisse1": "Comparez les fournisseurs selon vos crit√®res de qualit√© et de prix",
    "comparezlesfournisse2": "Comparez les fournisseurs selon vos crit√®res de qualit√© et de prix",
    "confirmerlaprecomman": "Confirmer la pr√©commande",
    "confirmerlaprecomman1": "Confirmer la pr√©commande",
    "contactsfournisseurs": "Contacts fournisseurs illimit√©s",
    "contactsfournisseurs1": "Contacts fournisseurs illimit√©s",
    "contactsfournisseurs2": "Contacts fournisseurs illimit√©s",
    "creerunenouvellefich": "Cr√©er une nouvelle fiche produit",
    "creerunenouvellefich1": "Cr√©er une nouvelle fiche produit",
    "creerunenouvellefich2": "Cr√©er une nouvelle fiche produit",
    "creerunenouvellefich3": "Cr√©er une nouvelle fiche produit",
    "creerunenouvellefich4": "Cr√©er une nouvelle fiche produit",
    "creerunenouvellefich5": "Cr√©er une nouvelle fiche produit",
    "creezetpersonnalisez": "Cr√©ez et personnalisez vos cartes de visite professionnelles. Partagez-les facilement avec vos clients et partenaires.",
    "creezetpersonnalisez1": "Cr√©ez et personnalisez vos cartes de visite professionnelles. Partagez-les facilement avec vos clients et partenaires.",
    "creezvotrepremiereca": "Cr√©ez votre premi√®re carte de visite personnalis√©e",
    "creezvotrepremiereca1": "Cr√©ez votre premi√®re carte de visite personnalis√©e",
    "demandededevispourco": "Demande de devis pour commande group√©e",
    "demandededevispourco1": "Demande de devis pour commande group√©e",
    "demandededevispourco2": "Demande de devis pour commande group√©e",
    "demandededevispourco3": "Demande de devis pour commande group√©e",
    "dernierecommande": "Derni√®re commande",
    "dernierecommande1": "Derni√®re commande",
    "desmilliersdefournis": "Des milliers de fournisseurs v√©rifi√©s vous attendent.",
    "desmilliersdefournis1": "Des milliers de fournisseurs v√©rifi√©s vous attendent.",
    "desmilliersdefournis2": "Des milliers de fournisseurs v√©rifi√©s vous attendent.",
    "decouvrezlescartesde": "D√©couvrez les cartes de visite de ce fournisseur et t√©l√©chargez-les pour vos contacts.",
    "decouvrezlescartesde1": "D√©couvrez les cartes de visite de ce fournisseur et t√©l√©chargez-les pour vos contacts.",
    "decouvrezlescartesde2": "D√©couvrez les cartes de visite de ce fournisseur et t√©l√©chargez-les pour vos contacts.",
    "decouvreznotreselect": "D√©couvrez notre s√©lection personnalis√©e de produits",
    "decouvreznotreselect1": "D√©couvrez notre s√©lection personnalis√©e de produits",
    "decouvreznotreselect2": "D√©couvrez notre s√©lection personnalis√©e de produits",
    "decouvrirtouslesfour4": "D√©couvrir tous les fournisseurs",
    "decouvrirtouslesfour5": "D√©couvrir tous les fournisseurs",
    "decouvrirtouslesfour6": "D√©couvrir tous les fournisseurs",
    "decouvrirtouslesfour7": "D√©couvrir tous les fournisseurs",
    "decouvrirtouslesfour8": "D√©couvrir tous les fournisseurs",
    "decouvrirtouslesfour9": "D√©couvrir tous les fournisseurs",
    "decrivezvotreproduit": "D√©crivez votre produit...",
    "decrivezvotreproduit1": "D√©crivez votre produit...",
    "erreurlorsdelacreati": "Erreur lors de la cr√©ation de la pr√©commande",
    "erreurlorsdelacreati1": "Erreur lors de la cr√©ation de la pr√©commande",
    "erreurlorsdelacreati2": "Erreur lors de la cr√©ation du produit:",
    "erreurlorsdelacreati3": "Erreur lors de la cr√©ation du produit:",
    "erreurlorsdelacreati4": "Erreur lors de la cr√©ation du produit:",
    "erreurlorsdelacreati5": "Erreur lors de la cr√©ation du produit:",
    "erreurlorsdelamiseaj": "Erreur lors de la mise √† jour du produit:",
    "erreurlorsdelamiseaj1": "Erreur lors de la mise √† jour du produit:",
    "erreurlorsdelarecupe": "Erreur lors de la r√©cup√©ration des produits par cat√©gorie:",
    "erreurlorsdelarecupe1": "Erreur lors de la r√©cup√©ration des produits par cat√©gorie:",
    "erreurlorsdelarecupe2": "Erreur lors de la r√©cup√©ration des produits par cat√©gorie:",
    "erreurlorsdelarecupe3": "Erreur lors de la r√©cup√©ration des produits similaires:",
    "erreurlorsdelarecupe4": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe5": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe6": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe7": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe8": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe9": "Erreur lors de la r√©cup√©ration des produits:",
    "erreurlorsdelarecupe10": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelarecupe11": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelarecupe12": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelarecupe13": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelarecupe14": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelarecupe15": "Erreur lors de la r√©cup√©ration du produit:",
    "erreurlorsdelasauveg": "Erreur lors de la sauvegarde des produits globaux:",
    "erreurlorsduchargeme": "Erreur lors du chargement des commandes",
    "erreurlorsduchargeme1": "Erreur lors du chargement des commandes:",
    "erreurlorsduchargeme2": "Erreur lors du chargement des fournisseurs",
    "erreurlorsduchargeme3": "Erreur lors du chargement des fournisseurs:",
    "erreurlorsduchargeme4": "Erreur lors du chargement des produits similaires:",
    "erreurlorsduchargeme5": "Erreur lors du chargement des produits:",
    "erreurlorsduchargeme6": "Erreur lors du chargement des produits:",
    "erreurlorsduchargeme7": "Erreur lors du chargement des produits:",
    "erreurlorsduchargeme8": "Erreur lors du chargement des produits:",
    "erreurlorsdurecharge": "Erreur lors du rechargement des produits:",
    "fournisseurs5": "FOURNISSEURS",
    "fichesproduitdetaill": "Fiches produit d√©taill√©es",
    "fichesproduitdetaill1": "Fiches produit d√©taill√©es",
    "fichesproduitsimplif": "Fiches produit simplifi√©es",
    "fichesproduitsimplif1": "Fiches produit simplifi√©es",
    "fournisseurspecialis": "Fournisseur sp√©cialis√© dans les √©quipements technologiques et √©lectroniques de haute qualit√©.",
    "fournisseurspecialis1": "Fournisseur sp√©cialis√© dans les √©quipements technologiques et √©lectroniques de haute qualit√©.",
    "fournisseurs6": "Fournisseurs",
    "fournisseurs7": "Fournisseurs",
    "fournisseurs8": "Fournisseurs",
    "gestiondesproduits": "Gestion des produits",
    "gerezvoscommandes": "G√©rez vos commandes",
    "gerezvoscommandes1": "G√©rez vos commandes",
    "gerezvoscommandes2": "G√©rez vos commandes",
    "gerezvotrecatalogued": "G√©rez votre catalogue de produits",
    "gerezvotrecatalogued1": "G√©rez votre catalogue de produits",
    "gerezvotrecatalogued2": "G√©rez votre catalogue de produits",
    "identifiezlesmeilleu": "Identifiez les meilleurs fournisseurs",
    "impossibledechargerl": "Impossible de charger les produits",
    "impossibledechargerl1": "Impossible de charger les produits de cette cat√©gorie",
    "impossibledechargerl2": "Impossible de charger les produits de cette cat√©gorie",
    "impossibledechargerl3": "Impossible de charger les produits de cette cat√©gorie",
    "impossibledechargerl4": "Impossible de charger les produits similaires",
    "impossibledemettreaj": "Impossible de mettre √† jour le produit",
    "impossibledemettreaj1": "Impossible de mettre √† jour le produit",
    "impossiblederecherch": "Impossible de rechercher les produits",
    "influenceusemodeetbe": "Influenceuse mode et beaut√©, sp√©cialis√©e dans les produits de luxe",
    "influenceusemodeetbe1": "Influenceuse mode et beaut√©, sp√©cialis√©e dans les produits de luxe",
    "influenceusemodeetbe2": "Influenceuse mode et beaut√©, sp√©cialis√©e dans les produits de luxe",
    "lacommandeminimumdoi": "La commande minimum doit √™tre sup√©rieure √† 0",
    "lacommandeminimumdoi1": "La commande minimum doit √™tre sup√©rieure √† 0",
    "leprixdoitetresuperi": "Le prix doit √™tre sup√©rieur √† 0",
    "leprixdoitetresuperi1": "Le prix doit √™tre sup√©rieur √† 0",
    "leproduitcomposantse": "Le produit \"Composants √©lectroniques\" a un stock inf√©rieur au seuil minimum.",
    "listedesproduitsrest": "Liste des produits restaur√©e par d√©faut",
    "listedesproduitsrest1": "Liste des produits restaur√©e par d√©faut",
    "listedesproduitsrest2": "Liste des produits restaur√©e par d√©faut",
    "listedesproduitsrest3": "Liste des produits restaur√©e par d√©faut",
    "listedesproduitsrest4": "Liste des produits restaur√©e par d√©faut",
    "listedesproduitsrest5": "Liste des produits restaur√©e par d√©faut",
    "monprofilfournisseur": "Mon profil fournisseur",
    "monprofilfournisseur1": "Mon profil fournisseur",
    "notificationspourles": "Notifications pour les messages de fournisseurs",
    "notreplateformevousc": "Notre plateforme vous connecte directement avec les meilleurs fournisseurs chinois",
    "nouveaufournisseurap": "Nouveau fournisseur approuv√©",
    "nouveaufournisseurap1": "Nouveau fournisseur approuv√©",
    "nouveaufournisseurap2": "Nouveau fournisseur approuv√©",
    "nouveaufournisseurin": "Nouveau fournisseur inscrit",
    "nouvellescommandes": "Nouvelles commandes",
    "nouvellescommandes1": "Nouvelles commandes",
    "nouvellescommandes2": "Nouvelles commandes",
    "nouvellescommandes3": "Nouvelles commandes",
    "negociationdirecteav": "N√©gociation directe avec les fournisseurs",
    "negociationdirecteav1": "N√©gociation directe avec les fournisseurs",
    "negociationdirecteav2": "N√©gociation directe avec les fournisseurs",
    "negociezvosprixobten": "N√©gociez vos prix, obtenez des √©chantillons et lancez votre commande en toute s√©r√©nit√©.",
    "negociezvosprixobten1": "N√©gociez vos prix, obtenez des √©chantillons et lancez votre commande en toute s√©r√©nit√©.",
    "ourplatformconnectsy": "Our platform connects you directly with the best Chinese suppliers",
    "parcoureznotrecatalo": "Parcourez notre catalogue de milliers de produits et fournisseurs v√©rifi√©s selon vos besoins.",
    "parcoureznotrecatalo1": "Parcourez notre catalogue de milliers de produits et fournisseurs v√©rifi√©s selon vos besoins.",
    "parcoureznotrecatalo2": "Parcourez notre catalogue de milliers de produits et fournisseurs v√©rifi√©s selon vos besoins.",
    "personnalisationdesp": "Personnalisation des produits",
    "plusde1000fournisseu4": "Plus de 1000 fournisseurs v√©rifi√©s",
    "plusde1000fournisseu5": "Plus de 1000 fournisseurs v√©rifi√©s",
    "plusde1000fournisseu6": "Plus de 1000 fournisseurs v√©rifi√©s",
    "plusieursechecsdepai": "Plusieurs √©checs de paiement d√©tect√©s pour le fournisseur Shanghai Electronics Co.",
    "plusieursechecsdepai1": "Plusieurs √©checs de paiement d√©tect√©s pour le fournisseur Shanghai Electronics Co.",
    "prixcompetitifs": "Prix Comp√©titifs",
    "prixcompetitifs1": "Prix Comp√©titifs",
    "produitajouteavecsuc": "Produit ajout√© avec succ√®s",
    "produitajouteavecsuc1": "Produit ajout√© avec succ√®s",
    "produitajouteavecsuc2": "Produit ajout√© avec succ√®s",
    "produitajouteavecsuc3": "Produit ajout√© avec succ√®s",
    "produitmisajouravecs": "Produit mis √† jour avec succ√®s",
    "produitmisajouravecs1": "Produit mis √† jour avec succ√®s",
    "produitmisajouravecs2": "Produit mis √† jour avec succ√®s",
    "produitmisajouravecs3": "Produit mis √† jour avec succ√®s",
    "produitsupprimeavecs": "Produit supprim√© avec succ√®s",
    "produitsupprimeavecs1": "Produit supprim√© avec succ√®s",
    "produitsupprimeavecs2": "Produit supprim√© avec succ√®s",
    "produitsupprimeavecs3": "Produit supprim√© avec succ√®s",
    "produitsupprimeavecs4": "Produit supprim√© avec succ√®s !",
    "produitsupprimeavecs5": "Produit supprim√© avec succ√®s !",
    "produitsuspectsignal": "Produit suspect signal√©",
    "produitsuspectsignal1": "Produit suspect signal√©",
    "produits4": "Produits",
    "produits5": "Produits",
    "produits6": "Produits",
    "produits7": "Produits",
    "produitsbio": "Produits bio",
    "produitscertifiescee": "Produits certifi√©s CE et contr√¥l√©s qualit√©",
    "produitscertifiescee1": "Produits certifi√©s CE et contr√¥l√©s qualit√©",
    "produitscertifiescee2": "Produits certifi√©s CE et contr√¥l√©s qualit√©",
    "produitscosmetiques": "Produits cosm√©tiques",
    "produitscosmetiques1": "Produits cosm√©tiques",
    "produitscosmetiques2": "Produits cosm√©tiques",
    "produitscosmetiques3": "Produits cosm√©tiques",
    "produitscosmetiques4": "Produits cosm√©tiques",
    "produitscosmetiques5": "Produits cosm√©tiques",
    "produitsetsolutionsp": "Produits et solutions pour l‚Äôenvironnement.",
    "produitsfavoris": "Produits favoris",
    "produitslesplusvendu": "Produits les plus vendus",
    "produitsrecommandesp": "Produits recommand√©s pour vous",
    "produitsrecommandesp1": "Produits recommand√©s pour vous",
    "produitsrecommandesp2": "Produits recommand√©s pour vous",
    "produitssecs": "Produits secs",
    "produitstotaux": "Produits totaux",
    "produitstotaux1": "Produits totaux",
    "precommanded": "Pr√©commande d",
    "precommandedespaceco": "Pr√©commande d'espace conteneur",
    "precommander": "Pr√©commander",
    "precommander1": "Pr√©commander",
    "quantiteminimumdecom": "Quantit√© minimum de commande",
    "quantiteminimumdecom1": "Quantit√© minimum de commande",
    "rechercherdesproduit": "Rechercher des produits...",
    "rechercherdesproduit1": "Rechercher des produits...",
    "rechercherdesproduit2": "Rechercher des produits...",
    "rechercherparnumerod": "Rechercher par num√©ro de suivi, commande ou client...",
    "rechercherparnumerod1": "Rechercher par num√©ro de suivi, commande ou client...",
    "rechercherparnumerod2": "Rechercher par num√©ro de suivi, commande ou client...",
    "rechercherparnumeroc": "Rechercher par num√©ro, client ou fournisseur...",
    "rechercherparnumeroc1": "Rechercher par num√©ro, client ou fournisseur...",
    "rechercherparnumeroc2": "Rechercher par num√©ro, client ou fournisseur...",
    "rechercherunproduit": "Rechercher un produit...",
    "rechercherunproduit1": "Rechercher un produit...",
    "rechercherunproduit2": "Rechercher un produit...",
    "rechercherunproduit3": "Rechercher un produit...",
    "rechercherunecarte": "Rechercher une carte...",
    "recherchezunproduitu": "Recherchez un produit, une marque...",
    "recherchezunproduitu1": "Recherchez un produit, une marque...",
    "recherchezunproduitu2": "Recherchez un produit, une marque...",
    "reponsedufournisseur1": "R√©ponse du fournisseur",
    "reponsedufournisseur2": "R√©ponse du fournisseur",
    "totalproduits1": "Total Produits",
    "totalproduits2": "Total Produits",
    "totalcommandes": "Total commandes",
    "trouvezrapidementles": "Trouvez rapidement les produits que vous cherchez gr√¢ce √† nos filtres avanc√©s",
    "trouvezrapidementles1": "Trouvez rapidement les produits que vous cherchez gr√¢ce √† nos filtres avanc√©s",
    "trouvezrapidementles2": "Trouvez rapidement les produits que vous cherchez gr√¢ce √† nos filtres avanc√©s",
    "telechargementdelaca": "T√©l√©chargement de la carte de visite (fonctionnalit√© √† impl√©menter)",
    "telechargementdelaca1": "T√©l√©chargement de la carte de visite (fonctionnalit√© √† impl√©menter)",
    "utiliseznosfiltresav": "Utilisez nos filtres avanc√©s pour trouver exactement ce que vous cherchez parmi des millions de produits.",
    "utiliseznosfiltresav1": "Utilisez nos filtres avanc√©s pour trouver exactement ce que vous cherchez parmi des millions de produits.",
    "utiliseznosfiltresav2": "Utilisez nos filtres avanc√©s pour trouver exactement ce que vous cherchez parmi des millions de produits.",
    "vendrevosproduitsaux": "Vendre vos produits aux clients",
    "voirtouslesproduits": "Voir tous les produits",
    "voirtouslesproduits1": "Voir tous les produits",
    "votrecommandeord2024": "Votre commande #ORD-2024-002 a √©t√© exp√©di√©e avec le num√©ro de suivi TRK987654321",
    "votrecommandeord20241": "Votre commande #ORD-2024-002 a √©t√© exp√©di√©e avec le num√©ro de suivi TRK987654321",
    "votrecommandeaeteexp": "Votre commande a √©t√© exp√©di√©e.",
    "votrecommandeaeteexp1": "Votre commande a √©t√© exp√©di√©e.",
    "votreprecommandeaete": "Votre pr√©commande a √©t√© enregistr√©e avec succ√®s !",
    "votreprecommandeaete1": "Votre pr√©commande a √©t√© enregistr√©e avec succ√®s !",
    "vuesproduits": "Vues produits",
    "youwillbecontactedto": "You will be contacted to finalize your supplier registration",
    "suppliermessagespage": "]}>\r\n                        <SupplierMessagesPage ",
    "suppliermessagespage1": "]}>\r\n            <SupplierMessagesPage ",
    "5testerlarecuperatio": "`);\r\n    \r\n    // 5. Tester la r√©cup√©ration par ID\r\n    if (products.length > 0) {\r\n      const firstProduct = products[0];\r\n      if (firstProduct.id) {\r\n        console.log(",
    "elsecreerunproduitsi": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "elsecreerunproduitsi1": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "elsecreerunproduitsi2": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "elsecreerunproduitsi3": "`);\r\n      } else {\r\n        // Cr√©er un produit simple pour la d√©monstration\r\n        const newProduct: Product = {\r\n          ...products[0], ",
    "abonnementaudemontag": "abonnement au d√©montage\r\n    return unsubscribe;\r\n  }, []);const handleSearch = (filters: SearchFilters) => {\r\n    // Filtrer les produits selon les crit√®res\r\n    const filtered = allProducts.filter(() => {\r\n      ",
    "abonnementaudemontag1": "abonnement au d√©montage\r\n    return unsubscribe;\r\n  }, []);const handleSearch = (filters: SearchFilters) => {\r\n    // Filtrer les produits selon les crit√®res\r\n    const filtered = allProducts.filter(() => {\r\n      // TODO: Impl√©menter les filtres complets\r\n      return true; ",
    "abonnementaudemontag2": "abonnement au d√©montage\r\n    return unsubscribe;\r\n  }, []);const handleSearch = (filters: SearchFilters) => {\r\n    // Filtrer les produits selon les crit√®res\r\n    const filtered = allProducts.filter(() => {\r\n      // TODO: Impl√©menter les filtres complets\r\n      return true; // Pour l",
    "abonnerauxchangement": "abonner aux changements pour mise √† jour automatique\r\n    const unsubscribe = productsService.subscribe(loadProducts);\r\n    \r\n    ",
    "abonnerauxchangement1": "abonner aux changements pour mise √† jour automatique\r\n    const unsubscribe = productsService.subscribe(loadProducts);\r\n    \r\n    ",
    "abonnerauxchangement2": "abonner aux changements pour mise √† jour automatique\r\n    const unsubscribe = productsService.subscribe(loadProducts);\r\n    \r\n    // Nettoyer l",
    "ajoutdesproduitsdete": "ajout des produits de test:",
    "contactsupplier": "contactSupplier",
    "contactsupplierdescr": "contactSupplierDescription",
    "contactsuppliertitle": "contactSupplierTitle",
    "eauipx7ilssontparfai": "eau IPX7, ils sont parfaits pour le sport et les activit√©s en ext√©rieur. Compatible avec tous les appareils Bluetooth.`,\r\n        price: 2.30,\r\n        moq: 120,\r\n        category: ",
    "eauipx7ilssontparfai1": "eau IPX7, ils sont parfaits pour le sport et les activit√©s en ext√©rieur. Compatible avec tous les appareils Bluetooth.`,\r\n        price: 2.30,\r\n        moq: 120,\r\n        category: ",
    "entreprisesupplierle": "entreprise\",\n    \"supplier.legalRegistrationNumber\": \"Num√©ro d",
    "espaceconteneurpreor": "espace conteneur\",\n    \"preorder.description\": \"R√©servez votre espace dans ce conteneur avant qu",
    "estuncomptefournisse": "est un compte fournisseur\r\n    permissions: string[];\r\n}\r\n\r\n// Hook pour g√©rer l",
    "estuncomptefournisse1": "est un compte fournisseur\r\n    permissions: string[];\r\n}\r\n\r\n// Hook pour g√©rer l",
    "fournisseurchinetonu": "fournisseur@chinetonusine.com",
    "fournisseurchinetonu1": "fournisseur@chinetonusine.com",
    "imagespourunproduits": "images pour un produit sp√©cifique\r\n   */\r\n  async uploadProductImages(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/images`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Upload de vid√©os pour un produit sp√©cifique\r\n   */\r\n  async uploadProductVideos(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/videos`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Upload de documents pour un produit sp√©cifique\r\n   */\r\n  async uploadProductDocuments(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/documents`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Obtenir tous les fichiers m√©dia d",
    "imagespourunproduits1": "images pour un produit sp√©cifique\r\n   */\r\n  async uploadProductImages(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/images`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Upload de vid√©os pour un produit sp√©cifique\r\n   */\r\n  async uploadProductVideos(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/videos`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Upload de documents pour un produit sp√©cifique\r\n   */\r\n  async uploadProductDocuments(\r\n    files: File[],\r\n    productId: string,\r\n    options: UploadOptions = {}\r\n  ): Promise<BatchUploadResult> {\r\n    const basePath = `products/${productId}/documents`;\r\n    return this.uploadMultipleFiles(files, basePath, options);\r\n  }\r\n\r\n  /**\r\n   * Obtenir tous les fichiers m√©dia d",
    "integreparfaitementd": "int√®gre parfaitement dans tout environnement moderne.`,\r\n        price: 4.50,\r\n        moq: 80,\r\n        category: ",
    "integreparfaitementd1": "int√®gre parfaitement dans tout environnement moderne.`,\r\n        price: 4.50,\r\n        moq: 80,\r\n        category: ",
    "integrationfirebased": "int√©gration Firebase des produits\r\nexport const testFirebaseIntegration = async () => {\r\n  try {\r\n    console.log(",
    "integrationfirebased1": "int√©gration Firebase des produits\r\nexport const testFirebaseIntegration = async () => {\r\n  try {\r\n    console.log(",
    "integrationfirebased2": "int√©gration Firebase des produits\r\nexport const testFirebaseIntegration = async () => {\r\n  try {\r\n    console.log(",
    "mysupplierprofile": "mySupplierProfile",
    "notificationsorders": "notifications.orders",
    "notificationsorders1": "notifications.orders",
    "productmodalsupporte": "product.modal.supportedFormats",
    "suppliercategoriesma": "supplier.categories.machinery",
    "suppliercategoriesma1": "supplier.categories.machinery",
    "suppliercategoriesma2": "supplier.categories.machinery",
    "suppliermessagesallt": "supplier.messages.allTypes",
    "suppliermessagesdate": "supplier.messages.date",
    "suppliermessageserro": "supplier.messages.error",
    "suppliermessagesfrom": "supplier.messages.from",
    "suppliermessagesinqu": "supplier.messages.inquiry",
    "suppliermessagesload": "supplier.messages.loading",
    "suppliermessagesorde": "supplier.messages.order",
    "suppliermessagesrepl": "supplier.messages.reply",
    "suppliermessagesresp": "supplier.messages.respondedToday",
    "suppliermessagessear": "supplier.messages.searchPlaceholder",
    "suppliermessagessubj": "supplier.messages.subject",
    "suppliermessagessubt": "supplier.messages.subtitle",
    "suppliermessagessupp": "supplier.messages.support",
    "suppliermessagestota": "supplier.messages.totalMessages",
    "suppliermessagestype": "supplier.messages.type",
    "suppliermessagesunre": "supplier.messages.unreadMessages",
    "suppliersidebarmessa": "supplier.sidebar.messages",
    "suppliersidebarmessa1": "supplier.sidebar.messages",
    "suppliersidebarmessa2": "supplier.sidebar.messages",
    "unerequeteapiawaitne": "une requ√™te API\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      onReserve(container.id, quantity, estimatedPrice);\r\n      handleClose();\r\n    } catch (err) {\r\n      setError(",
    "echangezdirectementa": "√âchangez directement avec les fournisseurs pour n√©gocier les prix et demander des √©chantillons.",
    "echangezdirectementa1": "√âchangez directement avec les fournisseurs pour n√©gocier les prix et demander des √©chantillons.",
    "echangezdirectementa2": "√âchangez directement avec les fournisseurs pour n√©gocier les prix et demander des √©chantillons.",
    "echantillonsaprixred": "√âchantillons √† prix r√©duits",
    "echantillonsaprixred1": "√âchantillons √† prix r√©duits",
    "evaluezlesprixlaqual": "√âvaluez les prix, la qualit√©, les certifications et les avis pour choisir le meilleur fournisseur.",
    "evaluezlesprixlaqual1": "√âvaluez les prix, la qualit√©, les certifications et les avis pour choisir le meilleur fournisseur.",
    "etesvoussurdevouloir": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir1": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir2": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir3": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir4": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir5": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir6": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir7": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "etesvoussurdevouloir8": "√ätes-vous s√ªr de vouloir restaurer les produits par d√©faut ? Tous vos produits ajout√©s seront perdus.",
    "commandesdetestdejae": "‚ÑπÔ∏è Commandes de test d√©j√† existantes ou erreur:",
    "commandesdetestdejae1": "‚ÑπÔ∏è Commandes de test d√©j√† existantes ou erreur:",
    "commandesdetestdejae2": "‚ÑπÔ∏è Commandes de test d√©j√† existantes ou erreur:",
    "fournisseursdetestde": "‚ÑπÔ∏è Fournisseurs de test d√©j√† existants ou erreur:",
    "fournisseursdetestde1": "‚ÑπÔ∏è Fournisseurs de test d√©j√† existants ou erreur:",
    "fournisseursdetestde2": "‚ÑπÔ∏è Fournisseurs de test d√©j√† existants ou erreur:",
    "produitsdetestdejaex": "‚ÑπÔ∏è Produits de test d√©j√† existants ou erreur:",
    "produitsdetestdejaex1": "‚ÑπÔ∏è Produits de test d√©j√† existants ou erreur:",
    "produitsdetestdejaex2": "‚ÑπÔ∏è Produits de test d√©j√† existants ou erreur:",
    "commandesdetestcreee": "‚úÖ Commandes de test cr√©√©es",
    "commandesdetestcreee1": "‚úÖ Commandes de test cr√©√©es",
    "commandesdetestcreee2": "‚úÖ Commandes de test cr√©√©es",
    "fournisseursdetestcr": "‚úÖ Fournisseurs de test cr√©√©s",
    "fournisseursdetestcr1": "‚úÖ Fournisseurs de test cr√©√©s",
    "fournisseursdetestcr2": "‚úÖ Fournisseurs de test cr√©√©s",
    "produitsdetestcrees": "‚úÖ Produits de test cr√©√©s",
    "produitsdetestcrees1": "‚úÖ Produits de test cr√©√©s",
    "produitsdetestcrees2": "‚úÖ Produits de test cr√©√©s",
    "ajoutdeproduitsdetes": "üì¶ Ajout de produits de test suppl√©mentaires...",
    "ajoutdeproduitsdetes1": "üì¶ Ajout de produits de test suppl√©mentaires...",
    "ajoutdeproduitsdetes2": "üì¶ Ajout de produits de test suppl√©mentaires...",
    "recuperationdesprodu": "üì¶ R√©cup√©ration des produits...",
    "recuperationdesprodu1": "üì¶ R√©cup√©ration des produits...",
    "productsservicelocal": "üîÑ ProductsService: localStorage effac√©, r√©initialisation forc√©e",
    "reinitialisationdela": "üîÑ R√©initialisation de la base de donn√©es produits...",
    "reinitialisationdela1": "üîÑ R√©initialisation de la base de donn√©es produits...",
    "productsserviceprodu": "üîç ProductsService: Produits charg√©s depuis localStorage:",
    "productsserviceprodu1": "üîç ProductsService: Produits charg√©s depuis localStorage:",
    "productsserviceprodu2": "üîç ProductsService: Produits charg√©s depuis localStorage:",
    "debutdelamigrationde": "üöÄ D√©but de la migration des produits vers Firebase..."
  }
}