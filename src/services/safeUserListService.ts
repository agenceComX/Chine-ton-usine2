/**
 * üéØ SOLUTION FINALE - Service de r√©cup√©ration d'utilisateurs SANS mise √† jour
 * 
 * Ce service r√©cup√®re les utilisateurs SANS d√©clencher de mise √† jour
 * de l'utilisateur connect√© pour √©viter les effets de bord
 */

import { collection, getDocs, query, orderBy } from 'firebase/firestore';
import { db } from '../lib/firebaseClient';
import type { AdminUser } from './adminUserServiceFixed';

class SafeUserListService {
    private collectionName = 'users';

    /**
     * R√©cup√©rer tous les utilisateurs SANS aucune modification
     * Cette m√©thode ne touche √† rien, elle fait juste une lecture
     */
    async getAllUsersReadOnly(): Promise<AdminUser[]> {
        try {
            console.log('üîç SAFE: R√©cup√©ration lecture seule des utilisateurs...');

            const q = query(
                collection(db, this.collectionName),
                orderBy('createdAt', 'desc')
            );

            const querySnapshot = await getDocs(q);
            const users: AdminUser[] = [];

            querySnapshot.forEach((doc) => {
                const data = doc.data();
                users.push({
                    uid: doc.id,
                    ...data
                } as AdminUser);
            });

            console.log(`‚úÖ SAFE: ${users.length} utilisateurs r√©cup√©r√©s (lecture seule)`);
            return users;

        } catch (error) {
            console.error('‚ùå SAFE: Erreur lors de la r√©cup√©ration:', error);
            return [];
        }
    }
}

export const safeUserListService = new SafeUserListService();
