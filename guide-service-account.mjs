#!/usr/bin/env node

/**
 * üöÄ GUIDE RAPIDE - OBTENIR LE SERVICE ACCOUNT
 * 
 * Vous √™tes actuellement dans la console Firebase.
 * Suivez ces √©tapes pour obtenir votre service account.
 */

console.log('üéØ OBTENTION DU SERVICE ACCOUNT FIREBASE');
console.log('='.repeat(45));
console.log('üåê Vous √™tes dans la console Firebase : ‚úÖ');
console.log('üìä Projet : chine-ton-usine-2c999\n');

console.log('üìã √âTAPES √Ä SUIVRE MAINTENANT:');
console.log('1Ô∏è‚É£  Dans votre onglet Firefox ouvert sur Firebase...');
console.log('2Ô∏è‚É£  Cliquez sur l\'onglet "Comptes de service" (√† c√¥t√© de "G√©n√©ral")');
console.log('3Ô∏è‚É£  Descendez jusqu\'√† la section "SDK Admin Firebase"');
console.log('4Ô∏è‚É£  Cliquez sur le bouton "G√©n√©rer une nouvelle cl√© priv√©e"');
console.log('5Ô∏è‚É£  Une popup appara√Ætra, cliquez sur "G√©n√©rer la cl√©"');
console.log('6Ô∏è‚É£  Un fichier JSON sera t√©l√©charg√© automatiquement\n');

console.log('üìÅ APR√àS T√âL√âCHARGEMENT:');
console.log('‚Ä¢ Le fichier se nomme quelque chose comme :');
console.log('  "chine-ton-usine-2c999-firebase-adminsdk-xxxxx.json"');
console.log('‚Ä¢ Renommez-le en : "firebase-service-account.json"');
console.log('‚Ä¢ Placez-le dans ce dossier :\n');
console.log(`  üìÇ ${process.cwd()}\n`);

console.log('‚ö° UNE FOIS LE FICHIER PLAC√â:');
console.log('npm run test:config     # Tester la configuration');
console.log('npm run create:production  # Cr√©er les 4 utilisateurs\n');

console.log('üîó LIEN DIRECT VERS LES COMPTES DE SERVICE:');
console.log('https://console.firebase.google.com/project/chine-ton-usine-2c999/settings/serviceaccounts/adminsdk\n');

console.log('üí° ALTERNATIVE RAPIDE:');
console.log('Si vous ne trouvez pas l\'onglet "Comptes de service",');
console.log('utilisez ce lien direct ci-dessus dans votre navigateur.\n');

console.log('üéØ OBJECTIF:');
console.log('Une fois le service account configur√©, nous cr√©erons :');
console.log('‚Ä¢ admin@chine-ton-usine.com');
console.log('‚Ä¢ supplier@chine-ton-usine.com');
console.log('‚Ä¢ client@chine-ton-usine.com');
console.log('‚Ä¢ influencer@chine-ton-usine.com\n');

console.log('‚ùì EN CAS DE PROBL√àME:');
console.log('Relancez ce script ou tapez "npm run configure" pour l\'assistant');

// V√©rifier p√©riodiquement si le fichier est ajout√©
console.log('\nüîÑ Ce script va v√©rifier si vous ajoutez le fichier...');

const { existsSync } = await import('fs');

let checkCount = 0;
const maxChecks = 60; // 2 minutes maximum

const checkForFile = () => {
    checkCount++;

    if (existsSync('./firebase-service-account.json')) {
        console.log('\nüéâ FICHIER SERVICE ACCOUNT D√âTECT√â !');
        console.log('‚úÖ firebase-service-account.json trouv√©');
        console.log('\nüöÄ LANCEMENT DU TEST...');

        // Lancer automatiquement le test
        const { execSync } = require('child_process');
        try {
            execSync('node test-firebase-config.mjs', { stdio: 'inherit' });
        } catch (error) {
            console.log('\n‚ö†Ô∏è  Test √©chou√©, mais vous pouvez r√©essayer avec :');
            console.log('npm run test:config');
        }

        return;
    }

    if (checkCount >= maxChecks) {
        console.log('\n‚è∞ Temps d\'attente √©coul√©');
        console.log('üí° Relancez quand le fichier sera pr√™t :');
        console.log('npm run test:config');
        return;
    }

    // Afficher un point toutes les 5 secondes
    if (checkCount % 5 === 0) {
        console.log(`‚è≥ Attente du fichier... (${checkCount}/60)`);
    }

    setTimeout(checkForFile, 2000); // V√©rifier toutes les 2 secondes
};

// Commencer la v√©rification
setTimeout(checkForFile, 2000);
